name: Security Scanning

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write

jobs:
  dependency-audit:
    name: NPM Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          echo "Running npm audit for production dependencies..."
          npm audit --production --audit-level=moderate

      - name: Generate audit report
        run: |
          echo "Generating detailed audit report..."
          npm audit --json > audit-report.json || true

          # Count vulnerabilities
          HIGH=$(jq '.metadata.vulnerabilities.high // 0' audit-report.json)
          CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' audit-report.json)

          echo "Critical vulnerabilities: $CRITICAL"
          echo "High vulnerabilities: $HIGH"

          if [ "$CRITICAL" -gt 0 ]; then
            echo "❌ CRITICAL vulnerabilities found!"
            exit 1
          elif [ "$HIGH" -gt 0 ]; then
            echo "⚠️ HIGH vulnerabilities found - review required"
          else
            echo "✅ No critical or high vulnerabilities"
          fi
        continue-on-error: true

      - name: Upload audit report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: npm-audit-report
          path: audit-report.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          echo "Checking dependency licenses..."
          npx license-checker --summary || true

          echo ""
          echo "Checking for incompatible licenses..."
          npx license-checker --failOn 'GPL-3.0' || echo "⚠️ Warning: GPL-3.0 dependencies found"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, codeql-analysis, secret-scanning, license-check]
    if: always()

    steps:
      - name: Security Summary
        run: |
          echo "=========================================="
          echo "  TrinityCore MCP - Security Summary     "
          echo "=========================================="
          echo ""
          echo "✅ Dependency Audit: Completed"
          echo "✅ CodeQL Analysis: Completed"
          echo "✅ Secret Scanning: Completed"
          echo "✅ License Check: Completed"
          echo ""
          echo "Phase 6 Week 1: Security Scanning Active"
          echo "=========================================="
