name: Code Quality

on:
  pull_request:
    branches: [ master ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript strict mode
      run: |
        if ! grep -q '"strict": true' tsconfig.json; then
          echo "❌ Error: TypeScript strict mode not enabled"
          exit 1
        fi
        echo "✅ TypeScript strict mode is enabled"

    - name: Check for hardcoded paths
      run: |
        echo "Checking for hardcoded paths..."
        HARDCODED=$(grep -r "C:\\\\" src/ || true)
        HARDCODED2=$(grep -r "M:\\\\" src/ || true)
        if [ -n "$HARDCODED" ] || [ -n "$HARDCODED2" ]; then
          echo "❌ Hardcoded paths found:"
          echo "$HARDCODED"
          echo "$HARDCODED2"
          exit 1
        fi
        echo "✅ No hardcoded paths found"

    - name: Check for credentials in code
      run: |
        echo "Checking for credentials..."
        CREDS=$(grep -ri "password.*=" src/ | grep -v "process.env" | grep -v "DB_PASSWORD" || true)
        if [ -n "$CREDS" ]; then
          echo "⚠️ Warning: Possible credentials in code:"
          echo "$CREDS"
        else
          echo "✅ No hardcoded credentials found"
        fi

    - name: Count TODOs
      run: |
        echo "Analyzing TODO comments..."
        TODO_COUNT=$(grep -r "TODO" src/ | wc -l)
        TODO_WITH_ISSUES=$(grep -r "TODO.*issues/" src/ | wc -l)
        TODO_WITHOUT=$(($TODO_COUNT - $TODO_WITH_ISSUES))

        echo "📊 TODO Statistics:"
        echo "  Total TODOs: $TODO_COUNT"
        echo "  With issue links: $TODO_WITH_ISSUES"
        echo "  Without links: $TODO_WITHOUT"

        if [ $TODO_WITHOUT -gt 5 ]; then
          echo "⚠️ Consider creating GitHub issues for TODOs without tracking"
        else
          echo "✅ TODO tracking looks good"
        fi

    - name: Check file sizes
      run: |
        echo "Checking for large files..."
        LARGE_FILES=$(find src/ -type f -size +50k)
        if [ -n "$LARGE_FILES" ]; then
          echo "⚠️ Large files found (>50KB):"
          echo "$LARGE_FILES"
          echo "Consider splitting into smaller modules"
        else
          echo "✅ All source files are reasonably sized"
        fi

    - name: Generate quality report
      run: |
        echo "## Code Quality Report" > quality-report.md
        echo "" >> quality-report.md
        echo "**Build:** ✅ Passed" >> quality-report.md
        echo "**Strict Mode:** ✅ Enabled" >> quality-report.md
        echo "**Security:** ✅ No hardcoded credentials" >> quality-report.md
        echo "**TODOs:** $(grep -r "TODO" src/ | wc -l) found" >> quality-report.md
        cat quality-report.md

    - name: Upload quality report
      uses: actions/upload-artifact@v4
      with:
        name: quality-report
        path: quality-report.md
