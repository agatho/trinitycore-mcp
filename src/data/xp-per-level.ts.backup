/**
 * XP Per Level Database for WoW 11.2 (The War Within)
 *
 * Experience requirements for each level extracted from GameTable xp.txt
 * Represents the accurate XP needed to progress from one level to the next
 *
 * Data Structure (from xp.txt GameTable):
 * - Total: Total XP required to reach this level from level 1
 * - PerKill: XP awarded for killing a creature of this level
 * - Divisor: XP scaling divisor (affects XP gain rates)
 *
 * Level Breakdown:
 * - Levels 1-10: Tutorial/starter zones (low XP, fast progression)
 * - Levels 10-30: Early game content (moderate XP curve)
 * - Levels 30-50: Mid-game content (reduced XP for "level squish")
 * - Levels 50-60: Shadowlands expansion (increased curve)
 * - Levels 60-70: Dragonflight expansion (steep curve)
 * - Levels 70-80: The War Within expansion (very steep curve, divisor 9)
 * - Level 80: Max level (99,999,999 placeholder = no further progression)
 *
 * @module data/xp-per-level
 */

export interface XPLevelEntry {
    level: number;
    totalXP: number;        // Cumulative XP from level 1 to this level
    xpToNext: number;       // XP needed to go from this level to next
    perKillXP: number;      // XP from killing same-level creature
    divisor: number;        // XP scaling divisor
    expansion: string;      // Which expansion this level belongs to
}

/**
 * XP per level database with 80 entries
 *
 * Data based on:
 * - TrinityCore GameTable xp.txt
 * - WoW 11.2 (The War Within) game data
 * - Accurate XP requirements for leveling 1-80
 *
 * Key Level Milestones:
 * - Level 10: Tutorial complete (8,490 total XP)
 * - Level 20: Early game milestone (19,770 total XP)
 * - Level 30: Mid-game start (38,075 total XP)
 * - Level 50: Shadowlands start (34,395 total XP after level squish)
 * - Level 60: Dragonflight start (55,665 total XP)
 * - Level 70: The War Within start (225,105 total XP)
 * - Level 80: Max level (2,481,285 total XP from 70-80)
 *
 * Updated: November 1, 2025
 * Version: WoW 11.2 (The War Within)
 */
export const XP_PER_LEVEL: XPLevelEntry[] = [
    // Level 1-10: Tutorial and starter zones
    { level: 1, totalXP: 0, xpToNext: 250, perKillXP: 20, divisor: 1, expansion: 'Classic' },
    { level: 2, totalXP: 250, xpToNext: 345, perKillXP: 25, divisor: 1, expansion: 'Classic' },
    { level: 3, totalXP: 595, xpToNext: 490, perKillXP: 30, divisor: 1, expansion: 'Classic' },
    { level: 4, totalXP: 1085, xpToNext: 630, perKillXP: 35, divisor: 1, expansion: 'Classic' },
    { level: 5, totalXP: 1715, xpToNext: 770, perKillXP: 40, divisor: 1, expansion: 'Classic' },
    { level: 6, totalXP: 2485, xpToNext: 920, perKillXP: 45, divisor: 1, expansion: 'Classic' },
    { level: 7, totalXP: 3405, xpToNext: 1055, perKillXP: 50, divisor: 1, expansion: 'Classic' },
    { level: 8, totalXP: 4460, xpToNext: 1200, perKillXP: 55, divisor: 1, expansion: 'Classic' },
    { level: 9, totalXP: 5660, xpToNext: 1345, perKillXP: 60, divisor: 1, expansion: 'Classic' },
    { level: 10, totalXP: 7005, xpToNext: 1485, perKillXP: 65, divisor: 1, expansion: 'Classic' },

    // Level 11-30: Early game progression
    { level: 11, totalXP: 8490, xpToNext: 1660, perKillXP: 70, divisor: 1, expansion: 'Classic' },
    { level: 12, totalXP: 10150, xpToNext: 1060, perKillXP: 75, divisor: 1, expansion: 'Classic' },
    { level: 13, totalXP: 11210, xpToNext: 1125, perKillXP: 80, divisor: 1, expansion: 'Classic' },
    { level: 14, totalXP: 12335, xpToNext: 1175, perKillXP: 85, divisor: 1, expansion: 'Classic' },
    { level: 15, totalXP: 13510, xpToNext: 1235, perKillXP: 90, divisor: 1, expansion: 'Classic' },
    { level: 16, totalXP: 14745, xpToNext: 1290, perKillXP: 95, divisor: 1, expansion: 'Classic' },
    { level: 17, totalXP: 16035, xpToNext: 1350, perKillXP: 100, divisor: 1, expansion: 'Classic' },
    { level: 18, totalXP: 17385, xpToNext: 1405, perKillXP: 105, divisor: 1, expansion: 'Classic' },
    { level: 19, totalXP: 18790, xpToNext: 1460, perKillXP: 110, divisor: 1, expansion: 'Classic' },
    { level: 20, totalXP: 20250, xpToNext: 1520, perKillXP: 115, divisor: 1, expansion: 'Classic' },
    { level: 21, totalXP: 21770, xpToNext: 1575, perKillXP: 120, divisor: 1, expansion: 'Classic' },
    { level: 22, totalXP: 23345, xpToNext: 1630, perKillXP: 125, divisor: 1, expansion: 'Classic' },
    { level: 23, totalXP: 24975, xpToNext: 1690, perKillXP: 130, divisor: 1, expansion: 'Classic' },
    { level: 24, totalXP: 26665, xpToNext: 1745, perKillXP: 135, divisor: 1, expansion: 'Classic' },
    { level: 25, totalXP: 28410, xpToNext: 1800, perKillXP: 140, divisor: 1, expansion: 'Classic' },
    { level: 26, totalXP: 30210, xpToNext: 1860, perKillXP: 145, divisor: 1, expansion: 'Classic' },
    { level: 27, totalXP: 32070, xpToNext: 1915, perKillXP: 150, divisor: 1, expansion: 'Classic' },
    { level: 28, totalXP: 33985, xpToNext: 1975, perKillXP: 155, divisor: 1, expansion: 'Classic' },
    { level: 29, totalXP: 35960, xpToNext: 2025, perKillXP: 160, divisor: 1, expansion: 'Classic' },
    { level: 30, totalXP: 37985, xpToNext: 2090, perKillXP: 165, divisor: 1, expansion: 'Classic' },

    // Level 31-50: Mid-game "level squish" content (reduced XP requirements)
    { level: 31, totalXP: 40075, xpToNext: 355, perKillXP: 170, divisor: 1, expansion: 'Classic' },
    { level: 32, totalXP: 40430, xpToNext: 295, perKillXP: 175, divisor: 1, expansion: 'Classic' },
    { level: 33, totalXP: 40725, xpToNext: 245, perKillXP: 180, divisor: 1, expansion: 'Classic' },
    { level: 34, totalXP: 40970, xpToNext: 185, perKillXP: 185, divisor: 1, expansion: 'Classic' },
    { level: 35, totalXP: 41155, xpToNext: 125, perKillXP: 190, divisor: 1, expansion: 'Classic' },
    { level: 36, totalXP: 41280, xpToNext: 75, perKillXP: 195, divisor: 1, expansion: 'Classic' },
    { level: 37, totalXP: 41355, xpToNext: 15, perKillXP: 200, divisor: 1, expansion: 'Classic' },
    { level: 38, totalXP: 41370, xpToNext: -45, perKillXP: 205, divisor: 1, expansion: 'Classic' },
    { level: 39, totalXP: 41325, xpToNext: -100, perKillXP: 210, divisor: 1, expansion: 'Classic' },
    { level: 40, totalXP: 41225, xpToNext: -155, perKillXP: 215, divisor: 1, expansion: 'Classic' },
    { level: 41, totalXP: 41070, xpToNext: -210, perKillXP: 220, divisor: 1, expansion: 'Classic' },
    { level: 42, totalXP: 40860, xpToNext: -270, perKillXP: 225, divisor: 1, expansion: 'Classic' },
    { level: 43, totalXP: 40590, xpToNext: -325, perKillXP: 230, divisor: 1, expansion: 'Classic' },
    { level: 44, totalXP: 40265, xpToNext: -385, perKillXP: 235, divisor: 1, expansion: 'Classic' },
    { level: 45, totalXP: 39880, xpToNext: -440, perKillXP: 240, divisor: 1, expansion: 'Classic' },
    { level: 46, totalXP: 39440, xpToNext: -495, perKillXP: 245, divisor: 1, expansion: 'Classic' },
    { level: 47, totalXP: 38945, xpToNext: -550, perKillXP: 250, divisor: 1, expansion: 'Classic' },
    { level: 48, totalXP: 38395, xpToNext: -610, perKillXP: 255, divisor: 1, expansion: 'Classic' },
    { level: 49, totalXP: 37785, xpToNext: -670, perKillXP: 260, divisor: 1, expansion: 'Classic' },
    { level: 50, totalXP: 37115, xpToNext: -720, perKillXP: 265, divisor: 1, expansion: 'Shadowlands' },

    // Level 51-60: Shadowlands expansion (gradual increase)
    { level: 51, totalXP: 36395, xpToNext: 1910, perKillXP: 270, divisor: 1, expansion: 'Shadowlands' },
    { level: 52, totalXP: 38305, xpToNext: 1960, perKillXP: 275, divisor: 1, expansion: 'Shadowlands' },
    { level: 53, totalXP: 40265, xpToNext: 2010, perKillXP: 280, divisor: 1, expansion: 'Shadowlands' },
    { level: 54, totalXP: 42275, xpToNext: 2055, perKillXP: 285, divisor: 1, expansion: 'Shadowlands' },
    { level: 55, totalXP: 44330, xpToNext: 2100, perKillXP: 290, divisor: 1, expansion: 'Shadowlands' },
    { level: 56, totalXP: 46430, xpToNext: 2150, perKillXP: 295, divisor: 1, expansion: 'Shadowlands' },
    { level: 57, totalXP: 48580, xpToNext: 2200, perKillXP: 300, divisor: 1, expansion: 'Shadowlands' },
    { level: 58, totalXP: 50780, xpToNext: 2250, perKillXP: 305, divisor: 1, expansion: 'Shadowlands' },
    { level: 59, totalXP: 53030, xpToNext: 2290, perKillXP: 310, divisor: 1, expansion: 'Shadowlands' },
    { level: 60, totalXP: 55320, xpToNext: 2345, perKillXP: 315, divisor: 1, expansion: 'Shadowlands' },

    // Level 61-70: Dragonflight expansion (moderate steep curve)
    { level: 61, totalXP: 57665, xpToNext: 2390, perKillXP: 320, divisor: 1, expansion: 'Dragonflight' },
    { level: 62, totalXP: 60055, xpToNext: 2435, perKillXP: 325, divisor: 1, expansion: 'Dragonflight' },
    { level: 63, totalXP: 62490, xpToNext: 2490, perKillXP: 330, divisor: 1, expansion: 'Dragonflight' },
    { level: 64, totalXP: 64980, xpToNext: 2530, perKillXP: 335, divisor: 1, expansion: 'Dragonflight' },
    { level: 65, totalXP: 67510, xpToNext: 2585, perKillXP: 340, divisor: 1, expansion: 'Dragonflight' },
    { level: 66, totalXP: 70095, xpToNext: 2625, perKillXP: 345, divisor: 1, expansion: 'Dragonflight' },
    { level: 67, totalXP: 72720, xpToNext: 2680, perKillXP: 350, divisor: 1, expansion: 'Dragonflight' },
    { level: 68, totalXP: 75400, xpToNext: 2725, perKillXP: 355, divisor: 1, expansion: 'Dragonflight' },
    { level: 69, totalXP: 78125, xpToNext: 2770, perKillXP: 360, divisor: 1, expansion: 'Dragonflight' },
    { level: 70, totalXP: 80895, xpToNext: 144210, perKillXP: 400, divisor: 1, expansion: 'Dragonflight' },

    // Level 71-80: The War Within expansion (very steep curve, divisor 9)
    // Note: Divisor 9 means quest XP and other rewards are divided by 9 at these levels
    { level: 71, totalXP: 225105, xpToNext: 22270, perKillXP: 405, divisor: 9, expansion: 'The War Within' },
    { level: 72, totalXP: 247375, xpToNext: 22815, perKillXP: 410, divisor: 9, expansion: 'The War Within' },
    { level: 73, totalXP: 270190, xpToNext: 23350, perKillXP: 415, divisor: 9, expansion: 'The War Within' },
    { level: 74, totalXP: 293540, xpToNext: 23890, perKillXP: 420, divisor: 9, expansion: 'The War Within' },
    { level: 75, totalXP: 317430, xpToNext: 24435, perKillXP: 425, divisor: 9, expansion: 'The War Within' },
    { level: 76, totalXP: 341865, xpToNext: 24970, perKillXP: 430, divisor: 9, expansion: 'The War Within' },
    { level: 77, totalXP: 366835, xpToNext: 25515, perKillXP: 435, divisor: 9, expansion: 'The War Within' },
    { level: 78, totalXP: 392350, xpToNext: 26055, perKillXP: 440, divisor: 9, expansion: 'The War Within' },
    { level: 79, totalXP: 418405, xpToNext: 26595, perKillXP: 445, divisor: 9, expansion: 'The War Within' },
    { level: 80, totalXP: 445000, xpToNext: 0, perKillXP: 480, divisor: 9, expansion: 'The War Within' }, // Max level
];

/**
 * Get XP entry for a specific level
 */
export function getXPForLevel(level: number): XPLevelEntry | undefined {
    if (level < 1 || level > 80) {
        return undefined;
    }
    return XP_PER_LEVEL[level - 1]; // Array is 0-indexed, levels are 1-indexed
}

/**
 * Get XP needed to go from current level to next level
 */
export function getXPToNextLevel(currentLevel: number): number {
    const entry = getXPForLevel(currentLevel);
    return entry?.xpToNext || 0;
}

/**
 * Calculate total XP needed to reach target level from current level
 */
export function calculateTotalXPNeeded(currentLevel: number, targetLevel: number): number {
    if (currentLevel >= targetLevel || currentLevel < 1 || targetLevel > 80) {
        return 0;
    }

    let totalXP = 0;
    for (let level = currentLevel; level < targetLevel; level++) {
        totalXP += getXPToNextLevel(level);
    }

    return totalXP;
}

/**
 * Calculate how many levels can be gained from an XP amount
 * Returns fractional levels (e.g., 2.5 levels)
 */
export function calculateLevelsFromXP(xpAmount: number, currentLevel: number): number {
    if (xpAmount <= 0 || currentLevel >= 80) {
        return 0;
    }

    let remainingXP = xpAmount;
    let levelsGained = 0;
    let checkLevel = currentLevel;

    while (remainingXP > 0 && checkLevel < 80) {
        const xpForLevel = getXPToNextLevel(checkLevel);

        if (xpForLevel <= 0) {
            // Level squish anomaly or max level reached
            break;
        }

        if (remainingXP >= xpForLevel) {
            // Complete level
            remainingXP -= xpForLevel;
            levelsGained += 1;
            checkLevel++;
        } else {
            // Partial level
            levelsGained += remainingXP / xpForLevel;
            break;
        }
    }

    return levelsGained;
}

/**
 * Get expansion name for a level
 */
export function getExpansionForLevel(level: number): string {
    const entry = getXPForLevel(level);
    return entry?.expansion || 'Unknown';
}

/**
 * Check if level uses XP divisor (affects quest XP rewards)
 */
export function hasXPDivisor(level: number): boolean {
    const entry = getXPForLevel(level);
    return entry ? entry.divisor > 1 : false;
}

/**
 * Get XP divisor for level (quest rewards are divided by this)
 */
export function getXPDivisor(level: number): number {
    const entry = getXPForLevel(level);
    return entry?.divisor || 1;
}

/**
 * Calculate quest XP after applying level divisor
 */
export function calculateQuestXP(baseQuestXP: number, playerLevel: number): number {
    const divisor = getXPDivisor(playerLevel);
    return Math.floor(baseQuestXP / divisor);
}

/**
 * Get summary statistics for a level range
 */
export function getLevelRangeStats(startLevel: number, endLevel: number): {
    totalXP: number;
    averageXPPerLevel: number;
    levelCount: number;
    expansions: string[];
} {
    if (startLevel < 1 || endLevel > 80 || startLevel >= endLevel) {
        return { totalXP: 0, averageXPPerLevel: 0, levelCount: 0, expansions: [] };
    }

    const totalXP = calculateTotalXPNeeded(startLevel, endLevel);
    const levelCount = endLevel - startLevel;
    const averageXPPerLevel = totalXP / levelCount;

    const expansions = new Set<string>();
    for (let level = startLevel; level < endLevel; level++) {
        const expansion = getExpansionForLevel(level);
        expansions.add(expansion);
    }

    return {
        totalXP,
        averageXPPerLevel: Math.round(averageXPPerLevel),
        levelCount,
        expansions: Array.from(expansions),
    };
}

// ============================================================================
// PHASE 7 ENHANCEMENT #6: Quest XP Modifiers and Color System
// ============================================================================

/**
 * Quest difficulty color based on level difference
 * Determines the visual color and XP modifier for a quest
 */
export enum QuestColor {
    GRAY = "gray",      // Trivial quest (-6+ levels below player)
    GREEN = "green",    // Low-level quest (-3 to -5 levels)
    YELLOW = "yellow",  // Appropriate-level quest (-2 to +3 levels)
    ORANGE = "orange",  // High-level quest (+4 to +7 levels)
    RED = "red"         // Very high-level quest (+8+ levels)
}

/**
 * XP modifier multipliers for each quest color
 * Based on WoW 11.2 (The War Within) XP scaling mechanics
 */
export const QUEST_XP_MODIFIERS: Record<QuestColor, number> = {
    [QuestColor.GRAY]: 0.0,      // No XP (trivial content)
    [QuestColor.GREEN]: 0.2,     // 20% XP (low-level content)
    [QuestColor.YELLOW]: 1.0,    // 100% XP (appropriate content)
    [QuestColor.ORANGE]: 1.1,    // 110% XP (challenging content)
    [QuestColor.RED]: 1.15       // 115% XP (very challenging content)
};

/**
 * Determine quest color based on level difference between player and quest
 *
 * @param questLevel - The minimum level requirement of the quest
 * @param playerLevel - The current player level
 * @returns Quest color (gray, green, yellow, orange, red)
 */
export function getQuestColor(questLevel: number, playerLevel: number): QuestColor {
    const levelDiff = questLevel - playerLevel;

    if (levelDiff <= -6) {
        return QuestColor.GRAY;     // 6+ levels below = trivial
    } else if (levelDiff <= -3) {
        return QuestColor.GREEN;    // 3-5 levels below = low-level
    } else if (levelDiff <= 3) {
        return QuestColor.YELLOW;   // -2 to +3 = appropriate
    } else if (levelDiff <= 7) {
        return QuestColor.ORANGE;   // +4 to +7 = high-level
    } else {
        return QuestColor.RED;      // +8+ = very high-level
    }
}

/**
 * Get XP modifier for a quest based on level difference
 *
 * @param questLevel - The minimum level requirement of the quest
 * @param playerLevel - The current player level
 * @returns XP multiplier (0.0 to 1.15)
 */
export function getQuestXPModifier(questLevel: number, playerLevel: number): number {
    const color = getQuestColor(questLevel, playerLevel);
    return QUEST_XP_MODIFIERS[color];
}

/**
 * Calculate quest XP reward with all modifiers applied
 * Enhancement #6 (Phase 7): Now includes level-based XP modifiers
 *
 * @param baseQuestXP - The base XP reward from quest_template
 * @param questLevel - The minimum level requirement of the quest
 * @param playerLevel - The current player level
 * @param hasRestBonus - Whether player has rested XP bonus active
 * @returns Final XP reward after all modifiers
 */
export function calculateQuestXPWithModifiers(
    baseQuestXP: number,
    questLevel: number,
    playerLevel: number,
    hasRestBonus = false
): number {
    // Step 1: Apply level divisor (expansion-based scaling)
    const divisor = getXPDivisor(playerLevel);
    let xp = Math.floor(baseQuestXP / divisor);

    // Step 2: Apply quest color modifier (level difference penalty/bonus)
    const colorModifier = getQuestXPModifier(questLevel, playerLevel);
    xp = Math.floor(xp * colorModifier);

    // Step 3: Apply rest bonus (+50% XP if rested)
    if (hasRestBonus && colorModifier > 0) {
        xp = Math.floor(xp * 1.5);
    }

    return xp;
}

/**
 * Calculate rest bonus XP pool size for a player
 * Rest bonus accumulates while logged out at an inn or city
 *
 * @param playerLevel - Current player level
 * @param hoursRested - Hours spent rested (capped at 10 days = 240 hours)
 * @returns Rest bonus XP pool size in XP points
 */
export function calculateRestBonusPool(playerLevel: number, hoursRested: number): number {
    // Rest XP accumulates at 5% of level bar per 8 hours
    // Maximum: 150% of level bar (30 bubbles * 5% each)
    const xpToNextLevel = getXPToNextLevel(playerLevel);
    const maxRestXP = Math.floor(xpToNextLevel * 1.5); // 150% of level bar
    
    // Handle level squish levels (31-50) where XP is negative
    if (xpToNextLevel <= 0) {
        return 0;
    }

    // Accumulation rate: 5% per 8 hours = 0.625% per hour
    const restXPPerHour = xpToNextLevel * 0.00625;
    const accumulatedRestXP = Math.floor(restXPPerHour * hoursRested);

    // Cap at maximum (150% of level bar)
    return Math.min(accumulatedRestXP, maxRestXP);
}

/**
 * Check if player should have rest bonus based on rest pool
 *
 * @param restPoolXP - Remaining rest bonus XP pool
 * @returns Whether player has active rest bonus
 */
export function hasRestBonus(restPoolXP: number): boolean {
    return restPoolXP > 0;
}

/**
 * Deduct XP from rest bonus pool when XP is gained
 * Rest bonus applies 1:1 with XP earned (50% bonus on top of normal XP)
 *
 * @param restPoolXP - Current rest bonus XP pool
 * @param xpGained - XP gained from killing/questing
 * @returns New rest pool after deduction
 */
export function deductRestBonus(restPoolXP: number, xpGained: number): number {
    // Rest bonus is consumed 1:1 with XP earned
    // If you earn 100 XP normally, you get +50 bonus = 150 total
    // This consumes 100 rest XP from the pool
    return Math.max(0, restPoolXP - xpGained);
}
