api:
  class: AuraEffect
  method: GetMiscValueB
  signature: int32 AuraEffect::GetMiscValueB() const
documentation:
  brief: Retrieves the second miscellaneous value associated with the aura effect.
  description: The GetMiscValueB method returns the secondary miscellaneous value
    stored within an AuraEffect object. In the context of TrinityCore's spell system,
    aura effects often contain two miscellaneous values (MiscValueA and MiscValueB)
    that store additional data relevant to the effect's behavior. These values are
    typically used to define parameters such as stat bonuses, damage modifiers, or
    other effect-specific data. This method provides access to the B component of
    this dual-value system without modifying the aura effect's state.
  parameters: []
  returns: An int32 value representing the second miscellaneous value associated with
    the aura effect. The meaning of this value depends on the specific aura type and
    spell that created the effect.
  examples:
  - title: Accessing MiscValueB for a Stat Bonus Aura
    code: "AuraEffect const* auraEff = unit->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\n\
      if (auraEff)\n{\n    int32 miscValueB = auraEff->GetMiscValueB();\n    // Use\
      \ miscValueB to determine stat bonus amount\n}"
    language: cpp
  - title: Checking for Specific MiscValueB in Spell Effect Handling
    code: "void HandleAuraEffect(AuraEffect const* auraEff)\n{\n    int32 miscB =\
      \ auraEff->GetMiscValueB();\n    if (miscB > 0)\n    {\n        // Apply positive\
      \ modifier\n    }\n    else if (miscB < 0)\n    {\n        // Apply negative\
      \ modifier\n    }\n}"
    language: cpp
  notes: This method is a simple getter that does not perform any computation or side
    effects. It directly returns the cached value stored within the AuraEffect object's
    internal data structure. The returned value should be interpreted based on the
    spell effect type and its documentation in the TrinityCore codebase.
  warnings: Ensure that the AuraEffect pointer is valid before calling this method,
    as dereferencing a null pointer will cause undefined behavior. Also note that
    the meaning of MiscValueB varies significantly between different aura types, so
    proper context checking is required when interpreting the returned value.
  related:
  - GetMiscValueA
  - SetMiscValueB
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:02:58.475232'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
