api:
  class: InventoryManager
  method: GetItemById
  signature: Item * InventoryManager::GetItemById(uint32 itemId) const
documentation:
  brief: Retrieves an item from the inventory by its unique identifier.
  description: The GetItemById method searches through the inventory managed by the
    InventoryManager instance and returns a pointer to the Item object that matches
    the specified item ID. This method is commonly used in World of Warcraft TrinityCore
    environments to access specific items for manipulation, inspection, or interaction.
    The method performs a lookup based on the item's unique identifier (itemId) within
    the context of the inventory. It does not modify the inventory state and returns
    NULL if no matching item is found. This function is typically used in game logic
    where an item needs to be accessed by its database ID rather than through other
    means such as slot position.
  parameters: []
  returns: A pointer to the Item object if an item with the specified itemId exists
    in the inventory; otherwise, returns NULL if no matching item is found.
  examples:
  - title: Basic Usage
    code: "Item* item = inventoryManager->GetItemById(12345);\nif (item != nullptr)\n\
      {\n    // Item found, perform operations\n    sLog->outString(\"Found item:\
      \ %u\", item->GetEntry());\n}"
    language: cpp
  - title: Checking for Item Existence
    code: "uint32 itemId = 10001;\nItem* foundItem = player->GetInventory()->GetItemById(itemId);\n\
      if (foundItem)\n{\n    // Item exists, proceed with logic\n    player->ModifyMoney(-5000);\
      \ // Deduct gold\n    foundItem->SetCount(foundItem->GetCount() - 1);\n}\nelse\n\
      {\n    // Item not found in inventory\n    player->SendNotification(\"You don't\
      \ have that item.\");\n}"
    language: cpp
  notes: This method assumes the inventory manager has a valid internal data structure
    for item lookup. Performance may vary depending on how items are stored internally
    within the InventoryManager class. The returned Item pointer is valid only as
    long as the item remains in the inventory and hasn't been deleted or moved.
  warnings: The returned Item pointer should be checked for NULL before use to avoid
    dereferencing a null pointer. This method does not perform any validation of the
    itemId parameter, so invalid IDs will simply return NULL without error.
  related:
  - GetItemByPos
  - HasItemCount
  - AddItem
  - RemoveItem
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:14:47.439928'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
