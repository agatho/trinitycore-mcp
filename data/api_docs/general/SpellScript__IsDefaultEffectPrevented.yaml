api:
  class: SpellScript
  method: _IsDefaultEffectPrevented
  signature: bool SpellScript::_IsDefaultEffectPrevented(int effIndex) const
documentation:
  brief: Checks whether a default spell effect is prevented from applying at the specified
    index
  description: The _IsDefaultEffectPrevented method determines if a default spell
    effect, identified by its index, has been prevented from executing. This is typically
    used within SpellScript implementations to check if a particular effect (such
    as damage, healing, or buff/debuff application) was blocked due to various game
    mechanics like immunity, avoidance, or other prevention mechanisms. The method
    operates on the current spell context and evaluates the state of the effect at
    the given index. It's commonly used in custom spell logic where developers need
    to know if an effect was successfully applied or if it was suppressed by game
    rules.
  parameters: []
  returns: Returns true if the default spell effect at the specified index is prevented
    from applying, false otherwise. This indicates that the effect was either blocked
    by immunity, avoided, or otherwise disabled by game mechanics.
  examples:
  - title: Checking if a damage effect is prevented
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleEffect(SpellEffIndex\
      \ effIndex) override\n    {\n        if (_IsDefaultEffectPrevented(effIndex))\n\
      \        {\n            // Effect was prevented, handle accordingly\n      \
      \      PreventHit();\n        }\n    }\n};"
    language: cpp
  - title: Conditional logic based on effect prevention
    code: "class AdvancedSpellScript : public SpellScript\n{\npublic:\n    void OnEffectApply()\
      \ override\n    {\n        for (int i = 0; i < MAX_EFFECT_INDEX; ++i)\n    \
      \    {\n            if (_IsDefaultEffectPrevented(i))\n            {\n     \
      \           // Log or handle prevented effects\n                sLog->outString(\"\
      Effect %d was prevented\", i);\n            }\n        }\n    }\n};"
    language: cpp
  notes: This method should only be called within the context of a SpellScript implementation
    where the spell's current effect state is accessible. It relies on internal spell
    processing state and may not behave as expected if invoked outside of proper spell
    execution flow.
  warnings: Do not call this method outside of a valid SpellScript context, as it
    depends on internal spell state management. The method assumes that the spell
    has been initialized and effects are being processed, otherwise results may be
    undefined or misleading.
  related:
  - SpellScript::IsDefaultEffectPrevented
  - SpellScript::PreventEffect
  - SpellScript::HandleEffect
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T05:42:04.025221'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
