api:
  class: GameObject
  method: GetRespawnCompatibilityMode
  signature: bool GameObject::GetRespawnCompatibilityMode()
documentation:
  brief: Returns whether the GameObject is in respawn compatibility mode, allowing
    for proper handling of respawn mechanics.
  description: This method checks if the GameObject is currently operating under respawn
    compatibility mode, which affects how the game handles object respawns and resets.
    The method returns true if the GameObject is in compatibility mode, false otherwise.
    This is particularly relevant for objects that may have special respawn behavior
    or those that are part of a larger group with specific respawn rules. The method
    provides access to internal respawn state information that can be used to determine
    whether an object should follow standard or modified respawn behavior.
  parameters: []
  returns: Returns true if the GameObject is in respawn compatibility mode, false
    otherwise. This indicates whether the object's respawn behavior follows compatibility
    rules rather than standard respawn mechanics.
  examples:
  - title: Basic Usage Example
    code: "if (gameObject->GetRespawnCompatibilityMode())\n{\n    // Handle special\
      \ respawn logic\n    // GameObject is in compatibility mode\n}"
    language: cpp
  notes: This method is typically used internally by TrinityCore's respawn system
    to determine if an object should follow compatibility rules rather than standard
    respawn behavior. It may be relevant for objects that are part of a group or have
    special respawn requirements.
  warnings: This method should not be used directly in most cases as it's primarily
    intended for internal use by the TrinityCore system. Direct usage may lead to
    unexpected behavior if not properly understood.
  related:
  - GetRespawnTime
  - GetRespawnDelay
  - SetRespawnCompatibilityMode
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T18:21:00.106461'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
