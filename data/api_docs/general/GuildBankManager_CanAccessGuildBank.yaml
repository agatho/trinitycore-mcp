api:
  class: GuildBankManager
  method: CanAccessGuildBank
  signature: bool GuildBankManager::CanAccessGuildBank(int * player, uint32 tabId)
documentation:
  brief: Checks if a player has permission to access a specific guild bank tab
  description: The CanAccessGuildBank method determines whether a given player has
    the necessary permissions to access a specified guild bank tab. This method evaluates
    the player's guild rank and the tab's access permissions to ensure proper guild
    bank security. It is commonly used before allowing players to view, deposit, or
    withdraw items from guild bank tabs. The method takes into account both the player's
    current guild membership status and their rank within the guild, which dictates
    their level of access to different tabs.
  parameters:
  - name: player
    description: Pointer to the player object or player identifier that is being checked
      for access permissions
  - name: tabId
    description: The unique identifier of the guild bank tab to check access for (0-based
      index)
  returns: Returns true if the player has permission to access the specified guild
    bank tab, false otherwise
  examples:
  - title: Basic Access Check
    code: "if (guildBankManager->CanAccessGuildBank(&player, 0)) {\n    // Player\
      \ can access tab 0\n    // Proceed with bank operations\n} else {\n    // Player\
      \ cannot access this tab\n    SendPacket(CMSG_GUILD_BANK_QUERY_TAB);\n}"
    language: cpp
  - title: Multiple Tab Access Check
    code: "for (uint32 i = 0; i < MAX_GUILD_BANK_TABS; ++i) {\n    if (guildBankManager->CanAccessGuildBank(&player,\
      \ i)) {\n        // Enable tab UI element\n        SetTabEnabled(i, true);\n\
      \    } else {\n        // Disable tab UI element\n        SetTabEnabled(i, false);\n\
      \    }\n}"
    language: cpp
  notes: This method typically checks the player's guild rank against the tab's required
    permissions. The implementation may involve checking if the player is in the guild,
    their current rank level, and whether that rank allows access to the specific
    tab. It's important to note that this check should be performed before any bank
    operations to prevent unauthorized access.
  warnings: This method does not validate if the player is actually in the guild or
    if the tab exists - those checks should be performed beforehand. Improper use
    of this method could lead to security vulnerabilities in guild bank access control.
  related:
  - GetGuildBankTabPermissions
  - SetGuildBankTabAccess
  - CanDepositItemToGuildBank
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:09:30.877911'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
