api:
  class: BotLifecycleManager
  method: GetActiveLifecycles
  signature: int BotLifecycleManager::GetActiveLifecycles() const
documentation:
  brief: Retrieves the count of currently active bot lifecycles managed by the BotLifecycleManager.
  description: The GetActiveLifecycles method returns an integer representing the
    number of active bot lifecycles within the system. This count typically reflects
    how many bots are currently in a live, operational state and are actively being
    managed by the lifecycle manager. The method is read-only and does not modify
    any internal state. It serves as a diagnostic or monitoring tool for developers
    and system administrators to understand the current load or status of bot operations
    within the TrinityCore environment.
  parameters: []
  returns: An integer value indicating the total number of active bot lifecycles.
    A return value of zero means no bots are currently active, while any positive
    integer represents the count of active bots.
  examples:
  - title: Basic Usage to Check Active Bots
    code: "int activeCount = botLifecycleManager.GetActiveLifecycles();\nif (activeCount\
      \ > 0) {\n    std::cout << \"There are \" << activeCount << \" active bot lifecycles.\"\
      \ << std::endl;\n} else {\n    std::cout << \"No active bots found.\" << std::endl;\n\
      }"
    language: cpp
  notes: This method is typically used for monitoring purposes or to determine if
    any bots are currently running. The returned value may change dynamically as bots
    are created, destroyed, or transition between lifecycle states.
  warnings: null
  related:
  - GetTotalLifecycles
  - IsBotActive
  - StartBotLifecycle
  - StopBotLifecycle
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:14:00.589622'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
