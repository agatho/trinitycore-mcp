api:
  class: Unit
  method: GetNpcFlags
  signature: NPCFlags Unit::GetNpcFlags() const
documentation:
  brief: Returns the NPC flags of the unit, which determine the type of NPC and its
    interaction behavior with players.
  description: The GetNpcFlags method retrieves the NPCFlags value associated with
    a Unit object, which defines the specific type of NPC and its interaction capabilities
    with players. This value is used to determine how the NPC interacts with players,
    including whether it's a vendor, quest giver, or has other special behaviors.
    The NPC flags are typically set during the creation of the NPC and can be modified
    through various game mechanics such as quests, faction changes, or player interactions.
    Understanding these flags is crucial for developers working on NPC behavior, quest
    systems, or player interaction logic.
  parameters: []
  returns: Returns the NPCFlags value which represents the specific type of NPC and
    its interaction capabilities with players. This value can be a combination of
    multiple flag values that define various behaviors such as vendor, quest giver,
    or other special NPC types.
  examples:
  - title: Basic usage example
    code: "Unit* unit = player->GetNPC();\nNPCFlags flags = unit->GetNpcFlags();\n\
      if (flags & NPC_FLAG_VENDOR)\n{\n    // This NPC is a vendor\n}"
    language: cpp
  - title: Advanced usage example
    code: "Unit* unit = player->GetNPC();\nNPCFlags flags = unit->GetNpcFlags();\n\
      if (flags & NPC_FLAG_QUESTGIVER)\n{\n    // This NPC is a quest giver\n}\nelse\
      \ if (flags & NPC_FLAG_INNKEEPER)\n{\n    // This NPC is an innkeeper\n}"
    language: cpp
  notes: This method is commonly used in conjunction with other NPC-related methods
    like GetNPCType or GetFaction. The returned value is typically set during NPC
    creation and can be modified through game mechanics, making it important for developers
    to understand the underlying flags system.
  warnings: Care should be taken when modifying NPC flags as incorrect values may
    cause unexpected behavior in player interactions. Also, some NPC flags may not
    be properly handled by all game systems, so developers should verify their usage.
  related:
  - GetNPCType
  - GetFaction
  - SetNpcFlags
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:53:30.120142'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
