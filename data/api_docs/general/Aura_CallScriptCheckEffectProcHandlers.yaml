api:
  class: Aura
  method: CallScriptCheckEffectProcHandlers
  signature: bool Aura::CallScriptCheckEffectProcHandlers(const AuraEffect * aurEff,
    const AuraApplication * aurApp, ProcEventInfo & eventInfo)
documentation:
  brief: Calls all script handlers to check if an aura effect can proc during a spell
    or attack event.
  description: The CallScriptCheckEffectProcHandlers method is responsible for invoking
    registered script handlers that determine whether a specific aura effect is allowed
    to trigger a proc. This method is typically called during combat events such as
    spell casts or melee attacks, where procs are evaluated. It evaluates the conditions
    set by script-defined handlers and returns true if at least one handler allows
    the proc, or false if all handlers deny it. The method takes into account the
    aura effect being processed, its application state, and the event information
    that triggered the proc check.
  parameters:
  - name: aurEff
    description: Pointer to the AuraEffect object that is being evaluated for proc
      eligibility. This represents the specific effect of the aura which may trigger
      a proc.
  - name: aurApp
    description: Pointer to the AuraApplication object representing the application
      state of the aura on the target. This provides context about how the aura is
      applied and affects the target.
  - name: eventInfo
    description: Reference to a ProcEventInfo object containing detailed information
      about the event that triggered this proc check, such as damage dealt, spell
      cast, or attack type.
  returns: Returns true if at least one script handler allows the aura effect to proc;
    returns false if all handlers deny the proc. A return value of true indicates
    that the aura's proc condition has been satisfied by the script logic.
  examples:
  - title: Basic usage in a custom aura script
    code: "bool MyAuraScript::CheckEffectProc(AuraEffect const* aurEff, AuraApplication\
      \ const* aurApp, ProcEventInfo& eventInfo)\n{\n    return CallScriptCheckEffectProcHandlers(aurEff,\
      \ aurApp, eventInfo);\n}"
    language: cpp
  - title: Using in a proc handler to conditionally allow effects
    code: "if (aura->CallScriptCheckEffectProcHandlers(aurEff, aurApp, eventInfo))\n\
      {\n    // Allow the proc effect to occur\n    DoProcEffect();\n}\nelse\n{\n\
      \    // Deny the proc\n    return;\n}"
    language: cpp
  notes: This method is part of the aura scripting system in TrinityCore and is used
    primarily in custom aura scripts to allow for dynamic proc conditions. It should
    not be called directly from non-script code unless necessary, as it's intended
    to be invoked by internal systems during proc evaluation.
  warnings: Improper use of this method can lead to unexpected behavior in aura procs,
    especially when modifying the eventInfo or aura application state before calling
    it. Ensure that all script handlers are properly registered and do not interfere
    with each other's logic.
  related:
  - Aura::CallScriptEffectProcHandlers
  - Aura::CallScriptOnProc
  - Aura::GetEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:11:23.051940'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
