api:
  class: CooldownManager
  method: GetTotalCooldown
  signature: uint32 CooldownManager::GetTotalCooldown(uint32 spellId) const
documentation:
  brief: Calculates and returns the total cooldown duration for a specified spell.
  description: The GetTotalCooldown method retrieves the complete cooldown time in
    milliseconds for a given spell ID. This value accounts for all applicable modifiers,
    such as haste effects, cooldown reductions, and any temporary buffs or debuffs
    that may affect the spell's cooldown period. The method is typically used by the
    game engine to enforce cooldown restrictions and determine when a spell can be
    cast again. It operates on the current state of the caster and considers global
    cooldowns, item cooldowns, and other relevant factors.
  parameters: []
  returns: Returns a uint32 value representing the total cooldown duration in milliseconds
    for the specified spell. If the spell has no cooldown or is not found, it returns
    0.
  examples:
  - title: Basic Usage
    code: uint32 cooldown = cooldownManager->GetTotalCooldown(12345); // Gets cooldown
      for spell ID 12345
    language: cpp
  - title: Checking Cooldown Before Casting
    code: "if (cooldownManager->GetTotalCooldown(12345) == 0)\n{\n    // Spell is\
      \ ready to cast\n    player->CastSpell(target, 12345, true);\n}\nelse\n{\n \
      \   // Spell is on cooldown\n    player->SendSpellCooldown(12345, cooldownManager->GetTotalCooldown(12345));\n\
      }"
    language: cpp
  notes: This method does not account for server-side cooldown reductions that might
    be applied by custom scripts or mods. It only returns the base calculated cooldown
    based on spell properties and current character state. The returned value is in
    milliseconds, which aligns with TrinityCore's internal time handling.
  warnings: Ensure that the provided spell ID is valid to avoid unexpected behavior.
    Invalid spell IDs may return incorrect values or cause undefined behavior depending
    on implementation details. This method should not be called during spell casting
    or cooldown processing to prevent potential recursion issues.
  related:
  - GetSpellCooldown
  - SetSpellCooldown
  - IsOnCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:41:13.606956'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
