api:
  class: VMapManager2
  method: convertPositionToInternalRep
  signature: G3D::Vector3 VMapManager2::convertPositionToInternalRep(float x, float
    y, float z) const
documentation:
  brief: Converts external world coordinates to internal VMap representation coordinates.
  description: This method transforms standard World of Warcraft world coordinates
    (x, y, z) into the internal coordinate system used by the VMap (Virtual Map) system.
    The VMap system handles line-of-sight and collision detection for terrain and
    objects in the game world. This conversion is necessary because the internal representation
    may use different coordinate conventions or units compared to the standard world
    coordinates. The method performs the required transformation to ensure accurate
    spatial queries within the VMap subsystem.
  parameters:
  - name: x
    description: The X coordinate in standard world space
  - name: y
    description: The Y coordinate in standard world space
  - name: z
    description: The Z coordinate in standard world space
  returns: A G3D::Vector3 object containing the converted coordinates in the internal
    VMap representation format. The returned vector maintains the same spatial relationship
    but uses the coordinate system expected by the VMap subsystem for accurate collision
    and line-of-sight calculations.
  examples:
  - title: Basic coordinate conversion
    code: 'float worldX = 1234.5f;

      float worldY = 6789.0f;

      float worldZ = 100.0f;

      G3D::Vector3 internalPos = VMapManager2::getInstance()->convertPositionToInternalRep(worldX,
      worldY, worldZ);

      // internalPos now contains the VMap-compatible coordinates'
    language: cpp
  - title: Using converted coordinates for line-of-sight checks
    code: 'float playerX = 1000.0f;

      float playerY = 2000.0f;

      float playerZ = 50.0f;

      float targetX = 1050.0f;

      float targetY = 2050.0f;

      float targetZ = 60.0f;

      G3D::Vector3 playerPos = VMapManager2::getInstance()->convertPositionToInternalRep(playerX,
      playerY, playerZ);

      G3D::Vector3 targetPos = VMapManager2::getInstance()->convertPositionToInternalRep(targetX,
      targetY, targetZ);

      bool hasLOS = VMapManager2::getInstance()->isInLineOfSight(playerPos, targetPos);

      // Perform line-of-sight check using internal coordinate system'
    language: cpp
  notes: This method is typically used internally by the VMapManager2 class when performing
    spatial queries. The conversion ensures that all coordinates passed to VMap functions
    are in the correct format for efficient processing. This method does not perform
    any validation of input values, so invalid coordinates may result in unexpected
    behavior.
  warnings: Do not use this method directly with raw world coordinates without understanding
    the coordinate system differences. Improper usage can lead to incorrect collision
    detection or line-of-sight results. The method assumes valid input coordinates
    and does not check for out-of-bounds conditions.
  related:
  - convertVectorToInternalRep
  - convertPositionToExternalRep
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:00:08.547243'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
