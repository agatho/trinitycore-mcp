api:
  class: WorldObject
  method: GetStationaryPosition
  signature: const Position & WorldObject::GetStationaryPosition() const
documentation:
  brief: Returns the stationary position of the WorldObject, which represents its
    fixed location in the world.
  description: The GetStationaryPosition method retrieves the stationary position
    of a WorldObject, which is typically its base or reference position within the
    game world. This position is often used for determining object placement, collision
    detection, and spatial relationships. Unlike dynamic positions that may change
    due to movement or animation, the stationary position remains constant for most
    objects unless explicitly modified by game mechanics or scripts. The returned
    Position object contains X, Y, Z coordinates along with orientation data (O) that
    defines the object's static location in the world.
  parameters: []
  returns: A const reference to a Position object representing the fixed location
    of the WorldObject in the game world. This includes x, y, z coordinates and orientation
    (o).
  examples:
  - title: Basic Usage Example
    code: 'WorldObject* obj = ...; // Get pointer to WorldObject

      const Position& pos = obj->GetStationaryPosition();

      float x = pos.m_positionX;

      float y = pos.m_positionY;

      float z = pos.m_positionZ;

      // Use position data for calculations or debugging'
    language: cpp
  - title: Checking Object Location
    code: "Player* player = ...; // Get player reference\nconst Position& stationaryPos\
      \ = player->GetStationaryPosition();\nif (stationaryPos.m_positionX > 100.0f\
      \ && stationaryPos.m_positionY < 50.0f)\n{\n    // Player is in a specific area\
      \ based on stationary position\n}"
    language: cpp
  notes: The stationary position may differ from the object's current world position
    if the object has been moved or animated. This method returns a const reference,
    so modifications to the returned Position object will not affect the WorldObject
    directly. The Position object returned is valid only as long as the WorldObject
    exists.
  warnings: Do not modify the returned Position object directly as it's a const reference.
    If you need to modify position data, use appropriate setter methods or create
    a copy of the Position object for manipulation.
  related:
  - GetPosition
  - SetPosition
  - GetMapId
  - IsInWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:39:50.107553'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
