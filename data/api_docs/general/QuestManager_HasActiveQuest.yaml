api:
  class: QuestManager
  method: HasActiveQuest
  signature: bool QuestManager::HasActiveQuest(uint32 questId) const
documentation:
  brief: Checks if a player has an active quest with the specified ID.
  description: The HasActiveQuest method determines whether a player currently has
    an active quest assigned with the given quest identifier. This check typically
    includes quests that are in progress, meaning they have been accepted but not
    yet completed or turned in. The method is commonly used in quest-related logic
    to validate quest states before allowing certain actions, such as accepting new
    quests, completing objectives, or interacting with quest givers. It does not consider
    quests that have been abandoned, failed, or are not yet active.
  parameters: []
  returns: Returns true if the player has an active quest with the specified ID; otherwise
    returns false.
  examples:
  - title: Check for Active Quest
    code: "if (player->GetQuestManager()->HasActiveQuest(12345)) {\n    // Player\
      \ has active quest 12345\n    player->SendNotification(\"You already have this\
      \ quest!\");\n}"
    language: cpp
  - title: Conditional Quest Acceptance
    code: "uint32 questId = 67890;\nif (!player->GetQuestManager()->HasActiveQuest(questId))\
      \ {\n    player->AddQuest(questId);\n    player->SendNotification(\"Quest accepted!\"\
      );\n} else {\n    player->SendNotification(\"You already have this quest.\"\
      );\n}"
    language: cpp
  notes: This method only checks for active quests, not completed or abandoned ones.
    It's important to note that the quest ID must be valid and correspond to an actual
    quest in the game database. The method performs a lookup within the player's active
    quest list, which is typically stored efficiently for fast access.
  warnings: Do not confuse this with HasQuest or IsQuestComplete methods; this specifically
    checks for active quests only. Using invalid quest IDs may lead to undefined behavior
    or incorrect results depending on how the internal quest tracking system handles
    them.
  related:
  - GetQuestStatus
  - HasQuest
  - IsQuestComplete
  - AddQuest
  - RemoveQuest
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:45:18.442796'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
