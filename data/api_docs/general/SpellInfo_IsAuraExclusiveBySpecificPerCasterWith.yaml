api:
  class: SpellInfo
  method: IsAuraExclusiveBySpecificPerCasterWith
  signature: bool SpellInfo::IsAuraExclusiveBySpecificPerCasterWith(const SpellInfo
    * spellInfo) const
documentation:
  brief: Determines whether two spells are exclusive by specific aura per caster.
  description: This method checks if the current spell and a given spell info are
    exclusive due to specific aura effects that are applied per caster. It evaluates
    whether the two spells share the same exclusive aura type, which prevents them
    from being active simultaneously on the same target. This is commonly used in
    spell mechanics to enforce restrictions between spells that should not coexist,
    such as certain debuffs or buffs that conflict with each other.
  parameters: []
  returns: Returns true if both spells have exclusive aura effects that are specific
    per caster and false otherwise. The method considers the aura type and caster-specific
    exclusivity when determining compatibility.
  examples:
  - title: Basic Usage Example
    code: "if (spellInfo->IsAuraExclusiveBySpecificPerCasterWith(otherSpellInfo))\
      \ {\n    // Do something\n}\n"
    language: cpp
  notes: This method is typically used in spell interaction logic to prevent conflicting
    effects from coexisting on a target. It's important to note that this check only
    applies when the spells have specific aura types that are exclusive per caster,
    not for all aura types.
  warnings: This method should be used carefully as it may lead to incorrect behavior
    if used with non-exclusive spell types. Ensure that both spells are actually exclusive
    by specific aura before calling this method.
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:53:56.143492'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
