api:
  class: Unit
  method: HealthBelowPctDamaged
  signature: bool Unit::HealthBelowPctDamaged(int32 pct, uint32 damage) const
documentation:
  brief: Checks if unit's health falls below a specified percentage and triggers damage.
  description: This method evaluates whether the Unit's current health percentage
    is below a defined threshold, and if so, applies damage to the unit. It serves
    as a conditional check for health-based damage mechanics in World of Warcraft's
    TrinityCore framework. The method is commonly used in AI scripts to determine
    when to trigger damage or effects based on health thresholds. This function is
    particularly useful for implementing health-based triggers such as when a unit's
    health drops below a certain percentage, which may initiate special abilities
    or damage events.
  parameters:
  - name: pct
    description: The percentage threshold to check against. Valid range is 0-100,
      representing the health percentage below which damage will be triggered.
  - name: damage
    description: The amount of damage to apply when the condition is met. This parameter
      defines the magnitude of damage that occurs when health falls below the specified
      percentage.
  returns: Returns true if the unit's health falls below the specified percentage
    and damage is applied; otherwise returns false if health remains above the threshold
    or if damage fails to apply.
  examples:
  - title: Basic usage example
    code: "if (unit->HealthBelowPctDamaged(30, 100))\n{\n    // Trigger damage when\
      \ health drops below 30%\n}"
    language: cpp
  - title: Advanced usage example
    code: "bool result = unit->HealthBelowPctDamaged(50, 250);\nif (result)\n{\n \
      \   // Apply damage when health drops below 50%\n    // This could be used in\
      \ AI scripts for triggering special abilities\n}"
    language: cpp
  notes: This method is typically used in conjunction with other health-related methods
    to implement complex AI behavior. Performance considerations include the frequency
    of checks and potential impact on server load if used frequently. Thread safety
    is generally not an issue as long as the unit object is properly synchronized.
  warnings: Care should be taken when using this method, as incorrect usage may lead
    to unintended damage application or AI behavior. The percentage value must be
    within valid range (0-100) to ensure correct functionality.
  related:
  - HealthAbovePctDamaged
  - Unit::GetHealth
  - Unit::SetHealth
  - Unit::GetMaxHealth
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:03:18.073849'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
