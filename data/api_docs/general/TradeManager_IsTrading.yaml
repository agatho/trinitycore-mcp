api:
  class: TradeManager
  method: IsTrading
  signature: bool TradeManager::IsTrading() const
documentation:
  brief: Checks if a player is currently engaged in a trade with another player.
  description: The IsTrading method determines whether the player associated with
    the TradeManager instance is currently in the process of trading items with another
    player. This method returns true if a trade window is open and active, and false
    otherwise. The check typically involves verifying that both parties have accepted
    the trade proposal and that the trade has not been cancelled or completed. In
    World of Warcraft's TrinityCore implementation, this method is commonly used to
    prevent certain actions during an active trade session, such as attempting to
    log out or enter combat while trading.
  parameters: []
  returns: Returns true if the player is currently in a trade session with another
    player; otherwise returns false.
  examples:
  - title: Basic Trade Status Check
    code: "if (player->GetTradeData()->IsTrading()) {\n    // Player cannot perform\
      \ certain actions during trade\n    sLog->outString(\"Player is currently trading.\"\
      );\n}"
    language: cpp
  - title: Preventing Actions During Trade
    code: "void Player::HandleLogout() {\n    if (GetTradeData()->IsTrading()) {\n\
      \        SendTradeStatus(TRADE_STATUS_BUSY);\n        return;\n    }\n    //\
      \ Proceed with logout logic\n}"
    language: cpp
  notes: This method typically checks internal trade state flags and may involve synchronization
    mechanisms to ensure thread safety when accessed from different threads. The implementation
    likely involves checking if the player's trade data object has an active trade
    session.
  warnings: null
  related:
  - TradeManager::StartTrade
  - TradeManager::CancelTrade
  - TradeManager::AcceptTrade
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:08:17.492362'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
