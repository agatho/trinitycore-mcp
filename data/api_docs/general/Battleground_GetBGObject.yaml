api:
  class: Battleground
  method: GetBGObject
  signature: GameObject * Battleground::GetBGObject(int type, bool logError)
documentation:
  brief: Retrieves a specific GameObject associated with the battleground by type.
  description: The GetBGObject method retrieves a GameObject instance from the battleground
    based on the specified object type. This method is commonly used to access game
    objects such as doors, flags, or other interactive elements within a battleground.
    The method may optionally log an error if the requested object is not found, depending
    on the logError parameter. It's important to note that this method typically returns
    a pointer to a GameObject that is managed by the battleground system and should
    not be deleted manually.
  parameters:
  - name: type
    description: The type identifier of the GameObject to retrieve. This corresponds
      to predefined object types used within the battleground framework, such as gates,
      flags, or capture points.
  - name: logError
    description: If true, logs an error message when the requested GameObject is not
      found. If false, no error is logged and the method simply returns nullptr.
  returns: A pointer to the GameObject if found; otherwise, returns nullptr if the
    object does not exist or if the type is invalid.
  examples:
  - title: Retrieve a battleground door object
    code: "GameObject* door = bg->GetBGObject(BG_OBJECT_DOOR_1, true);\nif (door)\n\
      {\n    // Use the door object\n    door->SetGoState(GO_STATE_ACTIVE);\n}"
    language: cpp
  - title: Check for a flag object without logging errors
    code: "GameObject* flag = bg->GetBGObject(BG_OBJECT_FLAG_1, false);\nif (flag\
      \ && flag->GetGoState() == GO_STATE_READY)\n{\n    // Flag is ready to be captured\n\
      \    flag->SetGoState(GO_STATE_ACTIVE);\n}"
    language: cpp
  notes: This method operates within the context of a battleground's lifecycle and
    should only be called when the battleground is active. GameObjects retrieved via
    this method are managed by the battleground system, so manual deletion or modification
    outside of the game loop may cause instability.
  warnings: Calling this method with an invalid type value can result in undefined
    behavior or null pointer dereferences. Always validate the return value before
    using the GameObject pointer.
  related:
  - GetBgObject
  - AddBGObject
  - RemoveBGObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:20:56.526989'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
