api:
  class: Map
  method: PlayerCannotEnter
  signature: TransferAbortParams Map::PlayerCannotEnter(uint32 mapid, Player * player)
documentation:
  brief: Determines whether a player can enter a specific map based on current game
    state and restrictions.
  description: The PlayerCannotEnter method evaluates if a player is allowed to enter
    a particular map, considering factors such as level requirements, instance locks,
    and other game mechanics. It returns a TransferAbortParams structure that indicates
    the reason for aborting the transfer, if any. This method is crucial for managing
    player access to various zones and instances within World of Warcraft's TrinityCore
    framework.
  parameters:
  - name: mapid
    description: The unique identifier of the map to be entered by the player. This
      typically corresponds to a specific zone or instance in the game.
  - name: player
    description: Pointer to the Player object attempting to enter the map. This parameter
      is essential for evaluating player-specific restrictions and conditions.
  returns: Returns a TransferAbortParams structure that contains information about
    why the transfer was aborted, if at all. Possible values include 'TRANSFER_ABORT_NONE'
    indicating no issues, or specific abort codes like 'TRANSFER_ABORT_LEVEL' for
    level restrictions, 'TRANSFER_ABORT_INVALID' for invalid map IDs, etc.
  examples:
  - title: Basic usage example
    code: "TransferAbortParams result = map->PlayerCannotEnter(123, player); if (result\
      \ != TRANSFER_ABORT_NONE) {\n    // Handle the abort reason\n}"
    language: cpp
  notes: This method is typically called during player movement or teleportation processes
    to validate whether a transfer should proceed. It's important for maintaining
    game balance and preventing players from entering areas they shouldn't be allowed
    in.
  warnings: This method should not be used as a direct replacement for checking player
    level requirements or instance locks; it's more of a general validation mechanism
    that can be extended with additional checks.
  related:
  - Map::IsInstance
  - Map::GetPlayerCount
  - Player::GetMapId
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:59:04.277538'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
