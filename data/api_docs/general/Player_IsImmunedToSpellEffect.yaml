api:
  class: Player
  method: IsImmunedToSpellEffect
  signature: bool Player::IsImmunedToSpellEffect(const int * spellInfo, const int
    & spellEffectInfo, const int * caster, bool requireImmunityPurgesEffectAttribute)
    const
documentation:
  brief: Determines whether a player is immune to a specific spell effect.
  description: This method checks if a player is immuned to a particular spell effect,
    which can be useful for determining if certain spells or effects should be applied
    or ignored. The method considers both the spell information and the caster's influence
    on immunity. It returns true if the player is immune to the specified spell effect,
    false otherwise. This functionality is particularly important in game mechanics
    where players might be protected from certain harmful effects or when implementing
    custom logic for spell interactions.
  parameters:
  - name: spellInfo
    description: Pointer to the spell information structure that defines the spell
      being checked for immunity.
  - name: spellEffectInfo
    description: Reference to the specific spell effect information, which determines
      which effect within the spell is being evaluated for immunity.
  - name: caster
    description: Pointer to the caster of the spell, used to determine whether the
      player's immunity is influenced by the caster's status or characteristics.
  - name: requireImmunityPurgesEffectAttribute
    description: Boolean flag that determines whether the method requires the presence
      of an immunity purges effect attribute for the check to be valid. If true, the
      method will only return true if the spell has this attribute.
  returns: Returns true if the player is immune to the specified spell effect; otherwise
    returns false. This indicates that the player cannot be affected by the spell's
    effect or that the effect is ignored for the player.
  examples:
  - title: Basic usage example
    code: bool result = player->IsImmunedToSpellEffect(spellInfo, spellEffectInfo,
      caster, true);
    language: cpp
  - title: Advanced usage example
    code: "if (player->IsImmunedToSpellEffect(spellInfo, spellEffectInfo, caster,\
      \ false)) {\n    // Handle immunity case\n}\nelse {\n    // Handle normal case\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related functions
    to determine whether a player should be affected by a spell or not. It's important
    to note that the method may return true even if the player is not immune to all
    effects of the spell, but only specific ones. This function can be used for custom
    game logic and may involve performance considerations when checking multiple spell
    effects.
  warnings: This method should not be used in isolation without proper context; it's
    crucial to understand that immunity might be based on specific spell attributes
    or conditions. Care must be taken when using the caster parameter, as incorrect
    usage can lead to false results or unexpected behavior.
  related:
  - IsImmunedToSpell
  - GetSpellInfo
  - IsImmuneToSpellEffect
  - HasSpellImmunity
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T15:49:20.605925'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
