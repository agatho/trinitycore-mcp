api:
  class: RBACData
  method: GetDeniedPermissions
  signature: const RBACPermissionContainer & RBACData::GetDeniedPermissions() const
documentation:
  brief: Returns the collection of denied permissions for this RBAC data instance.
  description: The GetDeniedPermissions method retrieves a constant reference to the
    RBACPermissionContainer that holds all permission entries explicitly denied to
    the associated account or role. This container is used within TrinityCore's Role-Based
    Access Control (RBAC) system to enforce restrictions on player actions, such as
    command access or zone permissions. The returned container should not be modified
    directly, as it represents the immutable denied permission set for this data object.
    This method is typically called during permission checks to determine whether
    a specific action is blocked by explicit denial rules.
  parameters: []
  returns: A constant reference to an RBACPermissionContainer containing all denied
    permissions. The container may be empty if no permissions have been explicitly
    denied.
  examples:
  - title: Retrieve and iterate over denied permissions
    code: "RBACData data;\n// Assume data has been populated with denied permissions\n\
      const RBACPermissionContainer& denied = data.GetDeniedPermissions();\nfor (auto\
      \ it = denied.begin(); it != denied.end(); ++it)\n{\n    std::cout << \"Denied\
      \ permission ID: \" << *it << std::endl;\n}"
    language: cpp
  notes: The returned RBACPermissionContainer is read-only and should not be modified.
    Modifications to the denied permissions must be done through appropriate RBAC
    management methods provided by the system.
  warnings: null
  related:
  - GetGrantedPermissions
  - HasPermission
  - AddDeniedPermission
  - RemoveDeniedPermission
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:42:41.167107'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
