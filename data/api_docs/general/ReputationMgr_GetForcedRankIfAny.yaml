api:
  class: ReputationMgr
  method: GetForcedRankIfAny
  signature: const int * ReputationMgr::GetForcedRankIfAny(uint32 factionId) const
documentation:
  brief: Returns a pointer to the forced reputation rank for the specified faction,
    or nullptr if no forced rank is set.
  description: The GetForcedRankIfAny method checks if a specific faction has a forced
    reputation rank applied to the player. This is typically used in game mechanics
    where certain factions may have their reputation artificially manipulated, such
    as during quest events, world events, or for debugging purposes. The method returns
    a pointer to an integer representing the forced rank value, or nullptr if no forced
    rank is currently active for the given faction. The returned pointer should be
    treated as read-only and must not be modified directly. This functionality allows
    the game engine to override normal reputation progression behavior without permanently
    altering the player's relationship with a faction.
  parameters: []
  returns: A const pointer to an int representing the forced reputation rank for the
    faction, or nullptr if no forced rank is active. The integer value corresponds
    to standard reputation rank constants (e.g., -1 for Hated, 0 for Hostile, etc.).
  examples:
  - title: Check if a faction has a forced reputation rank
    code: "const int* forcedRank = player->GetReputationMgr()->GetForcedRankIfAny(FACTION_ID_ORGRIMMAR);\
      \ \nif (forcedRank != nullptr) {\n    printf(\"Forced rank: %d\\n\", *forcedRank);\n\
      } else {\n    printf(\"No forced rank active\\n\");\n}"
    language: cpp
  notes: This method is typically used internally by the TrinityCore reputation system
    and should not be called directly in most gameplay logic. The returned pointer
    becomes invalid if the forced rank is removed or changed, so it should only be
    dereferenced immediately when needed.
  warnings: Do not modify the value pointed to by the returned pointer as it may cause
    undefined behavior. Always check for nullptr before dereferencing the return value
    to avoid crashes.
  related:
  - SetForcedRank
  - RemoveForcedRank
  - GetReputationRank
  - GetReputation
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:36:32.363488'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
