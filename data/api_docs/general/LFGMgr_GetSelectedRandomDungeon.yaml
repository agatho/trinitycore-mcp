api:
  class: LFGMgr
  method: GetSelectedRandomDungeon
  signature: uint32 LFGMgr::GetSelectedRandomDungeon(int guid)
documentation:
  brief: Retrieves the dungeon ID of the selected random dungeon for a given player
    GUID.
  description: The GetSelectedRandomDungeon method retrieves the unique identifier
    (Dungeon ID) of the random dungeon that has been selected for a specific player
    identified by their GUID. This method is typically used within the LFG (Looking
    For Group) system to determine which dungeon a player has been matched with for
    a random dungeon group. The method operates on the player's current LFG state
    and returns the dungeon ID if one exists, otherwise it may return 0 or an invalid
    value depending on implementation details. This functionality is crucial for managing
    random dungeon assignments in World of Warcraft's LFG framework.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the player whose selected random
      dungeon is to be retrieved. This should be a valid player GUID within the TrinityCore
      system.
  returns: Returns the Dungeon ID of the selected random dungeon for the specified
    player. If no dungeon has been selected or if the player GUID is invalid, the
    method returns 0.
  examples:
  - title: Basic Usage Example
    code: "uint32 dungeonId = sLFGMgr->GetSelectedRandomDungeon(playerGuid);\nif (dungeonId\
      \ > 0)\n{\n    // Player has a selected random dungeon\n    sLog->outString(\"\
      Player %u is assigned to dungeon ID: %u\", playerGuid, dungeonId);\n}\nelse\n\
      {\n    // No dungeon selected for this player\n    sLog->outString(\"Player\
      \ %u has no selected random dungeon.\", playerGuid);\n}"
    language: cpp
  notes: This method is part of the LFG system and relies on internal state tracking.
    The returned dungeon ID corresponds to entries in the game's dungeon database.
    Ensure that the player GUID is valid before calling this method to avoid unexpected
    behavior.
  warnings: The method may return 0 if no random dungeon has been assigned or if the
    player GUID does not correspond to an active LFG session. Always validate the
    returned value before using it in game logic.
  related:
  - LFGMgr::AddPlayer
  - LFGMgr::RemovePlayer
  - LFGMgr::GetPlayerGroup
  - LFGMgr::SetSelectedRandomDungeon
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:43:36.034887'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
