api:
  class: LineOfSightManager
  method: CanSeeTarget
  signature: bool LineOfSightManager::CanSeeTarget(Unit * target)
documentation:
  brief: Determines whether a unit can see another unit based on line of sight mechanics.
  description: The CanSeeTarget method evaluates whether the calling unit has a clear
    line of sight to the specified target unit. This function considers various factors
    such as physical obstacles, height differences, and game-defined visibility rules.
    It is commonly used in AI decision-making processes to determine if a unit can
    detect or attack another unit. The method performs collision detection between
    the two units and returns true if no blocking objects exist between them, false
    otherwise.
  parameters:
  - name: target
    description: Pointer to the Unit object that is being tested for visibility. Must
      not be null.
  returns: Returns true if the unit has a clear line of sight to the target unit,
    false if there are obstacles or other factors preventing visibility.
  examples:
  - title: Basic usage in AI behavior
    code: "if (unit->GetLineOfSightManager()->CanSeeTarget(targetUnit)) {\n    //\
      \ Perform attack action\n    unit->Attack(targetUnit, true);\n}"
    language: cpp
  - title: Visibility check with fallback behavior
    code: "if (!unit->GetLineOfSightManager()->CanSeeTarget(targetUnit)) {\n    //\
      \ Move towards target to gain line of sight\n    unit->MoveTowards(targetUnit,\
      \ 5.0f);\n} else {\n    // Execute spell or ability\n    unit->CastSpell(targetUnit,\
      \ SPELL_SHOOT, true);\n}"
    language: cpp
  notes: This method performs expensive collision detection calculations and should
    not be called excessively in performance-critical sections. The result may vary
    depending on the current state of the game world, including dynamic obstacles
    or environmental changes.
  warnings: Ensure that the target pointer is valid before calling this method to
    avoid crashes. This method does not account for stealth or invisibility effects
    directly; it only checks physical line of sight.
  related:
  - GetLineOfSightManager
  - IsInFront
  - IsInBack
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:14:36.044806'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
