api:
  class: MountManager
  method: IsMounted
  signature: bool MountManager::IsMounted(int * player) const
documentation:
  brief: Checks if a player is currently mounted on a vehicle or creature.
  description: The IsMounted method determines whether a specified player character
    is currently mounted, which includes being seated on a vehicle or riding a creature.
    This method is commonly used in game logic to prevent certain actions while a
    player is mounted, such as entering combat or performing specific abilities. The
    method performs a check against the player's current state and returns true if
    they are mounted, false otherwise. It's important to note that this method only
    checks for active mounting states and does not account for temporary dismounts
    or state transitions.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's unique identifier
      (GUID). This parameter is used to identify which specific player's mount status
      should be checked.
  returns: Returns true if the specified player is currently mounted on a vehicle
    or creature, false otherwise. The method will return false if the player is not
    found or if they are not in a mounted state.
  examples:
  - title: Basic Mount Status Check
    code: "int playerId = 12345;\nbool isMounted = mountManager.IsMounted(&playerId);\n\
      if (isMounted)\n{\n    // Player is currently mounted\n    printf(\"Player is\
      \ mounted\\n\");\n}\nelse\n{\n    // Player is not mounted\n    printf(\"Player\
      \ is not mounted\\n\");\n}"
    language: cpp
  - title: Mount Status in Combat Check
    code: "int playerId = player->GetGUID().GetCounter();\nif (mountManager.IsMounted(&playerId))\n\
      {\n    // Prevent combat actions while mounted\n    player->SendSystemMessage(\"\
      You cannot perform this action while mounted.\");\n    return false;\n}\n//\
      \ Proceed with normal combat logic\nreturn true;"
    language: cpp
  notes: This method relies on the internal state tracking of the player's mount status.
    It's recommended to use this check before performing actions that should be restricted
    while mounted, such as spell casting or movement commands. The method may have
    performance implications if called frequently in tight loops.
  warnings: Ensure that the player GUID passed is valid and represents an active player
    character. Passing an invalid or null pointer could lead to undefined behavior
    or crashes. This method does not handle asynchronous state changes, so it should
    be used with caution in multi-threaded environments.
  related:
  - MountManager::Mount
  - MountManager::Dismount
  - MountManager::IsPlayerMounted
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:13:52.305046'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
