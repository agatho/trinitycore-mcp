api:
  class: InterruptRotationManager
  method: SetConfiguration
  signature: void InterruptRotationManager::SetConfiguration(const Configuration &
    config)
documentation:
  brief: Configures the interrupt rotation manager with the specified settings.
  description: The SetConfiguration method initializes or updates the internal configuration
    of the InterruptRotationManager class. This method is typically used to apply
    new interrupt behavior settings, such as cooldown timers, priority rules, or action
    selection criteria. The configuration object passed to this method contains all
    necessary parameters that define how the interrupt rotation should behave during
    combat. This method does not validate the configuration data internally; it assumes
    the provided Configuration object is valid and complete.
  parameters:
  - name: config
    description: A constant reference to a Configuration object containing all interrupt
      rotation settings. This includes parameters such as cooldown durations, priority
      thresholds, and action selection logic that govern how interrupts are handled
      during combat.
  returns: null
  examples:
  - title: Basic Configuration Setup
    code: 'InterruptRotationManager rotationManager;

      Configuration config;

      // Configure interrupt settings

      config.cooldown = 1.5f;

      config.priorityThreshold = 0.8f;

      rotationManager.SetConfiguration(config);'
    language: cpp
  - title: Updating Existing Configuration
    code: 'InterruptRotationManager rotationManager;

      // Assume rotationManager already has a configuration

      Configuration newConfig;

      newConfig.cooldown = 2.0f; // Increase cooldown

      newConfig.priorityThreshold = 0.9f; // Raise priority threshold

      rotationManager.SetConfiguration(newConfig);'
    language: cpp
  notes: This method performs a direct assignment of the configuration object, meaning
    any changes to the original Configuration object after calling this method will
    not affect the manager's internal state. The method is typically called during
    initialization or when interrupt behavior needs to be dynamically adjusted during
    runtime.
  warnings: Ensure that the Configuration object passed to this method contains valid
    and complete data. Invalid configurations may lead to unexpected behavior in interrupt
    rotation logic. This method does not perform validation of the configuration parameters.
  related:
  - GetConfiguration
  - UpdateConfiguration
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:19:03.705372'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
