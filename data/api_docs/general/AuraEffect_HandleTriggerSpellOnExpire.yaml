api:
  class: AuraEffect
  method: HandleTriggerSpellOnExpire
  signature: void AuraEffect::HandleTriggerSpellOnExpire(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Triggers a spell when an aura effect expires.
  description: The HandleTriggerSpellOnExpire method is responsible for executing
    a specified spell effect when an aura application reaches its expiration time.
    This method is typically invoked as part of the aura's lifecycle management within
    TrinityCore's spell system. It ensures that any associated trigger spells are
    properly cast or activated according to the aura's configuration and the application
    context. The method operates based on the provided aura application, mode, and
    apply state to determine how and when to execute the trigger spell.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the aura being
      applied or removed. This parameter provides context about which aura is expiring
      and its associated target.
  - name: mode
    description: An unsigned 8-bit integer representing the mode of operation for
      the aura effect. This value influences how the trigger spell is handled during
      expiration, such as whether it's applied in a specific context or with certain
      restrictions.
  - name: apply
    description: A boolean flag indicating whether the aura is being applied (true)
      or removed (false). This parameter determines if the trigger spell should be
      cast as part of applying or removing the aura effect.
  returns: null
  examples:
  - title: Basic Usage in Aura Application
    code: "void MyAuraEffect::HandleTriggerSpellOnExpire(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const {\n    if (apply)\n        return;\n    \n \
      \   // Trigger spell on aura expiration\n    if (SpellInfo* triggerSpell = sSpellMgr->GetSpellInfo(GetSpellId()))\n\
      \        aurApp->GetTarget()->CastSpell(aurApp->GetTarget(), triggerSpell->Id,\
      \ true);\n}"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly unless you are implementing custom aura effects. The behavior
    may vary depending on how the aura was configured in the spell database or through
    scripting.
  warnings: Improperly handling this method can lead to incorrect spell triggers or
    game state inconsistencies. Ensure that any spell being triggered is valid and
    appropriate for the aura's context.
  related:
  - AuraEffect::HandlePeriodicTick
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:57:35.782319'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
