api:
  class: Player
  method: UpdateWeaponDependentAuras
  signature: void Player::UpdateWeaponDependentAuras(int attackType)
documentation:
  brief: Updates auras that are dependent on the player's weapon type and attack method.
  description: The UpdateWeaponDependentAuras method is responsible for recalculating
    and applying auras that are conditional based on the player's currently equipped
    weapons and the type of attack being performed. This includes effects such as
    weapon enchantments, set bonuses, and other abilities that activate or modify
    based on weapon usage. The method ensures that the player's aura state remains
    consistent with their current combat setup and attack type, which is crucial for
    maintaining proper gameplay mechanics and balance in World of Warcraft. It typically
    gets invoked during attack events or when weapon states change.
  parameters:
  - name: attackType
    description: Specifies the type of attack being performed. Valid values include
      melee attacks (0), ranged attacks (1), and spell attacks (2). This parameter
      determines which weapon-dependent auras should be evaluated and applied.
  returns: null
  examples:
  - title: Basic Usage in Attack Handler
    code: "void Player::HandleAttack(Unit* target, WeaponAttackType attackType)\n\
      {\n    // Perform attack logic\n    UpdateWeaponDependentAuras(attackType);\n\
      }"
    language: cpp
  - title: Updating Auras After Weapon Change
    code: "void Player::OnWeaponChanged(Item* oldWeapon, Item* newWeapon)\n{\n   \
      \ // Update weapon-dependent auras after weapon swap\n    UpdateWeaponDependentAuras(BASE_ATTACK);\n\
      }"
    language: cpp
  notes: This method is typically called internally by the core combat system and
    should not usually be invoked directly unless implementing custom combat logic.
    The method may trigger additional aura applications or removals based on weapon
    state changes, so it's important to ensure that any related auras are properly
    initialized before calling this function.
  warnings: Direct invocation of this method without proper context can lead to unexpected
    behavior in aura management and combat mechanics. It is recommended to only call
    this method during appropriate attack or weapon change events to maintain game
    integrity.
  related:
  - GetWeapon
  - HasWeapon
  - ApplyAura
  - RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T17:06:06.943375'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
