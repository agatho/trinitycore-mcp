api:
  class: AuctionManager
  method: GetBotStats
  signature: AuctionHouseStats AuctionManager::GetBotStats(int botGuid) const
documentation:
  brief: Retrieves auction house statistics for a specific bot identified by its GUID.
  description: The GetBotStats method fetches detailed auction house statistics for
    a given bot character within the TrinityCore framework. This function is typically
    used to monitor or analyze the bidding behavior, item sales, and overall activity
    of automated auction house bots. The returned AuctionHouseStats structure contains
    various metrics such as number of items listed, sold, and bid upon by the specified
    bot. The method requires a valid bot GUID to retrieve accurate data, and it operates
    within the context of the auction house system in World of Warcraft servers.
  parameters:
  - name: botGuid
    description: The unique identifier (GUID) of the bot character for which statistics
      are being retrieved. This should be a valid player GUID corresponding to an
      existing bot in the auction house system.
  returns: An AuctionHouseStats object containing comprehensive statistics about the
    specified bot's auction house activities, including counts of items listed, sold,
    and bids placed. Returns an empty or default-initialized structure if no data
    is found for the given GUID.
  examples:
  - title: Retrieve Bot Statistics
    code: "AuctionHouseStats stats = auctionManager.GetBotStats(12345);\nif (!stats.IsEmpty())\
      \ {\n    std::cout << \"Items listed: \" << stats.itemsListed << std::endl;\n\
      \    std::cout << \"Items sold: \" << stats.itemsSold << std::endl;\n}"
    language: cpp
  - title: Check Bot Activity Level
    code: "uint32 botGUID = 98765;\nAuctionHouseStats botStats = auctionManager.GetBotStats(botGUID);\n\
      if (botStats.itemsListed > 0) {\n    float activityRatio = static_cast<float>(botStats.itemsSold)\
      \ / botStats.itemsListed;\n    if (activityRatio > 0.8f) {\n        // Bot is\
      \ highly active\n    }\n}"
    language: cpp
  notes: This method accesses internal auction house data structures and may involve
    database queries depending on implementation. It's recommended to cache results
    when frequently accessed to avoid performance degradation. The method assumes
    that the provided bot GUID corresponds to a valid bot entry in the system.
  warnings: Passing an invalid or non-existent bot GUID may result in undefined behavior
    or empty statistics. Ensure proper validation of GUIDs before calling this method.
    This function should not be called from within auction house processing loops
    to prevent potential deadlocks or race conditions.
  related:
  - GetAuctionStats
  - UpdateBotStats
  - IsBotActive
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T18:27:53.533215'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
