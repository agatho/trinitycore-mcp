api:
  class: ObstacleAvoidanceManager
  method: SetCollisionTolerance
  signature: void ObstacleAvoidanceManager::SetCollisionTolerance(float tolerance)
documentation:
  brief: Sets the collision tolerance value for obstacle avoidance calculations.
  description: The SetCollisionTolerance method configures the threshold distance
    used by the ObstacleAvoidanceManager to determine when an object is considered
    to be in collision with another. This value affects how aggressively the AI avoids
    obstacles during movement, with smaller values resulting in more precise but potentially
    more frequent avoidance behavior. The tolerance represents the minimum safe distance
    that should be maintained from obstacles, and it's typically expressed in yards
    or game units. This setting directly influences pathfinding decisions made by
    the AI system when navigating around environmental hazards or other entities.
  parameters:
  - name: tolerance
    description: The collision tolerance value in game units (typically yards). This
      defines the minimum safe distance to maintain from obstacles during avoidance
      calculations. Valid values are positive floating-point numbers. Lower values
      result in more aggressive avoidance behavior, while higher values allow for
      more relaxed navigation.
  returns: null
  examples:
  - title: Basic Usage
    code: 'ObstacleAvoidanceManager* manager = player->GetMotionMaster()->GetObstacleAvoidanceManager();

      manager->SetCollisionTolerance(1.5f);'
    language: cpp
  - title: Adjusting for Different AI Types
    code: "if (unit->GetTypeId() == TYPEID_UNIT)\n{\n    if (unit->ToCreature()->IsPet())\n\
      \        manager->SetCollisionTolerance(0.5f);\n    else\n        manager->SetCollisionTolerance(2.0f);\n\
      }"
    language: cpp
  notes: This method affects the internal collision detection logic used by the AI's
    movement system. The tolerance value should be carefully tuned based on the unit's
    size and movement characteristics to avoid overly aggressive avoidance or insufficient
    obstacle avoidance. Changes take effect immediately for subsequent movement calculations.
  warnings: Setting this value too low may cause units to constantly collide with
    obstacles, leading to inefficient pathfinding. Setting it too high might result
    in units ignoring nearby obstacles entirely, potentially causing them to get stuck
    or pass through solid objects.
  related:
  - GetCollisionTolerance
  - EnableObstacleAvoidance
  - DisableObstacleAvoidance
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:48:28.650734'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
