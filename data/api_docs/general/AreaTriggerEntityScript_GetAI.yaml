api:
  class: AreaTriggerEntityScript
  method: GetAI
  signature: AreaTriggerAI * AreaTriggerEntityScript::GetAI(AreaTrigger * at) const
documentation:
  brief: Retrieves the AI instance associated with the specified area trigger.
  description: The GetAI method is used to obtain the AreaTriggerAI instance that
    controls the behavior of a given area trigger. This method allows scripts and
    systems to access and interact with the AI logic attached to an area trigger,
    enabling dynamic control over its functionality during runtime. The returned pointer
    can be used to invoke AI-specific methods or query state information about the
    area trigger's current behavior. It is important to note that this method assumes
    the area trigger has been properly initialized with an associated AI instance;
    otherwise, it may return a null pointer.
  parameters: []
  returns: A pointer to the AreaTriggerAI instance associated with the specified area
    trigger, or nullptr if no AI is currently attached.
  examples:
  - title: Basic Usage
    code: "AreaTriggerAI* ai = script->GetAI(areaTrigger);\nif (ai)\n{\n    // Use\
      \ the AI instance\n    ai->OnTrigger();\n}"
    language: cpp
  - title: Checking for Valid AI Before Use
    code: "AreaTriggerAI* ai = areaTriggerScript->GetAI(areaTrigger);\nif (ai != nullptr)\n\
      {\n    // Safe to use the AI\n    if (ai->IsEnabled())\n        ai->Disable();\n\
      }\nelse\n{\n    // Handle case where no AI is attached\n    sLog->outError(\"\
      No AI found for area trigger %u\", areaTrigger->GetEntry());\n}"
    language: cpp
  notes: This method should only be called after the area trigger has been initialized
    with an AI component. Accessing the AI before initialization may result in undefined
    behavior or null pointer dereferences. The returned pointer is valid only as long
    as the area trigger exists and has not been destroyed.
  warnings: Using this method without checking for a null return value can lead to
    crashes. Always verify that the returned pointer is valid before attempting to
    use it. Additionally, modifying AI state directly through this interface may interfere
    with normal operation if not done carefully.
  related:
  - AreaTriggerEntityScript::GetAI
  - AreaTriggerEntityScript::SetAI
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:37:02.729027'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
