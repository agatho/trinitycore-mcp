api:
  class: LineOfSightManager
  method: GetBestVisibleTarget
  signature: Unit * LineOfSightManager::GetBestVisibleTarget(const int & candidates)
documentation:
  brief: Determines and returns the most visible target unit from a list of candidates
    based on line-of-sight and visibility conditions.
  description: The GetBestVisibleTarget method evaluates a set of candidate units
    to identify the one that is both visible and accessible within the current line-of-sight
    constraints. It considers factors such as obstruction, distance, and visibility
    flags to determine the optimal target for actions like spell casting or melee
    attacks. This method is typically used in AI decision-making processes where selecting
    an appropriate target based on visibility is crucial for gameplay logic. The method
    assumes that the input candidates are already filtered or prepared by the calling
    code and does not perform additional validation.
  parameters: []
  returns: A pointer to the Unit object representing the best visible target, or nullptr
    if no suitable candidate exists within line-of-sight conditions.
  examples:
  - title: Basic usage in AI behavior
    code: "Unit* target = losManager->GetBestVisibleTarget(candidates);\nif (target)\n\
      {\n    // Proceed with attack or spell targeting\n    me->Attack(target, true);\n\
      }"
    language: cpp
  notes: This method relies on internal visibility checks and may be affected by terrain,
    object placement, and unit states. It is recommended to ensure that candidate
    units are within reasonable proximity before calling this function for performance
    reasons.
  warnings: Calling this method without properly preparing the candidates list may
    lead to unexpected results or null pointer dereferences. Ensure that all candidates
    have been validated for relevance prior to use.
  related:
  - IsInLineOfSight
  - GetVisibleTargets
  - CheckVisibility
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:12:27.419682'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
