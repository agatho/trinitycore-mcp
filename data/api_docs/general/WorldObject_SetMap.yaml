api:
  class: WorldObject
  method: SetMap
  signature: void WorldObject::SetMap(Map * map)
documentation:
  brief: Sets the map instance for this WorldObject, updating its spatial positioning
    and world state.
  description: The SetMap method assigns a new Map object to this WorldObject, effectively
    changing the world environment in which the object exists. This is a core part
    of the TrinityCore's world management system, allowing objects like players, creatures,
    and game objects to be moved between different zones or instances. When called,
    the method updates internal references and may trigger related events such as
    zone change notifications or instance transition logic. The operation should only
    be performed when the object is in a valid state for map transitions, typically
    during loading, spawning, or instance switching operations.
  parameters:
  - name: map
    description: Pointer to the Map object that will become the new parent map for
      this WorldObject. Must not be null; passing a null pointer may result in undefined
      behavior or crashes.
  returns: null
  examples:
  - title: Setting a Player's Map During Instance Transition
    code: 'Player* player = ...;

      Map* instanceMap = sMapMgr->CreateInstance(1234, 0);

      player->SetMap(instanceMap);'
    language: cpp
  - title: Moving a Creature to a Different Map
    code: "Creature* creature = ...;\nMap* newMap = sMapMgr->FindMap(1001, 0);\nif\
      \ (newMap)\n{\n    creature->SetMap(newMap);\n}"
    language: cpp
  notes: This method does not automatically handle the movement of the object's position
    within the new map. It only updates the reference to the map itself. The actual
    positioning and zone update logic must be handled separately by calling appropriate
    methods like SetPosition() or triggering zone change events.
  warnings: Calling SetMap with a null pointer is dangerous and will likely cause
    crashes or memory corruption. Ensure that the Map object passed is valid and properly
    initialized before calling this method. Also, avoid calling this method during
    active processing of world events as it may lead to inconsistent state during
    iteration or update cycles.
  related:
  - GetMap
  - IsInMap
  - SetPosition
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:04:49.294945'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
