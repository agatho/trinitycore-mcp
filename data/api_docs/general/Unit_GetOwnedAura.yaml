api:
  class: Unit
  method: GetOwnedAura
  signature: Aura * Unit::GetOwnedAura(uint32 spellId, int casterGUID, int itemCasterGUID,
    uint32 reqEffMask, Aura * except) const
documentation:
  brief: Returns the aura instance associated with a specific spell ID and caster
    GUID, considering item caster GUID and required effect mask.
  description: This method retrieves a specific aura from the unit's owned auras based
    on the provided spell ID, caster GUID, and item caster GUID. It allows filtering
    by required effect mask and can exclude a specific aura instance from consideration.
    The method is commonly used in World of Warcraft's TrinityCore framework to access
    and manipulate aura effects on units, particularly for handling spell mechanics
    such as proc chances, aura applications, or specific effect triggers. This function
    is essential for implementing complex spell interactions and managing aura states
    within the game engine.
  parameters:
  - name: spellId
    description: The spell ID of the aura to retrieve. This represents the specific
      spell that generated the aura being sought.
  - name: casterGUID
    description: The GUID of the caster who applied the aura. This can be either a
      player or creature GUID, depending on the context of the spell application.
  - name: itemCasterGUID
    description: The GUID of the item caster that generated the aura. This is used
      to distinguish between different sources of the same spell when applied by items.
  - name: reqEffMask
    description: The required effect mask for filtering auras. This allows specifying
      which effect(s) should be considered when retrieving the aura, useful for matching
      specific effects like periodic damage or healing.
  - name: except
    description: An optional aura instance to exclude from the search. This prevents
      returning the same aura that is being explicitly excluded.
  returns: Returns a pointer to the Aura instance matching the criteria, or nullptr
    if no matching aura is found. The returned aura may be nullptr if no matching
    aura exists in the unit's owned auras list.
  examples:
  - title: Basic usage example
    code: Aura* aura = unit->GetOwnedAura(12345, 67890, 0, 0, nullptr);
    language: cpp
  - title: Advanced usage example with effect mask
    code: "Aura* aura = unit->GetOwnedAura(12345, 67890, 12345, 1, nullptr);\nif (aura\
      \ != nullptr)\n{\n    // Process the aura\n}"
    language: cpp
  notes: This method is part of the core aura management system in TrinityCore. It
    is thread-safe and should be used carefully when modifying aura lists during active
    gameplay to avoid race conditions. Performance considerations include avoiding
    frequent calls to this method during combat or spell processing loops.
  warnings: Be cautious when using this method with item caster GUID, as incorrect
    usage may lead to retrieving wrong aura instances. Also, ensure that the except
    parameter is properly handled to prevent accidental exclusion of valid auras.
  related:
  - GetAura
  - GetAuraBySpellId
  - GetAuraList
  - GetOwnedAuraBySpellId
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:52:43.920884'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
