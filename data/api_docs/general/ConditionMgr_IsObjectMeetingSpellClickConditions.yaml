api:
  class: ConditionMgr
  method: IsObjectMeetingSpellClickConditions
  signature: bool ConditionMgr::IsObjectMeetingSpellClickConditions(uint32 creatureId,
    uint32 spellId, const WorldObject * clicker, const WorldObject * target) const
documentation:
  brief: Checks if a creature meets all spell click conditions for a given spell and
    target object.
  description: The IsObjectMeetingSpellClickConditions method evaluates whether a
    specific creature (identified by its entry ID) satisfies all defined conditions
    required to interact with a spell click event. This includes checking various
    condition types such as player faction, quest status, item requirements, and other
    contextual triggers. The method takes into account the clicker object (typically
    a player), the target object (often the creature itself), and the spell ID that
    initiated the interaction. It returns true if all conditions are met, false otherwise.
    This functionality is crucial for implementing interactive NPC behaviors in World
    of Warcraft such as quest givers, vendors, or special event triggers.
  parameters:
  - name: creatureId
    description: The unique identifier (entry ID) of the creature that is being checked
      for spell click conditions.
  - name: spellId
    description: The spell ID associated with the spell click event being evaluated.
  - name: clicker
    description: The WorldObject that initiated the spell click interaction, typically
      a Player object.
  - name: target
    description: The WorldObject that is the target of the spell click interaction,
      often the creature itself.
  returns: Returns true if all spell click conditions for the given creature and spell
    are satisfied by the provided clicker and target objects. Returns false if any
    condition fails or if no conditions exist for the specified spell.
  examples:
  - title: Basic usage to check if a player can interact with an NPC
    code: "if (sConditionMgr->IsObjectMeetingSpellClickConditions(12345, 67890, player,\
      \ npc)) {\n    // Proceed with spell click interaction\n    npc->CastSpell(player,\
      \ 67890, true);\n}"
    language: cpp
  - title: Advanced usage in a custom NPC AI implementation
    code: "class CustomNPC : public Creature {\npublic:\n    bool OnGossipHello(Player*\
      \ player) override {\n        if (sConditionMgr->IsObjectMeetingSpellClickConditions(GetEntry(),\
      \ 54321, player, this)) {\n            // Show specific gossip options\n   \
      \         AddGossipItemFor(player, GOSSIP_ICON_CHAT, \"Interact with me\", GOSSIP_SENDER_MAIN,\
      \ 1);\n        }\n        return true;\n    }\n};"
    language: cpp
  notes: This method relies on the ConditionMgr's internal condition system which
    supports multiple condition types including player faction, quest status, item
    requirements, and more. The method does not perform any direct spell casting or
    interaction logic - it only evaluates whether conditions are met. It is commonly
    used in conjunction with spell click events and gossip systems to control NPC
    behavior.
  warnings: Ensure that the creatureId and spellId parameters are valid before calling
    this function, as invalid IDs may lead to undefined behavior or incorrect condition
    evaluation. Be aware that condition checking can be performance-intensive if many
    conditions are defined for a single spell click event.
  related:
  - GetCondition
  - CheckCondition
  - IsObjectMeetingConditions
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T15:54:37.865475'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
