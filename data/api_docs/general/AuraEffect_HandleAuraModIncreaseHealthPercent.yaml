api:
  class: AuraEffect
  method: HandleAuraModIncreaseHealthPercent
  signature: void AuraEffect::HandleAuraModIncreaseHealthPercent(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the target's maximum health by a percentage amount when the aura
    is applied or removed.
  description: The HandleAuraModIncreaseHealthPercent method is responsible for adjusting
    the target's maximum health value by a specified percentage when an aura effect
    is applied or removed. This method is part of the aura application system in TrinityCore
    and is typically invoked during the activation or deactivation of auras that modify
    health percentages. It directly manipulates the target's health statistics through
    the AuraApplication context, ensuring that any changes to maximum health are properly
    synchronized with the game state. The method handles both the application (when
    'apply' is true) and removal (when 'apply' is false) of the percentage-based health
    modification.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter provides context for which
      aura effect is being processed and on which target.
  - name: mode
    description: The mode of operation, typically indicating how the aura should be
      handled (e.g., application state). Valid values are usually defined by internal
      constants within TrinityCore's aura system.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the health percentage modification. When true, the target's maximum health is
      increased; when false, it is decreased accordingly.
  returns: null
  examples:
  - title: Applying a Health Increase Aura
    code: "void ApplyHealthPercentAura(Unit* target, int32 percent)\n{\n    if (Aura*\
      \ aura = new Aura(target, target, spellInfo))\n    {\n        AuraApplication*\
      \ aurApp = new AuraApplication(target, target, aura);\n        aura->GetEffect(0)->HandleAuraModIncreaseHealthPercent(aurApp,\
      \ 0, true);\n    }\n}"
    language: cpp
  - title: Removing a Health Increase Aura
    code: "void RemoveHealthPercentAura(Unit* target)\n{\n    AuraApplication* aurApp\
      \ = target->GetAuraApplication(12345); // Example aura ID\n    if (aurApp)\n\
      \    {\n        AuraEffect* effect = aurApp->GetBase()->GetEffect(0);\n    \
      \    effect->HandleAuraModIncreaseHealthPercent(aurApp, 0, false);\n    }\n}"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly from outside the core aura application logic. The percentage value
    used for modification is typically stored in the aura's effect data and may be
    influenced by various factors such as caster level, spell modifiers, or other
    game mechanics.
  warnings: Improper use of this method can lead to incorrect health calculations
    and visual inconsistencies. Ensure that the aura application context is valid
    before calling this method, and always verify that the target unit exists and
    is in a valid state for health modifications.
  related:
  - AuraEffect::HandleAuraModIncreaseHealth
  - AuraEffect::HandleAuraModMaxHealth
  - AuraApplication::ApplyAura
  - AuraApplication::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:19:15.822632'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
