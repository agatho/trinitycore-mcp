api:
  class: SpellScriptBase
  method: _Unload
  signature: void SpellScriptBase::_Unload()
documentation:
  brief: Unloads and cleans up resources associated with the spell script instance
  description: The _Unload method is responsible for performing cleanup operations
    on a SpellScriptBase instance when it is no longer needed. This typically involves
    releasing allocated memory, resetting internal state variables, and ensuring that
    any references or pointers held by the spell script are properly cleared. The
    method is called internally by the TrinityCore spell system during spell destruction
    or when a spell script is removed from active use. It ensures proper resource
    management and prevents memory leaks in the game's spell scripting subsystem.
  parameters: []
  returns: null
  examples:
  - title: Basic usage in spell script cleanup
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void _Unload()\
      \ override\n    {\n        // Perform cleanup operations\n        SpellScriptBase::_Unload();\n\
      \        // Additional custom cleanup\n    }\n};"
    language: cpp
  notes: This method is typically called automatically by the TrinityCore framework
    during spell lifecycle management. Developers should not call this method directly
    unless implementing custom spell script behavior. The base implementation handles
    standard cleanup tasks, but derived classes may override it to perform additional
    resource deallocation.
  warnings: Calling _Unload manually outside of the normal spell lifecycle can lead
    to undefined behavior or crashes. This method should only be invoked as part of
    the framework's internal cleanup process or when properly overriding in custom
    spell scripts.
  related:
  - _Load
  - Initialize
  - Execute
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:55:28.791572'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
