api:
  class: ZoneScript
  method: SetData64
  signature: void ZoneScript::SetData64(uint32 param0, uint64 param1)
documentation:
  brief: Sets a 64-bit data value associated with a specified parameter in the zone
    script context.
  description: The SetData64 method is used to store or update a 64-bit integer value
    linked to a specific parameter within the ZoneScript system. This functionality
    allows scripts to maintain persistent state information across different events
    and interactions within a zone. The method typically serves as part of a larger
    scripting framework that enables dynamic behavior in game zones, such as tracking
    quest progress, managing event states, or coordinating NPC behaviors. It is commonly
    used in conjunction with GetData64 for retrieving stored values. The parameter
    'param0' acts as an identifier or key to associate the data, while 'param1' holds
    the actual 64-bit value to be stored.
  parameters:
  - name: param0
    description: A 32-bit unsigned integer used as a key or identifier to associate
      with the 64-bit data value. This parameter determines how the data will be retrieved
      later using GetData64.
  - name: param1
    description: A 64-bit unsigned integer containing the actual data value to be
      stored. This can represent any kind of state information, such as counters,
      flags, or unique identifiers.
  returns: null
  examples:
  - title: Setting a Quest State Flag
    code: "class MyZoneScript : public ZoneScript\n{\npublic:\n    void OnPlayerEnter(Player*\
      \ player) override\n    {\n        // Set a flag indicating the player has entered\
      \ the zone\n        SetData64(1, player->GetGUID().GetRawValue());\n    }\n\
      };"
    language: cpp
  - title: Tracking Boss Kill Count
    code: "class BossZoneScript : public ZoneScript\n{\npublic:\n    void OnBossKilled(uint32\
      \ bossId) override\n    {\n        // Increment kill count for a specific boss\n\
      \        uint64 currentCount = GetData64(bossId);\n        SetData64(bossId,\
      \ currentCount + 1);\n    }\n};"
    language: cpp
  notes: This method is typically used within the context of zone-based scripting
    systems in TrinityCore. It's important to note that data stored via SetData64
    persists only for the duration of the zone's active session unless explicitly
    saved to a database or other persistent storage mechanism. The keys (param0) should
    be carefully chosen to avoid conflicts with other scripts or system components.
  warnings: Ensure that param0 values are unique enough to prevent accidental overwriting
    of data from other systems. Also, be cautious when using large numbers for param0
    as they may impact performance or memory usage in certain implementations.
  related:
  - GetData64
  - SetData
  - GetData
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:54:06.553780'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
