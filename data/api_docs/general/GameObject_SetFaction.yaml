api:
  class: GameObject
  method: SetFaction
  signature: void GameObject::SetFaction(uint32 faction)
documentation:
  brief: Sets the faction for the GameObject, determining its relationship with player
    factions and NPC types.
  description: The SetFaction method allows developers to assign a specific faction
    ID to a GameObject, which controls how the object interacts with players and other
    NPCs in terms of hostility, friendship, and quest behavior. This method is crucial
    for configuring GameObjects that are part of quests or have special interactions
    with player characters, such as doors, chest items, or interactive objects. The
    faction ID determines whether the GameObject will be hostile, friendly, or neutral
    towards players based on their current faction status.
  parameters:
  - name: faction
    description: The faction ID to assign to the GameObject. This value must correspond
      to a valid faction in the game's faction database, typically ranging from 0
      to 35000 depending on the expansion level.
  returns: null
  examples:
  - title: Setting a faction for a door object
    code: 'GameObject* door = GameObject::CreateObject(176234, 0);


      // Set the faction to 1000 (Neutral)

      door->SetFaction(1000);'
    language: cpp
  - title: Setting a faction for a quest-related GameObject
    code: 'GameObject* chest = GameObject::CreateObject(176234, 0);


      // Set the faction to 1500 (Hostile)

      chest->SetFaction(1500);


      // This will make the chest hostile towards players with faction below 1500'
    language: cpp
  notes: This method is typically used during GameObject creation or initialization,
    and should be set before any interaction occurs. The faction ID affects how the
    GameObject behaves in relation to player factions, so it's important to ensure
    that the correct faction is assigned for desired gameplay outcomes.
  warnings: Setting an invalid faction ID may cause unexpected behavior or errors
    during gameplay. Make sure the faction ID corresponds to a valid entry in the
    game's faction database. Also note that some GameObjects might have their own
    faction already set by default, so modifying this value could override existing
    behavior.
  related:
  - GetFaction
  - SetPhaseMask
  - SetDisplayId
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:10:18.471486'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
