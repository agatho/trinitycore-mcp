api:
  class: RestStrategy
  method: UpdateBehavior
  signature: void RestStrategy::UpdateBehavior(BotAI * ai, uint32 diff)
documentation:
  brief: Updates the rest behavior of a bot AI based on elapsed time and current state.
  description: The UpdateBehavior method in RestStrategy is responsible for managing
    how a bot AI handles resting mechanics during gameplay. It evaluates the bot's
    current condition, such as health and mana levels, and determines whether the
    bot should enter or exit a resting state. This method is typically called periodically
    by the AI system to ensure that bots behave realistically in terms of resource
    management and recovery. The method uses the provided diff parameter to calculate
    time-based changes in behavior, ensuring that bots rest appropriately without
    unnecessary interruptions.
  parameters:
  - name: ai
    description: Pointer to the BotAI instance that this strategy is applied to. This
      parameter provides access to the bot's current state and behavior settings.
  - name: diff
    description: Time difference in milliseconds since the last update call. Used
      to calculate time-based changes in rest behavior, such as healing rate or mana
      regeneration.
  returns: null
  examples:
  - title: Basic usage in AI update loop
    code: "void BotAI::UpdateAI(uint32 diff)\n{\n    // ... other AI logic\n    restStrategy.UpdateBehavior(this,\
      \ diff);\n    // ... other AI logic\n}"
    language: cpp
  - title: Integration with custom bot behavior
    code: "class CustomBotAI : public BotAI\n{\npublic:\n    void UpdateAI(uint32\
      \ diff) override\n    {\n        // Handle combat and movement logic\n     \
      \   if (IsInCombat())\n        {\n            // Combat behavior\n        }\n\
      \        else\n        {\n            // Rest strategy update\n            restStrategy.UpdateBehavior(this,\
      \ diff);\n        }\n    }\n};"
    language: cpp
  notes: This method is part of the core AI behavior system and should be called regularly
    in the bot's update loop. The implementation likely involves checking health/mana
    thresholds and triggering appropriate rest actions like sitting, standing, or
    using consumables. Performance-wise, this function should be lightweight as it's
    called frequently.
  warnings: Ensure that ai parameter is not null before calling this method to avoid
    segmentation faults. The diff value must represent actual elapsed time for accurate
    behavior calculation.
  related:
  - RestStrategy::Execute
  - BotAI::IsInCombat
  - BotAI::GetHealth
  - BotAI::GetMana
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:28:54.117097'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
