api:
  class: SmartScript
  method: GetCounterValue
  signature: uint32 SmartScript::GetCounterValue(uint32 id) const
documentation:
  brief: Retrieves the current value of a specified counter used in SmartScript AI
    behavior.
  description: The GetCounterValue method retrieves the current value of a counter
    identified by the given ID within the SmartScript AI system. Counters are typically
    used to track state changes, trigger events after a certain number of occurrences,
    or manage conditional logic in AI scripts. This method is commonly used in conjunction
    with SetCounterValue to implement stateful behavior in creatures, game objects,
    or areas. The counter values are maintained per-instance and are not shared across
    different SmartScript instances. The method returns zero if the specified counter
    ID does not exist or has never been initialized.
  parameters: []
  returns: Returns the current uint32 value of the specified counter. If the counter
    ID does not exist, it returns 0.
  examples:
  - title: Basic Counter Retrieval
    code: "uint32 counterValue = script->GetCounterValue(1);\nif (counterValue >=\
      \ 5)\n{\n    // Trigger event after 5 occurrences\n    script->Talk(\"I have\
      \ counted to five!\");\n}"
    language: cpp
  - title: Using Counter Value in Conditional Logic
    code: "uint32 playerCount = script->GetCounterValue(10);\nif (playerCount > 0)\n\
      {\n    // Perform action based on number of players\n    script->SetTarget(nullptr);\n\
      \    script->DoAction(1);\n}"
    language: cpp
  notes: This method is part of the SmartScript AI system and should only be used
    within the context of AI scripts. Counter values are stored locally within each
    SmartScript instance and do not persist across server restarts or reloads unless
    explicitly saved to database fields. The counter ID must be valid and previously
    initialized using SetCounterValue or similar methods.
  warnings: Be cautious when using this method with uninitialized counter IDs, as
    it will return zero which may lead to unexpected behavior in conditional logic.
    Ensure that all counter IDs used are properly managed and initialized before attempting
    to retrieve their values.
  related:
  - SetCounterValue
  - IncCounter
  - DecCounter
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:37:01.764571'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
