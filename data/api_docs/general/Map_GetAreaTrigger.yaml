api:
  class: Map
  method: GetAreaTrigger
  signature: AreaTrigger * Map::GetAreaTrigger(const int & guid)
documentation:
  brief: Retrieves an AreaTrigger object by its unique identifier (GUID) from the
    map.
  description: This method fetches a specific AreaTrigger instance using its GUID
    from the current map. It is commonly used in World of Warcraft's TrinityCore framework
    to access area trigger objects that have been created and stored within the map's
    data structures. The method allows developers to interact with area triggers such
    as those used for spell effects, quest triggers, or other game mechanics involving
    area-based interactions. This function typically returns a pointer to the AreaTrigger
    object if found, or nullptr if no matching area trigger exists in the map.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the area trigger to retrieve. This
      is typically an integer value representing the specific instance of the area
      trigger within the game world.
  returns: Returns a pointer to the AreaTrigger object if found, or nullptr if no
    matching area trigger exists in the map.
  examples:
  - title: Basic usage example
    code: AreaTrigger* trigger = map->GetAreaTrigger(12345);
    language: cpp
  - title: Advanced usage example with null check
    code: "AreaTrigger* trigger = map->GetAreaTrigger(guid);\nif (trigger != nullptr)\n\
      {\n    // Process the area trigger\n    trigger->SetPosition(10.0f, 20.0f, 30.0f);\n\
      }\nelse\n{\n    // Handle case where area trigger is not found\n}"
    language: cpp
  notes: The method is thread-safe and operates on the map's internal data structures.
    Performance considerations include checking for existence of the area trigger
    before calling this method, as repeated lookups can impact performance in large
    maps.
  warnings: The method may return nullptr if the GUID does not correspond to any existing
    area trigger in the map. Care should be taken when using the returned pointer
    to avoid dereferencing invalid memory pointers.
  related:
  - GetAreaTrigger
  - GetAreaTriggerByGuid
  - AreaTrigger::GetGUID
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:25:20.133410'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
