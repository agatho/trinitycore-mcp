api:
  class: Player
  method: IsTwoHandUsed
  signature: bool Player::IsTwoHandUsed() const
documentation:
  brief: Checks whether the player is using a two-handed weapon.
  description: This method determines if the player is currently wielding a two-handed
    weapon in their main hand. It returns true if the player's main hand weapon is
    a two-handed weapon, and false otherwise. The method is commonly used in game
    mechanics to determine weapon usage for various calculations including damage
    output, attack speed, and spell casting requirements. This check is essential
    for determining if a player can perform certain actions that require two-handed
    weapons, such as specific spells or abilities.
  parameters: []
  returns: Returns true if the player's main hand weapon is a two-handed weapon, false
    otherwise.
  examples:
  - title: Basic Usage Example
    code: "if (player->IsTwoHandUsed()) {\n    // Player is using a two-handed weapon\n\
      \    // Perform actions specific to two-handed weapons\n}"
    language: cpp
  notes: This method relies on the player's current equipment state and does not account
    for temporary effects or buffs that might change weapon usage. It should be used
    in conjunction with other weapon-related checks for comprehensive weapon analysis.
  warnings: This method only checks the main hand weapon; it does not consider off-hand
    weapons or dual-wielding scenarios. Be aware that this method may return false
    even when a player is using a two-handed weapon if they are in a different stance
    or have changed their weapon.
  related:
  - GetWeaponSlot
  - IsUsingTwoHanded
  - HasTwoHandedWeapon
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:38:06.264751'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
