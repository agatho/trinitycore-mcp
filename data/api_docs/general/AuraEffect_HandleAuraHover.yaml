api:
  class: AuraEffect
  method: HandleAuraHover
  signature: void AuraEffect::HandleAuraHover(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Handles the application or removal of the hover aura effect on a unit.
  description: The HandleAuraHover method manages the hover state of a unit when an
    aura is applied or removed. This method is part of the aura effect handling system
    in TrinityCore and is responsible for updating the unit's movement behavior to
    simulate hovering, typically used for abilities that allow units to float above
    the ground. The method takes into account whether the aura is being applied or
    removed, and updates the affected unit's state accordingly. It interacts with
    the AuraApplication object to determine the context of the aura change and modifies
    the unit's physical properties to reflect the hover effect.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter provides context for how the
      aura affects the target unit.
  - name: mode
    description: The mode of operation, typically indicating whether the aura is being
      applied (1) or removed (0). This value determines the specific behavior within
      the hover handling logic.
  - name: apply
    description: Boolean flag indicating if the aura is being applied (true) or removed
      (false). When true, the unit will begin hovering; when false, the unit will
      stop hovering and return to normal movement.
  returns: null
  examples:
  - title: Basic Hover Aura Application
    code: "void ApplyHoverAura(Unit* target)\n{\n    if (target)\n    {\n        AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo);\n        AuraEffect::HandleAuraHover(aurApp,\
      \ 1, true);\n    }\n}"
    language: cpp
  - title: Removing Hover Aura Effect
    code: "void RemoveHoverAura(Unit* target)\n{\n    if (target)\n    {\n       \
      \ AuraApplication* aurApp = new AuraApplication(target, target, SpellInfo);\n\
      \        AuraEffect::HandleAuraHover(aurApp, 0, false);\n    }\n}"
    language: cpp
  notes: This method is typically invoked internally by the aura system when a hover
    effect is applied or removed. Developers should ensure that the AuraApplication
    object passed to this method is properly initialized and represents a valid aura
    application context. The method modifies the unit's movement state directly, so
    it should be called only when appropriate for the game mechanics being implemented.
  warnings: Improper use of this method can lead to unexpected movement behavior or
    client-server desynchronization. Ensure that the AuraApplication object is correctly
    initialized and that the mode and apply parameters are set appropriately. This
    method should not be called directly without proper aura application context.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - Unit::SetHover
  - Unit::RemoveHover
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:32:03.089486'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
