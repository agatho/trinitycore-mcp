api:
  class: LineOfSightManager
  method: SetHeightTolerance
  signature: void LineOfSightManager::SetHeightTolerance(float tolerance)
documentation:
  brief: Sets the height tolerance value used for line-of-sight calculations in the
    LineOfSightManager.
  description: The SetHeightTolerance method configures the vertical tolerance threshold
    that determines how much height difference is allowed between points when evaluating
    whether a line of sight is blocked. This parameter affects the precision and behavior
    of visibility checks, particularly in scenarios involving terrain elevation differences
    or object positioning. The tolerance value is typically expressed in game units
    (such as yards or meters) and influences how strictly the system evaluates potential
    obstructions. This method should be called before performing any line-of-sight
    queries to ensure consistent behavior across all subsequent calculations.
  parameters:
  - name: tolerance
    description: A floating-point value representing the maximum allowed height difference
      (in game units) between two points when determining line-of-sight validity.
      Higher values allow for more lenient visibility checks, while lower values enforce
      stricter blocking criteria.
  returns: null
  examples:
  - title: Setting Height Tolerance to Default Value
    code: 'LineOfSightManager* losManager = ...;

      losManager->SetHeightTolerance(1.5f); // Standard tolerance for most scenarios'
    language: cpp
  - title: Using a More Lenient Tolerance for Large Objects
    code: 'LineOfSightManager* losManager = ...;

      losManager->SetHeightTolerance(3.0f); // Allows for larger height differences,
      useful for detecting visibility through large structures'
    language: cpp
  notes: The height tolerance is used in conjunction with other line-of-sight parameters
    such as distance thresholds and obstruction types. It's recommended to set this
    value early during initialization or before performing any visibility checks to
    maintain consistent behavior. The default value may vary depending on the specific
    implementation within TrinityCore.
  warnings: Setting an extremely high tolerance value can result in false positives
    where objects that should block line-of-sight are incorrectly considered visible.
    Conversely, a very low tolerance might cause legitimate sight lines to be blocked
    by minor elevation differences, leading to false negatives.
  related:
  - GetHeightTolerance
  - IsInLineOfSight
  - SetDistanceTolerance
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T10:59:16.759272'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
