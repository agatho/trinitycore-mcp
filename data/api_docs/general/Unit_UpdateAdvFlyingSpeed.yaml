api:
  class: Unit
  method: UpdateAdvFlyingSpeed
  signature: void Unit::UpdateAdvFlyingSpeed(AdvFlyingRateTypeRange speedType, bool
    clientUpdate)
documentation:
  brief: Updates the advanced flying speed for the unit based on the specified speed
    type and client update flag.
  description: The UpdateAdvFlyingSpeed method is responsible for recalculating and
    applying an advanced flying speed modifier to a Unit object. This method typically
    handles flight speed adjustments that are more complex than standard movement
    speeds, such as those used in special abilities, mounts, or game mechanics that
    affect aerial mobility. It takes into account the specified AdvFlyingRateTypeRange
    to determine which type of flying speed should be updated and whether a client-side
    update is required. The method ensures that any changes to flying speed are properly
    synchronized with the unit's current state and the game's physics engine.
  parameters:
  - name: speedType
    description: Specifies the type of advanced flying speed to update. This parameter
      determines which flying speed modifier is affected, such as base flight speed,
      increased flight speed, or reduced flight speed.
  - name: clientUpdate
    description: Indicates whether a client-side update should be performed. When
      true, the method will send updates to the client's UI and synchronization systems
      to reflect the new flying speed values.
  returns: null
  examples:
  - title: Update Base Flying Speed
    code: 'Unit* player = ...;

      player->UpdateAdvFlyingSpeed(ADV_FLYING_RATE_BASE, true);'
    language: cpp
  - title: Update Increased Flying Speed Without Client Update
    code: 'Unit* npc = ...;

      npc->UpdateAdvFlyingSpeed(ADV_FLYING_RATE_INCREASED, false);'
    language: cpp
  notes: This method is typically called internally by the TrinityCore framework when
    flying speed modifiers change due to spells, items, or other game events. It's
    important to note that calling this method without proper context may lead to
    inconsistent state between server and client. The method does not validate the
    input parameters beyond basic type checking.
  warnings: Calling this method directly with incorrect speedType values can cause
    unexpected behavior in unit movement. Ensure that any custom flying speed modifications
    are properly handled by the game logic before invoking this method. Improper use
    may result in visual inconsistencies for players or NPCs.
  related:
  - GetMoveSpeed
  - SetMoveSpeed
  - UpdateSpeed
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T16:33:46.006505'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
