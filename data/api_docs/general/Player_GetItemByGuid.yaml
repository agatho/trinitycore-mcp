api:
  class: Player
  method: GetItemByGuid
  signature: Item * Player::GetItemByGuid(int guid) const
documentation:
  brief: Returns the item at the specified guid location in the player's inventory.
  description: The GetItemByGuid method retrieves an Item object from the player's
    inventory using a unique identifier (GUID). This method is commonly used to access
    items stored in various inventory slots, including bags, equipped items, and backpack
    slots. The method returns nullptr if no item exists at the specified GUID or if
    the GUID is invalid. It serves as a fundamental building block for item management
    operations within the TrinityCore framework, allowing developers to interact with
    player inventory items programmatically.
  parameters: []
  returns: Returns a pointer to the Item object if found at the specified guid location;
    otherwise returns nullptr if no item exists or the GUID is invalid.
  examples:
  - title: Basic Usage Example
    code: "Item* item = player->GetItemByGuid(12345);\nif (item)\n{\n    // Item found,\
      \ perform operations\n    item->SetOwner(player);\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Item* item = player->GetItemByGuid(12345);\nif (item && item->GetSlot()\
      \ != 0)\n{\n    // Item exists and is not in bag slot\n    player->SetInventorySlot(item->GetSlot(),\
      \ item);\n}\nelse\n{\n    // Handle invalid or empty GUID\n    // Do something\
      \ else\n}"
    language: cpp
  notes: This method is thread-safe when used within the context of a player's inventory
    access. Performance considerations include checking for valid GUIDs before calling
    this method, as invalid GUIDs can result in unnecessary overhead. Implementation
    details include that this method internally uses the player's inventory storage
    system to locate items by their GUID.
  warnings: This method should not be used to retrieve items from non-player inventories
    such as NPCs or game objects. Using invalid GUIDs can lead to memory access violations
    or undefined behavior. Additionally, this method does not validate whether the
    item is actually equipped or stored in a valid slot; developers must ensure proper
    validation before use.
  related:
  - GetItemBySlot
  - GetInventorySlot
  - GetItemByGuid
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:56:56.597243'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
