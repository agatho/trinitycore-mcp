api:
  class: WorldObject
  method: IsOutdoors
  signature: bool WorldObject::IsOutdoors() const
documentation:
  brief: Determines whether the WorldObject is located outdoors.
  description: The IsOutdoors method checks if a WorldObject, such as a player or
    creature, is currently positioned in an outdoor area of the game world. This determination
    is based on the object's current map and zone flags, which indicate whether the
    location is indoors (e.g., inside buildings, dungeons, or caves) or outdoors (e.g.,
    open fields, plains, or areas with sky visibility). The method returns true if
    the object is in an outdoor environment and false otherwise. This functionality
    is essential for gameplay mechanics such as weather effects, lighting, and certain
    spell behaviors that are dependent on outdoor conditions.
  parameters: []
  returns: 'Returns a boolean value: true if the WorldObject is outdoors, false if
    it is indoors or in an indoor environment.'
  examples:
  - title: Check if a player is outdoors
    code: "Player* player = ...;\nif (player->IsOutdoors()) {\n    // Player is in\
      \ an outdoor area\n    player->SendNotification(\"You are outdoors.\");\n} else\
      \ {\n    // Player is indoors\n    player->SendNotification(\"You are indoors.\"\
      );\n}"
    language: cpp
  - title: Use IsOutdoors for spell effect logic
    code: "void ApplyWeatherEffect(Unit* target) {\n    if (target->IsOutdoors())\
      \ {\n        // Apply outdoor-specific weather effects\n        target->AddAura(SPELL_OUTDOOR_WEATHER,\
      \ target);\n    } else {\n        // Do not apply outdoor weather effects indoors\n\
      \        target->RemoveAura(SPELL_OUTDOOR_WEATHER);\n    }\n}"
    language: cpp
  notes: The method relies on the underlying map and zone data structures to determine
    if an object is in an outdoor area. It does not account for temporary indoor environments
    such as those created by certain spells or game events. The result of this method
    may change dynamically as the object moves between indoor and outdoor locations.
  warnings: null
  related:
  - IsIndoor
  - GetMap
  - GetZoneId
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:21:07.214063'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
