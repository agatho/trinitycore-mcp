api:
  class: InstanceMapScript
  method: GetInstanceScript
  signature: InstanceScript * InstanceMapScript::GetInstanceScript(InstanceMap * map)
    const
documentation:
  brief: Retrieves the instance script associated with a given instance map.
  description: The GetInstanceScript method is used to obtain the InstanceScript object
    that manages the scripted behavior and state for a specific instance map. This
    method is typically called during map initialization or when accessing map-specific
    data. The returned InstanceScript pointer provides access to all instance-related
    functions, variables, and event handlers defined for that particular dungeon or
    raid instance. It's essential for interacting with instance-specific mechanics
    such as boss encounters, quest progress tracking, and object state management.
  parameters: []
  returns: A pointer to the InstanceScript object associated with the specified instance
    map. Returns nullptr if no script is assigned to the map or if the map parameter
    is invalid.
  examples:
  - title: Basic Usage
    code: "InstanceMap* map = ...; // Get a reference to an instance map\nInstanceScript*\
      \ script = map->GetScript();\nif (script)\n{\n    // Use the instance script\
      \ for map-specific operations\n    script->OnPlayerEnter(player);\n}"
    language: cpp
  - title: Checking Instance Script Validity
    code: "InstanceMap* map = player->GetInstanceMap();\nif (map)\n{\n    InstanceScript*\
      \ instanceScript = map->GetScript();\n    if (instanceScript && instanceScript->IsEncounterInProgress())\n\
      \    {\n        // Handle encounter-specific logic\n        instanceScript->DoAction(ACTION_EVENT_STARTED);\n\
      \    }\n}"
    language: cpp
  notes: This method is commonly used in conjunction with InstanceMap::GetScript()
    and should be called only after the map has been properly initialized. The returned
    InstanceScript object is managed by the map system and should not be deleted manually.
  warnings: Never assume that the returned pointer is valid without checking for nullptr.
    Always validate the return value before using it to prevent null pointer dereferences.
    Also, be aware that instance scripts may be destroyed when the map is reset or
    removed from memory.
  related:
  - InstanceMap::GetScript
  - InstanceMap::SetScript
  - InstanceMap::IsEncounterInProgress
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:54:45.627787'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
