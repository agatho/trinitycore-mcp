api:
  class: Unit
  method: SetFacingTo
  signature: void Unit::SetFacingTo(const float ori, bool force)
documentation:
  brief: Sets the facing direction of the unit to a specified angle.
  description: This method adjusts the orientation of a Unit object to face a specific
    angle in radians. It is commonly used in game mechanics to control the direction
    a creature or player faces, particularly when dealing with movement or combat
    situations. The method allows for both immediate and gradual facing changes depending
    on the force parameter. When force is set to true, it immediately updates the
    orientation; when false, it may allow for smooth transitions based on game logic.
    This functionality is essential for proper positioning in World of Warcraft environments.
  parameters:
  - name: ori
    description: The target angle in radians that the unit should face. This value
      represents the direction the unit will be oriented towards.
  - name: force
    description: If true, the facing update occurs immediately without any interpolation.
      If false, the facing may be updated gradually based on game mechanics or movement
      behavior.
  returns: null
  examples:
  - title: Basic Usage Example
    code: "Unit* unit = new Unit;\nunit->SetFacingTo(M_PI_2, true);\n// Sets the unit\
      \ to face 90 degrees (\u03C0/2 radians) immediately"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* unit = new Unit;\nunit->SetFacingTo(3.14159f, false);\n// Sets the\
      \ unit to face approximately 180 degrees (\u03C0 radians) gradually"
    language: cpp
  notes: This method is typically used in conjunction with movement methods and is
    part of the core game mechanics for controlling unit orientation. It may be subject
    to interpolation or animation depending on how it's called within the context
    of movement or combat.
  warnings: Improper use of this method can lead to incorrect positioning in-game,
    especially when dealing with combat or movement logic. Care should be taken when
    using the force parameter as it may bypass normal game mechanics behavior.
  related:
  - SetFacing
  - GetOrientation
  - MoveTo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:17:36.168979'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
