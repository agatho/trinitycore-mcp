api:
  class: Map
  method: SendZoneWeather
  signature: void Map::SendZoneWeather(const ZoneDynamicInfo & zoneDynamicInfo, Player
    * player) const
documentation:
  brief: Sends zone weather information to a specific player.
  description: The SendZoneWeather method is responsible for transmitting current
    zone-specific weather data to a targeted player client. This method ensures that
    players experience dynamic weather conditions that are consistent with the zone's
    defined weather settings. It typically gets invoked when a player enters a zone
    or when weather conditions change dynamically within the zone. The method utilizes
    the ZoneDynamicInfo structure to determine what weather data should be sent and
    applies it specifically to the provided player object.
  parameters:
  - name: zoneDynamicInfo
    description: Contains dynamic information about the zone's current weather state
      including weather type, intensity, and other relevant parameters.
  - name: player
    description: Pointer to the Player object that will receive the weather update.
      Must be a valid player instance.
  returns: null
  examples:
  - title: Sending Weather Update to Player
    code: 'ZoneDynamicInfo zoneInfo;

      zoneInfo.weatherType = WeatherType::RAIN;

      zoneInfo.intensity = 0.8f;

      player->GetMap()->SendZoneWeather(zoneInfo, player);'
    language: cpp
  - title: Updating Weather for Multiple Players in Zone
    code: "for (auto& pair : map->GetPlayers()) {\n    Player* player = pair.second;\n\
      \    if (player) {\n        map->SendZoneWeather(zoneDynamicInfo, player);\n\
      \    }\n}"
    language: cpp
  notes: This method is typically called internally by the core when weather changes
    occur or when a player enters a zone. It's important to ensure that the ZoneDynamicInfo
    passed contains valid data to avoid client-side issues. The method does not validate
    if the player is within the same zone as the zoneDynamicInfo, so developers should
    handle this logic appropriately.
  warnings: Calling this method with invalid or null player pointers may cause crashes
    or undefined behavior. Always verify that the player pointer is valid before calling
    this method. Additionally, sending incorrect weather data might result in visual
    inconsistencies for players.
  related:
  - Map::UpdateZoneWeather
  - Player::SendWeather
  - Map::GetZoneDynamicInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:54:14.819086'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
