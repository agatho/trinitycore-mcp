api:
  class: Battleground
  method: GetStartMaxDist
  signature: float Battleground::GetStartMaxDist() const
documentation:
  brief: Returns the maximum distance from the start position allowed for players
    in a battleground.
  description: The GetStartMaxDist method retrieves the maximum allowable distance
    that a player can be from the battleground's starting position. This value is
    used during battleground initialization and player placement to ensure that players
    are positioned within an acceptable range of their designated spawn point. The
    returned float value represents this distance in yards, which may vary depending
    on the specific battleground type and its configuration. This method is typically
    called during the battleground setup phase to determine valid spawn locations
    for players.
  parameters: []
  returns: A float value representing the maximum distance (in yards) from the start
    position that a player can be placed during battleground initialization. This
    distance is used to validate player spawn positions and ensure proper battleground
    layout.
  examples:
  - title: Checking maximum start distance for a battleground
    code: "Battleground* bg = sObjectMgr->GetBattleground(1234);\nif (bg)\n{\n   \
      \ float maxDist = bg->GetStartMaxDist();\n    printf(\"Maximum start distance:\
      \ %.2f yards\\n\", maxDist);\n}"
    language: cpp
  notes: This method is commonly used during battleground initialization to validate
    player spawn points. The value returned may be different for different battleground
    types and is typically configured in the battleground's template or map settings.
    This distance check helps maintain proper gameplay balance by ensuring players
    are not spawned too far from their intended starting positions.
  warnings: null
  related:
  - GetStartMaxDistSq
  - GetStartLoc
  - GetBgMap
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T17:08:02.934783'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
