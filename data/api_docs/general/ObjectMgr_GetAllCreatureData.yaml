api:
  class: ObjectMgr
  method: GetAllCreatureData
  signature: const CreatureDataContainer & ObjectMgr::GetAllCreatureData() const
documentation:
  brief: Returns a constant reference to the container holding all creature data in
    the game world.
  description: The GetAllCreatureData method provides access to the complete collection
    of creature spawn data currently loaded in the ObjectMgr. This container holds
    information about every creature that has been spawned or defined within the game
    world, including their position, orientation, respawn times, and other spawn-related
    attributes. The returned reference is constant, meaning the data should not be
    modified through this interface. This method is typically used during server initialization,
    world loading, or when iterating over all creatures for various administrative
    or gameplay purposes. It's important to note that the data returned represents
    a snapshot of the creature database at the time of the call and may not reflect
    real-time changes in creature spawns.
  parameters: []
  returns: A constant reference to the CreatureDataContainer which holds all creature
    spawn data entries. This container provides access to creature definitions, their
    positions, respawn timers, and other metadata necessary for managing creatures
    in the game world.
  examples:
  - title: Iterating Through All Creatures
    code: "for (const auto& pair : sObjectMgr->GetAllCreatureData()) {\n    const\
      \ CreatureData& data = pair.second;\n    // Process creature data\n    printf(\"\
      Creature ID: %u at position (%f, %f, %f)\\n\", \n           data.id, data.posX,\
      \ data.posY, data.posZ);\n}"
    language: cpp
  - title: Finding Specific Creature Data
    code: "const CreatureDataContainer& creatureData = sObjectMgr->GetAllCreatureData();\n\
      uint32 targetEntry = 12345;\nfor (const auto& pair : creatureData) {\n    if\
      \ (pair.second.id == targetEntry) {\n        // Found the creature data\n  \
      \      const CreatureData& foundData = pair.second;\n        printf(\"Found\
      \ creature at (%f, %f, %f)\\n\", \n               foundData.posX, foundData.posY,\
      \ foundData.posZ);\n        break;\n    }\n}"
    language: cpp
  notes: This method returns a constant reference to an internal container that is
    populated during server startup and world loading phases. The returned data should
    be treated as read-only. Performance considerations include the fact that this
    container may contain thousands of entries, so iterating over it should be done
    carefully. The method is thread-safe for reading operations, but modifications
    should not be performed through this interface.
  warnings: Modifying the returned container directly will result in undefined behavior
    since it's a constant reference to internal data structures. Avoid performing
    heavy operations during iteration as the container may contain a large number
    of entries. This method does not provide any filtering capabilities - it returns
    all creature data regardless of spawn status or location.
  related:
  - GetCreatureData
  - LoadCreatureData
  - GetAllGameObjectData
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T10:10:10.345467'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
