api:
  class: Player
  method: ApplyModDamageDonePercent
  signature: void Player::ApplyModDamageDonePercent(int school, float pct, bool apply)
documentation:
  brief: Applies a percentage modifier to the player's damage done for a specific
    school of magic.
  description: This method modifies the damage dealt by the player for a specified
    magical school, applying a percentage-based bonus or penalty. It is commonly used
    in gameplay mechanics such as spell damage bonuses, debuffs, or temporary modifiers
    that affect how much damage a player inflicts on targets. The method allows for
    precise control over which school of magic is affected and whether the modifier
    is applied or removed. This functionality is essential for managing game balance
    and ensuring proper implementation of various effects like buffs, debuff, or special
    abilities.
  parameters:
  - name: school
    description: The magical school to modify (0-6). Valid values are 0-6 representing
      physical, holy, fire, nature, frost, shadow, and arcane respectively.
  - name: pct
    description: The percentage modifier to apply or remove. Positive values increase
      damage, negative values decrease it.
  - name: apply
    description: If true, applies the modifier; if false, removes it.
  returns: null
  examples:
  - title: Apply Fire Damage Bonus
    code: 'Player* player = new Player();

      player->ApplyModDamageDonePercent(2, 10.0f, true); // Apply 10% fire damage
      bonus'
    language: cpp
  - title: Remove Shadow Damage Penalty
    code: 'Player* player = new Player();

      player->ApplyModDamageDonePercent(5, -15.0f, false); // Remove 15% shadow damage
      penalty'
    language: cpp
  notes: This method is typically used internally by TrinityCore for managing spell
    effects and modifiers. It should be called carefully to avoid unintended side
    effects in gameplay mechanics. The implementation uses internal tracking of modifiers
    and may interact with other systems like aura application or removal.
  warnings: Improper use of this method can lead to incorrect damage calculations,
    potentially affecting game balance or causing unexpected behavior during combat.
    Ensure that the school parameter is valid before applying modifiers.
  related:
  - ApplyModSpellDamageDonePercent
  - ApplyModSpellPower
  - ApplyModDamageTakenPercent
  - ApplyModSpellCritChance
  - ApplyModAttackPower
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:16:13.860192'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
