api:
  class: Battleground
  method: SendMessageToAll
  signature: void Battleground::SendMessageToAll(int entry, int type, const Player
    * source)
documentation:
  brief: Sends a message to all players in the battleground.
  description: The SendMessageToAll method broadcasts a specified message to every
    player currently participating in the battleground. This method is typically used
    for sending game-related notifications, such as start/end of events, scoring updates,
    or system announcements. The message is sent using the provided entry and type
    parameters which determine how the message is formatted and displayed to players.
    The source parameter allows specifying which player initiated the message, useful
    for tracking or logging purposes. This method operates on the battleground's current
    player roster and does not send messages to spectators or inactive players.
  parameters:
  - name: entry
    description: The message entry ID that defines how the message is formatted and
      displayed to players. This typically corresponds to an entry in the game's message
      database or localization system.
  - name: type
    description: The type of message being sent, which determines the visual presentation
      and handling of the message. Common types include chat channel identifiers or
      notification types.
  - name: source
    description: Pointer to the Player object that originated the message. Can be
      nullptr if no specific source is associated with the message.
  returns: null
  examples:
  - title: Send a general battleground announcement
    code: 'Battleground* bg = ...; // Assume bg is initialized

      Player* player = ...; // Assume player is initialized

      bg->SendMessageToAll(12345, 0, player);'
    language: cpp
  - title: Send a system message without a specific source
    code: 'Battleground* bg = ...;

      bg->SendMessageToAll(67890, 1, nullptr);'
    language: cpp
  notes: This method is designed to be efficient for sending messages to all players
    in a battleground. It internally iterates through the battleground's player list
    and sends the message via the appropriate communication channel. The method assumes
    that the battleground instance is valid and has active players. Performance may
    degrade if the battleground contains a very large number of players.
  warnings: Ensure that the entry parameter corresponds to a valid message ID in the
    game's database, otherwise the message might not display correctly or could cause
    client-side issues. Also, be cautious when using nullptr for the source parameter
    as it may affect logging or tracking systems that rely on message origin information.
  related:
  - Battleground::SendPacketToAll
  - Battleground::GetPlayers
  - Battleground::AddPlayer
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:10:47.366432'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
