api:
  class: ScriptMgr
  method: OnPlayerClearEmote
  signature: void ScriptMgr::OnPlayerClearEmote(Player * player)
documentation:
  brief: Invoked when a player clears their emote state, allowing scripts to respond
    to emote removal.
  description: The OnPlayerClearEmote method is a hook in the ScriptMgr class that
    gets called whenever a player removes an emote they were previously displaying.
    This event occurs during gameplay when a player's emote state is reset, typically
    through commands or actions that interrupt or clear their current emote animation.
    The method provides a way for custom scripts and addons to react to this specific
    player action, enabling dynamic behavior such as triggering events, modifying
    player states, or updating game logic based on the clearing of emotes. This hook
    is part of TrinityCore's extensible scripting system which allows developers to
    extend core functionality without modifying the base game code.
  parameters:
  - name: player
    description: Pointer to the Player object whose emote state is being cleared.
      This parameter represents the specific player instance that triggered the event
      and contains all relevant player data and methods for interaction.
  returns: null
  examples:
  - title: Basic emote clearing handler
    code: "class MyScript : public PlayerScript\n{\npublic:\n    MyScript() : PlayerScript(\"\
      MyScript\") {}\n\n    void OnPlayerClearEmote(Player* player) override\n   \
      \ {\n        // Log when a player clears their emote\n        sLog->outString(\"\
      Player %s cleared their emote.\", player->GetName().c_str());\n        \n  \
      \      // Example: Reset custom player flag\n        player->SetFlag(PLAYER_FLAGS,\
      \ PLAYER_FLAG_GM_INVISIBLE);\n    }\n};"
    language: cpp
  notes: This method is called from within the core game loop during emote state transitions.
    It's important to note that this hook only fires when a player explicitly clears
    their emote, not during automatic emote timeouts or other emote-related events.
    The Player pointer passed to this function is guaranteed to be valid during execution.
  warnings: Developers should avoid performing heavy operations within this method
    as it may be called frequently during gameplay. Additionally, modifying the player
    object's state in this handler could potentially cause unexpected behavior if
    not handled carefully, especially when dealing with emote-related flags or animations.
  related:
  - OnPlayerEmote
  - OnPlayerChat
  - OnPlayerEnterWorld
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T22:22:17.989136'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
