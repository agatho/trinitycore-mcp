api:
  class: Unit
  method: SetModCastingSpeed
  signature: void Unit::SetModCastingSpeed(float castingSpeed)
documentation:
  brief: Sets the casting speed modifier for a unit, affecting how quickly spells
    are cast.
  description: This method modifies the casting speed of a unit by adjusting the speed
    factor. It is commonly used in game mechanics to apply effects that alter spell
    casting time, such as haste or slow effects. The parameter represents a multiplier
    value where 1.0 means normal casting speed, values greater than 1.0 increase casting
    speed (faster), and values less than 1.0 decrease casting speed (slower). This
    method affects the unit's ability to cast spells and can be used in conjunction
    with other speed-related methods for complex gameplay effects.
  parameters:
  - name: castingSpeed
    description: A float value representing the casting speed modifier. 1.0 represents
      normal speed, values > 1.0 increase speed (faster), and values < 1.0 decrease
      speed (slower).
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      float speedModifier = 1.5f;

      target->SetModCastingSpeed(speedModifier);

      '
    language: cpp
  - title: Applying slow effect
    code: 'Unit* target = GetTarget();

      float slowFactor = 0.5f;

      target->SetModCastingSpeed(slowFactor);

      '
    language: cpp
  notes: 'Implementation details: This method likely modifies internal casting speed
    variables within the unit''s spell system. Performance considerations: frequent
    calls to this method may impact server performance if used excessively. Thread
    safety: This method should be called from a thread-safe context, as it modifies
    unit state.'
  warnings: 'This method affects spell casting time directly and should not be used
    for modifying other gameplay elements like movement speed. Common mistake: Using
    incorrect values can lead to unexpected behavior in spell casting. Dangerous edge
    cases: Setting negative values may cause undefined behavior or crashes if not
    handled properly.'
  related:
  - SetModMovementSpeed
  - SetSpeed
  - GetCastingSpeed
  - GetModCastingSpeed
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:03:27.593208'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
