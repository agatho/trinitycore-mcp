api:
  class: ObjectMgr
  method: GetClassExpansionRequirement
  signature: const ClassAvailability * ObjectMgr::GetClassExpansionRequirement(uint8
    raceId, uint8 classId) const
documentation:
  brief: Retrieves the expansion availability requirements for a specified class and
    race combination.
  description: The GetClassExpansionRequirement method fetches the ClassAvailability
    structure that defines which expansion level is required to use a specific class
    for a given race. This is used in World of Warcraft's character creation and class
    selection logic to enforce expansion-based restrictions. The method returns a
    pointer to a constant ClassAvailability object, or nullptr if no expansion requirement
    exists for the specified race-class combination. It is typically called during
    character creation or class validation processes to ensure players meet the necessary
    expansion requirements before selecting certain classes.
  parameters: []
  returns: A pointer to a const ClassAvailability structure that contains the expansion
    requirement information for the specified race and class, or nullptr if no expansion
    restriction applies.
  examples:
  - title: Checking Expansion Requirement for Human Warrior
    code: "const ClassAvailability* availability = sObjectMgr->GetClassExpansionRequirement(RACE_HUMAN,\
      \ CLASS_WARRIOR);\nif (availability != nullptr)\n{\n    printf(\"Expansion required:\
      \ %u\\n\", availability->expansion);\n}\nelse\n{\n    printf(\"No expansion\
      \ requirement for this class/race combination.\\n\");\n}"
    language: cpp
  notes: This method is part of the ObjectMgr singleton and should be called only
    after the game data has been loaded. The returned pointer is valid only as long
    as the ObjectMgr instance exists and its data remains unchanged. This method does
    not perform any validation on input parameters; it's assumed that raceId and classId
    are valid values from the game's predefined constants.
  warnings: Do not modify the returned ClassAvailability object as it points to internal
    read-only data. Calling this method with invalid race or class IDs may result
    in undefined behavior or return unexpected results. The method returns nullptr
    for combinations that do not have expansion requirements, so always check for
    null before using the result.
  related:
  - GetRaceExpansionRequirement
  - GetClassAvailability
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T10:04:38.465800'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
