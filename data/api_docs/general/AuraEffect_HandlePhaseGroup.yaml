api:
  class: AuraEffect
  method: HandlePhaseGroup
  signature: void AuraEffect::HandlePhaseGroup(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes a phase group effect from an aura application.
  description: The HandlePhaseGroup method manages the application and removal of
    phase group effects within the TrinityCore framework. This method is invoked during
    aura application or removal to modify the phase group state of affected units.
    It interacts with the World of Warcraft phase system, which controls visibility
    and interaction between different game worlds or zones for players and creatures.
    The method takes into account the aura's application context, the mode of operation
    (apply or remove), and whether the effect should be activated or deactivated.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains the aura being
      processed. This represents the specific instance of an aura applied to a target.
  - name: mode
    description: The mode of operation indicating how the phase group effect should
      be handled. Typically 0 for apply and 1 for remove, though exact values may
      vary based on implementation details.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the phase group effect from the target.
  returns: null
  examples:
  - title: Basic Phase Group Application
    code: "void ApplyPhaseGroupAura(AuraEffect* auraEffect, AuraApplication* app,\
      \ uint8 mode, bool apply)\n{\n    auraEffect->HandlePhaseGroup(app, mode, apply);\n\
      }"
    language: cpp
  - title: Conditional Phase Group Handling
    code: "void HandleAuraPhaseGroup(AuraEffect* effect, AuraApplication* app, uint8\
      \ mode)\n{\n    if (effect && app)\n    {\n        bool shouldApply = (mode\
      \ == 0);\n        effect->HandlePhaseGroup(app, mode, shouldApply);\n    }\n\
      }"
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore. It directly
    interacts with the phase system to ensure proper visibility and interaction between
    different game phases for players and creatures. The implementation may vary depending
    on the specific aura type and its configuration.
  warnings: Improper usage of this method can lead to incorrect phase group behavior,
    potentially causing players or NPCs to appear in wrong zones or lose visibility
    of important game elements. Ensure that the aura application context is valid
    before calling this method.
  related:
  - AuraEffect::HandlePeriodic
  - AuraEffect::HandleUpdatePeriodic
  - AuraApplication::GetTarget
  - AuraEffect::ApplySpellMod
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:05:20.293531'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
