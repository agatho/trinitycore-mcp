api:
  class: RestMgr
  method: SetRestFlag
  signature: void RestMgr::SetRestFlag(RestFlag restFlag)
documentation:
  brief: Sets the rest flag for a player, indicating their current resting status
    in the game world.
  description: The SetRestFlag method updates the internal rest state of a player
    character within the TrinityCore framework. This method is typically invoked when
    a player enters or exits a resting state, such as when sitting down to rest or
    standing up from a rest position. The rest flag affects various gameplay mechanics
    including experience gain rates, movement speed, and certain spell interactions.
    It also influences the player's ability to perform actions that require being
    in a rested state, such as entering certain zones or completing specific quests.
    This method does not directly modify the player's position or orientation but
    rather updates an internal state variable used by the game engine.
  parameters:
  - name: restFlag
    description: The RestFlag enum value indicating the desired resting state. Valid
      values typically include REST_FLAG_IN_REST, REST_FLAG_NOT_RESTING, and possibly
      others depending on the implementation. This parameter determines whether the
      player is considered to be resting or not for gameplay purposes.
  returns: null
  examples:
  - title: Setting a Player to Resting State
    code: 'RestMgr* restMgr = player->GetRestMgr();

      restMgr->SetRestFlag(REST_FLAG_IN_REST);'
    language: cpp
  - title: Clearing Rest Flag for Active Play
    code: 'RestMgr* restMgr = player->GetRestMgr();

      restMgr->SetRestFlag(REST_FLAG_NOT_RESTING);'
    language: cpp
  notes: This method is part of the player's rest management system and should be
    called in conjunction with other rest-related functions to maintain consistency.
    The actual visual and gameplay effects of resting are handled by separate systems
    but this flag determines whether those systems will apply rest bonuses or penalties.
  warnings: Improper use of this method can cause inconsistencies between the player's
    visual state and their actual resting status, potentially leading to unexpected
    behavior in combat or quest progression. Always ensure that the rest flag is properly
    synchronized with the player's physical actions.
  related:
  - GetRestFlag
  - IsResting
  - UpdateRestState
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T07:05:44.680925'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
