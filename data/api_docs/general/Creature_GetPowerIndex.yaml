api:
  class: Creature
  method: GetPowerIndex
  signature: uint32 Creature::GetPowerIndex(int power) const
documentation:
  brief: Returns the power index for a creature based on its power type.
  description: The GetPowerIndex method retrieves the power index associated with
    a creature's specific power type. This method is commonly used in World of Warcraft's
    TrinityCore framework to determine how a creature's power is managed and displayed.
    The returned value represents the index within the creature's power type array,
    which is essential for proper power management and display in game mechanics.
    This method helps in identifying the correct power type for creatures that may
    have different power types such as mana, rage, focus, or energy.
  parameters:
  - name: power
    description: The power type value to retrieve the index for. Valid values are
      typically 0-3 for mana, rage, focus, and energy respectively.
  returns: Returns a uint32 representing the power index for the specified power type.
    This index corresponds to the creature's power type array position, where 0 represents
    mana, 1 represents rage, 2 represents focus, and 3 represents energy.
  examples:
  - title: Basic usage example
    code: uint32 powerIndex = creature->GetPowerIndex(0); // Returns index for mana
    language: cpp
  - title: Advanced usage example
    code: "Creature* creature = GetCreature();\nuint32 powerIndex = creature->GetPowerIndex(1);\n\
      if (powerIndex == 1) {\n    // Creature has rage as its power type\n}"
    language: cpp
  notes: This method is typically used in conjunction with other creature power management
    methods to ensure proper handling of creature's power types. It should be noted
    that the returned index value may vary depending on the creature's specific power
    type configuration and can be used for determining power display or management.
  warnings: Care should be taken when using this method as it may return incorrect
    values if the creature's power type is not properly initialized. Also, this method
    may not work correctly with creatures that have multiple power types simultaneously.
  related:
  - GetPowerType
  - GetMaxPower
  - GetPower
  - SetPower
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:12:17.714595'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
