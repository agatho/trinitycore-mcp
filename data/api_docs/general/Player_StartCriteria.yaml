api:
  class: Player
  method: StartCriteria
  signature: void Player::StartCriteria(int startEvent, uint32 entry, int timeLost)
documentation:
  brief: Starts a criteria event for the player, tracking progress toward achievement
    completion.
  description: The StartCriteria method initiates a criteria event for the player,
    allowing the game to track progress toward specific achievements or objectives.
    This method is typically used in conjunction with other criteria-related functions
    to manage achievement progression. It handles the start of a criteria event by
    setting up the necessary tracking mechanisms and potentially updating the player's
    criteria progress based on the provided parameters. The method may be called during
    various gameplay events such as quest completion, item usage, or combat encounters.
  parameters:
  - name: startEvent
    description: The event type that triggers the criteria start. This parameter defines
      what kind of criteria event is being initiated, such as quest completion, item
      usage, or combat encounter.
  - name: entry
    description: The entry ID for the specific criteria being started. This represents
      the unique identifier for the criteria object being tracked, typically corresponding
      to a specific achievement or objective in the game.
  - name: timeLost
    description: Time in seconds after which the criteria event will be considered
      lost if not completed. This parameter defines how long the player has to complete
      the criteria before it expires.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      player->StartCriteria(1, 12345, 60);'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = GetPlayer();

      player->StartCriteria(3, 98765, 300);

      // This might be called during a quest completion event

      // to track progress toward an achievement'
    language: cpp
  notes: 'Implementation details: This method likely involves internal tracking mechanisms
    that update the player''s criteria progress in the database. Performance considerations:
    The method may involve database operations and should be used carefully during
    high-frequency events like combat or quest completion. Thread safety: The method
    should be thread-safe as it operates on player data, but requires careful handling
    when multiple threads are involved.'
  warnings: 'Common mistakes: Using incorrect event types can cause criteria tracking
    to fail. Dangerous edge cases: If timeLost is set too low, the criteria might
    expire before completion, potentially causing loss of progress. This method should
    not be used without proper validation of parameters.'
  related:
  - StartCriteria
  - UpdateCriteria
  - CompleteCriteria
  - GetCriteriaProgress
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T23:28:58.678982'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
