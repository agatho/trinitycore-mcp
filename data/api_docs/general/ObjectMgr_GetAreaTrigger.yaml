api:
  class: ObjectMgr
  method: GetAreaTrigger
  signature: const AreaTriggerTeleport * ObjectMgr::GetAreaTrigger(uint32 trigger)
    const
documentation:
  brief: Retrieves the area trigger teleport data for a specified trigger ID.
  description: The GetAreaTrigger method fetches the AreaTriggerTeleport object associated
    with the given trigger identifier. This function is used to access teleport-related
    data for area triggers, which are typically defined in the game's database and
    represent locations where players can be teleported to another location. The returned
    pointer provides access to properties such as the target map, coordinates, and
    other teleportation parameters. The method performs a lookup in an internal data
    structure that maps trigger IDs to their corresponding teleport definitions.
  parameters: []
  returns: A const pointer to an AreaTriggerTeleport object if a matching trigger
    ID is found; otherwise, returns nullptr if no area trigger exists with the specified
    ID.
  examples:
  - title: Basic Usage
    code: "const AreaTriggerTeleport* trigger = sObjectMgr->GetAreaTrigger(1234);\n\
      if (trigger)\n{\n    // Use the trigger data\n    uint32 targetMap = trigger->target_map;\n\
      \    float targetX = trigger->target_X;\n    float targetY = trigger->target_Y;\n\
      \    float targetZ = trigger->target_Z;\n}"
    language: cpp
  - title: Checking for Valid Trigger
    code: "uint32 triggerId = 5678;\nconst AreaTriggerTeleport* trigger = sObjectMgr->GetAreaTrigger(triggerId);\n\
      if (trigger != nullptr)\n{\n    // Safe to use the trigger data\n    sLog->outString(\"\
      Found area trigger %u targeting map %u\", triggerId, trigger->target_map);\n\
      }\nelse\n{\n    sLog->outError(\"No area trigger found with ID %u\", triggerId);\n\
      }"
    language: cpp
  notes: This method performs a lookup in an internal map structure that is populated
    during server startup from the database. The returned pointer is valid only as
    long as the object manager's data remains unchanged, which typically means it's
    safe to use within the scope of a single game tick or event handler. This function
    is thread-safe for read operations when used with proper synchronization.
  warnings: Always check if the returned pointer is not null before accessing its
    members. Accessing members of a null pointer will result in undefined behavior
    and likely crash the server. The AreaTriggerTeleport structure may contain data
    that should be validated before use, especially coordinates and map IDs.
  related:
  - GetAreaTriggerTemplate
  - GetAreaTriggerScript
  - LoadAreaTriggers
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T10:08:21.292496'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
