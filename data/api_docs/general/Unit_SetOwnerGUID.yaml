api:
  class: Unit
  method: SetOwnerGUID
  signature: void Unit::SetOwnerGUID(int owner)
documentation:
  brief: Sets the GUID of the unit's owner, typically used for controlling creature
    behavior and ownership relationships in World of Warcraft.
  description: The SetOwnerGUID method assigns a specific GUID to a unit's owner,
    which is crucial for managing creature ownership in TrinityCore. This method allows
    developers to establish or modify the relationship between a unit (such as a pet
    or creature) and its owner, typically a player or another unit. The operation
    affects how the unit interacts with its owner in terms of combat, AI behavior,
    and control mechanics. It is commonly used when creating pets or controlled creatures
    to ensure proper ownership tracking within the game system.
  parameters:
  - name: owner
    description: The GUID value representing the owner of the unit. This parameter
      typically refers to a player or another unit's GUID, and must be valid within
      the context of the game world.
  returns: null
  examples:
  - title: Setting a pet's owner
    code: 'Unit* pet = new Unit();

      pet->SetOwnerGUID(player->GetGUID());'
    language: cpp
  - title: Setting creature ownership for AI control
    code: 'Creature* creature = new Creature();

      creature->SetOwnerGUID(0);

      // This sets the creature''s owner to none, effectively making it neutral

      '
    language: cpp
  notes: This method should be used carefully as it directly affects the unit's behavior
    and ownership tracking. The implementation typically involves updating internal
    data structures that maintain the relationship between units and their owners.
    Performance considerations are minimal when using this method, but care must be
    taken to ensure GUID validity.
  warnings: Improper use of SetOwnerGUID can lead to incorrect ownership tracking,
    which may cause issues with AI behavior, combat mechanics, or control over creatures.
    It is important to ensure that the owner parameter represents a valid GUID within
    the game world context.
  related:
  - GetOwnerGUID
  - SetDisplayId
  - SetFaction
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T00:57:26.043538'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
