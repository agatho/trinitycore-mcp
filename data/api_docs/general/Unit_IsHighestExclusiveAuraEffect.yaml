api:
  class: Unit
  method: IsHighestExclusiveAuraEffect
  signature: bool Unit::IsHighestExclusiveAuraEffect(const SpellInfo * spellInfo,
    int auraType, int32 effectAmount, uint32 auraEffectMask, bool removeOtherAuraApplications)
documentation:
  brief: Determines whether a spell effect is the highest exclusive aura effect in
    its category.
  description: This method checks if a given spell effect is the highest exclusive
    aura effect within its specific aura type category, considering the effect amount
    and mask. It's used primarily for determining which aura effects should be applied
    or removed when multiple effects of the same type exist on a unit. The method
    evaluates whether the current effect is the most significant among all similar
    effects in the unit's aura list, and can optionally remove other aura applications
    if needed. This functionality is crucial for maintaining proper spell mechanics
    and preventing conflicts between overlapping effects.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure that defines the spell being evaluated.
      This parameter determines which aura type and effect are being considered.
  - name: auraType
    description: The specific aura type being evaluated (e.g., auraType = 1 for periodic
      damage). This parameter defines the category of effects being compared.
  - name: effectAmount
    description: The effect amount value used to determine which effect is highest
      among similar effects. Higher values take precedence over lower ones.
  - name: auraEffectMask
    description: Bitmask indicating which specific aura effects are being considered
      for comparison. This helps filter out irrelevant effects from the evaluation
      process.
  - name: removeOtherAuraApplications
    description: Boolean flag that determines whether other aura applications should
      be removed if this effect is determined to be highest. If true, other similar
      effects will be removed; if false, they remain active.
  returns: Returns true if the specified effect is the highest exclusive aura effect
    among all similar effects in the unit's aura list, otherwise returns false. The
    method may also return false if no matching effects are found or if the effect
    is not considered highest due to other factors.
  examples:
  - title: Basic usage example
    code: "if (unit->IsHighestExclusiveAuraEffect(spellInfo, auraType, effectAmount,\
      \ auraEffectMask, true))\n{\n    // Apply the effect\n}\nelse\n{\n    // Remove\
      \ other similar effects\n}"
    language: cpp
  - title: Advanced usage example
    code: "bool result = unit->IsHighestExclusiveAuraEffect(spellInfo, 1, 100, 0x00000001,\
      \ false);\nif (result)\n{\n    // This effect is highest among all similar effects\n\
      }\nelse\n{\n    // Other effects may still be active\n}"
    language: cpp
  notes: This method typically involves complex logic related to aura stacking rules
    and may require careful handling of effect values. Performance considerations
    include checking multiple effects per unit, which can impact processing time during
    spell application or removal. Thread safety is generally not an issue since this
    method is usually called within single-threaded contexts during spell processing.
  warnings: This method should be used carefully when determining aura stacking behavior
    as it may affect how spells interact with each other. Incorrect usage could lead
    to improper spell effects being applied or removed, potentially altering game
    mechanics such as damage over time or periodic healing.
  related:
  - IsHighestAuraEffect
  - HasAura
  - RemoveAura
  - ApplyAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:06:50.703563'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
