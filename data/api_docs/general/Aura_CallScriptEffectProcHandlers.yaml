api:
  class: Aura
  method: CallScriptEffectProcHandlers
  signature: bool Aura::CallScriptEffectProcHandlers(AuraEffect * aurEff, const AuraApplication
    * aurApp, ProcEventInfo & eventInfo)
documentation:
  brief: Calls all script effect proc handlers for the specified aura effect and application.
  description: The CallScriptEffectProcHandlers method is responsible for invoking
    all registered script handlers that are associated with a specific aura effect's
    proc event. This method is typically called during the processing of a proc trigger,
    allowing custom scripts to modify or react to the aura's behavior. It ensures
    that any scripted effects tied to the aura's proc mechanics are properly executed.
    The method takes into account the aura effect, application context, and event
    information to determine which handlers should be invoked and in what order.
  parameters:
  - name: aurEff
    description: Pointer to the AuraEffect object that triggered the proc event. This
      represents the specific effect within the aura that is causing the proc.
  - name: aurApp
    description: Pointer to the AuraApplication object representing the application
      context of the aura. This provides information about how the aura is applied
      to a unit.
  - name: eventInfo
    description: Reference to a ProcEventInfo object containing detailed information
      about the proc event, including triggering conditions and affected targets.
  returns: Returns true if any script handlers were successfully executed, false otherwise.
    A return value of false typically indicates that no applicable script handlers
    were found or that all handlers returned false.
  examples:
  - title: Basic usage in aura proc handling
    code: "bool result = aura->CallScriptEffectProcHandlers(aurEff, aurApp, eventInfo);\n\
      if (result)\n{\n    // Script handlers were executed successfully\n    // Handle\
      \ post-proc logic here\n}"
    language: cpp
  - title: Integration with custom aura effect script
    code: "class MyAuraScript : public AuraScript\n{\npublic:\n    bool OnProc(AuraEffect\
      \ const* aurEff, const AuraApplication* aurApp, ProcEventInfo& eventInfo) override\n\
      \    {\n        // Custom proc logic\n        return CallScriptEffectProcHandlers(const_cast<AuraEffect*>(aurEff),\
      \ aurApp, eventInfo);\n    }\n};"
    language: cpp
  notes: This method is part of the aura's internal script handling mechanism and
    should typically not be called directly by external code. It relies on the proper
    setup of script handlers within the aura effect. The method may have performance
    implications if many script handlers are registered, as it iterates through all
    applicable handlers.
  warnings: Improper use of this method can lead to undefined behavior or crashes
    if the provided pointers are invalid. Ensure that aurEff and aurApp point to valid
    objects before calling this method. This method should only be invoked during
    appropriate proc processing phases to avoid disrupting the aura's normal operation.
  related:
  - Aura::CallScriptEffectHandlers
  - Aura::GetEffect
  - AuraApplication::GetAura
  - ProcEventInfo::GetProcTriggeringSpell
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:02:38.148514'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
