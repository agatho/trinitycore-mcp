api:
  class: Unit
  method: SendDurabilityLoss
  signature: void Unit::SendDurabilityLoss(int * receiver, uint32 percent)
documentation:
  brief: Sends durability loss information to a receiver with specified percentage.
  description: This method handles sending durability loss information to a specified
    receiver, typically a player or NPC, with a defined percentage value. The method
    is used in World of Warcraft's TrinityCore framework to manage the transmission
    of durability-related data during gameplay mechanics such as equipment damage
    or repair system interactions. It ensures that the receiver receives appropriate
    notifications about durability changes, which may affect gameplay behavior and
    player experience.
  parameters:
  - name: receiver
    description: Pointer to the receiver object (typically a player or NPC) that will
      receive the durability loss information. This parameter is crucial for determining
      which entity gets notified about the durability change.
  - name: percent
    description: The percentage value indicating the amount of durability loss to
      be sent. This value represents the proportion of durability lost, typically
      ranging from 0 to 100 percent, and affects how much damage is reported to the
      receiver.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* unit = new Unit();

      unit->SendDurabilityLoss(&receiver, 25);

      // Sends 25% durability loss to the receiver'
    language: cpp
  - title: Advanced Usage Example
    code: 'Unit* unit = new Unit();

      uint32 percent = 100;

      unit->SendDurabilityLoss(&receiver, percent);

      // Sends full durability loss to the receiver'
    language: cpp
  notes: The method is typically used in conjunction with other durability-related
    functions within TrinityCore. It may be called during equipment damage events
    or when a player's item loses durability. Developers should ensure that the receiver
    parameter points to valid objects before calling this method, as invalid pointers
    can lead to crashes.
  warnings: Improper handling of the receiver pointer can cause memory access violations
    or crashes. The percent parameter must be within valid range (0-100) to avoid
    incorrect gameplay behavior. Avoid calling this method without proper context
    or in inappropriate situations such as during combat or when player is not in
    a valid state.
  related:
  - SendDurabilityLoss
  - GetDurabilityLoss
  - Unit::SendDurabilityLoss
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:22:46.052251'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
