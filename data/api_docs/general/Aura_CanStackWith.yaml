api:
  class: Aura
  method: CanStackWith
  signature: bool Aura::CanStackWith(const Aura * existingAura) const
documentation:
  brief: Determines whether this aura can stack with an existing aura of the same
    type.
  description: The CanStackWith method evaluates if two auras of the same type are
    allowed to coexist on the same unit. This check is performed during aura application
    and determines whether a new aura should replace an existing one or be added as
    a separate stack. The method considers factors such as aura flags, stack limits,
    and specific aura properties that may prevent stacking. It's a core part of World
    of Warcraft's aura management system, ensuring proper behavior for effects like
    buffs, debuffs, and spell interactions.
  parameters: []
  returns: Returns true if the current aura can stack with the provided existing aura;
    otherwise returns false. A return value of false typically means the new aura
    will either replace the existing one or be suppressed entirely.
  examples:
  - title: Checking Aura Stacking Compatibility
    code: "Aura* newAura = ...;\nAura* existingAura = unit->GetAuraBySpellId(spellId);\n\
      if (newAura && existingAura) {\n    if (newAura->CanStackWith(existingAura))\
      \ {\n        // Apply new aura as a separate stack\n        unit->AddAura(newAura);\n\
      \    } else {\n        // Replace or suppress the new aura\n        unit->RemoveAura(newAura);\n\
      \    }\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    when applying auras. Developers should understand that stacking behavior is defined
    by aura properties and flags set during spell definition in the database or through
    code. The method does not modify any state directly but serves as a decision point
    for aura application logic.
  warnings: Do not use this method to manually determine stacking behavior outside
    of the core aura application flow, as it may lead to inconsistent results. The
    actual stacking rules are determined by the spell's aura properties and may vary
    between different types of auras (e.g., periodic vs. instantaneous).
  related:
  - Aura::GetAuraType
  - Aura::GetStackAmount
  - Aura::SetStackAmount
  - Unit::AddAura
  - Unit::RemoveAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:28:20.343273'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
