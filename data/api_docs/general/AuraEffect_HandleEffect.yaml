api:
  class: AuraEffect
  method: HandleEffect
  signature: void AuraEffect::HandleEffect(Unit * target, uint8 mode, bool apply,
    const AuraEffect * triggeredBy)
documentation:
  brief: Applies or removes an aura effect on a target unit based on the specified
    mode and application state.
  description: The HandleEffect method is responsible for executing the core logic
    of an aura effect when it is applied or removed from a target unit. It takes into
    account the target unit, the mode of operation (such as whether it's being applied
    or removed), and whether the effect was triggered by another aura. This method
    is typically called internally by the aura system during aura application or removal
    events. The method may perform various actions such as modifying attributes, applying
    debuffs, triggering spells, or updating unit state depending on the specific aura
    effect type and implementation.
  parameters:
  - name: target
    description: Pointer to the Unit object that the aura effect is being applied
      to or removed from. Must not be null.
  - name: mode
    description: A uint8 value indicating the mode of operation. Common values include
      0 for application, 1 for removal, and other values may represent special modes
      like periodic updates or triggered effects.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect from the target.
  - name: triggeredBy
    description: Pointer to the AuraEffect that triggered this effect, or nullptr
      if not triggered by another aura. Used for tracking aura dependencies and recursive
      effects.
  returns: null
  examples:
  - title: Basic Aura Effect Application
    code: 'AuraEffect* auraEffect = ...; // Get a valid aura effect

      Unit* target = player;

      auraEffect->HandleEffect(target, 0, true, nullptr); // Apply the aura effect'
    language: cpp
  - title: Removing an Aura Effect Triggered by Another Effect
    code: 'AuraEffect* triggeredBy = ...; // Get the triggering aura effect

      Unit* target = mob;

      auraEffect->HandleEffect(target, 1, false, triggeredBy); // Remove the aura
      effect triggered by another'
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly in most cases. The actual behavior depends heavily on the specific
    subclass implementation of AuraEffect, as different types of effects (damage over
    time, stat modifications, etc.) have different logic within their HandleEffect
    implementations.
  warnings: Calling this method with invalid parameters such as a null target or incorrect
    mode values may lead to undefined behavior or crashes. Ensure that all aura effects
    are properly initialized and validated before calling this method.
  related:
  - AuraEffect::ApplyEffect
  - AuraEffect::RemoveEffect
  - AuraEffect::GetAuraType
  - AuraEffect::GetAmount
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:52:02.795216'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
