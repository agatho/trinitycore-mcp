api:
  class: BotMemoryManager
  method: GetBotMemoryUsage
  signature: uint64_t BotMemoryManager::GetBotMemoryUsage(uint32_t botGuid) const
documentation:
  brief: Retrieves the total memory usage of a specified bot instance in bytes.
  description: The GetBotMemoryUsage method calculates and returns the amount of memory
    currently allocated to a specific bot identified by its GUID. This value includes
    all dynamic allocations made by the bot's AI behavior, data structures, and any
    associated resources. The method is typically used for monitoring memory consumption,
    debugging, or implementing memory management policies within the TrinityCore framework.
    It assumes that the bot exists and has been properly initialized in the system
    before calling.
  parameters: []
  returns: A uint64_t value representing the total memory usage of the specified bot
    in bytes. Returns zero if the bot is not found or invalid.
  examples:
  - title: Basic Usage Example
    code: 'uint32_t botGuid = 12345;

      uint64_t memoryUsage = botMemoryManager->GetBotMemoryUsage(botGuid);

      TC_LOG_INFO("bot", "Bot %u is using %llu bytes of memory.", botGuid, memoryUsage);'
    language: cpp
  notes: This method may involve traversing internal data structures to compute memory
    usage, so frequent calls could have performance implications. Ensure that the
    bot GUID corresponds to an active bot instance to avoid undefined behavior.
  warnings: null
  related:
  - GetBotMemoryUsage
  - GetAllBotMemoryUsages
  - ResetBotMemory
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:08:31.169228'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
