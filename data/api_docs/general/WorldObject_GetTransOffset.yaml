api:
  class: WorldObject
  method: GetTransOffset
  signature: const Position & WorldObject::GetTransOffset() const
documentation:
  brief: Returns the transport offset position of the WorldObject.
  description: The GetTransOffset method retrieves the offset position of a WorldObject
    relative to its transport vehicle. This is used internally by the TrinityCore
    engine to accurately position objects that are mounted on transports such as boats,
    zeppelins, or other moving vehicles. The returned Position object contains the
    x, y, z coordinates and orientation offset from the transport's origin. This method
    is essential for maintaining proper spatial relationships between objects and
    their parent transport entities during movement and updates.
  parameters: []
  returns: A const reference to a Position object representing the transport offset
    coordinates (x, y, z) and orientation of this WorldObject relative to its transport
    vehicle. The values are in world coordinate space and may be zero if the object
    is not mounted on a transport.
  examples:
  - title: Retrieve transport offset for a player on a zeppelin
    code: 'Player* player = ...;

      Position transportOffset = player->GetTransOffset();

      float offsetX = transportOffset.m_positionX;

      float offsetY = transportOffset.m_positionY;

      float offsetZ = transportOffset.m_positionZ;'
    language: cpp
  - title: Check if object is mounted on a transport using offset
    code: "WorldObject* obj = ...;\nconst Position& offset = obj->GetTransOffset();\n\
      if (offset.m_positionX != 0.0f || offset.m_positionY != 0.0f || offset.m_positionZ\
      \ != 0.0f)\n{\n    // Object is mounted on a transport\n    // Use offset for\
      \ position calculations\n}"
    language: cpp
  notes: This method should only be called on objects that may potentially be on a
    transport. The returned Position object is valid only while the WorldObject exists
    and its transport state remains unchanged. The offset values are updated automatically
    by the core when transport movement occurs.
  warnings: Do not modify the returned Position reference as it's const. Modifying
    it could cause inconsistent positioning in the game world. Always check if an
    object is actually on a transport before relying on these offset values for critical
    gameplay logic.
  related:
  - GetTransport
  - IsOnTransport
  - SetTransportOffset
  - GetTransGUID
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:37:18.196999'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
