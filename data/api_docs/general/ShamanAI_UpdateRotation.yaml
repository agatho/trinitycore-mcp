api:
  class: ShamanAI
  method: UpdateRotation
  signature: void ShamanAI::UpdateRotation(int * target)
documentation:
  brief: Updates the Shaman AI's spell rotation based on current target and combat
    state
  description: The UpdateRotation method is responsible for determining and executing
    the optimal sequence of spells for a Shaman AI character during combat. It evaluates
    the current target, available mana, spell cooldowns, and combat conditions to
    select the most effective abilities. This method typically handles both offensive
    and defensive spell selection, ensuring the Shaman maintains optimal performance
    in various battle scenarios. The method operates within the context of the TrinityCore
    AI framework and integrates with the core game mechanics for spell casting and
    targeting.
  parameters:
  - name: target
    description: Pointer to an integer representing the target's ID or index. This
      parameter is used to identify which entity the Shaman should focus on during
      rotation updates.
  returns: null
  examples:
  - title: Basic Usage in Combat Loop
    code: "void Update()\n{\n    int targetId = m_creature->GetVictim() ? m_creature->GetVictim()->GetGUIDLow()\
      \ : 0;\n    UpdateRotation(&targetId);\n}"
    language: cpp
  - title: Integration with Shaman AI State Machine
    code: "void ShamanAI::UpdateAI(const uint32 diff)\n{\n    if (!UpdateVictim())\n\
      \        return;\n    \n    int targetId = m_creature->GetVictim()->GetGUIDLow();\n\
      \    UpdateRotation(&targetId);\n    \n    // Additional AI logic...\n}"
    language: cpp
  notes: This method is typically called during the AI update cycle and should not
    be invoked directly from outside the AI framework. The target parameter may be
    NULL or zero when no valid target exists, which should be handled gracefully by
    the implementation.
  warnings: Improper handling of the target parameter can lead to invalid spell targeting
    or crashes. Ensure that the target ID points to a valid creature or player object
    before calling this method.
  related:
  - ShamanAI::DoCastSpell
  - ShamanAI::GetNextSpell
  - ShamanAI::IsSpellReady
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T21:39:23.059686'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
