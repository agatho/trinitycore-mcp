api:
  class: Creature
  method: AI
  signature: CreatureAI * Creature::AI() const
documentation:
  brief: Returns the AI instance associated with this creature for handling behavior
    and combat logic
  description: The Creature::AI method retrieves the CreatureAI object that controls
    the creature's behavior, including combat actions, movement patterns, and AI-driven
    decision making. This method is essential for accessing creature-specific AI functionality,
    such as managing creature's combat state, performing actions based on AI triggers,
    or implementing custom AI behaviors. The returned AI instance is typically created
    during creature initialization and is used to execute various AI-related operations
    like handling events, managing targets, or performing specialized actions.
  parameters: []
  returns: Returns a pointer to the CreatureAI object associated with this creature.
    If no AI has been assigned or initialized, this may return nullptr, indicating
    that the creature does not have any AI behavior implemented.
  examples:
  - title: Basic AI Access Example
    code: "Creature* creature = ...;\nCreatureAI* ai = creature->AI();\nif (ai)\n\
      {\n    // Use AI for creature-specific actions\n}"
    language: cpp
  - title: Advanced AI Usage Example
    code: "Creature* creature = ...;\nCreatureAI* ai = creature->AI();\nif (ai &&\
      \ ai->IsInCombat())\n{\n    // Perform combat-related actions\n    ai->DoAction(1);\n\
      }\nelse\n{\n    // Handle non-combat behavior\n    ai->SetReactState(REACT_PASSive);\n\
      }"
    language: cpp
  notes: The AI instance returned by this method is typically initialized during creature
    creation and may be null if the creature does not have any AI implementation.
    Developers should ensure that the creature has been properly initialized before
    calling this method, as accessing a null AI can lead to crashes or undefined behavior.
  warnings: Calling this method on creatures without AI implementation can result
    in nullptr dereference errors. Always check for null before using the returned
    AI instance. Additionally, the AI instance may be destroyed during creature destruction,
    so avoid using it after the creature has been removed from world.
  related:
  - Creature::GetAI
  - Creature::SetAI
  - Creature::HasAI
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:50:30.438768'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
