api:
  class: SpawnedPoolData
  method: IsSpawnedObject
  signature: bool SpawnedPoolData::IsSpawnedObject(int type, uint64 db_guid_or_pool_id)
    const
documentation:
  brief: Checks whether a game object of specified type and GUID/pool ID is currently
    spawned in the world.
  description: The IsSpawnedObject method determines if a game object of a given type
    (such as a creature or game object) with the specified database GUID or pool ID
    is currently active and spawned within the game world. This method is typically
    used by the spawning system to track which objects are currently present in the
    world versus those that have been despawned or are pending spawn. It helps manage
    object lifecycle and ensures proper cleanup of resources when objects are no longer
    needed. The method operates on internal tracking data maintained by the SpawnedPoolData
    class, which keeps a record of all spawned entities for efficient lookup.
  parameters:
  - name: type
    description: The type of game object to check. This is typically an enum value
      representing the object type such as GAMEOBJECT_TYPE_CREATURE, GAMEOBJECT_TYPE_GAMEOBJECT,
      etc.
  - name: db_guid_or_pool_id
    description: The database GUID of a specific game object or the pool ID if the
      object belongs to a spawn pool. This identifier uniquely identifies the entity
      within the context of the specified type.
  returns: Returns true if the specified game object is currently spawned and present
    in the world; otherwise, returns false.
  examples:
  - title: Check if a creature is spawned
    code: "if (spawnedPoolData.IsSpawnedObject(TYPE_CREATURE, 12345)) {\n    // Creature\
      \ with GUID 12345 is currently spawned\n    printf(\"Creature is active in the\
      \ world\\n\");\n}"
    language: cpp
  - title: Check if a game object from a pool is spawned
    code: "uint64 poolId = 98765;\nif (spawnedPoolData.IsSpawnedObject(TYPE_GAMEOBJECT,\
      \ poolId)) {\n    // Game object from pool ID 98765 is currently spawned\n \
      \   printf(\"Game object from pool is active\\n\");\n}"
    language: cpp
  notes: This method relies on internal tracking data structures that are updated
    whenever objects are spawned or despawned. It's important to note that this check
    is only valid for objects that are managed by the SpawnedPoolData system and may
    not reflect the state of manually created or non-pooled objects.
  warnings: Do not rely solely on this method for critical gameplay logic without
    considering potential race conditions in multi-threaded environments. Also, ensure
    that the type parameter correctly matches the expected object types to avoid incorrect
    results.
  related:
  - SpawnedPoolData::AddSpawnedObject
  - SpawnedPoolData::RemoveSpawnedObject
  - SpawnedPoolData::GetSpawnedObjects
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T17:59:35.281782'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
