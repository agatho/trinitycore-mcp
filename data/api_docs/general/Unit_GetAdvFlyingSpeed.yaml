api:
  class: Unit
  method: GetAdvFlyingSpeed
  signature: float Unit::GetAdvFlyingSpeed(AdvFlyingRateTypeSingle speedType) const
documentation:
  brief: Returns the advanced flying speed of the unit based on the specified speed
    type.
  description: This method retrieves the flying speed of a Unit in advanced mode,
    which is used for calculating movement speeds during flight. It returns the speed
    value based on the provided AdvFlyingRateTypeSingle parameter, allowing developers
    to access specific flying speed values for different categories such as normal,
    increased, or reduced speed rates. The method is commonly used in game mechanics
    related to player movement and flight behavior within World of Warcraft.
  parameters:
  - name: speedType
    description: The type of flying speed rate to retrieve. This parameter determines
      whether the returned value represents normal, increased, or reduced flying speed
      based on the unit's current state.
  returns: Returns a float value representing the flying speed of the unit according
    to the specified speed type. The value may be zero if no valid flying speed is
    set for the given type, or it could represent a specific speed rate depending
    on the unit's movement state.
  examples:
  - title: Basic Usage Example
    code: float speed = unit->GetAdvFlyingSpeed(AdvFlyingRateTypeSingle::Normal);
    language: cpp
  - title: Advanced Usage Example
    code: float speed = unit->GetAdvFlyingSpeed(AdvFlyingRateTypeSingle::Increased);
    language: cpp
  notes: This method is part of the Unit class and typically used in conjunction with
    other movement-related methods. It requires that the unit has a valid flying state
    set, otherwise it may return zero or undefined values. Performance-wise, this
    method should be used carefully as it involves calculations based on current unit
    state.
  warnings: Be cautious when using this method as it depends on specific speed types
    and may not always return meaningful values if the unit is not in a flying state.
    Also, ensure that the speedType parameter is correctly set to avoid incorrect
    results.
  related:
  - GetSpeed
  - GetMovementInfo
  - SetFlying
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:39:20.288221'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
