api:
  class: DB2Manager
  method: GetHotfixCount
  signature: uint32 DB2Manager::GetHotfixCount() const
documentation:
  brief: Retrieves the total count of hotfix records loaded in the DB2Manager.
  description: The GetHotfixCount method returns the number of hotfix entries currently
    stored within the DB2Manager instance. Hotfixes in TrinityCore represent database
    modifications that are applied at runtime to override or supplement existing data
    without requiring a full database update. This count is typically used for debugging,
    monitoring, or ensuring that expected hotfix data has been properly loaded. The
    method performs no operations on the underlying data and simply returns a cached
    value representing the size of the internal hotfix collection.
  parameters: []
  returns: A 32-bit unsigned integer representing the total number of hotfix records
    currently loaded in the DB2Manager instance. Returns zero if no hotfixes are present
    or if the manager has not been initialized with hotfix data.
  examples:
  - title: Basic Usage to Check Hotfix Count
    code: "uint32 hotfixCount = sDB2Manager->GetHotfixCount();\nif (hotfixCount >\
      \ 0)\n{\n    TC_LOG_INFO(\"server.loading\", \"Loaded %u hotfixes\", hotfixCount);\n\
      }"
    language: cpp
  notes: This method is typically used during server startup or debugging to verify
    that hotfix data has been correctly loaded. The returned count reflects only the
    hotfix records and not other DB2 data types. This method is thread-safe as it
    reads from a cached value.
  warnings: null
  related:
  - GetHotfixData
  - LoadHotfixes
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:02:08.967079'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
