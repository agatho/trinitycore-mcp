api:
  class: Unit
  method: GetTotalAuraMultiplierByMiscMask
  signature: float Unit::GetTotalAuraMultiplierByMiscMask(int auraType, uint32 misc_mask)
    const
documentation:
  brief: Calculates the total aura multiplier for a specific aura type and misc mask.
  description: This method computes the combined multiplier effect of all auras that
    match the specified aura type and misc mask. It is commonly used in World of Warcraft
    to determine how various buffs, debuffs, or other magical effects influence stat
    multipliers or damage modifiers. The method returns a float value representing
    the total multiplier, where 1.0 represents no change and values above 1.0 indicate
    increased effectiveness while values below 1.0 indicate reduced effectiveness.
    This function is typically used in conjunction with aura application logic to
    determine overall effect strength.
  parameters:
  - name: auraType
    description: The type of aura to evaluate, typically representing a specific category
      like damage over time, stat modifiers, or spell effects. Valid values are usually
      defined by the AuraType enum in TrinityCore.
  - name: misc_mask
    description: The miscellaneous mask that defines which specific aura effects should
      be considered. This mask is used to filter auras based on their properties and
      can include flags like school masks, spell categories, or other special attributes.
  returns: Represents the total multiplier value for all matching auras. A return
    value of 1.0 indicates no effect, values greater than 1.0 indicate increased effectiveness
    (e.g., 1.2 means 20% more effective), and values less than 1.0 indicate decreased
    effectiveness (e.g., 0.8 means 20% less effective).
  examples:
  - title: Basic Usage Example
    code: float multiplier = unit->GetTotalAuraMultiplierByMiscMask(SPELL_AURA_MOD_DAMAGE_DEALT,
      1 << 3); // Assuming 1 << 3 represents fire school mask
    language: cpp
  - title: Advanced Usage Example
    code: float multiplier = unit->GetTotalAuraMultiplierByMiscMask(SPELL_AURA_MOD_ATTACK_POWER,
      0x00000001); // Using a specific bit mask for physical attack power auras
    language: cpp
  notes: This method is part of the aura system in TrinityCore and should be used
    carefully when calculating effects that depend on multiple auras. Performance
    considerations include checking all applicable auras, which can impact efficiency
    if many are present. Thread safety depends on the implementation context; this
    method should not be called from within critical sections without proper synchronization.
  warnings: This method does not directly check for aura application status or validity,
    so it may return incorrect values if used without proper filtering of active auras.
    Also, it assumes that all relevant auras are already applied and accounted for
    in the unit's aura system.
  related:
  - GetAuraType
  - GetTotalAuraMultiplierByType
  - GetAura
  - GetAuraEffect
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:35:31.042144'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
