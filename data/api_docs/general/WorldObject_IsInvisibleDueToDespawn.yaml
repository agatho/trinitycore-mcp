api:
  class: WorldObject
  method: IsInvisibleDueToDespawn
  signature: bool WorldObject::IsInvisibleDueToDespawn(const WorldObject * seer) const
documentation:
  brief: Determines whether the object is invisible due to despawn.
  description: This method checks if the WorldObject is currently invisible as a result
    of being despawned. It evaluates the object's current state and returns true if
    the object has been removed from the world due to despawn, false otherwise. This
    functionality is crucial for determining object visibility in game mechanics where
    objects may be temporarily or permanently removed from the world.
  parameters: []
  returns: Returns true if the object is invisible due to despawn, false otherwise.
    The method returns false when the object is still visible and active in the world.
  examples:
  - title: Basic usage example
    code: "if (worldObject->IsInvisibleDueToDespawn(nullptr)) {\n    // Handle invisible\
      \ object\n}"
    language: cpp
  notes: This method is typically used in conjunction with other visibility checks
    to determine if an object should be considered visible or invisible in game logic.
    Performance considerations include checking the object's state efficiently without
    causing unnecessary overhead.
  warnings: Be cautious when using this method as it may not always reflect the actual
    visibility of an object, especially in cases where objects are removed from world
    but still exist in memory.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T19:43:43.768984'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
