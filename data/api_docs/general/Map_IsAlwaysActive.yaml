api:
  class: Map
  method: IsAlwaysActive
  signature: bool Map::IsAlwaysActive() const
documentation:
  brief: Determines whether the map is always active and should not be removed from
    the world.
  description: The IsAlwaysActive method checks if a map instance is marked as always
    active, meaning it should remain in the game world regardless of player activity
    or other conditions. This is typically used for maps that contain important game
    mechanics or content that must persist even when no players are present. The method
    returns true if the map is flagged as always active, false otherwise. This functionality
    is crucial for maintaining proper game state and preventing premature removal
    of essential map content.
  parameters: []
  returns: Returns true if the map is always active and should not be removed from
    the world, false otherwise. The return value indicates whether the map has special
    persistence requirements that prevent it from being cleaned up during normal gameplay.
  examples:
  - title: Basic usage example
    code: "Map* map = player->GetMap();\nif (map->IsAlwaysActive()) {\n    // Map\
      \ will not be removed from world\n    // Do something special with this map\n\
      }\n"
    language: cpp
  notes: This method is typically used internally by TrinityCore to determine if a
    map should remain in memory during cleanup operations. The implementation may
    vary based on the map type and its specific requirements.
  warnings: This method should not be used for general gameplay decisions as it's
    primarily an internal utility for determining map persistence. Using this method
    incorrectly could lead to unexpected behavior or memory leaks.
  related:
  - Map::IsInstance
  - Map::IsDungeon
  - Map::IsRaid
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:05:00.638403'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
