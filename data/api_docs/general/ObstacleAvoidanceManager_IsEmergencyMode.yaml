api:
  class: ObstacleAvoidanceManager
  method: IsEmergencyMode
  signature: bool ObstacleAvoidanceManager::IsEmergencyMode() const
documentation:
  brief: Checks if the obstacle avoidance system is currently operating in emergency
    mode.
  description: The IsEmergencyMode method determines whether the ObstacleAvoidanceManager
    is currently in emergency mode. This mode is typically activated when the AI system
    detects an imminent collision or dangerous situation that requires immediate evasive
    action. The method returns a boolean value indicating the current state of the
    emergency mode flag. When in emergency mode, the AI behavior may prioritize avoiding
    obstacles over other movement strategies, potentially altering pathfinding and
    movement patterns to prevent collisions.
  parameters: []
  returns: Returns true if the obstacle avoidance system is currently in emergency
    mode, false otherwise. Emergency mode is usually triggered by detected imminent
    threats or dangerous conditions that require immediate response.
  examples:
  - title: Basic Usage Check
    code: "if (obstacleManager->IsEmergencyMode()) {\n    // Handle emergency avoidance\
      \ behavior\n    unit->SetReactState(REACT_PASSIVE);\n}"
    language: cpp
  - title: Conditional Emergency Response
    code: "if (obstacleManager->IsEmergencyMode()) {\n    // Override normal movement\
      \ and execute emergency avoidance\n    if (unit->GetMotionMaster()->GetCurrentMovementGeneratorType()\
      \ != ESCORT_MOTION_TYPE) {\n        unit->GetMotionMaster()->MoveEscapePath(unit->GetPosition(),\
      \ 10.0f);\n    }\n}"
    language: cpp
  notes: This method is typically called during AI update cycles to determine if special
    emergency behaviors should be applied. The emergency mode state may be set by
    internal collision detection systems or external threat assessments. Performance-wise,
    this is a fast boolean check and should not cause noticeable lag in normal operation.
  warnings: Be cautious when relying on this method for critical pathfinding decisions
    as it may change rapidly during dynamic environments. Emergency mode can be triggered
    by various conditions including sudden obstacle appearance, unit movement speed,
    or environmental hazards. Ensure that emergency behaviors don't create new collision
    scenarios or infinite loops.
  related:
  - SetEmergencyMode
  - IsInAvoidanceMode
  - UpdateObstacleAvoidance
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:50:38.830124'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
