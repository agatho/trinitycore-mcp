api:
  class: Player
  method: LoadFromDB
  signature: bool Player::LoadFromDB(int guid, const int & holder)
documentation:
  brief: Loads player data from the database using the provided GUID and holder reference.
  description: The LoadFromDB method retrieves all relevant player information from
    the TrinityCore database, including character stats, inventory, quests, and other
    game state data. It initializes the Player object with data associated with the
    specified GUID. The method requires a valid database connection and proper access
    permissions to fetch the player's saved data. This function is typically called
    during player login or when creating a new player instance from stored data. The
    holder parameter likely refers to a database transaction or session context that
    ensures data consistency during the load operation.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the player to be loaded from the
      database. Must correspond to an existing character record in the database.
  - name: holder
    description: A reference to a database holder or transaction context that manages
      the database connection and ensures data integrity during the load operation.
  returns: Returns true if the player data was successfully loaded from the database,
    false otherwise. A return value of false typically indicates database errors,
    invalid GUID, or missing character records.
  examples:
  - title: Basic Player Load Example
    code: "Player* player = new Player();\nint guid = 12345;\nDatabaseHolder holder\
      \ = DatabaseFactory::GetHolder();\nbool success = player->LoadFromDB(guid, holder);\n\
      if (success)\n{\n    // Player loaded successfully\n    sLog->outString(\"Player\
      \ %d loaded successfully.\", guid);\n}\nelse\n{\n    // Handle load failure\n\
      \    sLog->outError(\"Failed to load player with GUID %d.\", guid);\n}"
    language: cpp
  notes: This method is part of the core player initialization process in TrinityCore.
    It should only be called when a new Player object needs to be populated with saved
    data from the database. The method performs extensive database queries and may
    have performance implications if called frequently or without proper caching.
  warnings: Calling LoadFromDB with an invalid GUID or without a valid database connection
    will result in failure. Ensure that the holder parameter is properly initialized
    before calling this method to avoid potential database corruption or inconsistent
    data states.
  related:
  - SaveToDB
  - GetGUID
  - IsInWorld
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T19:35:41.518200'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
