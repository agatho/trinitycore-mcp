api:
  class: UnitScript
  method: ModifyMeleeDamage
  signature: void UnitScript::ModifyMeleeDamage(Unit * target, Unit * attacker, uint32
    & damage)
documentation:
  brief: Modifies the melee damage dealt by an attacker to a target
  description: The ModifyMeleeDamage method is a virtual callback function in the
    UnitScript class that allows custom scripts to modify melee damage values during
    combat. This method is invoked when a unit performs a melee attack and deals damage
    to a target, providing an opportunity to adjust the damage amount before it's
    applied. It serves as part of TrinityCore's scripting system, enabling developers
    to implement custom game mechanics such as damage modifiers, buffs, debuffs, or
    special effects that influence melee combat outcomes. The method accepts references
    to both attacker and target units along with a reference to the damage value,
    allowing direct modification of the damage amount.
  parameters:
  - name: target
    description: Pointer to the Unit object that is receiving the melee damage. This
      represents the victim in the combat interaction.
  - name: attacker
    description: Pointer to the Unit object that is delivering the melee damage. This
      represents the attacker in the combat interaction.
  - name: damage
    description: Reference to a uint32 value representing the current melee damage
      amount. This value can be modified directly to change the final damage dealt.
  returns: null
  examples:
  - title: Basic Damage Reduction Example
    code: "void MyUnitScript::ModifyMeleeDamage(Unit* target, Unit* attacker, uint32&\
      \ damage)\n{\n    // Reduce all melee damage by 25%\n    damage = damage * 0.75f;\n\
      }"
    language: cpp
  - title: Conditional Damage Modifier Based on Target
    code: "void MyUnitScript::ModifyMeleeDamage(Unit* target, Unit* attacker, uint32&\
      \ damage)\n{\n    // If target is a player, reduce damage by 10%\n    if (target->IsPlayer())\n\
      \        damage = damage * 0.9f;\n    \n    // If attacker is a boss, increase\
      \ damage by 15%\n    if (attacker->GetEntry() == 12345)\n        damage = damage\
      \ * 1.15f;\n}"
    language: cpp
  notes: This method is called during the combat calculation phase, so modifications
    to damage should be made carefully to avoid disrupting game balance or causing
    unexpected behavior. The damage value passed in is already calculated based on
    weapon damage, attack power, and other standard factors before this method is
    invoked. This callback is part of TrinityCore's scripting system and requires
    proper registration of the script with the UnitScriptManager.
  warnings: Modifying damage values directly can significantly impact gameplay balance.
    Extreme modifications may cause exploits or unbalanced combat encounters. Ensure
    that any changes to damage are within reasonable bounds and consider how they
    interact with other game systems such as critical strikes, armor mitigation, and
    spell effects. Avoid infinite loops or recursive calls that could crash the server.
  related:
  - ModifySpellDamage
  - ModifyHealing
  - OnDamageDealt
  - OnDamageTaken
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:04:22.096967'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
