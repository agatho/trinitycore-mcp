api:
  class: SpellScript
  method: _Validate
  signature: bool SpellScript::_Validate(const SpellInfo * entry)
documentation:
  brief: Validates a spell entry against the SpellScript's internal requirements
  description: The _Validate method checks whether a given SpellInfo entry is compatible
    with the current SpellScript instance. It ensures that the spell meets all necessary
    conditions and constraints required for the script to be properly executed. This
    validation typically occurs during spell initialization or activation, verifying
    that the spell data aligns with expected parameters and script behavior. The method
    may perform various checks such as verifying spell categories, required targets,
    or other contextual requirements specific to the SpellScript implementation.
  parameters:
  - name: entry
    description: Pointer to the SpellInfo structure containing the spell definition
      to validate. Must not be null for valid validation.
  returns: Returns true if the spell entry passes all validation checks and is compatible
    with this SpellScript, false otherwise. A return value of false typically indicates
    that the spell cannot be properly handled by this script due to incompatible parameters
    or missing required data.
  examples:
  - title: Basic Validation Usage
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    bool _Validate(const\
      \ SpellInfo* entry) override\n    {\n        if (!entry)\n            return\
      \ false;\n        \n        // Example validation: Check if spell has a valid\
      \ target type\n        if (entry->Targets & TARGET_FLAG_UNIT_ENEMY)\n      \
      \      return true;\n        \n        return false;\n    }\n};"
    language: cpp
  - title: Advanced Validation with Multiple Conditions
    code: "class AdvancedSpellScript : public SpellScript\n{\npublic:\n    bool _Validate(const\
      \ SpellInfo* entry) override\n    {\n        if (!entry)\n            return\
      \ false;\n        \n        // Validate spell school\n        if (entry->SchoolMask\
      \ != SPELL_SCHOOL_MASK_FIRE)\n            return false;\n        \n        //\
      \ Validate spell duration\n        if (entry->DurationIndex == 0)\n        \
      \    return false;\n        \n        // Validate spell range\n        if (entry->RangeIndex\
      \ == 0)\n            return false;\n        \n        return true;\n    }\n\
      };"
    language: cpp
  notes: The _Validate method is typically called during spell loading or activation
    phases. Implementations should be lightweight and avoid heavy computations as
    this method may be invoked frequently. The SpellInfo pointer passed to this method
    is guaranteed to be valid when the method is called, but implementations should
    still perform null checks for robustness.
  warnings: Do not modify the SpellInfo structure within this method as it's read-only.
    Improper validation logic can cause spells to fail unexpectedly or prevent proper
    execution. Always ensure that validation conditions are consistent with the spell's
    intended behavior and game mechanics.
  related:
  - SpellScript::Load
  - SpellScript::Execute
  - SpellScript::CanCast
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:58:59.562296'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
