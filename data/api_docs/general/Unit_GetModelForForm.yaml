api:
  class: Unit
  method: GetModelForForm
  signature: uint32 Unit::GetModelForForm(int form, uint32 spellId) const
documentation:
  brief: Returns the model ID for a specified form and spell combination.
  description: This method retrieves the model ID associated with a specific combat
    form and spell. It is used primarily to determine which visual model should be
    displayed when a unit assumes a particular form, such as during shapeshifting
    or when using certain spells. The method considers both the form type and the
    spell being applied to ensure accurate model selection. This functionality is
    essential for proper visual representation of units in various combat states.
  parameters:
  - name: form
    description: The combat form identifier, typically representing different forms
      like bear, cat, or moonkin. Valid values include 0 (none), 1 (bear), 2 (cat),
      3 (moonkin), etc.
  - name: spellId
    description: The spell ID that triggers the form change. This determines which
      model is returned for a given form, as multiple spells can map to the same form.
  returns: Returns a uint32 representing the model ID associated with the specified
    form and spell combination. If no matching model is found, it returns 0, indicating
    that no specific model exists for that form or spell.
  examples:
  - title: Basic usage example
    code: 'uint32 modelId = unit->GetModelForForm(1, 12345);

      // Returns the model ID for bear form with spell ID 12345'
    language: cpp
  - title: Advanced usage example
    code: "uint32 modelId = unit->GetModelForForm(2, 12345);\nif (modelId != 0)\n\
      {\n    // Handle the case where a valid model exists\n}\nelse\n{\n    // No\
      \ model found for this combination\n}"
    language: cpp
  notes: This method is typically used in conjunction with other form-related methods
    to ensure proper visual representation of units during combat. The implementation
    may vary depending on the specific form and spell being applied, and it should
    be used carefully to avoid incorrect model assignments.
  warnings: Care must be taken when using this method as incorrect form or spell combinations
    can lead to visual inconsistencies. Also, this method should not be used in contexts
    where the unit is not actively engaged in combat or where form changes are not
    expected.
  related:
  - GetModelForForm
  - GetForm
  - GetSpell
  - GetUnit
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:57:31.533925'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
