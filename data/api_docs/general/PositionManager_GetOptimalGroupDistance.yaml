api:
  class: PositionManager
  method: GetOptimalGroupDistance
  signature: float PositionManager::GetOptimalGroupDistance(ThreatRole role)
documentation:
  brief: Calculates and returns the optimal grouping distance for a specified threat
    role.
  description: The GetOptimalGroupDistance method determines the recommended spatial
    separation distance between group members based on their assigned threat roles.
    This distance is used by the AI system to maintain proper positioning during combat
    scenarios, ensuring that tanks, healers, and damage dealers are positioned optimally
    for effectiveness while avoiding overcrowding or excessive spacing. The method
    considers role-specific positioning requirements such as tank proximity for threat
    management, healer range for support, and DPS positioning for optimal damage output.
    It returns a float value representing the distance in yards that should be maintained
    between group members for the given threat role.
  parameters: []
  returns: A float value representing the optimal grouping distance in yards for the
    specified threat role. This distance ensures proper positioning of group members
    based on their roles during combat situations.
  examples:
  - title: Get optimal distance for tank role
    code: float tankDistance = positionManager->GetOptimalGroupDistance(ThreatRole::TANK);
    language: cpp
  - title: Dynamic positioning based on threat role
    code: 'ThreatRole currentRole = player->GetThreatRole();

      float optimalDistance = positionManager->GetOptimalGroupDistance(currentRole);

      player->SetGroupPositioningDistance(optimalDistance);'
    language: cpp
  notes: This method is primarily used in AI pathfinding and positioning calculations.
    The returned values are pre-configured based on game balance requirements and
    may vary depending on the specific encounter or difficulty level. The implementation
    caches calculated distances for performance optimization.
  warnings: The method assumes that the threat role has been properly initialized
    and assigned to the group member before calling. Using an invalid or uninitialized
    threat role may result in unexpected positioning behavior.
  related:
  - GetThreatRole
  - SetGroupPositioningDistance
  - CalculateOptimalFormation
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T08:16:19.015400'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
