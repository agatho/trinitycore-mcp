api:
  class: AchievementMgr
  method: CheckAllAchievementCriteria
  signature: void AchievementMgr::CheckAllAchievementCriteria(Player * referencePlayer)
documentation:
  brief: Evaluates all achievement criteria for the specified player and updates their
    achievements accordingly.
  description: The CheckAllAchievementCriteria method iterates through all active
    achievement criteria associated with the given player and checks whether the conditions
    for each criterion have been met. This method is typically invoked when a player's
    state changes in a way that might affect their achievements, such as completing
    quests, killing enemies, or reaching certain levels. It ensures that any progress
    toward an achievement is properly tracked and that completed achievements are
    awarded. The method operates on the referencePlayer parameter, which represents
    the player whose achievements are being evaluated. This function does not directly
    modify the database but rather processes in-memory data structures to determine
    if criteria have been satisfied.
  parameters:
  - name: referencePlayer
    description: A pointer to the Player object for whom achievement criteria will
      be checked. Must not be null and must represent a valid player instance within
      the game world.
  returns: void
  examples:
  - title: Basic Usage Example
    code: 'Player* player = ...; // Assume player is initialized

      AchievementMgr::CheckAllAchievementCriteria(player);'
    language: cpp
  - title: Usage in Event Handler Context
    code: "void OnPlayerKill(Player* killer, Unit* victim) {\n    // Perform kill-related\
      \ logic\n    AchievementMgr::CheckAllAchievementCriteria(killer);\n}"
    language: cpp
  notes: This method is commonly called after significant player actions that could
    influence achievement progress. It is designed to be efficient and avoids redundant
    checks by leveraging internal caching mechanisms where applicable. The method
    assumes the player object passed in is fully initialized and has valid data.
  warnings: "Ensure that the referencePlayer pointer is valid before calling this\
    \ method; passing a null or invalid pointer may lead to undefined behavior or\
    \ crashes. Also, note that this function does not persist changes to the database\
    \ directly\u2014it only evaluates criteria in memory."
  related:
  - CheckAchievementCriteria
  - UpdateAchievement
  - GetPlayerAchievements
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:43:42.726564'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
