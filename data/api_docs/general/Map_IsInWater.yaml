api:
  class: Map
  method: IsInWater
  signature: bool Map::IsInWater(const PhaseShift & phaseShift, float x, float y,
    float z, int * data)
documentation:
  brief: Determines whether a given position is underwater in the current map.
  description: The IsInWater method checks if a specified coordinate (x, y, z) is
    located within water body in the current map. This function is essential for determining
    whether an object or player is submerged in water, which affects various game
    mechanics such as movement, combat, and visual rendering. The method uses phase
    information to accurately determine the position relative to the map's current
    phase, ensuring correct detection even when objects are in different phases. It
    returns true if the position is inside a water body, false otherwise.
  parameters:
  - name: phaseShift
    description: The phase shift information that determines the current phase of
      the object being checked. This affects how coordinates are interpreted relative
      to map elements.
  - name: x
    description: The X coordinate of the position being checked for water presence.
  - name: y
    description: The Y coordinate of the position being checked for water presence.
  - name: z
    description: The Z coordinate of the position being checked for water presence.
  - name: data
    description: Optional pointer to an integer that can be used to store additional
      data about the water detection. This parameter may be null and is typically
      used for debugging or additional information retrieval.
  returns: Returns true if the specified coordinates are within a water body, false
    otherwise. The method may also return false if the position is outside of any
    water body or if the data parameter indicates that no water exists at the given
    location.
  examples:
  - title: Basic usage example
    code: bool isUnderwater = map->IsInWater(phaseShift, x, y, z, nullptr);
    language: cpp
  - title: Advanced usage with data parameter
    code: 'int waterData = 0;

      bool isUnderwater = map->IsInWater(phaseShift, x, y, z, &waterData);'
    language: cpp
  notes: This method relies on accurate phase information to correctly interpret coordinates.
    The implementation may be affected by map-specific water detection algorithms
    and can vary between different map types. Performance considerations include checking
    multiple coordinates in sequence for efficient movement calculations.
  warnings: Care should be taken when using this method with different phases, as
    incorrect phase information can lead to false negatives or positives. The method
    does not account for dynamic water bodies that may change during gameplay.
  related:
  - IsInWater
  - GetWaterHeight
  - IsUnderwater
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:02:38.642624'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
