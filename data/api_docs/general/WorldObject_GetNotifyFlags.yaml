api:
  class: WorldObject
  method: GetNotifyFlags
  signature: uint16 WorldObject::GetNotifyFlags() const
documentation:
  brief: Retrieves the notification flags for the WorldObject, determining which client
    events this object should notify about.
  description: The GetNotifyFlags method returns a bitmask representing the notification
    flags associated with the WorldObject. These flags control what types of updates
    and events are sent to clients when the object changes state. In TrinityCore's
    architecture, these flags are crucial for network synchronization and determining
    which client-side events (such as movement, visibility, or interaction) should
    be triggered for players or other entities observing this object. The returned
    value is typically used internally by the core networking system to optimize data
    transmission and ensure that only relevant updates reach connected clients.
  parameters: []
  returns: A uint16 value representing a bitmask of notification flags. Each bit in
    the mask corresponds to a specific type of client notification, such as movement
    updates, visibility changes, or interaction events. The exact meaning of each
    flag is defined by the core's internal constants and may vary depending on the
    object type (player, creature, gameobject, etc.).
  examples:
  - title: Basic usage to check notification flags
    code: "uint16 flags = worldObject->GetNotifyFlags();\nif (flags & NOTIFY_FLAG_MOVEMENT)\n\
      {\n    // Handle movement-related notifications\n}"
    language: cpp
  - title: Logging current notification flags for debugging
    code: 'uint16 flags = player->GetNotifyFlags();

      TC_LOG_DEBUG("world", "Player notify flags: %u", flags);'
    language: cpp
  notes: This method is typically used internally by the TrinityCore server for network
    packet generation and client update logic. The notification flags are often set
    or modified through other methods like SetNotifyFlags() or via object state changes.
    Developers should be aware that modifying these flags directly can have unintended
    consequences on client behavior and network performance.
  warnings: Direct modification of notify flags without understanding their implications
    may cause clients to miss important updates or receive excessive data. This method
    should generally not be modified by custom scripts unless you fully understand
    the networking behavior of WorldObjects in TrinityCore.
  related:
  - SetNotifyFlags
  - UpdateVisibility
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:52:20.947256'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
