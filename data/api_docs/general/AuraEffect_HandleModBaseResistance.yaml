api:
  class: AuraEffect
  method: HandleModBaseResistance
  signature: void AuraEffect::HandleModBaseResistance(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the base resistance value of an aura application.
  description: The HandleModBaseResistance method adjusts the base resistance attribute
    of an aura application when it is applied or removed from a unit. This method
    is typically invoked during aura application or removal events to modify how much
    resistance a unit has against specific damage types. It operates on the AuraApplication
    object and uses a mode parameter to determine whether to apply or remove the resistance
    modification. The method directly affects the unit's resistance values, which
    in turn influences damage calculations for affected attacks.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura and its target
      unit.
  - name: mode
    description: Mode flag indicating whether the aura is being applied (true) or
      removed (false). Also determines the specific resistance type being modified
      based on aura properties.
  - name: apply
    description: Boolean flag specifying whether to apply or remove the resistance
      modification. True applies the effect, false removes it.
  returns: null
  examples:
  - title: Applying Base Resistance Modification
    code: "void ApplyResistanceAura(AuraApplication* app, uint8 mode) {\n    AuraEffect*\
      \ effect = new AuraEffect();\n    effect->HandleModBaseResistance(app, mode,\
      \ true);\n}"
    language: cpp
  - title: Removing Base Resistance Modification
    code: "void RemoveResistanceAura(AuraApplication* app, uint8 mode) {\n    AuraEffect*\
      \ effect = new AuraEffect();\n    effect->HandleModBaseResistance(app, mode,\
      \ false);\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and directly
    modifies unit resistance values. It should only be called during aura application/removal
    events to maintain proper game state consistency. The actual resistance value
    calculation depends on the aura's properties and the target unit's current state.
  warnings: Improper use of this method can lead to incorrect resistance calculations,
    affecting damage dealt or received by units. Ensure that the AuraApplication pointer
    is valid and that mode parameter correctly reflects the aura type being handled.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetTarget
  - Unit::GetResistance
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:43:56.576084'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
