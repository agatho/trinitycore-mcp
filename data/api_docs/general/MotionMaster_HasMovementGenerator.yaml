api:
  class: MotionMaster
  method: HasMovementGenerator
  signature: bool MotionMaster::HasMovementGenerator(const std::function<bool (const
    MovementGenerator *)> & filter, MovementSlot slot) const
documentation:
  brief: Checks if a movement generator exists for a specific slot with a given filter.
  description: This method determines whether a movement generator exists within a
    specified movement slot that matches the provided filter criteria. It is used
    to verify the presence of specific movement behaviors in the motion system, particularly
    useful for checking movement types such as idle, fear, or follow movements. The
    method operates on the MotionMaster class which manages various movement generators
    for NPC or player entities. This function provides a way to validate movement
    generator existence without directly accessing internal data structures.
  parameters:
  - name: filter
    description: A std::function that accepts a const MovementGenerator pointer and
      returns a bool value. This filter determines which specific movement generators
      are considered when checking for existence.
  - name: slot
    description: The MovementSlot enum value specifying which slot to check for movement
      generator existence. This typically corresponds to different types of movement
      such as idle, combat, or follow movements.
  returns: Returns true if a matching movement generator exists in the specified slot;
    otherwise returns false.
  examples:
  - title: Basic usage example
    code: bool hasGenerator = motionMaster.HasMovementGenerator([](const MovementGenerator*
      mg) { return mg->GetMovementType() == MovementType::IDLE; }, MovementSlot::SLOT_IDLE);
    language: cpp
  notes: The method internally uses a filter function to determine whether a movement
    generator matches the criteria. It is important to note that this method does
    not modify or change any existing movement generators, but only checks their existence.
  warnings: This method should be used carefully in performance-critical contexts
    as it may involve iterating through internal movement generator lists which could
    impact performance if called frequently.
  related:
  - MotionMaster::GetMovementGenerator
  - MotionMaster::HasMovementGenerator
  - MotionMaster::AddMovementGenerator
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T03:53:37.979081'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
