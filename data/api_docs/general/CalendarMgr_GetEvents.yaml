api:
  class: CalendarMgr
  method: GetEvents
  signature: const CalendarEventStore & CalendarMgr::GetEvents() const
documentation:
  brief: Retrieves the complete collection of calendar events managed by the CalendarMgr
    instance.
  description: The GetEvents method provides access to the internal storage of all
    calendar events currently managed by the CalendarMgr. This method returns a constant
    reference to the CalendarEventStore, which holds all event data including event
    details, invitees, and scheduling information. The returned reference allows read-only
    access to the event collection without copying the data, making it efficient for
    querying purposes. This method is typically used when displaying or processing
    calendar events in the game interface or during event management operations.
  parameters: []
  returns: A constant reference to the CalendarEventStore containing all calendar
    events managed by this CalendarMgr instance. The reference provides read-only
    access to the event collection and remains valid as long as the CalendarMgr instance
    exists.
  examples:
  - title: Iterating Through All Calendar Events
    code: "void DisplayAllEvents()\n{\n    const auto& events = sCalendarMgr->GetEvents();\n\
      \    for (const auto& event : events)\n    {\n        // Process each calendar\
      \ event\n        printf(\"Event: %s\\n\", event->GetName().c_str());\n    }\n\
      }"
    language: cpp
  - title: Checking Event Count
    code: "void PrintEventCount()\n{\n    const auto& events = sCalendarMgr->GetEvents();\n\
      \    printf(\"Total calendar events: %zu\\n\", events.size());\n}"
    language: cpp
  notes: The returned CalendarEventStore reference provides read-only access to the
    event data. Modifications to individual events should be done through appropriate
    CalendarMgr methods rather than directly modifying the stored events. The method
    is thread-safe for read operations as it returns a const reference, but concurrent
    modifications require proper synchronization.
  warnings: Be aware that the returned reference becomes invalid if the CalendarMgr
    instance is destroyed or if the underlying event store is modified externally.
    Always ensure the CalendarMgr instance remains valid while using the returned
    reference. Avoid modifying events through this reference directly as it may lead
    to inconsistent state.
  related:
  - CalendarMgr::AddEvent
  - CalendarMgr::RemoveEvent
  - CalendarMgr::GetEvent
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T16:33:05.116270'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
