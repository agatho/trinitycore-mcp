api:
  class: Player
  method: SetCommandStatusOn
  signature: void Player::SetCommandStatusOn(uint32 command)
documentation:
  brief: Enables a specific command for the player, allowing them to execute that
    command.
  description: The SetCommandStatusOn method is used to activate a particular command
    within the TrinityCore framework, enabling the player to use that command. This
    method is typically invoked when a player needs to have access to certain commands
    or abilities, such as those related to GM (Game Master) privileges or special
    in-game features. The command parameter specifies which command should be enabled,
    and it's usually tied to a specific command ID or index within the game's command
    system.
  parameters:
  - name: command
    description: The command ID or index that needs to be enabled for the player.
      This value typically corresponds to a specific command in the game's command
      list, such as those used for GM commands or special abilities.
  returns: null
  examples:
  - title: Enable a GM command
    code: 'Player* player = new Player();

      player->SetCommandStatusOn(123);

      // This enables command 123 for the player'
    language: cpp
  notes: This method is typically used in conjunction with other command-related methods
    like SetCommandStatusOff or GetCommandStatus to manage player command access.
    It should be noted that enabling commands may have implications on game balance
    and player behavior, particularly for GM commands.
  warnings: null
  related:
  - SetCommandStatusOff
  - GetCommandStatus
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T15:15:15.951646'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
