api:
  class: BotLevelManager
  method: GetStats
  signature: LevelManagerStats BotLevelManager::GetStats() const
documentation:
  brief: Retrieves statistical information about the bot level management system
  description: The GetStats method returns a LevelManagerStats structure containing
    comprehensive statistics about the bot level management system. This includes
    data such as total bots managed, average level, level distribution, and other
    relevant metrics that provide insight into the current state and performance of
    the bot leveling subsystem. The returned statistics are typically used for monitoring,
    debugging, and administrative purposes within the TrinityCore framework.
  parameters: []
  returns: A LevelManagerStats object containing various statistical metrics about
    the bot level management system, including counts, averages, and distribution
    data.
  examples:
  - title: Basic Usage Example
    code: 'BotLevelManager* levelManager = sObjectMgr->GetBotLevelManager();

      LevelManagerStats stats = levelManager->GetStats();

      std::cout << "Total bots: " << stats.totalBots << std::endl;

      std::cout << "Average level: " << stats.averageLevel << std::endl;'
    language: cpp
  notes: This method is typically used for administrative monitoring and debugging
    purposes. The statistics returned may be updated periodically or on-demand depending
    on the implementation. The LevelManagerStats structure should be treated as read-only
    since it represents a snapshot of current system state.
  warnings: The returned LevelManagerStats object contains a snapshot of data at the
    time of method call. If real-time statistics are required, consider calling this
    method frequently or using alternative approaches that provide live updates.
  related:
  - GetBotCount
  - GetAverageLevel
  - GetLevelDistribution
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:15:44.270258'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
