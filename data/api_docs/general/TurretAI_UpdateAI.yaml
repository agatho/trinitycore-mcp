api:
  class: TurretAI
  method: UpdateAI
  signature: void TurretAI::UpdateAI(int diff)
documentation:
  brief: Updates the turret's AI behavior based on elapsed time and target status.
  description: The UpdateAI method is responsible for driving the artificial intelligence
    logic of a turret creature in TrinityCore. It processes the turret's current state,
    handles target acquisition and engagement, manages firing mechanics, and updates
    the turret's behavior over time. This method is called regularly by the core game
    loop with a time delta parameter that represents the milliseconds elapsed since
    the last update. The turret AI typically manages patrol paths, target selection,
    weapon firing, and interaction with nearby enemies or players within its detection
    range.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last call to UpdateAI.
      This value is used to determine how much time has passed for AI timing calculations,
      such as cooldowns, firing rates, and behavior transitions.
  returns: null
  examples:
  - title: Basic usage within a custom turret AI implementation
    code: "class MyTurretAI : public TurretAI {\npublic:\n    MyTurretAI(Creature*\
      \ creature) : TurretAI(creature) {}\n\n    void UpdateAI(uint32 diff) override\
      \ {\n        // Call parent implementation\n        TurretAI::UpdateAI(diff);\n\
      \n        // Custom logic can be added here\n        if (!UpdateVictim())\n\
      \            return;\n\n        // Additional turret-specific behavior\n   \
      \     if (me->getVictim() && me->IsWithinLOSInMap(me->getVictim())) {\n    \
      \        // Fire weapon logic\n        }\n    }\n};"
    language: cpp
  notes: This method is automatically invoked by the core game engine at regular intervals.
    Developers should not call this method directly unless implementing a custom AI
    class that inherits from TurretAI. The diff parameter is crucial for accurate
    timing of behaviors like firing delays, cooldowns, and movement transitions.
  warnings: Modifying turret behavior in this method can affect gameplay balance.
    Be cautious when altering targeting or firing logic as it may impact player experience
    or cause unexpected behavior in combat scenarios.
  related:
  - TurretAI::UpdateVictim
  - TurretAI::AttackStart
  - TurretAI::DoMeleeAttackIfReady
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:06:02.105930'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
