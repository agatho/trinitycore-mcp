api:
  class: Unit
  method: GetAuraApplicationOfRankedSpell
  signature: AuraApplication * Unit::GetAuraApplicationOfRankedSpell(uint32 spellId,
    int casterGUID, int itemCasterGUID, uint32 reqEffMask, AuraApplication * except)
    const
documentation:
  brief: Returns the aura application for a ranked spell with specific caster and
    item caster GUIDs.
  description: This method retrieves the AuraApplication associated with a ranked
    spell, considering the specified caster GUID and item caster GUID. It allows filtering
    by required effect mask and can exclude a specific aura application from the result.
    The method is commonly used in World of Warcraft's TrinityCore framework to manage
    spell effects and their applications on units. This function is particularly useful
    for handling complex spell interactions where multiple ranks exist, and it helps
    in determining which aura application should be returned based on various conditions.
  parameters:
  - name: spellId
    description: The identifier of the ranked spell to retrieve the aura application
      for. Must be a valid spell ID.
  - name: casterGUID
    description: The GUID of the caster (player or creature) that originally applied
      the spell. This parameter is used to filter the aura application based on the
      caster's identity.
  - name: itemCasterGUID
    description: The GUID of the item caster that applied the spell. Used for filtering
      aura applications from items, such as enchantments or other item-based effects.
  - name: reqEffMask
    description: The required effect mask to filter which aura application should
      be returned. This is used to specify which effects should be considered when
      retrieving the aura application.
  - name: except
    description: An optional aura application to exclude from results, allowing for
      more precise filtering of the returned aura application.
  returns: Returns a pointer to the AuraApplication associated with the ranked spell.
    If no matching aura application is found, it returns nullptr. This indicates that
    the method may return null if no valid aura application matches the specified
    criteria.
  examples:
  - title: Basic usage example
    code: AuraApplication* auraApp = unit->GetAuraApplicationOfRankedSpell(12345,
      67890, 11122, 0x01, nullptr);
    language: cpp
  - title: Advanced usage example with filtering
    code: AuraApplication* auraApp = unit->GetAuraApplicationOfRankedSpell(54321,
      98765, 32109, 0x03, nullptr);
    language: cpp
  notes: This method is typically used in spell handling logic and requires careful
    consideration of the caster GUID and item caster GUID to ensure correct filtering.
    Performance-wise, it may involve multiple checks depending on how many aura applications
    are stored for a unit, so it's recommended to use it judiciously.
  warnings: Improper use of this method can lead to incorrect aura application retrieval,
    especially if the caster or item caster GUIDs are not properly set. Also, if the
    spellId is invalid or does not exist in the system, the method may return nullptr
    without error.
  related:
  - GetAuraApplication
  - GetAuraApplicationOfSpell
  - GetAuraApplicationBySpellId
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:32:13.232653'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
