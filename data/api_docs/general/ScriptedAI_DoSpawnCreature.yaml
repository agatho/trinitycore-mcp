api:
  class: ScriptedAI
  method: DoSpawnCreature
  signature: int * ScriptedAI::DoSpawnCreature(int entry, float offsetX, float offsetY,
    float offsetZ, float angle, int type, int despawntime)
documentation:
  brief: Spawns a creature with the specified entry at the given offset position and
    returns a pointer to the spawned creature.
  description: The DoSpawnCreature method is used in TrinityCore's ScriptedAI framework
    to dynamically spawn a new creature instance into the world. It allows developers
    to create creatures programmatically during AI execution, such as summoning minions
    or enemies. The method takes several parameters including the creature entry ID,
    offset coordinates relative to the AI's position, an angle for orientation, type
    of spawn (such as temporary or permanent), and despawn time. The spawned creature
    is returned as a pointer which can be used for further manipulation or tracking
    within the AI logic. This functionality is commonly used in boss encounters or
    scripted events where creatures need to appear at specific locations or times.
  parameters:
  - name: entry
    description: The creature entry ID (creature_template.entry) that defines what
      type of creature to spawn
  - name: offsetX
    description: X coordinate offset from the AI's current position where the creature
      will be spawned
  - name: offsetY
    description: Y coordinate offset from the AI's current position where the creature
      will be spawned
  - name: offsetZ
    description: Z coordinate offset from the AI's current position where the creature
      will be spawned
  - name: angle
    description: Orientation angle in radians for the spawned creature's facing direction
  - name: type
    description: Spawn type identifier (e.g., 0 = temporary, 1 = permanent, etc.)
      that determines how the creature behaves
  - name: despawntime
    description: Time in milliseconds after which the spawned creature will automatically
      despawn (0 = never despawns)
  returns: Returns a pointer to the newly spawned Creature object, or NULL if spawning
    failed. The returned pointer can be used to access and manipulate the spawned
    creature's properties and behavior.
  examples:
  - title: Basic creature spawn
    code: Creature* summoned = DoSpawnCreature(12345, 2.0f, 0.0f, 0.0f, 0.0f, 0, 60000);
    language: cpp
  - title: Summon multiple creatures in a circle
    code: "for (int i = 0; i < 4; ++i)\n{\n    float angle = M_PI / 2 * i;\n    float\
      \ x = cos(angle) * 3.0f;\n    float y = sin(angle) * 3.0f;\n    Creature* minion\
      \ = DoSpawnCreature(12346, x, y, 0.0f, angle, 0, 30000);\n}"
    language: cpp
  notes: The spawned creature will inherit the AI behavior of the parent if it has
    one assigned. The method uses the AI's current position as the base for offset
    calculations. Be cautious with large numbers of spawns as they can impact performance.
    The returned pointer is valid only until the creature despawns or is removed from
    the world.
  warnings: Do not call this method from within a loop without proper timing control,
    as it may cause excessive resource usage. Ensure that the entry ID corresponds
    to an existing creature template in the database, otherwise spawning will fail
    silently. The despawn time parameter should be carefully considered to avoid memory
    leaks or unexpected behavior.
  related:
  - DoCast
  - DoMeleeAttackIfReady
  - DoMoveTo
  - DoResetThreat
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T18:06:09.746369'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
