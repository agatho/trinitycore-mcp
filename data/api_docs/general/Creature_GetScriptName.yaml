api:
  class: Creature
  method: GetScriptName
  signature: std::string Creature::GetScriptName() const
documentation:
  brief: Returns the script name assigned to the creature instance
  description: The GetScriptName method retrieves the script name that has been assigned
    to a specific creature instance within the TrinityCore framework. This script
    name is typically used for identifying and managing creature behaviors through
    script systems, allowing developers to distinguish between different types of
    creatures or specific instances of creatures with unique scripting requirements.
    The method returns a string value representing the script name which can be used
    for various game mechanics purposes including but not limited to identifying creature
    AI behavior, managing creature-specific scripts, and performing conditional checks
    based on script names.
  parameters: []
  returns: Returns a std::string containing the script name assigned to the creature
    instance. If no script name has been assigned, it returns an empty string. The
    returned string may be used for comparison operations or to identify specific
    creature behaviors within the game.
  examples:
  - title: Basic Usage Example
    code: "Creature* creature = ...;\nstd::string scriptName = creature->GetScriptName();\n\
      if (!scriptName.empty()) {\n    // Perform actions based on script name\n}"
    language: cpp
  notes: This method is part of the Creature class and should be used carefully when
    dealing with creature instances that may have been assigned scripts. The returned
    string is typically set during creature initialization or through scripting mechanisms,
    so it's important to ensure proper handling of script names in cases where multiple
    creatures share similar behaviors but different script names.
  warnings: Be cautious when using this method for conditional logic; if the script
    name is not properly assigned or initialized, it may return an empty string which
    could lead to unexpected behavior in code logic. Also, avoid relying on this method
    for identifying creature types unless you are certain about how scripts are assigned
    and managed.
  related:
  - GetEntry
  - GetGUID
  - GetScriptId
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:09:45.801687'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
