api:
  class: AuraEffect
  method: HandleAuraAllowTalentSwapping
  signature: void AuraEffect::HandleAuraAllowTalentSwapping(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Handles the application or removal of an aura that allows talent swapping
    for the affected unit.
  description: The HandleAuraAllowTalentSwapping method manages the logic associated
    with auras that permit players to swap talents while affected by the aura. This
    method is invoked during aura application or removal and adjusts the player's
    ability to modify their talent specialization. The behavior depends on whether
    the aura is being applied (apply = true) or removed (apply = false). It typically
    interacts with the player's talent system to enable or disable talent swapping
    functionality, which can be crucial for certain class abilities, PvP mechanics,
    or special quest rewards.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter provides context about the aura's state and
      target.
  - name: mode
    description: The mode of operation for the aura effect, typically indicating how
      the aura should be processed (e.g., application, removal, update).
  - name: apply
    description: Boolean flag indicating whether the aura is being applied (true)
      or removed (false). Controls the direction of the talent swapping behavior change.
  returns: null
  examples:
  - title: Applying Talent Swapping Aura
    code: "void ApplyTalentSwapAura(Player* player)\n{\n    if (Aura* aura = new Aura(player,\
      \ player->GetMap(), SpellInfo::GetSpellInfo(12345)))\n    {\n        AuraApplication*\
      \ app = new AuraApplication(player, aura, EFFECT_0);\n        aura->ApplyEffect(app,\
      \ 0, true);\n        aura->HandleAuraAllowTalentSwapping(app, 0, true);\n  \
      \  }\n}"
    language: cpp
  - title: Removing Talent Swapping Aura
    code: "void RemoveTalentSwapAura(Aura* aura)\n{\n    if (aura && aura->GetCaster()\
      \ && aura->GetTarget())\n    {\n        AuraApplication* app = aura->GetApplicationOf(aura->GetCaster());\n\
      \        if (app)\n        {\n            aura->HandleAuraAllowTalentSwapping(app,\
      \ 0, false);\n        }\n    }\n}"
    language: cpp
  notes: This method is part of the TrinityCore's aura handling system and directly
    interacts with player talent management. It should only be called from within
    the aura application process. The mode parameter may affect how the aura behaves
    in different contexts, such as during combat or in specific zones.
  warnings: Improper usage of this method can lead to incorrect talent swapping behavior
    for players, potentially causing issues in gameplay or quest progression. Ensure
    that all aura applications and removals are properly synchronized with the player's
    current state.
  related:
  - Aura::ApplyEffect
  - Aura::RemoveAura
  - Player::UpdateTalentSpecs
  - AuraApplication::GetTarget
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:36:23.559770'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
