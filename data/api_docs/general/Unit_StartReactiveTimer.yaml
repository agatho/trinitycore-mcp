api:
  class: Unit
  method: StartReactiveTimer
  signature: void Unit::StartReactiveTimer(ReactiveType reactive)
documentation:
  brief: Starts a reactive timer for the unit's ability usage.
  description: This method initiates a reactive timer that governs when a unit can
    use its reactive abilities again. The timer is typically used for abilities like
    defensive stance, spell casting, or other cooldown-based mechanics. It ensures
    proper timing and prevents immediate reactivation of abilities after use. The
    method is commonly used in conjunction with other reactive-related methods to
    manage combat behavior.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->StartReactiveTimer(REACTIVE_TYPE_MELEE);

      '
    language: cpp
  notes: The method likely involves internal timer management and should be used carefully
    to avoid conflicts with other reactive mechanics. Performance impact is minimal
    but may affect combat timing if misused.
  warnings: null
  related:
  - Unit::GetReactiveTimer
  - Unit::SetReactiveTimer
  - Unit::IsReactiveTimerReady
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:11:28.351252'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
