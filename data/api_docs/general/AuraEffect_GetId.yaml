api:
  class: AuraEffect
  method: GetId
  signature: uint32 AuraEffect::GetId() const
documentation:
  brief: Returns the unique identifier of the aura effect instance.
  description: The GetId method retrieves the unique identifier assigned to a specific
    aura effect instance within the TrinityCore framework. This identifier is used
    internally by the server to distinguish between different active aura effects
    on a unit. The returned value typically corresponds to the aura effect's index
    or database entry ID, which can be useful for identifying specific effects during
    gameplay mechanics such as spell proc tracking, effect modification, or conditional
    logic evaluation. This method does not require any parameters and is read-only,
    making it safe to call from any context where an AuraEffect object is accessible.
  parameters: []
  returns: A uint32 value representing the unique identifier of this aura effect instance.
    This identifier is typically used internally by TrinityCore to track and manage
    active aura effects on units.
  examples:
  - title: Basic Usage to Identify Aura Effect
    code: "AuraEffect* auraEff = unit->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\nif\
      \ (auraEff)\n{\n    uint32 effectId = auraEff->GetId();\n    // Use effectId\
      \ for further processing\n}"
    language: cpp
  - title: Using Aura Effect ID in Conditional Logic
    code: "Unit* target = ...;\nfor (uint8 i = 0; i < MAX_AURAS; ++i)\n{\n    AuraEffect*\
      \ auraEff = target->GetAuraEffectByIndex(i);\n    if (auraEff && auraEff->GetId()\
      \ == 12345)\n    {\n        // Perform specific action for this aura effect\n\
      \        break;\n    }\n}"
    language: cpp
  notes: The returned ID is not necessarily the spell ID or effect index from the
    spell definition. It represents an internal identifier assigned when the aura
    effect is created and managed by the server's aura system. This value should be
    treated as opaque and used primarily for comparison and identification purposes
    within the core game logic.
  warnings: null
  related:
  - GetAura
  - GetSpellId
  - GetEffectIndex
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:03:29.663566'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
