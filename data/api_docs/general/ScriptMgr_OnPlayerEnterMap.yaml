api:
  class: ScriptMgr
  method: OnPlayerEnterMap
  signature: void ScriptMgr::OnPlayerEnterMap(Map * map, Player * player)
documentation:
  brief: Invoked when a player enters a map, allowing scripts to execute custom logic.
  description: The OnPlayerEnterMap method is a callback function in the ScriptMgr
    class that gets triggered whenever a Player object enters a Map. This method serves
    as an event handler for map entry events and allows custom scripts or modules
    to perform actions when a player transitions into a new map area. It is commonly
    used for implementing quest triggers, initializing player states, or applying
    temporary effects upon map entry. The method does not return any value and operates
    purely as a notification mechanism.
  parameters:
  - name: map
    description: Pointer to the Map object that the player is entering. This represents
      the game world area where the player has moved.
  - name: player
    description: Pointer to the Player object who is entering the map. This refers
      to the specific player instance triggering the event.
  returns: null
  examples:
  - title: Basic implementation of OnPlayerEnterMap
    code: "class MyScript : public ScriptObject\n{\npublic:\n    MyScript() : ScriptObject(\"\
      MyScript\") {}\n\n    void OnPlayerEnterMap(Map* map, Player* player) override\n\
      \    {\n        // Example: Send a welcome message when player enters the map\n\
      \        player->SendNotification(\"Welcome to the map!\");\n    }\n};"
    language: cpp
  - title: Advanced usage with conditional logic
    code: "class QuestTriggerScript : public ScriptObject\n{\npublic:\n    QuestTriggerScript()\
      \ : ScriptObject(\"QuestTriggerScript\") {}\n\n    void OnPlayerEnterMap(Map*\
      \ map, Player* player) override\n    {\n        // Example: Check if player\
      \ has completed a quest before allowing access to certain areas\n        if\
      \ (player->GetQuestStatus(12345) == QUEST_STATUS_COMPLETE)\n        {\n    \
      \        player->AddAura(67890, player); // Apply aura\n        }\n    }\n};"
    language: cpp
  notes: This method is called during the player's map transition process, so it should
    avoid heavy computations or blocking operations to prevent performance issues.
    It may be invoked multiple times per player depending on how they move through
    the game world.
  warnings: Avoid modifying core player data structures directly within this callback
    without proper synchronization. Ensure that any modifications made to the player
    or map state are thread-safe and do not cause race conditions.
  related:
  - OnPlayerLeaveMap
  - OnMapUpdate
  - OnPlayerLogin
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T22:19:43.322723'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
