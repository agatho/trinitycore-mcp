api:
  class: Player
  method: GetTotalBaseModValue
  signature: float Player::GetTotalBaseModValue(int modGroup) const
documentation:
  brief: Returns the total base modifier value for a specified modifier group.
  description: This method retrieves the cumulative base modifier value for a given
    modifier group, which is used in various game mechanics such as stat calculations,
    damage modifiers, and resistance values. The method operates on a per-modifier-group
    basis, allowing players to access specific modifier values without having to manually
    calculate or track them. It's particularly useful for determining how modifiers
    affect player attributes or combat effectiveness.
  parameters: []
  returns: Returns a float value representing the total base modifier value for the
    specified modifier group. This value can be positive or negative depending on
    the modifier type and current state of the player's attributes.
  examples:
  - title: Basic usage example
    code: float modifierValue = player->GetTotalBaseModValue(MODIFIER_DAMAGE);
    language: cpp
  notes: This method is typically used internally by TrinityCore for calculating base
    modifiers in various game systems. The implementation may involve checking multiple
    sources of modifiers and summing them up, which could impact performance if called
    frequently.
  warnings: Care should be taken when using this method as it may not always return
    accurate values if the player's state changes during gameplay. Also note that
    modifier groups are defined in a specific way within TrinityCore, so incorrect
    usage can lead to unexpected results.
  related:
  - GetTotalBaseModValue
  - GetBaseModValue
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T16:14:43.486882'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
