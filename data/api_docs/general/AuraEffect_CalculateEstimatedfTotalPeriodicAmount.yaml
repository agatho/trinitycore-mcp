api:
  class: AuraEffect
  method: CalculateEstimatedfTotalPeriodicAmount
  signature: float AuraEffect::CalculateEstimatedfTotalPeriodicAmount(Unit * caster,
    Unit * target, const SpellInfo * spellInfo, const int & spellEffectInfo, float
    amount, uint8 stack)
documentation:
  brief: Calculates the estimated total periodic amount for an aura effect based on
    caster, target, spell info, and other parameters.
  description: This method computes the estimated total periodic damage or healing
    amount that will be applied by a periodic aura effect over its duration. It takes
    into account various factors such as the caster's stats, target's resistance,
    spell properties, effect scaling, and stack count. The calculation is used primarily
    for UI display purposes and prediction of aura effects before they are fully applied.
    This function does not modify any game state but provides a predictive value based
    on current conditions.
  parameters:
  - name: caster
    description: Pointer to the Unit that cast the spell. Can be null if the effect
      is not caster-specific.
  - name: target
    description: Pointer to the Unit that is affected by the aura. Used for resistance
      calculations and target-specific modifiers.
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing spell properties and
      effect data. Required for determining base values and scaling factors.
  - name: spellEffectInfo
    description: Integer representing the specific spell effect index within the spell.
      Used to determine which effect parameters to use from spellInfo.
  - name: amount
    description: Base amount of the aura effect. This is typically the value from
      the spell effect that gets modified by various multipliers and calculations.
  - name: stack
    description: Number of stacks of the aura. Affects the final calculated amount
      through stacking modifiers.
  returns: Returns a float representing the estimated total periodic amount for the
    aura effect. This value is typically used for UI display or prediction purposes
    and may not represent the exact final damage/healing done due to randomization
    and other game mechanics.
  examples:
  - title: Basic usage in aura application
    code: "float estimatedAmount = auraEffect->CalculateEstimatedfTotalPeriodicAmount(caster,\
      \ target, spellInfo, effectIndex, baseAmount, stackCount);\n// Use estimatedAmount\
      \ for UI display or prediction\nif (estimatedAmount > 0)\n{\n    // Display\
      \ predicted damage/healing amount\n}"
    language: cpp
  - title: Using with spell effect handling
    code: "AuraEffect* auraEffect = unit->GetAuraEffect(spellId, EFFECT_0);\nif (auraEffect)\n\
      {\n    float totalAmount = auraEffect->CalculateEstimatedfTotalPeriodicAmount(\n\
      \        caster,\n        target,\n        spellInfo,\n        spellInfo->GetEffect(EFFECT_0)->EffectIndex,\n\
      \        spellInfo->GetEffect(EFFECT_0)->BasePoints,\n        auraEffect->GetStackAmount()\n\
      \    );\n    // Process totalAmount for UI or logging\n}"
    language: cpp
  notes: This method is primarily used for predictive calculations and UI updates.
    The actual damage/healing values may vary due to randomization, critical hits,
    and other game mechanics that occur during the actual application of the aura.
    The calculation does not account for all possible modifiers that might affect
    the final result in real gameplay.
  warnings: This method should only be used for predictive purposes and not for determining
    actual damage/healing values. The returned value is an estimate and may not reflect
    the exact outcome due to randomization, critical hits, or other unpredictable
    game mechanics. Do not use this value for modifying game state or applying effects
    directly.
  related:
  - GetAura
  - GetAmount
  - GetStackAmount
  - GetSpellInfo
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:41:15.919542'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
