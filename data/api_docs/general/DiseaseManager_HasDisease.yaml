api:
  class: DiseaseManager
  method: HasDisease
  signature: bool DiseaseManager::HasDisease(Unit * target, DiseaseType type)
documentation:
  brief: Checks if a target unit has a specific disease type applied.
  description: The HasDisease method determines whether a specified Unit (such as
    a player or creature) currently has a particular DiseaseType active on them. This
    is commonly used in World of Warcraft mechanics to check for afflictions like
    poison, disease, or other harmful effects that can be applied through spells or
    abilities. The method evaluates the target's current state and returns true if
    the specified disease type is present, otherwise false. It typically interacts
    with the unit's aura system to verify active disease effects.
  parameters:
  - name: target
    description: Pointer to the Unit object (player or creature) whose disease status
      is being checked. Must not be null.
  - name: type
    description: The DiseaseType enum value specifying which disease to check for
      on the target unit. Valid values are defined by the DiseaseType enumeration.
  returns: Returns true if the specified disease type is currently active on the target
    unit, false otherwise.
  examples:
  - title: Basic Usage
    code: "if (diseaseManager->HasDisease(player, DISEASE_TYPE_POISON)) {\n    //\
      \ Player has poison applied\n    player->CastSpell(player, SPELL_POISONED, true);\n\
      }"
    language: cpp
  - title: Checking Multiple Diseases
    code: "Unit* target = GetTarget();\nif (diseaseManager->HasDisease(target, DISEASE_TYPE_DISEASE))\
      \ {\n    // Apply additional disease effects\n    target->AddAura(SPELL_DISEASE_EFFECT,\
      \ target);\n} else if (diseaseManager->HasDisease(target, DISEASE_TYPE_CURSE))\
      \ {\n    // Handle curse effect\n    target->AddAura(SPELL_CURSE_EFFECT, target);\n\
      }"
    language: cpp
  notes: This method relies on the underlying aura system to determine active disease
    states. It may not detect diseases that are applied through non-aura mechanisms
    unless those are properly registered in the aura system. Performance is generally
    low as it only checks existing auras.
  warnings: Ensure that the target pointer is valid before calling this method, as
    passing a null pointer will result in undefined behavior. Also be aware that disease
    types must match exactly; for example, checking for DISEASE_TYPE_DISEASE won't
    detect all possible disease effects unless they are explicitly categorized under
    that type.
  related:
  - AddDisease
  - RemoveDisease
  - GetDiseaseType
  - HasAnyDisease
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:14:18.615034'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
