api:
  class: Pet
  method: Pet
  signature: void Pet::Pet(Player * owner, PetType type)
documentation:
  brief: Initializes a new pet instance for the specified player with the given pet
    type.
  description: The Pet constructor initializes a new pet object for a player, setting
    up the pet's properties and associations. This method is typically called when
    a player summons or creates a pet, establishing the relationship between the pet
    and its owner. The pet type determines the pet's behavior, abilities, and appearance
    within the game world. The constructor handles internal initialization of pet
    statistics, AI behavior, and database synchronization necessary for the pet to
    function correctly in the game environment.
  parameters:
  - name: owner
    description: Pointer to the Player object that will own this pet. Must be a valid
      player instance or the method may cause undefined behavior.
  - name: type
    description: The PetType enum value specifying the type of pet to create. Valid
      values include different pet classifications such as guardian, summoned, or
      companion pets with distinct behaviors and capabilities.
  returns: null
  examples:
  - title: Creating a Guardian Pet
    code: 'Player* player = ...;

      Pet* myPet = new Pet(player, PET_TYPE_GUARDIAN);

      myPet->LoadFromDB();'
    language: cpp
  - title: Initializing a Summoned Pet
    code: 'Player* player = ...;

      Pet* summonedPet = new Pet(player, PET_TYPE_SUMMONED);

      summonedPet->SetOwner(player);

      summonedPet->SaveToDB();'
    language: cpp
  notes: This constructor should only be called during pet creation or loading from
    database. It does not automatically add the pet to the player's pet list or send
    packets to clients; additional methods like AddToWorld() and SendPetInfo() are
    typically required for full functionality.
  warnings: Passing a null pointer for owner parameter will likely cause crashes or
    undefined behavior. The PetType must be valid, otherwise the pet may not behave
    correctly in-game. This constructor does not perform any validation on the input
    parameters.
  related:
  - Pet::LoadFromDB
  - Pet::SaveToDB
  - Pet::AddToWorld
  - Pet::SetOwner
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:25:24.811216'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
