api:
  class: AuraEffect
  method: IsPeriodic
  signature: bool AuraEffect::IsPeriodic() const
documentation:
  brief: Determines whether the aura effect is periodic.
  description: The IsPeriodic method checks if the aura effect applies its effect
    at regular intervals over time. This is commonly used for effects like DoT (damage
    over time) or HoT (heal over time) spells. The method returns true if the aura
    effect has a periodic tick behavior, and false otherwise. Periodic auras are typically
    managed by the game's aura system and have specific tick intervals defined by
    the spell properties.
  parameters: []
  returns: Returns true if the aura effect is periodic (applies effects at regular
    intervals), false if it applies only once or has no periodic behavior.
  examples:
  - title: Check if an aura effect is periodic before processing
    code: "AuraEffect* auraEffect = unit->GetAuraEffect(12345, 0);\nif (auraEffect\
      \ && auraEffect->IsPeriodic())\n{\n    // Handle periodic aura logic\n    //\
      \ e.g., apply damage/heal every tick\n}"
    language: cpp
  - title: Use in custom aura handling for periodic effects
    code: "void CustomAuraHandler(Unit* target, AuraEffect* aura)\n{\n    if (aura->IsPeriodic())\n\
      \    {\n        // Apply periodic effect logic\n        target->CastSpell(target,\
      \ 12345, true); // Example periodic spell\n    }\n    else\n    {\n        //\
      \ Handle non-periodic aura\n    }\n}"
    language: cpp
  notes: This method is part of the core aura system in TrinityCore and directly relates
    to how spells with periodic effects are processed. The underlying implementation
    checks internal flags or properties that define whether an aura effect should
    tick over time.
  warnings: null
  related:
  - GetPeriodic
  - SetPeriodic
  - IsNonPeriodic
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:56:23.579990'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
