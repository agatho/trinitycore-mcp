api:
  class: Player
  method: GetQuestObjectiveForItem
  signature: const int * Player::GetQuestObjectiveForItem(uint32 itemId, bool onlyIncomplete)
    const
documentation:
  brief: Returns the quest objective associated with a specific item.
  description: This method retrieves the quest objective that is linked to a given
    item ID. It allows players to check if an item has a quest objective assigned
    to it, which can be useful for tracking quest progress and understanding game
    mechanics related to item-based quests. The method returns a pointer to an integer
    representing the quest objective number, or nullptr if no objective is found.
    This functionality is particularly important in World of Warcraft's quest system
    where items can be used as quest objectives.
  parameters:
  - name: itemId
    description: The unique identifier of the item for which to retrieve the quest
      objective. This must be a valid item ID within the game.
  - name: onlyIncomplete
    description: When set to true, only returns objectives for incomplete quests;
      when false, returns all objectives regardless of quest completion status.
  returns: Returns a pointer to an integer representing the quest objective number
    associated with the item. If no quest objective is found, it returns nullptr.
    The returned value can be used to determine if an item is part of a quest and
    what that quest's objective number is.
  examples:
  - title: Basic Usage Example
    code: "int* questObjective = player->GetQuestObjectiveForItem(12345, true);\n\
      if (questObjective != nullptr)\n{\n    // Item has a quest objective\n    std::cout\
      \ << \"Quest Objective: \" << *questObjective << std::endl;\n}\nelse\n{\n  \
      \  // No quest objective found\n    std::cout << \"No quest objective found\
      \ for item.\" << std::endl;\n}"
    language: cpp
  notes: This method is typically used in conjunction with other quest-related methods
    to track progress. It's important to note that the returned pointer may be invalid
    if the item does not have a quest objective assigned, so developers should always
    check for nullptr before dereferencing. Performance-wise, this method involves
    searching through the player's quest log, which could be slow if many quests are
    active.
  warnings: Be cautious when using this method in loops or with large numbers of items,
    as it may cause performance issues due to quest log traversal. Also, ensure that
    the item ID passed is valid and exists in the game database, otherwise the result
    may be unpredictable or null.
  related:
  - GetQuestObjectiveForItem
  - GetQuestForItem
  - GetQuestObjectiveForQuest
  - GetQuestObjectiveForNPC
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T16:36:15.026344'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
