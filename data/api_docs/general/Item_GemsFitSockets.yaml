api:
  class: Item
  method: GemsFitSockets
  signature: bool Item::GemsFitSockets() const
documentation:
  brief: Checks whether all gems socketed into the item fit properly in their respective
    sockets.
  description: The GemsFitSockets method evaluates whether every gem currently inserted
    into the item's sockets is compatible with those sockets. This check ensures that
    gems are not only physically present but also meet the requirements for the socket
    type (e.g., red, yellow, blue, or meta). The method is typically used during item
    modification operations such as gem insertion or removal to validate the state
    of the item. It does not modify the item's state but returns a boolean indicating
    whether all gems are properly fitted in their sockets.
  parameters: []
  returns: Returns true if all gems in the item's sockets are compatible and properly
    fitted, false otherwise.
  examples:
  - title: Check if Gems Fit Sockets Before Removing a Gem
    code: "Item* item = player->GetItemByPos(INVENTORY_SLOT_BAG_0, SLOT_HEAD);\nif\
      \ (item && item->GemsFitSockets()) {\n    // Proceed with gem removal logic\n\
      \    item->RemoveGem(0); // Remove first gem\n}"
    language: cpp
  - title: Validate Gem State Before Equipment Swap
    code: "Item* newItem = player->GetItemByPos(INVENTORY_SLOT_BAG_0, SLOT_NECK);\n\
      if (newItem && newItem->GemsFitSockets()) {\n    // Proceed with equipping the\
      \ item\n    player->EquipItem(INVENTORY_SLOT_BAG_0, SLOT_NECK, newItem);\n}\
      \ else {\n    // Handle invalid gem configuration\n    player->SendNotification(\"\
      Invalid gem configuration in item.\");\n}"
    language: cpp
  notes: This method relies on the internal socket and gem data structures of the
    Item class. It may be computationally expensive if called frequently on items
    with many sockets, as it iterates through each socket to validate its corresponding
    gem.
  warnings: Do not rely solely on this method for preventing invalid gem configurations
    in user-facing UIs; always perform additional validation before allowing gem insertion
    or removal operations.
  related:
  - Item::AddGem
  - Item::RemoveGem
  - Item::GetSocketedGem
  - Item::GetGemCount
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T11:24:27.848919'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
