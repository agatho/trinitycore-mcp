api:
  class: Unit
  method: GetUnitCriticalChanceAgainst
  signature: float Unit::GetUnitCriticalChanceAgainst(int attackType, const Unit *
    victim) const
documentation:
  brief: Calculates the critical chance of a unit against a specific attack type and
    victim.
  description: This method determines the base critical chance for a unit when performing
    attacks against a specified victim, considering the attack type. It returns a
    float value representing the percentage chance of landing a critical hit. The
    method is commonly used in combat calculations to determine how often an attack
    will critically hit based on the unit's attributes and the victim's resistance
    or vulnerability. This function typically involves checking various factors such
    as base critical chance, critical chance modifiers, and victim-specific resistance
    adjustments.
  parameters:
  - name: attackType
    description: An integer representing the type of attack being performed (e.g.,
      melee, ranged, spell). Valid values include 0 for melee attacks, 1 for ranged
      attacks, and 2 for spell attacks.
  - name: victim
    description: A pointer to the Unit object that is being attacked. This parameter
      defines the target against which the critical chance is calculated.
  returns: Returns a float value representing the percentage chance of landing a critical
    hit. The value typically ranges from 0.0 to 100.0, where 0.0 indicates no chance
    of critical hit and 100.0 indicates guaranteed critical hit.
  examples:
  - title: Basic usage example
    code: float criticalChance = unit->GetUnitCriticalChanceAgainst(0, target); //
      Melee attack
    language: cpp
  - title: Advanced usage example
    code: "float criticalChance = unit->GetUnitCriticalChanceAgainst(2, target); //\
      \ Spell attack\nif (criticalChance > 50.0f) {\n    // Handle critical hit logic\n\
      }"
    language: cpp
  notes: This method is part of the core combat system and may be affected by various
    modifiers such as critical chance buffs, debuffs, and resistance adjustments.
    It should be used carefully in performance-critical code sections.
  warnings: The method may return 0.0 if the victim is null or if the attack type
    is invalid. Be cautious when using this method with different attack types as
    it may not behave consistently across all types of attacks.
  related:
  - GetUnitCriticalChance
  - GetUnitAttackPower
  - GetUnitSpellCriticalChance
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T12:32:55.086915'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
