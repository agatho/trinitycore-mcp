api:
  class: Player
  method: ApplyModDamageDonePos
  signature: void Player::ApplyModDamageDonePos(int school, int32 mod, bool apply)
documentation:
  brief: Applies a damage modifier to the specified school of damage done by the player.
  description: This method modifies the damage done by the player for a specific school
    type. It is used to adjust damage values based on various factors such as buffs,
    debuffs, or other game mechanics. The method allows for precise control over how
    much damage is applied to different types of damage, making it useful for implementing
    custom game effects or adjusting existing gameplay elements. This function typically
    affects the player's attack power and spell damage calculations.
  parameters:
  - name: school
    description: The school type of damage to modify (0-4). Valid values are 0=physical,
      1=fire, 2=frost, 3=nature, 4=arcane.
  - name: mod
    description: The amount of damage modifier to apply. Positive values increase
      damage, negative values decrease it.
  - name: apply
    description: Whether to apply (true) or remove (false) the modifier.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->ApplyModDamageDonePos(1, 50, true); // Apply 50 damage bonus to fire
      damage'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = new Player();

      player->ApplyModDamageDonePos(3, -100, false); // Remove 100 damage penalty
      from nature damage'
    language: cpp
  notes: This method likely affects the player's damage calculations and may be used
    in conjunction with other methods like ApplyModSpellDamageDone. The implementation
    involves updating internal damage modifiers for each school type, which can impact
    combat performance.
  warnings: Improper use of this method can lead to incorrect damage calculations
    and potentially unbalanced gameplay. Care should be taken when applying negative
    values or modifying multiple schools simultaneously.
  related:
  - ApplyModDamageDoneNeg
  - ApplyModSpellDamageDonePos
  - ApplyModSpellDamageDoneNeg
  - GetDamageDone
  - GetSpellDamageDone
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T01:15:51.148766'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
