api:
  class: Player
  method: GetBaseSkillValue
  signature: uint16 Player::GetBaseSkillValue(uint32 skill) const
documentation:
  brief: Returns the base skill value for a specified skill.
  description: This method retrieves the base skill value of a player for a given
    skill ID. The base skill value represents the fundamental skill level without
    any temporary modifiers or bonuses, such as those from potions or spells. It is
    typically used in conjunction with other skill-related methods to determine overall
    skill progression and player capabilities within the game. This method is commonly
    employed when checking a player's current skill level before applying modifications
    or when calculating skill-based rewards.
  parameters:
  - name: skill
    description: The skill ID for which to retrieve the base value. This parameter
      corresponds to a specific skill in the game's skill system, such as Alchemy,
      Enchanting, or First Aid.
  returns: Returns the base skill value as a uint16, representing the player's skill
    level without any temporary modifiers or bonuses applied.
  examples:
  - title: Basic usage example
    code: uint16 baseSkill = player->GetBaseSkillValue(129); // Retrieves the base
      skill value for Enchanting (ID 129)
    language: cpp
  - title: Advanced usage example
    code: "uint16 baseSkill = player->GetBaseSkillValue(171); // Retrieves the base\
      \ skill value for First Aid (ID 171)\nif (baseSkill >= 100) {\n    // Player\
      \ has at least 100 base skill in First Aid\n}\nelse {\n    // Player has less\
      \ than 100 base skill in First Aid\n}"
    language: cpp
  notes: This method is part of the player's skill management system and should be
    used carefully when calculating skill bonuses or determining skill progression.
    The returned value represents only the base skill level, not including any temporary
    modifiers that may affect the actual skill level.
  warnings: Be cautious when using this method in conjunction with other skill-related
    methods, as it does not account for temporary skill modifiers or bonuses that
    might be applied during gameplay. This can lead to incorrect calculations if not
    properly understood.
  related:
  - GetSkillValue
  - GetMaxSkillValue
  - SetSkill
  - AddSkill
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:22:00.391709'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
