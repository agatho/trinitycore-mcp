api:
  class: Unit
  method: CanFreeMove
  signature: bool Unit::CanFreeMove() const
documentation:
  brief: Checks whether the unit can move freely without restrictions.
  description: The CanFreeMove method determines if a unit is currently allowed to
    move freely, typically used in scenarios where movement restrictions are applied
    such as during combat or when certain effects are active. This method returns
    true if the unit can move without constraints and false otherwise. It's commonly
    used in game mechanics related to movement control, such as preventing units from
    being immobilized by effects like fear or root. The method is often called during
    update cycles or when checking movement status for various gameplay scenarios.
  parameters: []
  returns: Returns true if the unit can move freely without restrictions, false otherwise.
    This indicates whether movement is currently allowed or restricted.
  examples:
  - title: Basic usage example
    code: "if (unit->CanFreeMove())\n{\n    // Unit can move freely\n    // Proceed\
      \ with movement logic\n}"
    language: cpp
  notes: 'Implementation details: This method likely checks internal state flags or
    conditions that prevent movement. Performance considerations: Since this is a
    simple boolean check, it should not impact performance significantly. Thread safety:
    This method is typically thread-safe as it only reads the current state of the
    unit.'
  warnings: null
  related:
  - Unit::HasUnitState
  - Unit::IsInCombat
  - Unit::CanMove
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:43:40.248165'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
