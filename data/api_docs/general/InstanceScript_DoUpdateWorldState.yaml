api:
  class: InstanceScript
  method: DoUpdateWorldState
  signature: void InstanceScript::DoUpdateWorldState(int32 worldStateId, int32 value)
documentation:
  brief: Updates a world state value for all players in the instance
  description: The DoUpdateWorldState method is used to update a specific world state
    variable with a new integer value for all players currently within the instance.
    World states are client-side variables that can be used to display dynamic information
    such as timers, scores, or quest progress. This method broadcasts the updated
    value to all players in the instance's map, ensuring synchronization of visual
    elements on the client side. The method does not perform any validation on the
    input values and directly sends the update to the client without requiring additional
    processing.
  parameters:
  - name: worldStateId
    description: The unique identifier of the world state variable to update. This
      ID corresponds to predefined world state constants used by the client to determine
      how to display the value.
  - name: value
    description: The new integer value to assign to the specified world state. This
      value will be displayed on the client side according to the world state's definition
      and can represent any numeric data such as counts, timers, or progress indicators.
  returns: null
  examples:
  - title: Update a timer display
    code: "void BossAI::JustDied(Unit* who)\n{\n    // Update the instance's remaining\
      \ time display\n    DoUpdateWorldState(WORLD_STATE_TIMER, 0);\n}"
    language: cpp
  - title: Update a score counter
    code: "void InstanceScript::UpdateScore(Player* player, uint32 points)\n{\n  \
      \  // Increment and update the score world state\n    uint32 currentScore =\
      \ GetWorldState(WORLD_STATE_SCORE);\n    DoUpdateWorldState(WORLD_STATE_SCORE,\
      \ currentScore + points);\n}"
    language: cpp
  notes: This method is typically called from within instance scripts to synchronize
    client-side UI elements with server-side state changes. It's important to note
    that world states are only visible to players within the same instance and do
    not persist across different instances or zones.
  warnings: Calling this method outside of an instance context may result in undefined
    behavior since it relies on the instance's map data structure. Also, excessive
    use of world state updates can cause performance issues due to client-side rendering
    overhead.
  related:
  - DoSendWorldState
  - GetWorldState
  - SetWorldState
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T00:13:28.279654'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
