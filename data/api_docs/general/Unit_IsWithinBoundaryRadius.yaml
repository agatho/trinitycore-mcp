api:
  class: Unit
  method: IsWithinBoundaryRadius
  signature: bool Unit::IsWithinBoundaryRadius(const Unit * obj) const
documentation:
  brief: Determines whether the unit is within the boundary radius of another unit.
  description: This method checks if the calling unit is within the boundary radius
    of a specified unit object. It evaluates the spatial relationship between two
    units and returns true if they are within the defined boundary distance, false
    otherwise. The method is commonly used in game mechanics to determine proximity
    for various interactions such as spell targeting, combat situations, or NPC behavior.
    This function considers the physical boundaries of the unit's area of influence
    and can be used to validate whether a unit is within range of another unit for
    actions like targeting or interaction.
  parameters:
  - name: obj
    description: The unit object to check against. This parameter represents the target
      unit whose boundary radius is being evaluated.
  returns: Returns true if the calling unit is within the boundary radius of the specified
    unit, false otherwise. The method returns false when the unit is outside the boundary
    radius or when the input unit is nullptr.
  examples:
  - title: Basic usage example
    code: "if (unit->IsWithinBoundaryRadius(targetUnit)) {\n    // Do something\n\
      }\n"
    language: cpp
  notes: This method performs a spatial check using the unit's boundary radius, which
    is typically defined by the game mechanics and may vary based on the specific
    unit type. It is important to note that this method does not consider line-of-sight
    or obstacles between units; it only evaluates distance in 3D space.
  warnings: This method should be used carefully when dealing with units that have
    different boundary radius definitions, as it may lead to incorrect results if
    the boundary radius of one unit is not properly defined. Also, this method does
    not account for terrain or obstacles between units, which could affect real-world
    proximity.
  related:
  - IsWithinDist
  - IsWithinDist3D
  - IsInMap
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T11:50:33.689996'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
