api:
  class: Item
  method: SetEnchantment
  signature: void Item::SetEnchantment(EnchantmentSlot slot, uint32 id, uint32 duration,
    uint32 charges, int caster)
documentation:
  brief: Sets an enchantment on the specified slot of an item with given ID, duration,
    and charges.
  description: This method allows developers to apply an enchantment to a specific
    slot of an Item object. It is commonly used in crafting, questing, or game master
    operations where items need to be modified with enchantments. The enchantment
    can be applied to various slots including permanent, temporary, or socket slots
    depending on the EnchantmentSlot parameter provided. The method requires a caster
    to be specified for proper handling of the enchantment effects.
  parameters:
  - name: slot
    description: The EnchantmentSlot enum value specifying which slot the enchantment
      should be applied to. Valid values include permanent, temporary, and socket
      slots.
  - name: id
    description: The enchantment ID that defines what type of enchantment is being
      applied. This typically corresponds to an entry in the EnchantTemplate database
      table.
  - name: duration
    description: The duration in seconds for which the enchantment will remain active.
      A value of 0 means the enchantment is permanent.
  - name: charges
    description: The number of charges the enchantment has remaining before it expires.
      A value of 0 indicates no charge limit.
  - name: caster
    description: The caster's GUID or object ID that is applying the enchantment.
      This is used to properly track the enchantment effects and ensure correct behavior
      in game mechanics.
  returns: null
  examples:
  - title: Basic Enchantment Application
    code: 'Item* item = new Item();

      item->SetEnchantment(ENCHANTMENT_SLOT_0, 12345, 3600, 1, 123456);

      '
    language: cpp
  - title: Advanced Enchantment with Multiple Charges
    code: 'Item* item = new Item();

      item->SetEnchantment(ENCHANTMENT_SLOT_1, 67890, 0, 3, 789012);

      '
    language: cpp
  notes: This method is typically used in conjunction with other item manipulation
    methods and should be called only when the item object has been properly initialized.
    The method does not validate the enchantment ID or slot values, so improper usage
    may lead to invalid enchantments or game crashes.
  warnings: Improper use of this method can cause items to have incorrect enchantments
    applied, leading to potential game exploits or crashes. Care should be taken when
    specifying the caster parameter as it affects how the enchantment is handled in
    game mechanics.
  related:
  - Item::GetEnchantmentSlot
  - Item::AddEnchantment
  - Item::RemoveEnchantment
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T04:35:14.261814'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
