api:
  class: AuraScript
  method: GetId
  signature: int AuraScript::GetId() const
documentation:
  brief: Returns the unique identifier of the aura instance.
  description: The GetId method retrieves the unique integer identifier associated
    with the current aura instance. This identifier is used internally by TrinityCore
    to distinguish between different active auras on a unit. The returned value corresponds
    to the aura's entry in the server's aura management system and can be used for
    various tracking, comparison, or manipulation purposes within AuraScript implementations.
    This method is typically called during aura application, removal, or update events
    to identify which specific aura is being processed.
  parameters: []
  returns: An integer representing the unique identifier of the aura instance. This
    ID is assigned by the server when the aura is created and remains constant throughout
    the aura's lifetime.
  examples:
  - title: Basic Usage in AuraScript
    code: "class MyAuraScript : public AuraScript\n{\npublic:\n    void OnApply(AuraEffect\
      \ const* aurEff, AuraEffectHandleModes mode) override\n    {\n        int auraId\
      \ = GetId();\n        // Use auraId for logging or conditional logic\n     \
      \   if (auraId == 12345)\n        {\n            // Special handling for this\
      \ specific aura\n        }\n    }\n};"
    language: cpp
  notes: The returned ID is unique per aura instance but may not be globally unique
    across all auras in the server. It's primarily used for internal tracking and
    should not be relied upon for persistent identification of aura effects across
    server restarts or reloads.
  warnings: null
  related:
  - GetAura
  - GetCaster
  - GetTarget
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:17:22.241880'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
