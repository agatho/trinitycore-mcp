api:
  class: DungeonScriptMgr
  method: HasScriptForBoss
  signature: bool DungeonScriptMgr::HasScriptForBoss(uint32 bossEntry) const
documentation:
  brief: Checks if a script exists for the specified boss entry in the dungeon script
    manager.
  description: The HasScriptForBoss method determines whether a custom script has
    been registered for a specific boss within the dungeon script system. This is
    used internally by TrinityCore to decide whether to invoke scripted behavior when
    a boss encounter begins or ends. The method performs a lookup in the internal
    registry of boss scripts and returns true if a valid script handler is found for
    the given boss entry ID, otherwise false. This functionality supports the extensibility
    of dungeon encounters through custom scripting without requiring core engine modifications.
  parameters: []
  returns: Returns true if a script exists for the specified boss entry; otherwise
    returns false.
  examples:
  - title: Basic Usage to Check Script Existence
    code: "if (sDungeonScriptMgr->HasScriptForBoss(12345)) {\n    // Custom script\
      \ exists for boss with entry ID 12345\n    // Proceed with scripted logic\n}"
    language: cpp
  notes: This method is typically used during dungeon encounter initialization to
    determine if special handling is required. It's a fast lookup operation that relies
    on internal caching mechanisms within the DungeonScriptMgr singleton.
  warnings: null
  related:
  - DungeonScriptMgr::GetScriptForBoss
  - DungeonScriptMgr::LoadScripts
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T14:07:09.651382'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
