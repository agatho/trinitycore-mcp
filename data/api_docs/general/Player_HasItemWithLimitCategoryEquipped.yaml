api:
  class: Player
  method: HasItemWithLimitCategoryEquipped
  signature: bool Player::HasItemWithLimitCategoryEquipped(uint32 limitCategory, uint32
    count, uint8 except_slot) const
documentation:
  brief: Checks if a player has items with a specific limit category equipped, considering
    a count and optional slot exclusion.
  description: This method determines whether a player has items that are subject
    to a specific limit category (such as item limit types or restrictions) equipped
    on their character. It takes into account the number of items matching the limit
    category and allows for an optional slot exclusion to avoid counting items in
    certain slots. The method is useful for checking item restrictions, such as those
    related to professions, races, or other game mechanics that restrict item usage
    based on equipment slots. This function is commonly used in game logic to enforce
    item limitations and ensure proper player inventory management.
  parameters:
  - name: limitCategory
    description: The limit category identifier (uint32) that defines the restriction
      type, such as item limit types or restrictions (e.g., profession-specific items,
      race-specific items).
  - name: count
    description: The number of items to check for within the specified limit category.
      This parameter determines how many items must be present to return true.
  - name: except_slot
    description: An optional slot index that excludes specific equipment slots from
      consideration. If set, items in this slot will not be counted towards the total
      count. Default is 0, meaning all slots are considered.
  returns: Returns true if the player has at least the specified number of items matching
    the limit category equipped, false otherwise. The method returns false if no items
    matching the limit category exist or if the count requirement is not met.
  examples:
  - title: Basic usage example
    code: bool result = player->HasItemWithLimitCategoryEquipped(12345, 2); // Checks
      for 2 items with limit category 12345
    language: cpp
  - title: Advanced usage with slot exclusion
    code: bool result = player->HasItemWithLimitCategoryEquipped(12345, 1, 10); //
      Checks for 1 item with limit category 12345 excluding slot 10 (e.g., neck)
    language: cpp
  notes: This method is typically used in conjunction with other inventory-related
    functions to enforce game mechanics such as item restrictions or limitations.
    It's important to note that the method checks for items equipped, not just carried
    in inventory. Performance considerations may arise when checking multiple limit
    categories simultaneously.
  warnings: Be cautious when using this method with large counts or limit categories
    that are frequently used in game logic. This can lead to performance issues if
    not properly optimized. Also, ensure that the limit category values are valid
    and exist within the game's item database.
  related:
  - HasItemWithLimitCategory
  - HasItemWithLimitCategoryInBag
  - HasItemWithLimitCategoryInInventory
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:04:13.597868'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
