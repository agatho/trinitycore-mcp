api:
  class: AreaTriggerScript
  method: ~AreaTriggerScript
  signature: void AreaTriggerScript::~AreaTriggerScript()
documentation:
  brief: Destroys an AreaTriggerScript instance and releases associated resources.
  description: The destructor for the AreaTriggerScript class is responsible for cleaning
    up any resources that were allocated during the object's lifetime. This includes
    releasing memory, unregistering callbacks, and ensuring proper cleanup of any
    internal data structures. As a virtual destructor, it ensures that derived classes
    are properly destructed when deleted through a base class pointer. In the context
    of TrinityCore's scripting system, this method is automatically invoked when an
    area trigger script instance is removed from memory, typically during server shutdown
    or when scripts are reloaded.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of AreaTriggerScript instance
    code: "class MyAreaTriggerScript : public AreaTriggerScript\n{\npublic:\n    MyAreaTriggerScript()\
      \ : AreaTriggerScript(\"my_area_trigger\") {}\n    ~MyAreaTriggerScript() override\
      \ {}\n};\n\n// When the script instance goes out of scope or is deleted,\n//\
      \ the destructor is automatically called\nvoid Cleanup()\n{\n    delete new\
      \ MyAreaTriggerScript(); // Destructor called here\n}"
    language: cpp
  notes: The destructor is declared as virtual to ensure proper destruction of derived
    classes. It should not be called directly unless explicitly needed for cleanup
    purposes. The TrinityCore framework manages the lifecycle of AreaTriggerScript
    instances, so manual invocation is typically unnecessary.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T04:48:30.902875'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
