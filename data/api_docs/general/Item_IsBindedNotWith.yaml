api:
  class: Item
  method: IsBindedNotWith
  signature: bool Item::IsBindedNotWith(const Player * player) const
documentation:
  brief: Determines whether an item is bound to a player.
  description: This method checks if an item is bound to a specific player, meaning
    it cannot be traded or sold to other players. The method evaluates the item's
    binding status based on its current state and the player's ownership. It returns
    true when the item is bound to the player, false otherwise. This functionality
    is crucial for game mechanics involving item management and player interactions.
  parameters: []
  returns: Returns true if the item is bound to the player, false otherwise. The method
    does not return null or error values as it's a boolean check.
  examples:
  - title: Basic usage example
    code: "if (item->IsBindedNotWith(player)) {\n    // Item is bound to player\n\
      \    // Do something\n}\nelse {\n    // Item is not bound to player\n}\n"
    language: cpp
  notes: 'Implementation details: This method likely checks the item''s binding state
    flags, which are set when the item is bound to a player. Performance considerations:
    Since this is a simple boolean check, it should be fast and lightweight. Thread
    safety: The method does not involve any shared resources or locks, making it thread-safe.'
  warnings: This method may not work as expected if used with items that are not bound
    to the player. It's important to understand that binding status can change based
    on game mechanics like item ownership or trade status.
  related:
  - Item::GetOwner
  - Item::IsBound
  - Item::IsSoulbound
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:44:53.412146'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
