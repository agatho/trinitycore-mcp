api:
  class: PositionManager
  method: SetWeights
  signature: void PositionManager::SetWeights(const PositionWeights & weights)
documentation:
  brief: Sets the position weights for the PositionManager instance.
  description: The SetWeights method configures the weighting parameters used by the
    PositionManager to evaluate and prioritize positions within the game world. These
    weights are typically used in pathfinding, positioning logic, or AI decision-making
    processes where certain positional attributes (such as distance, height, or terrain
    type) need to be weighted differently. The method accepts a PositionWeights object
    that contains all necessary weight values for various position evaluation criteria.
    This configuration directly affects how the PositionManager calculates and ranks
    potential positions during operations like movement planning or target selection.
  parameters:
  - name: weights
    description: A const reference to a PositionWeights object containing the weight
      values used for position evaluation. This object should contain all required
      weights for different positional factors such as distance, height difference,
      terrain cost, and other relevant metrics.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'PositionWeights weights;

      weights.distanceWeight = 1.0f;

      weights.heightWeight = 0.5f;

      weights.terrainWeight = 2.0f;

      positionManager.SetWeights(weights);'
    language: cpp
  - title: Advanced Usage with Dynamic Weight Calculation
    code: 'PositionWeights weights;

      weights.distanceWeight = CalculateDistanceWeight(player, target);

      weights.heightWeight = CalculateHeightWeight(player, target);

      weights.terrainWeight = CalculateTerrainWeight(player, target);

      positionManager.SetWeights(weights);'
    language: cpp
  notes: This method replaces all existing weight configurations with the new values
    provided. The PositionWeights object should be properly initialized before calling
    this method to avoid undefined behavior. Changes made via SetWeights take immediate
    effect on subsequent position evaluations performed by the PositionManager.
  warnings: Calling SetWeights with improperly configured weights may lead to incorrect
    pathfinding or positioning decisions. Ensure that all weight values are within
    reasonable ranges and logically consistent with the intended game mechanics. Avoid
    calling this method from multiple threads simultaneously without proper synchronization.
  related:
  - GetWeights
  - GetPositionEvaluation
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:09:25.243411'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
