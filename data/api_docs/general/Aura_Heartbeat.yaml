api:
  class: Aura
  method: Heartbeat
  signature: void Aura::Heartbeat()
documentation:
  brief: Processes the heartbeat logic for an aura, updating its duration and handling
    periodic effects.
  description: The Heartbeat method is responsible for executing the core logic of
    an aura's periodic effects and duration management. It is typically called by
    the server's update loop to process time-based aura effects such as damage over
    time, healing over time, or stat modifications that occur at regular intervals.
    This method handles the decrementing of the aura's remaining duration, triggers
    any periodic effects (like DoT/HoT ticks), and manages the aura's removal when
    its duration expires. The method ensures that aura effects are properly applied
    and maintained throughout their active period.
  parameters: []
  returns: null
  examples:
  - title: Basic Aura Heartbeat Execution
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    aura->Heartbeat();\n\
      }"
    language: cpp
  - title: Handling Periodic Aura Effects
    code: "void UpdateAuraPeriodicEffects()\n{\n    for (auto& aura : player->GetAuras())\n\
      \    {\n        if (aura->IsPeriodic())\n        {\n            aura->Heartbeat();\n\
      \        }\n    }\n}"
    language: cpp
  notes: This method is automatically invoked by the TrinityCore server's main update
    loop and should not typically be called manually. The heartbeat logic includes
    checking for aura expiration, applying periodic effects, and managing aura stacking.
    Performance considerations include avoiding heavy computations within this method
    as it may be called frequently during combat or active gameplay.
  warnings: Do not call this method directly unless you understand the internal aura
    state management. Incorrect manual invocation can lead to inconsistent aura states,
    duplicate effect applications, or premature aura removal. This method assumes
    the aura is in a valid state and should only be called on active auras.
  related:
  - Aura::IsPeriodic
  - Aura::GetDuration
  - Aura::SetDuration
  - Aura::Remove
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T13:55:06.758311'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
