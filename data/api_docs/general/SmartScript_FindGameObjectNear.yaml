api:
  class: SmartScript
  method: FindGameObjectNear
  signature: GameObject * SmartScript::FindGameObjectNear(WorldObject * searchObject,
    int guid) const
documentation:
  brief: Finds and returns a GameObject near the specified WorldObject using the provided
    GUID.
  description: The FindGameObjectNear method searches for a GameObject within the
    vicinity of a given WorldObject using a specified GUID. This method is typically
    used in smart scripts to locate specific game objects such as doors, chests, or
    quest items in proximity to NPCs or other game entities. The search is performed
    within the same map and instance as the search object. If no matching GameObject
    is found with the given GUID, the method returns nullptr. This functionality is
    essential for AI-driven interactions where NPCs need to interact with nearby objects
    based on their unique identifiers.
  parameters:
  - name: searchObject
    description: Pointer to the WorldObject from which to begin the search. This object
      defines the location and context for finding nearby GameObjects.
  - name: guid
    description: The unique identifier (GUID) of the GameObject to find. This value
      must correspond to a valid GameObject in the current map and instance.
  returns: Returns a pointer to the found GameObject if it exists within range and
    matches the provided GUID; otherwise, returns nullptr if no matching GameObject
    is found.
  examples:
  - title: Basic usage in smart script
    code: "GameObject* go = script->FindGameObjectNear(npc, 12345);\nif (go)\n{\n\
      \    // Interact with the found GameObject\n    go->Use(player);\n}"
    language: cpp
  - title: Using FindGameObjectNear for quest item interaction
    code: "Unit* target = me->GetVictim();\nif (target)\n{\n    GameObject* chest\
      \ = script->FindGameObjectNear(target, 54321);\n    if (chest && chest->GetGOInfo()->type\
      \ == GAMEOBJECT_TYPE_CHEST)\n    {\n        // Trigger quest event\n       \
      \ me->AI()->Talk(SAY_QUEST_START);\n        chest->Use(me);\n    }\n}"
    language: cpp
  notes: This method performs a local search within the same map and instance as the
    search object. It does not traverse across different maps or instances. The GUID
    parameter should be validated to ensure it refers to an existing GameObject before
    calling this method for optimal performance.
  warnings: Calling this method with an invalid or non-existent GUID will result in
    a nullptr return, which must be checked to prevent null pointer dereferences.
    Additionally, if multiple GameObjects share the same GUID within the same map,
    behavior may be unpredictable.
  related:
  - FindCreatureNear
  - GetGameObject
  - GetObjectByType
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:25:47.015974'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
