api:
  class: ConditionMgr
  method: IsMapMeetingNotGroupedConditions
  signature: bool ConditionMgr::IsMapMeetingNotGroupedConditions(ConditionSourceType
    sourceType, uint32 entry, const Map * map) const
documentation:
  brief: Checks if a map meets specific non-grouped conditions based on source type
    and entry.
  description: The IsMapMeetingNotGroupedConditions method evaluates whether a given
    map satisfies certain conditions that are not tied to player groups. This function
    is typically used in TrinityCore's condition system to determine if an object
    or environment meets criteria defined by the game logic. It takes into account
    the source type and entry identifier to look up relevant conditions stored in
    the condition manager. The method returns true if all applicable non-grouped conditions
    for the specified map are met, otherwise false. This functionality is crucial
    for dynamic quest triggers, area-based events, or conditional object spawning
    that should occur regardless of player group status.
  parameters:
  - name: sourceType
    description: The type of condition source being evaluated (e.g., QUEST_START,
      GAMEOBJECT_QUEST_START). Determines how the entry ID is interpreted and which
      conditions are checked.
  - name: entry
    description: The identifier associated with the source type. For example, if sourceType
      is QUEST_START, this would be a quest ID; if it's GAMEOBJECT_QUEST_START, this
      would be a game object entry ID.
  - name: map
    description: Pointer to the Map object on which the condition check is performed.
      The map context is essential for evaluating location-based conditions or map-specific
      triggers.
  returns: Returns true if all non-grouped conditions matching the provided source
    type and entry are satisfied within the specified map, otherwise returns false.
  examples:
  - title: Checking if a quest start condition is met in a specific map
    code: "if (sConditionMgr->IsMapMeetingNotGroupedConditions(CONDITION_SOURCE_TYPE_QUEST_START,\
      \ 12345, player->GetMap())) {\n    // Quest can be started\n}"
    language: cpp
  - title: Using the method to validate area-based event triggers
    code: "if (sConditionMgr->IsMapMeetingNotGroupedConditions(CONDITION_SOURCE_TYPE_GAMEOBJECT_QUEST_START,\
      \ 7890, player->GetMap())) {\n    // Trigger area-specific event\n}"
    language: cpp
  notes: This method relies on the global ConditionMgr singleton and assumes that
    condition data has been properly loaded into memory. It does not perform any locking
    internally, so callers should ensure thread safety if accessing from multiple
    threads. The map parameter must be valid; passing a null pointer will result in
    undefined behavior.
  warnings: Do not call this method with invalid source types or entry IDs as it may
    cause assertion failures or incorrect results. Ensure that the provided map object
    is fully initialized and represents an active game world before calling this function.
  related:
  - GetCondition
  - CheckCondition
  - IsPlayerMeetingNotGroupedConditions
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:00:12.853350'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
