api:
  class: Unit
  method: RollMeleeOutcomeAgainst
  signature: MeleeHitOutcome Unit::RollMeleeOutcomeAgainst(const Unit * victim, int
    attType) const
documentation:
  brief: Determines the outcome of a melee attack against a target unit.
  description: This method calculates and returns the result of a melee attack against
    a specified victim unit, determining whether the attack hits, misses, dodges,
    parries, or is blocked. It takes into account various combat factors including
    weapon type, victim's defense, and attacker's hit chance. The method is used internally
    by the game engine to handle melee combat outcomes and is essential for proper
    combat system functionality.
  parameters: []
  returns: Returns a MeleeHitOutcome enum value indicating the result of the melee
    attack, which can be Hit, Miss, Dodge, Parry, or Block depending on the outcome
    of the combat calculation.
  examples:
  - title: Basic usage example
    code: "MeleeHitOutcome outcome = attacker->RollMeleeOutcomeAgainst(victim, ATTACK_TYPE_NORMAL);\n\
      if (outcome == MELEE_HIT_MISS)\n    // Handle miss\nelse if (outcome == MELEE_HIT_BLOCK)\n\
      \    // Handle block\nelse\n    // Handle successful hit"
    language: cpp
  notes: This method is typically used in combat calculations and requires accurate
    victim and attacker data to function properly. It may be called from multiple
    threads during combat processing, so thread safety should be considered when using
    it.
  warnings: The method assumes that both the attacker and victim have valid data structures;
    calling it with invalid pointers can cause crashes or undefined behavior. Also,
    this method is part of the core combat system and should not be used for non-combat
    purposes.
  related:
  - RollMeleeOutcomeAgainst
  - HitResult
  - CalculateMeleeHit
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:24:39.545646'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
