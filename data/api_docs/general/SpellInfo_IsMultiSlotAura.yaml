api:
  class: SpellInfo
  method: IsMultiSlotAura
  signature: bool SpellInfo::IsMultiSlotAura() const
documentation:
  brief: Determines whether the spell is a multi-slot aura that can be applied to
    multiple slots simultaneously.
  description: This method checks if a spell is classified as a multi-slot aura, which
    means it can be applied to multiple inventory slots or spell slots at the same
    time. This is commonly used for spells that affect multiple weapon slots or for
    certain enchantment effects. The method returns true when the spell meets the
    criteria for being a multi-slot aura, and false otherwise. This functionality
    is important for determining how spells are handled during application and removal,
    particularly in relation to stacking behavior and slot management.
  parameters: []
  returns: Returns true if the spell is a multi-slot aura, false otherwise. This indicates
    whether the spell can be applied to multiple slots simultaneously.
  examples:
  - title: Basic usage example
    code: "if (spellInfo->IsMultiSlotAura()) {\n    // Handle multi-slot aura logic\n\
      }\n"
    language: cpp
  notes: 'Implementation details: This method likely checks internal spell flags or
    properties to determine if the spell can be applied to multiple slots. Performance
    considerations: No significant overhead as it''s a simple boolean check. Thread
    safety: This method is thread-safe as it only reads immutable data.'
  warnings: 'This method should not be used for determining whether a spell can be
    applied to multiple slots in general, but specifically for multi-slot aura behavior.
    Common mistake: Confusing this with other spell classification methods that may
    have similar names.'
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:49:54.059239'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
