api:
  class: Map
  method: RemoveForceDisabledNavMeshFilterFlag
  signature: void Map::RemoveForceDisabledNavMeshFilterFlag(uint16 flag)
documentation:
  brief: Removes a specified force-disabled navigation mesh filter flag from the map.
  description: This method removes a specific force-disabled navigation mesh filter
    flag from the map's internal flag set. In TrinityCore, navigation mesh filtering
    is used to control which areas of a map are considered walkable or traversable
    by AI and players. The force-disabled flag typically indicates that certain navigation
    data has been intentionally disabled for performance or development reasons. This
    method allows developers to re-enable specific navigation filters that were previously
    disabled. The operation modifies the internal state of the map's navigation system
    and may affect pathfinding behavior for creatures and players.
  parameters:
  - name: flag
    description: The uint16 flag value representing the specific navigation mesh filter
      to be removed from the force-disabled set. This value corresponds to predefined
      navigation mesh filter constants used internally by TrinityCore's navigation
      system.
  returns: null
  examples:
  - title: Remove a single force-disabled navigation flag
    code: 'Map* map = ...; // Get reference to a map

      map->RemoveForceDisabledNavMeshFilterFlag(NAV_FILTER_SWIM);

      // This enables swimming navigation for the map'
    language: cpp
  - title: Remove multiple force-disabled navigation flags
    code: 'Map* map = ...;

      map->RemoveForceDisabledNavMeshFilterFlag(NAV_FILTER_SWIM);

      map->RemoveForceDisabledNavMeshFilterFlag(NAV_FILTER_JUMP);

      map->RemoveForceDisabledNavMeshFilterFlag(NAV_FILTER_WALK);

      // Enables all basic movement navigation for the map'
    language: cpp
  notes: This method is typically used during development or debugging when navigation
    filters have been artificially disabled. It's important to understand that removing
    these flags may impact performance if large sections of navigation data are re-enabled
    at once. The method operates on the map's internal navigation state and should
    be called carefully in performance-critical contexts.
  warnings: Calling this method with an invalid or unknown flag value may result in
    undefined behavior. Ensure that the flag values passed are valid constants defined
    in TrinityCore's navigation system. This method modifies internal state that affects
    pathfinding, so use it judiciously during runtime operations.
  related:
  - Map::AddForceDisabledNavMeshFilterFlag
  - Map::HasForceDisabledNavMeshFilterFlag
  - Map::GetForceDisabledNavMeshFilterFlags
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:01:20.640405'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
