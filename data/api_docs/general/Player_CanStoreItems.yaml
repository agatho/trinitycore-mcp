api:
  class: Player
  method: CanStoreItems
  signature: int Player::CanStoreItems(Item ** items, int count, uint32 * offendingItemId)
    const
documentation:
  brief: Determines whether an item can be stored in a player's inventory.
  description: The CanStoreItems method checks if an item can be stored in a player's
    inventory, considering both the item's stack size and the player's available space.
    It returns a value indicating whether the item can be stored, with possible values
    including 0 (no space), 1 (can store), or 2 (can store but with stack size reduction).
    This method is crucial for handling item transactions in World of Warcraft, particularly
    when dealing with item stacking and inventory management. The method considers
    both the item's properties and the player's inventory capacity.
  parameters:
  - name: items
    description: Pointer to an array of Item pointers representing items to be stored.
      Each item pointer must be valid and not null.
  - name: count
    description: Number of items in the items array to be considered for storage.
      Must be a positive integer.
  - name: offendingItemId
    description: Pointer to a uint32 that will receive the ID of any item that causes
      the method to fail. This parameter is optional and can be null.
  returns: 'Represents the result of the storage check with possible values: 0 indicates
    no space available, 1 indicates the item can be stored, and 2 indicates the item
    can be stored but with stack size reduction due to limited space.'
  examples:
  - title: Basic usage example
    code: "Player* player = new Player();\nItem* items[2] = {item1, item2};\nint result\
      \ = player->CanStoreItems(items, 2, nullptr);\nif (result == 1) {\n    // Item\
      \ can be stored\n}"
    language: cpp
  - title: Advanced usage with error handling
    code: "Player* player = new Player();\nItem* items[1] = {item1};\nuint32 offendingId;\n\
      int result = player->CanStoreItems(items, 1, &offendingId);\nif (result == 0)\
      \ {\n    // No space available\n} else if (result == 2) {\n    // Item can be\
      \ stored but with reduced stack size\n}"
    language: cpp
  notes: This method is primarily used for inventory management and item transactions.
    It performs checks on both the item's stack size and player's inventory space,
    making it essential for handling item stacking in World of Warcraft. The method
    is thread-safe when used properly, but should be used carefully in multi-threaded
    environments.
  warnings: This method does not handle item stacking directly; it only checks if
    items can be stored. If the return value is 0 or 2, the player's inventory may
    need to be checked for space before proceeding with item transactions. Care should
    be taken when using this method in conjunction with other inventory methods.
  related:
  - CanStoreItem
  - StoreItem
  - Item::GetStackCount
  - Player::GetInventorySlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:38:51.097526'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
