api:
  class: Map
  method: PlayerRelocation
  signature: void Map::PlayerRelocation(Player * param0, float x, float y, float z,
    float orientation)
documentation:
  brief: Moves a player to a new location within the map, updating their position
    and orientation.
  description: The PlayerRelocation method is responsible for relocating a player
    character to a specified position within the same map instance. This method updates
    the player's world coordinates (x, y, z) and orientation, ensuring that the player's
    visual representation and collision detection are accurately reflected in the
    new location. It handles internal map management tasks such as updating the player's
    grid position, notifying nearby creatures and players of the relocation, and managing
    any associated game mechanics like quest tracking or area triggers. The method
    is typically invoked during teleportation, movement corrections, or when a player
    enters a new zone within the same map.
  parameters:
  - name: param0
    description: Pointer to the Player object that will be relocated. Must not be
      null and must represent an active player in the game world.
  - name: x
    description: The new X coordinate for the player's position in world space. Valid
      range depends on map boundaries, typically within -10000 to 10000 units.
  - name: y
    description: The new Y coordinate for the player's position in world space. Valid
      range depends on map boundaries, typically within -10000 to 10000 units.
  - name: z
    description: The new Z coordinate (height) for the player's position in world
      space. Valid range depends on map boundaries and terrain height constraints.
  - name: orientation
    description: The new facing direction of the player in radians. Values typically
      range from 0 to 2*PI, where 0 represents east, PI/2 represents north, etc.
  returns: null
  examples:
  - title: Basic Player Relocation
    code: 'Player* player = ...; // Get player reference

      Map* map = player->GetMap();

      map->PlayerRelocation(player, 100.0f, 200.0f, 50.0f, 0.0f);

      // Moves player to coordinates (100, 200, 50) facing east'
    language: cpp
  - title: Relocating Player with Specific Orientation
    code: 'Player* player = ...; // Get player reference

      Map* map = player->GetMap();

      float new_x = player->GetPositionX() + 10.0f;

      float new_y = player->GetPositionY() + 5.0f;

      float orientation = M_PI / 4.0f; // 45 degrees in radians

      map->PlayerRelocation(player, new_x, new_y, player->GetPositionZ(), orientation);

      // Moves player 10 units east and 5 units north, facing northeast'
    language: cpp
  notes: This method does not perform any validation on the input coordinates. It
    is recommended to validate positions against map boundaries before calling this
    method to prevent unexpected behavior or client-side issues. The method internally
    handles grid management and visibility updates but does not trigger zone change
    events or update player's instance ID if moving between different instances.
  warnings: Calling this method with invalid coordinates may result in players becoming
    stuck, invisible, or causing client-side errors. Always ensure that the target
    position is valid and walkable within the current map. Do not use this method
    to move players between different maps or instances - use proper teleportation
    methods instead.
  related:
  - Player::UpdateObjectVisibility
  - Map::UpdatePlayerPosition
  - Player::TeleportTo
  - Map::AddPlayerToMap
metadata:
  confidence: 0.92
  generated_at: '2025-10-31T11:03:17.823744'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
