api:
  class: WorldObject
  method: IsInRange3d
  signature: bool WorldObject::IsInRange3d(float x, float y, float z, float minRange,
    float maxRange) const
documentation:
  brief: Checks if a 3D point is within the specified range of the WorldObject.
  description: The IsInRange3d method determines whether a given 3D coordinate (x,
    y, z) lies within the minimum and maximum range boundaries relative to the WorldObject's
    position. This method performs a 3D distance check using Euclidean distance calculation.
    It is commonly used in game logic for determining if an object or player is within
    interaction range, spell casting range, or other spatial constraints. The method
    accounts for the full 3D space including height differences between objects.
  parameters:
  - name: x
    description: The X coordinate of the point to check against the WorldObject's
      position
  - name: y
    description: The Y coordinate of the point to check against the WorldObject's
      position
  - name: z
    description: The Z coordinate of the point to check against the WorldObject's
      position
  - name: minRange
    description: The minimum allowed distance from the WorldObject (inclusive). Must
      be non-negative.
  - name: maxRange
    description: The maximum allowed distance from the WorldObject (inclusive). Must
      be greater than or equal to minRange.
  returns: Returns true if the point (x, y, z) is within the range [minRange, maxRange]
    from the WorldObject's position; otherwise returns false.
  examples:
  - title: Basic usage to check if a player is in range
    code: "if (player->IsInRange3d(targetX, targetY, targetZ, 0.0f, 10.0f)) {\n  \
      \  // Player is within 10 yards of the target position\n    DoSomething();\n\
      }"
    language: cpp
  - title: Using with spell range validation
    code: "if (caster->IsInRange3d(target->GetPositionX(), target->GetPositionY(),\
      \ target->GetPositionZ(), spellMinRange, spellMaxRange)) {\n    // Spell can\
      \ be cast on target\n    caster->CastSpell(target, spellId);\n} else {\n   \
      \ // Target out of range\n    SendOutOfRangeMessage();\n}"
    language: cpp
  notes: This method uses the standard Euclidean distance formula in 3D space. Performance
    is generally acceptable for single checks but may become a bottleneck if called
    frequently in tight loops. The method does not account for collision detection
    or line-of-sight; it only performs a simple distance check.
  warnings: Ensure that minRange is non-negative and maxRange is greater than or equal
    to minRange to avoid unexpected behavior. Be cautious when using very large range
    values as this may impact performance in high-density areas.
  related:
  - IsInRange2d
  - GetDistance
  - GetPosition
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:23:19.702550'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
