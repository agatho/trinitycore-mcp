api:
  class: EquipmentManager
  method: GetConsumableNeeds
  signature: int EquipmentManager::GetConsumableNeeds(int * player)
documentation:
  brief: Calculates and returns the total number of consumable items needed by the
    player's equipment.
  description: The GetConsumableNeeds method determines how many consumable items
    (such as arrows, bullets, or other usage-based items) are required to fully equip
    a player's current gear setup. This method evaluates all equipped items that require
    consumables and aggregates their needs into a single integer value. The calculation
    considers item properties like ammunition type, durability requirements, and any
    special consumable mechanics defined in the game rules. It is typically used during
    character load, equipment changes, or inventory management to ensure players have
    sufficient resources for their current gear configuration.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's unique identifier
      (GUID). This parameter is used internally by the method to retrieve and process
      the player's equipment data.
  returns: Returns an integer value indicating the total number of consumable items
    needed. A return value of zero indicates no consumables are required, while a
    positive integer represents the quantity of consumables that should be available
    for optimal equipment performance.
  examples:
  - title: Basic Usage Example
    code: "int playerGUID = 12345;\nint neededConsumables = equipmentManager.GetConsumableNeeds(&playerGUID);\n\
      if (neededConsumables > 0) {\n    printf(\"Player needs %d consumable items\\\
      n\", neededConsumables);\n}"
    language: cpp
  - title: Inventory Check Integration
    code: "int playerGUID = player->GetGUID().GetCounter();\nint consumablesNeeded\
      \ = equipmentManager.GetConsumableNeeds(&playerGUID);\nif (consumablesNeeded\
      \ > 0) {\n    // Check if player has enough consumables\n    int playerConsumables\
      \ = player->GetItemCount(CONSUMABLE_ITEM_ID);\n    if (playerConsumables < consumablesNeeded)\
      \ {\n        // Notify player they need more consumables\n        player->SendNotification(\"\
      Insufficient consumables for current equipment\");\n    }\n}"
    language: cpp
  notes: This method may perform internal lookups of player equipment and item properties,
    so repeated calls should be avoided in performance-critical sections. The returned
    value represents a minimum requirement based on current gear, not necessarily
    the exact count needed for extended gameplay.
  warnings: The parameter 'player' must point to a valid integer GUID; passing an
    invalid or null pointer will result in undefined behavior. This method does not
    modify player data but relies on accurate equipment state to compute results.
  related:
  - GetEquipment
  - UpdateConsumableStatus
  - CheckInventoryRequirements
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:04:02.988521'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
