api:
  class: AuraEffect
  method: HandleAuraModStat
  signature: void AuraEffect::HandleAuraModStat(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes a stat modification aura effect on the target.
  description: The HandleAuraModStat method is responsible for applying or removing
    a stat modification aura effect to a target unit. This method is typically invoked
    during aura application or removal events, and it modifies the target's base stats
    such as strength, agility, intellect, stamina, or spirit. The method uses the
    provided AuraApplication context to determine which specific stat is being modified
    and by how much. It handles both positive and negative stat modifications, and
    ensures that any stat changes are properly propagated through the game's stat
    calculation system. This method is part of the core aura handling system in TrinityCore
    and integrates with the unit's stat management subsystem.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object containing information about
      the aura being applied or removed. This includes details such as the aura type,
      modifier value, and target unit.
  - name: mode
    description: The mode of operation for the aura effect. Typically indicates whether
      this is an application (1) or removal (0) event, though other modes may exist
      depending on implementation.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the stat modification. When true, the stat modifier is added to the target;
      when false, it's removed.
  returns: null
  examples:
  - title: Applying a Stat Modifier Aura
    code: "void ApplyStrengthAura(Unit* target, int32 amount)\n{\n    AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo::GetSpellInfo(12345));\n\
      \    aurApp->SetModifier(AuraType::SPELL_AURA_MOD_STAT, amount);\n    auraEffect->HandleAuraModStat(aurApp,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing a Stat Modifier Aura
    code: "void RemoveStrengthAura(Unit* target)\n{\n    AuraApplication* aurApp =\
      \ target->GetAuraApplication(12345);\n    if (aurApp)\n    {\n        auraEffect->HandleAuraModStat(aurApp,\
      \ 0, false);\n    }\n}"
    language: cpp
  notes: This method directly manipulates unit stats and should be called only when
    the aura application state is properly initialized. The stat modification is applied
    immediately to the target's base stats and may affect derived stats such as attack
    power, spell power, or health regeneration. The method does not perform any validation
    on the aura parameters; it assumes valid inputs from the aura system.
  warnings: Improper use of this method can lead to incorrect stat calculations and
    visual inconsistencies in the game client. Ensure that all aura applications are
    properly managed and that stat modifiers are correctly applied or removed. Do
    not call this method directly without proper aura application context, as it may
    cause crashes or undefined behavior.
  related:
  - AuraEffect::HandleAuraModStatAmount
  - AuraEffect::HandleAuraModBaseResistance
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:05:24.752402'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
