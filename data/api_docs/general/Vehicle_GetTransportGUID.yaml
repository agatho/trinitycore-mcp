api:
  class: Vehicle
  method: GetTransportGUID
  signature: int Vehicle::GetTransportGUID() const
documentation:
  brief: Returns the unique identifier (GUID) of the transport vehicle associated
    with this vehicle.
  description: The GetTransportGUID method retrieves the GUID of the transport object
    that this vehicle is currently mounted on or associated with. In World of Warcraft's
    TrinityCore framework, vehicles can be mounted on transports such as boats, zeppelins,
    or other large moving objects. This method allows scripts and game logic to identify
    which specific transport entity a vehicle is linked to. The returned GUID uniquely
    identifies the transport within the server's context and can be used to retrieve
    the transport object for further operations. This method is typically used in
    vehicle-related event handling and movement logic.
  parameters: []
  returns: An integer representing the GUID of the transport vehicle. Returns 0 if
    the vehicle is not currently mounted on any transport.
  examples:
  - title: Check if vehicle is on a transport
    code: "Vehicle* vehicle = player->GetVehicle();\nif (vehicle)\n{\n    int transportGUID\
      \ = vehicle->GetTransportGUID();\n    if (transportGUID != 0)\n    {\n     \
      \   // Vehicle is mounted on a transport\n        TC_LOG_INFO(\"vehicle\", \"\
      Vehicle is on transport with GUID: %u\", transportGUID);\n    }\n    else\n\
      \    {\n        // Vehicle is not on any transport\n        TC_LOG_INFO(\"vehicle\"\
      , \"Vehicle is not on any transport\");\n    }\n}"
    language: cpp
  notes: This method should only be called on valid vehicle objects. The GUID returned
    represents the database entry identifier for the transport, which is used internally
    by TrinityCore's object management system. Performance-wise, this is a fast lookup
    operation as it simply returns a cached value from the vehicle's internal state.
  warnings: Ensure that the Vehicle pointer is valid before calling this method to
    avoid accessing invalid memory. The returned GUID may be 0 if the vehicle is not
    currently mounted on any transport, which should be handled appropriately in your
    code logic.
  related:
  - GetVehicleKit
  - IsVehicleInUse
  - GetBaseVehicle
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:49:50.372091'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
