api:
  class: GameObject
  method: LookupFishingHoleAround
  signature: GameObject * GameObject::LookupFishingHoleAround(float range)
documentation:
  brief: Finds and returns the closest fishing hole GameObject within a specified
    range.
  description: The LookupFishingHoleAround method searches for the nearest fishing
    hole GameObject within a given range from the current object's position. This
    method is typically used in game mechanics where players need to find nearby fishing
    holes for fishing activities. It returns a pointer to the GameObject representing
    the fishing hole, or nullptr if no such object exists within the specified range.
    The method utilizes spatial calculations to determine proximity and is commonly
    employed in quest-related or player interaction scenarios.
  parameters: []
  returns: Returns a pointer to the GameObject representing the fishing hole within
    range, or nullptr if none found. The returned GameObject may be null if no valid
    fishing hole exists in the specified area.
  examples:
  - title: Basic usage example
    code: "GameObject* fishingHole = obj->LookupFishingHoleAround(5.0f);\nif (fishingHole\
      \ != nullptr)\n{\n    // Proceed with fishing mechanics\n}"
    language: cpp
  notes: Implementation uses spatial distance calculations to determine proximity,
    which may impact performance in large world instances. This method should be used
    carefully in high-frequency scenarios to avoid unnecessary computation.
  warnings: Be cautious when using this method in areas with many GameObjects, as
    it might return incorrect results if multiple fishing holes exist within the same
    range. Also note that this method does not guarantee that the returned GameObject
    is a valid fishing hole for player interaction.
  related:
  - LookupFishingHole
  - GetGameObject
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T02:24:41.723939'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
