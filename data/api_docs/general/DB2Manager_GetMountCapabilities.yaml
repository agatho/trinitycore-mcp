api:
  class: DB2Manager
  method: GetMountCapabilities
  signature: const int * DB2Manager::GetMountCapabilities(uint32 mountType) const
documentation:
  brief: Retrieves the capabilities array associated with a specified mount type from
    the DB2 database.
  description: The GetMountCapabilities method fetches an array of integer values
    that define the capabilities or restrictions for a given mount type. This data
    is typically used in World of Warcraft's client and server to determine what actions
    or environments a specific mount can be used in, such as flying restrictions,
    terrain traversal, or special abilities. The method accesses internal DB2 storage
    which contains preprocessed game data related to mounts and their properties.
    It returns a pointer to the beginning of an array of integers representing these
    capabilities, with the actual size of the array determined by the internal data
    structure and not explicitly exposed through this API.
  parameters: []
  returns: A const pointer to an array of integers that represent the mount capabilities
    for the requested mount type. The caller must not modify or free the returned
    memory. If no data exists for the specified mount type, the method may return
    nullptr or a pointer to an empty array depending on implementation details.
  examples:
  - title: Basic Usage Example
    code: "const int* capabilities = sDB2Manager->GetMountCapabilities(12345);\nif\
      \ (capabilities != nullptr)\n{\n    // Process the capabilities array\n    for\
      \ (int i = 0; i < MAX_CAPABILITIES; ++i)\n    {\n        if (capabilities[i]\
      \ == 0) break;\n        printf(\"Capability: %d\\n\", capabilities[i]);\n  \
      \  }\n}"
    language: cpp
  notes: This method relies on internal DB2 data structures and should only be called
    after the DB2 files have been loaded. The returned array is owned by the DB2Manager
    and must not be freed or modified by the caller. It is recommended to cache results
    if this function is called frequently during gameplay.
  warnings: Ensure that the mountType parameter corresponds to a valid mount entry
    in the DB2 files, otherwise the behavior is undefined. Do not assume the size
    of the returned array; always check for null returns or use known maximums based
    on game data documentation.
  related:
  - GetMountDisplayInfo
  - GetMountEntry
  - LoadDB2Files
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:53:53.472725'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
