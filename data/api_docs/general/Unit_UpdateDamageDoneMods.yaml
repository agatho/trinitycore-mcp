api:
  class: Unit
  method: UpdateDamageDoneMods
  signature: void Unit::UpdateDamageDoneMods(int attackType, int32 skipEnchantSlot)
documentation:
  brief: Updates damage modifiers for the unit's attacks based on current equipment
    and auras.
  description: The UpdateDamageDoneMods method recalculates and applies all damage
    modifiers that affect the Unit's attack power, including enchantments, buffs,
    debuffs, and item-based bonuses. This function is typically invoked when equipment
    changes or when auras are applied/removed to ensure accurate damage calculations
    during combat. The method takes into account the specified attack type (melee,
    ranged, or spell) and can optionally skip updating a specific enchantment slot
    to avoid redundant recalculations.
  parameters:
  - name: attackType
    description: Specifies the type of attack for which damage modifiers should be
      updated. Valid values are typically 0 (melee), 1 (ranged), or 2 (spell). This
      determines which set of modifiers is recalculated.
  - name: skipEnchantSlot
    description: Optional parameter that indicates an enchantment slot index to skip
      during the update process. A negative value (-1) typically means no slot is
      skipped. This allows for performance optimization when updating only specific
      parts of the damage calculation.
  returns: null
  examples:
  - title: Update all melee damage modifiers
    code: 'Unit* player = ...;

      player->UpdateDamageDoneMods(0); // Update melee damage mods

      '
    language: cpp
  - title: Update ranged damage with specific enchantment slot skipped
    code: 'Unit* player = ...;

      player->UpdateDamageDoneMods(1, 17); // Skip enchantment slot 17 for ranged
      attacks

      '
    language: cpp
  notes: This method is commonly called internally by the core when equipment changes
    or when auras are modified. It's important to understand that this function modifies
    internal state and should not be called excessively without a valid reason. The
    method may trigger additional recalculations of related stats such as attack power,
    critical strike chance, and damage multipliers.
  warnings: Calling this method with incorrect attackType values can lead to inaccurate
    combat calculations. Avoid calling it during active combat if possible, as it
    might cause performance issues or inconsistent state updates. Also, be cautious
    when skipping enchantment slots, as improper usage may result in outdated damage
    modifiers.
  related:
  - UpdateDamageDoneMods
  - CalculateDamage
  - GetTotalAttackPower
  - AddAura
  - RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:27:41.785788'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
