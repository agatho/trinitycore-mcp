api:
  class: Unit
  method: SetCanDualWield
  signature: void Unit::SetCanDualWield(bool value)
documentation:
  brief: Sets whether the unit can dual wield weapons.
  description: This method controls the dual-wielding capability of a Unit, allowing
    developers to enable or disable the ability for a unit to wield two weapons simultaneously.
    It is commonly used in conjunction with other combat-related methods to modify
    unit behavior during combat. The method affects the unit's attack speed and weapon
    handling, particularly when using dual-wielded weapons. This functionality is
    essential for implementing custom game mechanics or modifying NPC behavior in
    TrinityCore.
  parameters:
  - name: value
    description: A boolean value indicating whether the unit should be able to dual
      wield. True enables dual-wielding, while False disables it.
  returns: null
  examples:
  - title: Enabling Dual Wield for a Player
    code: 'Player* player = GetPlayer();

      player->SetCanDualWield(true);

      '
    language: cpp
  - title: Disabling Dual Wield for an NPC
    code: 'Creature* npc = GetCreature();

      npc->SetCanDualWield(false);

      '
    language: cpp
  notes: The method affects the unit's attack speed and weapon handling. It should
    be used carefully as it impacts combat mechanics and may affect performance if
    not handled properly.
  warnings: null
  related:
  - GetCanDualWield
  - SetCanAttack
  - SetCanUseTwoHand
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:28:47.766522'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
