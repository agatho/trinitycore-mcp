api:
  class: SmartScript
  method: SmartScript
  signature: void SmartScript::SmartScript(SmartScript && other)
documentation:
  brief: Moves the SmartScript object from another SmartScript instance, transferring
    ownership of its resources.
  description: The SmartScript move constructor transfers all internal data and state
    from another SmartScript object to this one. This operation is typically used
    when creating a new SmartScript instance by moving an existing one, avoiding expensive
    deep copies. The moved-from object will be left in a valid but unspecified state
    after the operation. In the context of TrinityCore's AI system, this constructor
    supports efficient management of AI scripts and their associated data structures
    during object creation and assignment.
  parameters: []
  returns: null
  examples:
  - title: Move SmartScript to new variable
    code: 'SmartScript script1;

      // ... initialize script1 ...

      SmartScript script2 = std::move(script1);

      // script1 is now in a valid but unspecified state

      // script2 contains the moved resources'
    language: cpp
  notes: This constructor enables efficient resource management through move semantics.
    It's particularly useful when passing SmartScript objects by value or returning
    them from functions, as it avoids unnecessary copying of potentially large data
    structures. The moved-from object should not be used after the move operation.
  warnings: Using a moved-from SmartScript object after calling this constructor results
    in undefined behavior. Ensure that any references to the original object are not
    used afterward. This is a standard move semantics pattern and should be handled
    carefully in performance-critical code paths.
  related:
  - SmartScript::SmartScript()
  - SmartScript& SmartScript::operator=(SmartScript&&)
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:07:11.458208'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
