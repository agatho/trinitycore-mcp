api:
  class: Unit
  method: RemoveGameObject
  signature: void Unit::RemoveGameObject(uint32 spellid, bool del)
documentation:
  brief: Removes a game object associated with a specific spell from the world.
  description: The RemoveGameObject method removes a game object that was created
    by a specific spell from the game world. This method is typically used in conjunction
    with GameObject::SummonObject, where the spell ID determines which game object
    to remove. The method operates on the unit's GameObjects and removes them based
    on the specified spell ID. It can optionally delete the GameObject from memory
    if the 'del' parameter is set to true. This functionality is crucial for managing
    game objects that are created during spell effects or other gameplay mechanics.
  parameters:
  - name: spellid
    description: The spell ID that was used to create the game object. This determines
      which specific GameObject will be removed from the world.
  - name: del
    description: If true, the GameObject will be completely deleted from memory. If
      false, only the reference in the unit's GameObject list is removed, but the
      GameObject may remain in the world until it expires naturally.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->RemoveGameObject(12345, true);

      // Removes a game object associated with spell ID 12345 and deletes it from
      memory'
    language: cpp
  - title: Advanced usage example
    code: 'Unit* unit = new Unit;

      unit->RemoveGameObject(54321, false);

      // Removes a game object associated with spell ID 54321 but keeps it in the
      world until it expires naturally'
    language: cpp
  notes: This method should be used carefully as removing objects from memory can
    lead to dangling references if not handled properly. The GameObject removal process
    is typically handled by the game object system, and this method is usually called
    during spell effect processing or when a unit's GameObjects are being cleared.
  warnings: Improper use of this method can cause memory leaks or crashes if the GameObject
    is removed without proper cleanup. Always ensure that the GameObject is properly
    removed from both the world and memory before calling this method.
  related:
  - GameObject::SummonObject
  - Unit::AddGameObject
  - Unit::GetGameObject
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T20:36:18.412908'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
