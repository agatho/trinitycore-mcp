api:
  class: Unit
  method: FinishSpell
  signature: void Unit::FinishSpell(CurrentSpellTypes spellType, int result)
documentation:
  brief: Completes a spell execution by finalizing the spell's processing and updating
    the spell's state.
  description: The FinishSpell method is responsible for concluding the execution
    of a spell within the TrinityCore framework. It handles the finalization of spell
    processing, updates the spell's state, and ensures proper cleanup of resources
    associated with the spell. This method typically occurs after a spell has been
    fully processed or when a spell needs to be terminated prematurely. The method
    is commonly used in conjunction with spell handling systems to manage spell completion,
    especially during spell casting or spell effects execution.
  parameters:
  - name: spellType
    description: Specifies the type of spell being finished, such as SpellType::SPELL_TYPE_NORMAL,
      SpellType::SPELL_TYPE_DUMMY, etc. This parameter determines how the spell is
      processed and what actions are taken during completion.
  - name: result
    description: Represents the result of the spell execution, typically indicating
      success or failure of the spell. Common values include 0 for success, negative
      numbers for failure, or specific error codes depending on the context.
  returns: null
  examples:
  - title: Basic Spell Completion
    code: 'Unit::FinishSpell(SpellType::SPELL_TYPE_NORMAL, 0);

      // This completes a normal spell execution with success.'
    language: cpp
  - title: Spell Completion with Error Handling
    code: 'Unit::FinishSpell(SpellType::SPELL_TYPE_DUMMY, -1);

      // This finishes a dummy spell with an error result.'
    language: cpp
  notes: This method is typically used within the context of spell processing and
    is part of the broader spell lifecycle. It should be called after all spell effects
    have been processed or when a spell needs to be terminated early. The method may
    involve cleanup operations, resource release, and state updates.
  warnings: Improper use of this method can lead to incorrect spell states, resource
    leaks, or unexpected behavior in spell execution. Care must be taken to ensure
    that the correct spell type and result values are passed to avoid unintended consequences.
  related:
  - Spell::Finish
  - Unit::SpellCast
  - Unit::SpellCancel
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T21:07:53.642798'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
