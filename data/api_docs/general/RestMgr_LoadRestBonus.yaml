api:
  class: RestMgr
  method: LoadRestBonus
  signature: void RestMgr::LoadRestBonus(RestTypes restType, PlayerRestState state,
    float restBonus)
documentation:
  brief: Initializes or updates rest bonus values for specified rest type and player
    state.
  description: The LoadRestBonus method is responsible for loading or updating rest
    bonus multipliers that are applied to players based on their current rest type
    and player state. This method typically handles the internal setup of how much
    experience, gold, or other rewards a player receives when resting in different
    scenarios such as in towns, dungeons, or while traveling. It ensures that the
    appropriate bonuses are registered for use during gameplay mechanics related to
    player rest and recovery.
  parameters:
  - name: restType
    description: Specifies the type of rest being configured. Valid values include
      REST_TYPE_NORMAL, REST_TYPE_IN_TAVERN, REST_TYPE_DUNGEON, etc., depending on
      the game's internal enum definitions.
  - name: state
    description: Represents the player's current resting state. Common states may
      be PLAYER_REST_STATE_RESTING, PLAYER_REST_STATE_NOT_RESTING, or similar values
      indicating whether the player is actively resting.
  - name: restBonus
    description: The bonus multiplier value to be applied during rest. For example,
      a value of 1.5 would indicate a 50% bonus to experience or gold earned while
      resting under these conditions.
  returns: null
  examples:
  - title: Load Normal Rest Bonus
    code: RestMgr::LoadRestBonus(REST_TYPE_NORMAL, PLAYER_REST_STATE_RESTING, 1.2f);
    language: cpp
  - title: Set Dungeon Rest Bonus
    code: RestMgr::LoadRestBonus(REST_TYPE_DUNGEON, PLAYER_REST_STATE_NOT_RESTING,
      0.8f);
    language: cpp
  notes: This method is likely called during server initialization or when loading
    configuration data from database files. It may be part of a larger system that
    manages player recovery mechanics and should be invoked before any gameplay involving
    rest bonuses occurs.
  warnings: Ensure that restType and state values match the expected enum definitions
    in the codebase to avoid incorrect behavior. Incorrectly setting restBonus values
    can lead to unbalanced gameplay or unexpected reward distributions.
  related:
  - GetRestBonus
  - UpdateRestBonus
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:30:35.772955'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
