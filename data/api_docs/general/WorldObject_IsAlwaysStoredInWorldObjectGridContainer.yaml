api:
  class: WorldObject
  method: IsAlwaysStoredInWorldObjectGridContainer
  signature: bool WorldObject::IsAlwaysStoredInWorldObjectGridContainer() const
documentation:
  brief: Determines whether the WorldObject is always stored in the grid container
    regardless of its current state or location.
  description: This method checks if a WorldObject instance is permanently stored
    within the grid container, meaning it will not be removed from the grid even when
    outside of normal visibility ranges. This behavior is typically used for objects
    that must remain accessible to the grid system at all times, such as certain types
    of game entities or persistent world objects. The check is performed based on
    internal flags and object type characteristics rather than dynamic location or
    visibility states.
  parameters: []
  returns: Returns true if the WorldObject is always stored in the grid container;
    otherwise returns false. This indicates whether the object's presence in the grid
    is guaranteed regardless of its spatial relationship to players or other entities.
  examples:
  - title: Check if Object is Always Stored
    code: "if (worldObject->IsAlwaysStoredInWorldObjectGridContainer()) {\n    //\
      \ Handle logic for always-stored object\n    sLog->outString(\"Object is always\
      \ stored in grid.\");\n}"
    language: cpp
  notes: This method should be used carefully as it affects how objects are managed
    within the grid system. Objects that are always stored may have performance implications
    due to constant presence in memory structures.
  warnings: null
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T21:29:59.282821'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
