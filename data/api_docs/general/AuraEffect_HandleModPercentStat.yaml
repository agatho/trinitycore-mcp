api:
  class: AuraEffect
  method: HandleModPercentStat
  signature: void AuraEffect::HandleModPercentStat(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a percentage-based stat modifier aura effect.
  description: The HandleModPercentStat method is responsible for applying or removing
    a percentage-based stat modification effect from a unit. This method is typically
    invoked during aura application or removal events, adjusting the target's stats
    by a specified percentage value. The method interacts with the AuraApplication
    object to determine the context of the aura and applies the appropriate stat changes
    based on the mode parameter. It is part of TrinityCore's aura system that manages
    various buff and debuff effects in World of Warcraft gameplay.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state, target,
      and application context.
  - name: mode
    description: Mode flag indicating whether the effect is being applied (true) or
      removed (false). Also determines the specific type of stat modification being
      handled.
  - name: apply
    description: Boolean flag specifying whether to apply (true) or remove (false)
      the percentage stat modifier. Controls the direction of the stat adjustment.
  returns: null
  examples:
  - title: Basic usage in aura handler
    code: "void MyAuraHandler::HandleModPercentStat(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const\n{\n    if (apply)\n        ApplyPercentageStatModifier(aurApp->GetTarget(),\
      \ STAT_STRENGTH, 10.0f);\n    else\n        RemovePercentageStatModifier(aurApp->GetTarget(),\
      \ STAT_STRENGTH, 10.0f);\n}"
    language: cpp
  - title: Advanced usage with multiple stat types
    code: "void StatPercentAuraHandler::HandleModPercentStat(const AuraApplication*\
      \ aurApp, uint8 mode, bool apply) const\n{\n    Unit* target = aurApp->GetTarget();\n\
      \    if (!target)\n        return;\n    \n    float modifier = GetAuraModifierValue();\n\
      \    \n    switch (mode)\n    {\n        case MOD_STAT_STRENGTH:\n         \
      \   ApplyPercentageStatModifier(target, STAT_STRENGTH, modifier);\n        \
      \    break;\n        case MOD_STAT_AGILITY:\n            ApplyPercentageStatModifier(target,\
      \ STAT_AGILITY, modifier);\n            break;\n        default:\n         \
      \   break;\n    }\n}"
    language: cpp
  notes: This method is typically called internally by the aura system when an aura
    with percentage stat modification effects is applied or removed. The actual stat
    modification logic may involve multiple internal calls to update unit attributes
    and recalculate derived values such as damage, defense, or other combat-related
    stats.
  warnings: Improper handling of the apply flag can result in incorrect stat modifications.
    Ensure that all stat modifiers are properly reversed when auras are removed to
    prevent permanent stat changes. This method should not be called directly without
    proper aura application context.
  related:
  - AuraEffect::HandleModStat
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::ApplyPercentageStatModifier
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:30:33.614053'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
