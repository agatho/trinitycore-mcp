api:
  class: Totem
  method: UpdateStats
  signature: bool Totem::UpdateStats(int param0)
documentation:
  brief: Updates the statistics and attributes of a totem based on its current state
    and associated effects.
  description: The UpdateStats method recalculates and applies all relevant statistical
    modifiers and attributes for a Totem object. This includes updating stats such
    as attack power, spell power, resilience, and other combat-related values that
    may be influenced by the totem's type, duration, or any active auras. The method
    ensures that the totem reflects the most current game state in terms of its effectiveness
    in battle. It is typically invoked during periodic updates or when stat-modifying
    effects are applied or removed from the totem.
  parameters:
  - name: param0
    description: An integer parameter that may represent a specific stat index, update
      type, or modifier flag. The exact meaning depends on internal implementation
      and context of invocation.
  returns: Returns true if the stats were successfully updated and applied; otherwise
    returns false if an error occurred during the update process.
  examples:
  - title: Basic Usage
    code: "if (totem->UpdateStats(0)) {\n    // Stats successfully updated\n    printf(\"\
      Totem stats updated successfully.\\n\");\n} else {\n    // Handle failure case\n\
      \    printf(\"Failed to update totem stats.\\n\");\n}"
    language: cpp
  - title: Updating with Specific Stat Index
    code: "int statIndex = 5; // Example index for a specific stat type\nif (totem->UpdateStats(statIndex))\
      \ {\n    // Perform additional logic after successful update\n    totem->SendUpdateToPlayer();\n\
      }"
    language: cpp
  notes: This method may trigger cascading updates if the totem's stats affect other
    game objects or players in the vicinity. It is important to ensure that this method
    is not called too frequently to avoid performance degradation, especially during
    high-frequency events like combat.
  warnings: Calling UpdateStats with invalid or out-of-range parameter values may
    lead to undefined behavior or crashes. Always validate inputs before invoking
    this method in custom code.
  related:
  - GetStats
  - SetStats
  - Update
  - ApplyAura
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T20:26:48.224843'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
