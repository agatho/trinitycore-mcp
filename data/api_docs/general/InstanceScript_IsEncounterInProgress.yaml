api:
  class: InstanceScript
  method: IsEncounterInProgress
  signature: bool InstanceScript::IsEncounterInProgress() const
documentation:
  brief: Checks if any encounter is currently in progress within the instance.
  description: The IsEncounterInProgress method determines whether there is an active
    encounter running in the current instance. This is typically used to manage game
    state, such as preventing new encounters from starting while one is already active,
    or to control access to certain areas or objects during ongoing combat. The method
    returns true if at least one encounter is currently active and false otherwise.
    It's commonly used in conjunction with other encounter-related methods like StartEncounter,
    ResetEncounter, or IsEncounterComplete.
  parameters: []
  returns: A boolean value indicating whether any encounter is currently in progress
    (true) or not (false).
  examples:
  - title: Basic usage to check if an encounter is active
    code: "if (instance->IsEncounterInProgress())\n{\n    // Prevent new encounters\
      \ from starting\n    return false;\n}\n// Proceed with starting a new encounter\n\
      return true;"
    language: cpp
  - title: Using in an event handler to control player access
    code: "void Player::OnEnterInstance()\n{\n    if (instance->IsEncounterInProgress())\n\
      \    {\n        // Teleport player out or prevent entry\n        SendNotification(\"\
      An encounter is currently in progress.\");\n        return;\n    }\n    // Allow\
      \ normal instance entry\n}"
    language: cpp
  notes: This method relies on the internal state tracking of encounters within the
    InstanceScript. It should only be called from within a valid instance context
    where encounter states are properly managed. The implementation typically checks
    flags or counters associated with active encounters.
  warnings: Do not rely on this method to determine if a specific encounter is in
    progress - use dedicated methods for that purpose. Also, ensure the InstanceScript
    pointer is valid before calling this method to avoid undefined behavior.
  related:
  - StartEncounter
  - ResetEncounter
  - IsEncounterComplete
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:45:08.742197'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
