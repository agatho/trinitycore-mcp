api:
  class: SpellScript
  method: GetEffectValue
  signature: int SpellScript::GetEffectValue() const
documentation:
  brief: Retrieves the base value of the spell's effect from the current spell script
    context.
  description: The GetEffectValue method returns the base numeric value associated
    with a specific spell effect within the current spell script execution context.
    This value typically represents the raw damage, healing, or other effect magnitude
    before any modifiers, multipliers, or calculations are applied. The method is
    commonly used in spell script implementations to access and potentially modify
    the fundamental parameters of a spell's effect during runtime. It is particularly
    useful for custom spell behaviors where dynamic adjustments to effect values are
    required based on various conditions or game states.
  parameters: []
  returns: An integer representing the base value of the spell effect. This value
    can be positive or negative depending on whether the effect is healing, damage,
    or another type of effect. The exact meaning depends on the spell and effect type
    being processed.
  examples:
  - title: Basic Usage in Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleEffect(SpellEffIndex\
      \ effIndex) override\n    {\n        int baseValue = GetEffectValue();\n   \
      \     // Modify the effect value based on some condition\n        if (GetCaster()->GetTypeId()\
      \ == TYPEID_PLAYER)\n            SetEffectValue(baseValue * 2);\n    }\n};"
    language: cpp
  - title: Conditional Effect Value Modification
    code: "class HealingSpellScript : public SpellScript\n{\npublic:\n    void OnEffectExecute(SpellEffIndex\
      \ effIndex) override\n    {\n        int baseValue = GetEffectValue();\n   \
      \     if (GetHitUnit()->HasAura(12345)) // Check for specific aura\n       \
      \     SetEffectValue(baseValue + 50); // Add fixed bonus\n    }\n};"
    language: cpp
  notes: This method should only be called within the context of a spell script's
    execution, typically inside effect handlers or other callback methods. The returned
    value is not necessarily the final calculated value that will be applied to the
    target, as additional modifiers and calculations may occur after this method returns.
  warnings: Calling GetEffectValue() outside of an active spell script execution context
    may result in undefined behavior or incorrect values. Ensure that the spell script
    is properly initialized and that the effect index being accessed is valid before
    calling this method.
  related:
  - GetEffectIndex
  - SetEffectValue
  - GetSpellInfo
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:03:34.448009'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
