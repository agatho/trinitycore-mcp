api:
  class: ReputationMgr
  method: IsParagonReputation
  signature: bool ReputationMgr::IsParagonReputation(const FactionEntry * factionEntry)
    const
documentation:
  brief: Checks if a given faction entry represents a paragon reputation faction.
  description: The IsParagonReputation method determines whether a specified faction
    entry is classified as a paragon reputation faction within the TrinityCore framework.
    Paragon factions are typically those that have reached the maximum reputation
    level and may provide special rewards or benefits beyond normal reputation progression.
    This method evaluates the faction's properties to ascertain if it meets the criteria
    for being considered paragon, which can be useful in determining special interactions,
    quest rewards, or UI display logic related to high-reputation factions.
  parameters: []
  returns: Returns true if the specified faction entry represents a paragon reputation
    faction; otherwise, returns false. A faction is considered paragon when it has
    reached maximum reputation level and may have unique behaviors or rewards associated
    with it.
  examples:
  - title: Basic Usage
    code: "if (player->GetReputationMgr().IsParagonReputation(factionEntry)) {\n \
      \   // Handle paragon faction logic\n    sLog->outString(\"Faction is paragon\"\
      );\n}"
    language: cpp
  - title: Integration with Reputation Logic
    code: "void Player::HandleParagonRewards() {\n    for (auto& pair : GetReputationMgr().GetReputationMap())\
      \ {\n        const FactionEntry* faction = sFactionStore.LookupEntry(pair.first);\n\
      \        if (faction && IsParagonReputation(faction)) {\n            // Apply\
      \ paragon-specific rewards\n            GiveParagonReward(faction);\n      \
      \  }\n    }\n}"
    language: cpp
  notes: This method likely checks faction flags or reputation level thresholds to
    determine if a faction qualifies as paragon. It's important to note that the exact
    criteria for paragon status may vary between different World of Warcraft expansions
    and TrinityCore configurations.
  warnings: Ensure that the FactionEntry pointer passed to this method is valid and
    not null, as dereferencing an invalid pointer could cause undefined behavior.
    Additionally, be aware that faction definitions and their paragon status may change
    with game updates or custom configurations.
  related:
  - GetReputation
  - SetReputation
  - GetReputationRank
  - IsAtWar
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:25:38.597635'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
