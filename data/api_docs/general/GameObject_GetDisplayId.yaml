api:
  class: GameObject
  method: GetDisplayId
  signature: uint32 GameObject::GetDisplayId() const
documentation:
  brief: Returns the display ID of the GameObject, which determines its visual appearance
    in the game world.
  description: The GetDisplayId method retrieves the unique display identifier associated
    with a GameObject instance. This display ID controls how the object appears visually
    to players, including its model, texture, and other visual attributes. The value
    is typically set during the GameObject's initialization or through database configuration
    and can be used for various game mechanics such as determining visual effects,
    interactions, or identifying specific object types. This method is commonly used
    in scripts and game logic to access GameObject properties without modifying them
    directly.
  parameters: []
  returns: Returns a uint32 value representing the display ID of the GameObject. This
    value corresponds to the visual representation of the object in the game world,
    which may be linked to specific model or texture data in the client-side resources.
  examples:
  - title: Basic Usage Example
    code: "uint32 displayId = gameObject->GetDisplayId();\nif (displayId == 12345)\n\
      {\n    // Perform action when GameObject has specific display ID\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "uint32 displayId = gameObject->GetDisplayId();\n// Use displayId to determine\
      \ visual behavior\nswitch (displayId)\n{\n    case 12345:\n        // Handle\
      \ special visual appearance\n        break;\n    default:\n        // Default\
      \ handling\n        break;\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. Performance
    considerations are minimal as it simply returns a stored value without complex
    operations. The display ID is typically set during GameObject creation and may
    not change during runtime unless explicitly modified through game mechanics.
  warnings: Be aware that the returned display ID might not always correspond to a
    specific model or texture in the client-side resources, as some objects may use
    different display IDs for visual effects while maintaining the same underlying
    object type. This method should not be used for direct manipulation of GameObject
    properties unless explicitly required by game mechanics.
  related:
  - GetGOData
  - GetEntry
  - GetGUID
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:29:47.893108'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
