api:
  class: DB2Manager
  method: GetGlyphBindableSpells
  signature: const int * DB2Manager::GetGlyphBindableSpells(uint32 glyphPropertiesId)
    const
documentation:
  brief: Retrieves the list of spells that can be bound to a glyph for the specified
    glyph properties ID.
  description: The GetGlyphBindableSpells method fetches an array of spell IDs that
    are eligible for binding to a glyph based on the provided glyph properties identifier.
    This functionality is essential for handling glyph mechanics in World of Warcraft,
    particularly when determining which spells can be associated with specific glyph
    types. The returned pointer points to an internal static array managed by the
    DB2Manager, and the caller must not modify or free the memory. The method assumes
    that the glyphPropertiesId corresponds to a valid entry in the GlyphProperties.db2
    file, otherwise it may return unexpected results or nullptr.
  parameters:
  - name: glyphPropertiesId
    description: Unique identifier for the glyph properties entry in GlyphProperties.db2.
      This ID determines which set of spells is considered bindable to a glyph.
  returns: A pointer to an array of integers representing spell IDs that are bindable
    to the specified glyph properties. The array is null-terminated and should not
    be modified or freed by the caller. Returns nullptr if no valid data exists for
    the given glyphPropertiesId.
  examples:
  - title: Retrieve Bindable Spells for a Glyph
    code: "const int* spells = sDB2Manager->GetGlyphBindableSpells(1234);\nif (spells\
      \ != nullptr)\n{\n    for (int i = 0; spells[i] != 0; ++i)\n    {\n        printf(\"\
      Spell ID: %d\\n\", spells[i]);\n    }\n}"
    language: cpp
  notes: The returned array is managed internally by the DB2Manager and is shared
    across all calls. It's important to note that this method does not perform any
    validation on the glyphPropertiesId parameter, so invalid IDs may lead to undefined
    behavior or incorrect results. The implementation relies on pre-loaded data from
    GlyphProperties.db2.
  warnings: Do not attempt to free or modify the returned pointer as it points to
    internal static memory. Ensure that the glyphPropertiesId is valid and corresponds
    to an existing entry in the database, otherwise unexpected behavior may occur.
  related:
  - GetGlyphProperties
  - GetSpellInfo
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:04:15.489059'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
