api:
  class: Unit
  method: KnockbackFrom
  signature: void Unit::KnockbackFrom(const int & origin, float speedXY, float speedZ,
    const Movement::SpellEffectExtraData * spellEffectExtraData)
documentation:
  brief: Knocks back the unit from a specified origin point using spell effect data
  description: The KnockbackFrom method initiates a knockback movement for a Unit
    object, pulling it away from a specified origin point with defined XY and Z speed
    values. This method is commonly used in spell effects that require forced movement
    of targets, such as pull spells or push effects. The method utilizes the Movement::SpellEffectExtraData
    structure to provide additional context about the spell's behavior, including
    target position and effect parameters.
  parameters:
  - name: origin
    description: The origin point from which the knockback is initiated, typically
      representing a position or location in world coordinates
  - name: speedXY
    description: The horizontal speed (X and Y components) of the knockback movement,
      determining how fast the unit moves away from the origin point horizontally
  - name: speedZ
    description: The vertical speed (Z component) of the knockback movement, determining
      how fast the unit moves away from the origin point vertically
  - name: spellEffectExtraData
    description: Optional additional data structure containing spell effect parameters
      that influence the knockback behavior, including target position and other relevant
      details
  returns: null
  examples:
  - title: Basic Knockback Example
    code: 'Unit* target = GetTarget();

      float speedXY = 10.0f;

      float speedZ = 5.0f;

      const Movement::SpellEffectExtraData* extraData = nullptr;

      target->KnockbackFrom(1, speedXY, speedZ, extraData);'
    language: cpp
  - title: Advanced Knockback with Extra Data
    code: 'Unit* target = GetTarget();

      float speedXY = 15.0f;

      float speedZ = 8.0f;

      Movement::SpellEffectExtraData extraData;

      extraData.targetX = 100.0f;

      extraData.targetY = 100.0f;

      target->KnockbackFrom(2, speedXY, speedZ, &extraData);'
    language: cpp
  notes: This method is typically used in conjunction with spell effects that require
    movement of targets or units. The implementation may involve physics calculations
    for determining the knockback trajectory and speed based on the provided parameters.
    Performance considerations include avoiding unnecessary calls to this method when
    not needed, as it can affect server performance during combat situations.
  warnings: This method should only be called when the unit is in a valid state for
    movement. Calling it during combat or when the unit is already moving may cause
    unexpected behavior or errors. Also, ensure that the parameters are properly set
    to avoid incorrect knockback calculations.
  related:
  - Unit::KnockbackTo
  - Unit::MoveTo
  - Unit::GetMotionMaster
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:59:17.331108'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
