api:
  class: WorldSession
  method: HandleUpdateAuraVisual
  signature: void WorldSession::HandleUpdateAuraVisual(const WorldPackets::Spells::UpdateAuraVisual
    & updateAuraVisual)
documentation:
  brief: Updates the visual representation of an aura on a unit.
  description: The HandleUpdateAuraVisual method processes incoming client packets
    to update the visual state of auras applied to units. This method is typically
    invoked when a player's aura state changes, such as when an aura expires, is refreshed,
    or its visual effects are modified. It ensures that the client's UI accurately
    reflects the current aura status on affected units. The method handles synchronization
    between server-side aura data and client-side visual representation, maintaining
    consistency in gameplay mechanics like debuff tracking, buff indicators, and spell
    effect visibility.
  parameters:
  - name: updateAuraVisual
    description: A packet containing information about the aura update, including
      the unit identifier, aura slot, and updated visual properties.
  returns: null
  examples:
  - title: Basic Aura Update Handling
    code: "void WorldSession::HandleUpdateAuraVisual(const WorldPackets::Spells::UpdateAuraVisual\
      \ & updateAuraVisual)\n{\n    // Process the aura update packet\n    Unit* target\
      \ = GetPlayer()->GetMap()->GetUnit(updateAuraVisual.UnitGUID);\n    if (!target)\n\
      \        return;\n\n    // Apply visual updates to the aura\n    target->UpdateAuraVisualSlot(updateAuraVisual.AuraSlot);\n\
      }"
    language: cpp
  notes: This method is part of the spell and aura system in TrinityCore, where aura
    visuals are synchronized between server and client. It's crucial for maintaining
    accurate visual feedback during combat and gameplay interactions.
  warnings: null
  related:
  - HandleCastSpell
  - HandleCancelAura
  - UpdateAuraVisualSlot
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:15:24.991045'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
