api:
  class: CliHandler
  method: GetSessionDbcLocale
  signature: LocaleConstant CliHandler::GetSessionDbcLocale() const
documentation:
  brief: Retrieves the database locale constant associated with the current CLI session.
  description: The GetSessionDbcLocale method returns the LocaleConstant that represents
    the database locale currently set for the Command Line Interface (CLI) session.
    This locale is used to determine which localized strings and data should be retrieved
    from the database for commands executed through the CLI interface. The returned
    value corresponds to the client's language settings as configured in the database
    or through command-line arguments during server startup. This method is typically
    used internally by the TrinityCore system to ensure proper localization of command
    outputs and database queries.
  parameters: []
  returns: A LocaleConstant enum value indicating the current session's database locale.
    Possible values include LOCALE_enUS, LOCALE_koKR, LOCALE_frFR, LOCALE_deDE, LOCALE_zhCN,
    LOCALE_zhTW, LOCALE_esES, LOCALE_esMX, LOCALE_ruRU, and others depending on the
    server's supported locales.
  examples:
  - title: Basic Usage Example
    code: "LocaleConstant sessionLocale = handler->GetSessionDbcLocale();\nif (sessionLocale\
      \ == LOCALE_enUS)\n{\n    // Handle English locale\n    handler->SendSysMessage(\"\
      Current locale is English.\");\n}"
    language: cpp
  - title: Using Locale in Conditional Logic
    code: "void ShowLocalizedHelp(CliHandler* handler)\n{\n    LocaleConstant locale\
      \ = handler->GetSessionDbcLocale();\n    switch (locale)\n    {\n        case\
      \ LOCALE_zhCN:\n            handler->SendSysMessage(\"\u5E2E\u52A9\u4FE1\u606F\
      \uFF08\u4E2D\u6587\uFF09\");\n            break;\n        case LOCALE_enUS:\n\
      \        default:\n            handler->SendSysMessage(\"Help information (English)\"\
      );\n            break;\n    }\n}"
    language: cpp
  notes: This method assumes that the CLI session has been properly initialized with
    a valid locale setting. The returned LocaleConstant is determined during server
    initialization and may not change during runtime unless explicitly modified through
    specific administrative commands or configuration updates.
  warnings: null
  related:
  - GetSessionLocale
  - SetSessionDbcLocale
  - GetSessionLocaleName
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T16:15:08.164152'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
