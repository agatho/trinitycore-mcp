api:
  class: LineOfSightManager
  method: CanInterruptTarget
  signature: bool LineOfSightManager::CanInterruptTarget(Unit * target)
documentation:
  brief: Determines whether the current unit can interrupt the casting of a target
    spell.
  description: The CanInterruptTarget method evaluates if the calling unit has the
    ability to interrupt an ongoing spell cast by the specified target. This functionality
    is commonly used in combat scenarios where abilities such as silence, interrupt,
    or dispel effects are applied. The method considers factors such as line of sight,
    target validity, and the caster's capabilities. It returns true if interruption
    is possible, false otherwise. This check is essential for proper spell mechanics
    and game balance within TrinityCore's combat system.
  parameters: []
  returns: A boolean value indicating whether the current unit can interrupt the target's
    spell casting. Returns true if interruption is allowed; false if it is not permitted
    due to various conditions such as line of sight, target state, or caster limitations.
  examples:
  - title: Basic Usage in Combat
    code: "if (player->GetLineOfSightManager()->CanInterruptTarget(targetUnit)) {\n\
      \    // Apply interrupt effect\n    targetUnit->InterruptSpell(CURRENT_CHANNELED_SPELL);\n\
      }"
    language: cpp
  - title: Using in Spell Effect Handler
    code: "void SpellEffectInterrupt::HandleInterrupt() {\n    Unit* caster = GetCaster();\n\
      \    Unit* target = GetHitUnit();\n    if (caster && target && caster->GetLineOfSightManager()->CanInterruptTarget(target))\
      \ {\n        target->InterruptSpell(CURRENT_GENERIC_SPELL);\n        // Additional\
      \ interrupt logic\n    }\n}"
    language: cpp
  notes: This method relies on the LineOfSightManager's internal state and may perform
    line-of-sight checks internally. It assumes that both the caster and target units
    are valid and in the same map context. The result of this check can be cached
    for performance if multiple checks are performed on the same target within a short
    time frame.
  warnings: Ensure that the target unit is not null before calling this method, as
    it may cause undefined behavior or crashes. This method does not validate whether
    the target is currently casting a spell; callers should verify the target's casting
    state separately if needed.
  related:
  - GetLineOfSightManager
  - IsInFront
  - IsWithinDist
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:15:56.556288'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
