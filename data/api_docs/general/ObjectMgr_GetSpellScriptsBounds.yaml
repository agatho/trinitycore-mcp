api:
  class: ObjectMgr
  method: GetSpellScriptsBounds
  signature: SpellScriptsBounds ObjectMgr::GetSpellScriptsBounds(uint32 spellId)
documentation:
  brief: Retrieves the script bounds for a specified spell ID
  description: The GetSpellScriptsBounds method retrieves the start and end iterators
    for spell scripts associated with a given spell ID. This allows iteration over
    all script entries that apply to a specific spell, which is essential for handling
    spell-related scripted behaviors in TrinityCore. The returned SpellScriptsBounds
    object contains two iterators that define the range of script entries for the
    specified spell. This method is commonly used during spell execution to find and
    process relevant spell scripts.
  parameters: []
  returns: A SpellScriptsBounds object containing the start and end iterators defining
    the range of spell scripts associated with the specified spell ID. The bounds
    can be used directly in range-based for loops or other iteration constructs to
    access individual spell script entries.
  examples:
  - title: Iterating Over Spell Scripts
    code: "SpellScriptsBounds bounds = sObjectMgr->GetSpellScriptsBounds(12345);\n\
      for (auto itr = bounds.first; itr != bounds.second; ++itr)\n{\n    // Process\
      \ each spell script entry\n    SpellScript* script = *itr;\n    // Perform script-specific\
      \ logic\n}"
    language: cpp
  notes: This method is typically used internally by the spell system to efficiently
    retrieve and iterate over spell scripts. The returned bounds are valid only for
    the duration of the current operation, as the underlying data structures may change
    during spell processing. This method does not perform any locking or thread safety
    checks, so callers should ensure proper synchronization if accessing from multiple
    threads.
  warnings: Be cautious when modifying spell script collections while iterating through
    the returned bounds, as this can lead to undefined behavior or crashes. The method
    returns empty bounds (first == second) for spells that have no associated scripts,
    which should be checked before attempting iteration.
  related:
  - GetSpellScript
  - AddSpellScript
  - RemoveSpellScript
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:10:08.414606'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
