api:
  class: AuraEffect
  method: HandleAuraModPowerDisplay
  signature: void AuraEffect::HandleAuraModPowerDisplay(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the display of a unit's power based on aura application.
  description: The HandleAuraModPowerDisplay method is responsible for adjusting how
    a unit's power (such as mana, rage, or energy) is visually displayed to the player
    when an aura is applied or removed. This method is typically invoked during aura
    application or removal events and modifies the power display properties of the
    affected unit. It interacts with the AuraApplication object to determine the specific
    effect and mode of modification. The method ensures that visual feedback aligns
    with game mechanics, such as changing power regeneration rates or altering the
    appearance of power bars.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state and effects
      on the target.
  - name: mode
    description: Specifies the mode of operation, typically indicating whether the
      aura is being applied (1) or removed (0). This parameter controls how the power
      display modification should be handled.
  - name: apply
    description: Boolean flag indicating if the aura is being applied (true) or removed
      (false). This determines the direction of the power display change.
  returns: null
  examples:
  - title: Applying a Power Display Modification
    code: "void ApplyPowerMod(AuraEffect* auraEff, AuraApplication const* aurApp)\
      \ {\n    auraEff->HandleAuraModPowerDisplay(aurApp, 1, true);\n}"
    language: cpp
  - title: Removing a Power Display Modification
    code: "void RemovePowerMod(AuraEffect* auraEff, AuraApplication const* aurApp)\
      \ {\n    auraEff->HandleAuraModPowerDisplay(aurApp, 0, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and is called
    internally by the core engine when processing aura effects. It does not directly
    modify power values but instead adjusts how those values are displayed to players.
    The method relies on the AuraApplication object for context about which unit is
    affected and what the specific aura effect entails.
  warnings: Developers should ensure that this method is only called during appropriate
    aura application/removal events, as incorrect usage can lead to inconsistent visual
    feedback or unexpected behavior in power display mechanics.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetTarget
  - AuraEffect::GetAuraType
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:12:20.861552'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
