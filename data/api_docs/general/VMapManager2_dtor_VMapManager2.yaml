api:
  class: VMapManager2
  method: ~VMapManager2
  signature: void VMapManager2::~VMapManager2()
documentation:
  brief: Destroys the VMapManager2 instance and releases all associated memory and
    resources.
  description: The destructor for the VMapManager2 class is responsible for cleaning
    up all virtual map data structures, releasing allocated memory, and ensuring proper
    shutdown of the navigation mesh system. This method is automatically invoked when
    a VMapManager2 object goes out of scope or is explicitly deleted. It ensures that
    all loaded tile data, spatial partitioning structures, and internal caches are
    properly freed to prevent memory leaks. The destructor also handles cleanup of
    any active VMapFileCache entries and ensures thread-safe shutdown of the underlying
    virtual map management system.
  parameters: []
  returns: void
  examples:
  - title: Basic destruction of VMapManager2 instance
    code: 'VMapManager2* vmapManager = new VMapManager2();

      // ... use the manager ...

      delete vmapManager; // Triggers ~VMapManager2()'
    language: cpp
  - title: Automatic destruction via stack allocation
    code: "void someFunction() {\n    VMapManager2 vmapManager;\n    // ... use the\
      \ manager ...\n    // ~VMapManager2() automatically called here\n}"
    language: cpp
  notes: The destructor performs cleanup operations that are essential for proper
    memory management. It is important to ensure that no other threads are actively
    using the VMapManager2 instance during destruction, as this could lead to race
    conditions or undefined behavior. The destructor is designed to be thread-safe
    in the context of object destruction, but external synchronization may still be
    required if other components are accessing the manager concurrently.
  warnings: Do not call the destructor directly on a VMapManager2 instance that is
    still being used by other systems. Ensure all references to the manager are cleared
    before deletion. Improper use can lead to memory corruption or crashes during
    shutdown.
  related:
  - VMapManager2::VMapManager2
  - VMapManager2::LoadMap
  - VMapManager2::UnloadMap
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:53:08.723818'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
