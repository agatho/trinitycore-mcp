api:
  class: WaypointMgr
  method: GetPathByVisualGUID
  signature: const WaypointPath * WaypointMgr::GetPathByVisualGUID(int guid) const
documentation:
  brief: Retrieves a waypoint path by its visual GUID from the waypoint manager.
  description: The GetPathByVisualGUID method fetches a const pointer to a WaypointPath
    object using the provided visual GUID. This function is typically used in World
    of Warcraft's TrinityCore server implementation to retrieve predefined movement
    paths for creatures or game objects. The method performs a lookup within the internal
    waypoint path container and returns a valid pointer if the path exists, otherwise
    it returns nullptr. It is commonly invoked during creature AI initialization or
    when pathfinding logic needs to reference a specific visual path.
  parameters: []
  returns: A const pointer to the WaypointPath object associated with the given visual
    GUID, or nullptr if no such path exists.
  examples:
  - title: Basic Usage
    code: "const WaypointPath* path = sWaypointMgr->GetPathByVisualGUID(12345);\n\
      if (path)\n{\n    // Use the path for creature movement\n    creature->SetWaypointPath(path);\n\
      }"
    language: cpp
  - title: Error Handling
    code: "const WaypointPath* path = sWaypointMgr->GetPathByVisualGUID(99999);\n\
      if (!path)\n{\n    sLog->outError(LOG_FILTER_GENERAL, \"Failed to retrieve waypoint\
      \ path with visual GUID 99999\");\n    return false;\n}\n// Proceed with valid\
      \ path usage"
    language: cpp
  notes: This method performs a lookup operation in the internal waypoint manager's
    data structure. The visual GUID is not the same as the database ID but rather
    a unique identifier used for visual representation of waypoints in the game world.
    Performance is generally good due to optimized internal storage, but frequent
    lookups should be considered when dealing with high-frequency path requests.
  warnings: The returned pointer is const and should not be modified. If the method
    returns nullptr, it indicates either an invalid GUID or a path that has not been
    loaded into memory yet. Always check for null before using the returned pointer
    to avoid segmentation faults.
  related:
  - GetPathByEntry
  - LoadPathFromDB
  - AddWaypointPath
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:59:58.866148'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
