api:
  class: Unit
  method: GetSpellHistory
  signature: const SpellHistory * Unit::GetSpellHistory() const
documentation:
  brief: Returns the SpellHistory object associated with this unit for tracking spell
    cooldowns and global cooldowns.
  description: The GetSpellHistory method retrieves the SpellHistory object from a
    Unit instance, which is used to track spell cooldowns, global cooldowns, and other
    timing-related information for spells. This object contains data about when spells
    were last used, their cooldown periods, and other timing constraints that affect
    spell usage. The method is essential for managing spell timing mechanics in World
    of Warcraft, particularly for handling cooldowns and ensuring proper spell execution.
    It's commonly used in combat systems and spell management logic to prevent players
    from spamming spells or using them too frequently.
  parameters: []
  returns: Returns a pointer to the SpellHistory object associated with this unit.
    If no SpellHistory object has been initialized for the unit, it returns nullptr.
    This pointer should be treated as const and cannot be modified directly.
  examples:
  - title: Basic usage example
    code: "SpellHistory const* history = unit->GetSpellHistory();\nif (history)\n\
      {\n    // Use the spell history object\n    uint32 cooldown = history->GetCooldownForSpell(spellId);\n\
      }"
    language: cpp
  notes: The SpellHistory object returned by this method is initialized during unit
    creation and may be nullptr if not yet set up. This method is thread-safe as it
    returns a const pointer, but the underlying data should not be modified directly.
    Performance considerations include avoiding repeated calls to this method in tight
    loops.
  warnings: Be cautious when using this method in combat situations, as accessing
    the SpellHistory object may result in null pointer exceptions if the unit hasn't
    been initialized with proper spell history data. Also, avoid modifying the returned
    object directly as it's meant to be read-only.
  related:
  - GetSpellHistory
  - SetSpellHistory
  - GetSpellCooldown
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:42:22.770911'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
