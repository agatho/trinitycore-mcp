api:
  class: Unit
  method: SetSpeedRate
  signature: void Unit::SetSpeedRate(UnitMoveType mtype, float rate)
documentation:
  brief: Sets the movement speed rate for a specific unit move type.
  description: This method allows setting the speed rate for a given unit move type,
    which affects how fast the unit moves in different contexts such as walking, running,
    or swimming. The speed rate is typically used to modify base movement speeds and
    can be applied to various movement types including walk, run, and swim. This method
    is commonly used in game mechanics to control unit movement behavior during different
    states like combat or movement animations.
  parameters:
  - name: mtype
    description: The unit move type (e.g., walk, run, swim) for which the speed rate
      is being set. Valid values include UnitMoveType::Walk, UnitMoveType::Run, UnitMoveType::Swim,
      etc.
  - name: rate
    description: The speed rate value to apply to the specified move type. This value
      typically represents a multiplier or factor that modifies the base movement
      speed, where 1.0 means normal speed and values > 1.0 increase speed while <
      1.0 decrease speed.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit();

      unit->SetSpeedRate(UnitMoveType::Run, 1.5f);

      // Sets the run speed to 1.5 times normal speed'
    language: cpp
  - title: Advanced usage example
    code: 'Unit* unit = new Unit();

      unit->SetSpeedRate(UnitMoveType::Walk, 0.8f);

      unit->SetSpeedRate(UnitMoveType::Run, 1.2f);

      // Sets walk speed to 0.8 times normal and run speed to 1.2 times normal'
    language: cpp
  notes: 'Implementation details: This method directly modifies the movement speed
    for the specified move type, affecting how units behave in movement calculations.
    Performance considerations: The method should be used carefully as it can impact
    movement calculations and may affect unit behavior during combat or movement states.
    Thread safety: This method is not thread-safe and should be used with caution
    in multi-threaded environments.'
  warnings: 'Common mistakes: Using invalid move types or negative rate values can
    lead to unexpected behavior. Dangerous edge cases: Setting speed rates too high
    or too low may cause units to move unnaturally fast or slow, potentially disrupting
    game balance or causing visual artifacts.'
  related:
  - GetSpeedRate
  - SetSpeed
  - Unit::SetSpeed
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T00:49:10.665866'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
