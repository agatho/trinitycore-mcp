api:
  class: PoolMgr
  method: UpdatePool
  signature: void PoolMgr::UpdatePool(SpawnedPoolData & spawnedPoolData, uint32 pool_id,
    int type, uint64 spawnId)
documentation:
  brief: Updates a specific pool entry in the spawn data based on the provided spawn
    ID and type.
  description: The UpdatePool method is responsible for managing the state of spawned
    objects within a specific pool. It updates the internal tracking of a pool entry
    identified by its spawn ID and type, ensuring that the pool manager maintains
    accurate records of which objects are currently active or have been removed from
    the world. This method plays a critical role in the dynamic spawning and despawning
    of game entities such as creatures, game objects, or loot within the TrinityCore
    framework. The method modifies the SpawnedPoolData structure to reflect changes
    in the pool's state, which is essential for maintaining proper cleanup and respawn
    behavior. It is typically invoked when an object in a pool is destroyed, despawned,
    or otherwise removed from the game world.
  parameters:
  - name: spawnedPoolData
    description: Reference to the SpawnedPoolData structure that holds information
      about currently spawned objects within a pool. This data is modified by the
      method to reflect changes in object states.
  - name: pool_id
    description: Unique identifier of the pool being updated. This ID corresponds
      to a specific pool definition in the database, such as a creature or game object
      pool.
  - name: type
    description: Type identifier indicating the category of the spawned object (e.g.,
      0 for creatures, 1 for game objects). Used to determine how to process the spawn
      ID within the pool data structure.
  - name: spawnId
    description: Unique identifier of the specific spawned object within the pool.
      This is typically the GUID of the creature or game object that has been updated
      in state.
  returns: null
  examples:
  - title: Updating a Creature Pool Entry
    code: 'SpawnedPoolData data;

      uint32 poolId = 1001;

      int type = 0; // Creature type

      uint64 spawnGuid = 1234567890ULL;

      PoolMgr::Instance()->UpdatePool(data, poolId, type, spawnGuid);'
    language: cpp
  - title: Updating a Game Object Pool Entry
    code: 'SpawnedPoolData data;

      uint32 poolId = 2002;

      int type = 1; // Game object type

      uint64 spawnGuid = 9876543210ULL;

      PoolMgr::Instance()->UpdatePool(data, poolId, type, spawnGuid);'
    language: cpp
  notes: This method is part of the internal pool management system and is usually
    called automatically by the core when objects are removed from the world. Developers
    should not typically call this method directly unless implementing custom pool
    logic or debugging pool behavior. The method modifies the passed SpawnedPoolData
    reference in-place, so it's important to ensure that the data is properly initialized
    before calling.
  warnings: Incorrect usage of this method with invalid pool IDs or spawn GUIDs can
    lead to inconsistent pool state and potential memory leaks. Avoid calling this
    method with uninitialized SpawnedPoolData structures as it may cause undefined
    behavior. The type parameter must match the expected object types in the pool
    for correct operation.
  related:
  - GetSpawnedPoolData
  - AddToPool
  - RemoveFromPool
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:51:03.114230'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
