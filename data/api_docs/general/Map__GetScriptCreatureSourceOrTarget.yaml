api:
  class: Map
  method: _GetScriptCreatureSourceOrTarget
  signature: Creature * Map::_GetScriptCreatureSourceOrTarget(Object * source, Object
    * target, const ScriptInfo * scriptInfo, bool bReverse) const
documentation:
  brief: Retrieves the Creature object associated with a script source or target based
    on provided script information and direction.
  description: The _GetScriptCreatureSourceOrTarget method is an internal utility
    function used within the TrinityCore framework to resolve and return a Creature
    pointer from either a source or target object, depending on the script's context.
    It evaluates the provided script information and determines whether to extract
    the creature from the source or target object based on the bReverse flag. This
    functionality is typically employed in scripted events, quest triggers, or AI
    behaviors where a specific creature needs to be identified for further processing.
    The method ensures that only valid Creature objects are returned, avoiding null
    pointers when possible. It's part of the core scripting system and should not
    be called directly from external modules without proper context.
  parameters:
  - name: source
    description: Pointer to the source Object in the script context, which may contain
      or reference a Creature.
  - name: target
    description: Pointer to the target Object in the script context, which may contain
      or reference a Creature.
  - name: scriptInfo
    description: Pointer to the ScriptInfo structure that defines how the source and
      target should be interpreted for creature resolution.
  - name: bReverse
    description: Boolean flag indicating whether to use the target as the source or
      vice versa. If true, uses the target; otherwise, uses the source.
  returns: Returns a pointer to a Creature object if one can be resolved from the
    provided source/target and script context. Returns nullptr if no valid Creature
    is found or if the resolution fails due to invalid parameters.
  examples:
  - title: Basic Usage in Script Context
    code: "Creature* creature = map->_GetScriptCreatureSourceOrTarget(sourceObject,\
      \ targetObject, scriptInfo, false);\nif (creature)\n{\n    // Proceed with creature-specific\
      \ logic\n    creature->AI()->DoAction(ACTION_TRIGGER_EVENT);\n}"
    language: cpp
  - title: Using Reverse Flag for Target Resolution
    code: "Creature* creature = map->_GetScriptCreatureSourceOrTarget(sourceObject,\
      \ targetObject, scriptInfo, true);\nif (creature)\n{\n    // Use the resolved\
      \ creature as the target\n    creature->CastSpell(creature, SPELL_EFFECT, TRIGGERED_NONE);\n\
      }"
    language: cpp
  notes: This method is internal and primarily used by the TrinityCore's script engine.
    It relies heavily on the correct setup of ScriptInfo structures and assumes valid
    object types. The function performs type checking internally but does not perform
    any additional validation beyond that.
  warnings: Calling this method without proper initialization of source, target, or
    scriptInfo may lead to undefined behavior or crashes. Ensure all parameters are
    properly validated before invoking this function in custom code.
  related:
  - GetCreature
  - GetPlayer
  - GetObjectByType
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T23:50:56.956126'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
