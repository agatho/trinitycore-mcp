api:
  class: AuraEffect
  method: HandleAuraTrackCreatures
  signature: void AuraEffect::HandleAuraTrackCreatures(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes the aura effect that tracks nearby creatures for the player.
  description: The HandleAuraTrackCreatures method manages the application and removal
    of an aura effect that allows a player to track nearby creatures. This functionality
    is typically used by abilities such as 'Track Beasts', 'Track Humanoids', etc.,
    which enable players to detect hidden or invisible creatures within a certain
    range. The method operates based on the provided AuraApplication instance, mode
    flag, and apply status to either activate or deactivate the tracking effect. It
    integrates with the game's aura system to update the player's visibility state
    for tracked creatures.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the specific aura instance
      and its context.
  - name: mode
    description: Mode flag indicating how the aura should be handled. Typically represents
      different tracking types (e.g., beast, humanoid, elemental). Valid values depend
      on the specific aura implementation.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect. When true, the tracking effect is enabled; when false, it's
      disabled.
  returns: null
  examples:
  - title: Applying Track Creatures Aura
    code: "AuraApplication* app = player->GetAuraApplication(12345);\nif (app)\n{\n\
      \    auraEffect->HandleAuraTrackCreatures(app, TRACK_CREATURES_BEAST, true);\n\
      }"
    language: cpp
  - title: Removing Track Creatures Aura
    code: "AuraApplication* app = player->GetAuraApplication(12345);\nif (app)\n{\n\
      \    auraEffect->HandleAuraTrackCreatures(app, TRACK_CREATURES_BEAST, false);\n\
      }"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly from outside the core aura management logic. The tracking effect
    updates the player's client-side visibility state for tracked creatures, which
    may involve sending packets to the client. Implementation details are tightly
    coupled with the game's creature detection and visibility systems.
  warnings: Do not call this method directly without ensuring proper aura application
    context. Incorrect usage can lead to inconsistent tracking states or client-side
    display issues. The mode parameter must match predefined tracking types to avoid
    undefined behavior.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - Player::UpdateVisibilityForPlayer
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:59:19.189426'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
