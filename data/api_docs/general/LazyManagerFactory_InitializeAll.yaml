api:
  class: LazyManagerFactory
  method: InitializeAll
  signature: void LazyManagerFactory::InitializeAll()
documentation:
  brief: Initializes all lazy-loaded managers within the factory.
  description: The InitializeAll method activates and prepares all lazy-loaded managers
    managed by the LazyManagerFactory. This method ensures that all dependent systems
    are properly initialized before they are accessed, preventing runtime errors due
    to uninitialized components. It typically iterates through registered managers
    and calls their initialization routines. The method is commonly invoked during
    server startup or when a specific subsystem requires full initialization of its
    lazy managers.
  parameters: []
  returns: null
  examples:
  - title: Basic Initialization Call
    code: LazyManagerFactory::Instance()->InitializeAll();
    language: cpp
  notes: This method is usually called once during system initialization. It's thread-safe
    if the underlying manager implementations support concurrent access, but it's
    recommended to call it from a single-threaded context during startup.
  warnings: Calling this method multiple times may result in undefined behavior or
    redundant initializations. Ensure that all dependencies are properly registered
    before invoking this method.
  related:
  - GetManager
  - RegisterManager
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T23:55:16.355311'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
