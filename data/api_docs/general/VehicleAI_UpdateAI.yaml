api:
  class: VehicleAI
  method: UpdateAI
  signature: void VehicleAI::UpdateAI(int diff)
documentation:
  brief: Updates the vehicle's AI behavior based on elapsed time and current state.
  description: The UpdateAI method is responsible for processing the artificial intelligence
    logic of a vehicle entity within the TrinityCore framework. It is called periodically
    by the game loop to handle vehicle-specific behaviors such as passenger management,
    movement updates, and combat-related actions. The method takes a time delta parameter
    (diff) which represents the milliseconds elapsed since the last update, allowing
    for smooth and consistent timing of AI operations. This function typically manages
    the vehicle's interaction with its passengers, handles animations, controls the
    vehicle's movement state, and ensures proper synchronization between the vehicle
    and its occupants.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last update call. This
      value is used to determine how much time has passed for AI calculations and
      state transitions.
  returns: null
  examples:
  - title: Basic UpdateAI Usage
    code: "void VehicleAI::UpdateAI(int diff)\n{\n    // Handle passenger-related\
      \ updates\n    if (HasPassengers())\n        UpdatePassengers(diff);\n    \n\
      \    // Process vehicle movement\n    if (IsMoving())\n        UpdateMovement(diff);\n\
      \    \n    // Handle combat or other AI behaviors\n    if (GetTarget() != nullptr)\n\
      \        HandleCombatBehavior(diff);\n}"
    language: cpp
  notes: This method is automatically invoked by the core game loop and should not
    be called directly from external code. The diff parameter ensures that time-based
    calculations are consistent regardless of frame rate variations. VehicleAI implementations
    may override this method to provide custom behavior while still calling the base
    implementation for standard functionality.
  warnings: Do not modify the vehicle's state directly within UpdateAI without proper
    synchronization, as it may cause race conditions or inconsistent behavior. Avoid
    performing heavy computations in this method as it's called frequently and can
    impact performance if not optimized properly.
  related:
  - VehicleAI::Initialize
  - VehicleAI::PassengerBoarded
  - VehicleAI::PassengerExited
  - VehicleAI::IsMoving
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T19:48:29.392711'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
