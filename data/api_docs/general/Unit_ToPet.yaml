api:
  class: Unit
  method: ToPet
  signature: const Pet * Unit::ToPet() const
documentation:
  brief: Returns the Pet object associated with this Unit if it exists, otherwise
    returns nullptr.
  description: The ToPet method is used to retrieve the Pet object that is associated
    with a Unit. This method is typically used in the context of player characters
    or creatures that have a pet, such as summoned pets or controlled pets. The method
    returns a const pointer to the Pet object, indicating that it cannot be modified
    directly. If the Unit does not have a pet, this method will return nullptr. This
    functionality is essential for managing pet-related game mechanics and interactions
    in World of Warcraft.
  parameters: []
  returns: Returns a const pointer to the Pet object if the Unit has one, otherwise
    returns nullptr. The returned pointer may be null if no pet is associated with
    the unit, or if the pet has been removed or destroyed.
  examples:
  - title: Basic usage example
    code: "Pet* pet = unit->ToPet();\nif (pet != nullptr)\n{\n    // Pet exists, do\
      \ something with it\n    pet->SetOwnerGUID(player->GetGUID());\n}"
    language: cpp
  notes: This method is commonly used in conjunction with other pet-related methods
    such as ToCreature or ToPlayer to determine what type of unit is being referenced.
    Performance considerations are minimal since this method simply returns a pointer
    from internal data structures.
  warnings: Care must be taken when using this method because the returned Pet pointer
    may be invalid if the pet has been removed or destroyed. Always check for null
    before accessing methods on the returned Pet object to avoid dereferencing a null
    pointer.
  related:
  - Unit::ToCreature
  - Unit::ToPlayer
  - Unit::GetPet
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:09:00.199333'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
