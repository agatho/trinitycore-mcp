api:
  class: AuraEffect
  method: HandleModPossess
  signature: void AuraEffect::HandleModPossess(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes a possess effect aura on the target.
  description: The HandleModPossess method manages the application and removal of
    a possess aura effect on a target unit. This method is typically invoked during
    aura application or removal events to modify the possessed state of the affected
    unit. It handles the logic for setting or clearing the possess flag on the target,
    which affects the unit's behavior and control by the caster. The method operates
    based on the aura application context and the mode of operation (apply or remove).
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state, target,
      and caster.
  - name: mode
    description: The mode of operation indicating whether the aura is being applied
      (true) or removed (false). This parameter determines the direction of the effect
      modification.
  - name: apply
    description: Boolean flag indicating if the possess effect should be applied (true)
      or removed (false) from the target unit.
  returns: null
  examples:
  - title: Basic Possess Aura Application
    code: "void ApplyPossessAura(Unit* target, Unit* caster) {\n    if (Aura* aura\
      \ = new Aura(caster, target, SPELL_ID_POSSESS)) {\n        aura->ApplyModifier();\n\
      \        // This internally calls HandleModPossess\n    }\n}"
    language: cpp
  - title: Custom Possess Effect Handler
    code: "class CustomPossessAura : public Aura {\npublic:\n    void HandleModPossess(const\
      \ AuraApplication* aurApp, uint8 mode, bool apply) const override {\n      \
      \  if (apply) {\n            // Set possess state\n            target->SetControlledBy(caster);\n\
      \        } else {\n            // Remove possess state\n            target->RemoveControlledBy();\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method is part of the aura effect handling system and should only be
    called during proper aura application/removal sequences. The implementation assumes
    that the target unit supports possess mechanics, which may not be available for
    all unit types. Ensure proper synchronization when modifying controlled states
    to prevent race conditions.
  warnings: Incorrect usage of this method can lead to invalid unit control states
    or crashes if the target does not support possess mechanics. Always verify that
    the aura application context is valid before calling this method.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::SetControlledBy
  - Unit::RemoveControlledBy
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:29:53.654996'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
