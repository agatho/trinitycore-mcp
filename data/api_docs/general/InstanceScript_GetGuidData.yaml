api:
  class: InstanceScript
  method: GetGuidData
  signature: int InstanceScript::GetGuidData(uint32 type) const
documentation:
  brief: Retrieves the GUID data associated with a specified type from the instance
    script.
  description: The GetGuidData method is used to retrieve a unique identifier (GUID)
    that corresponds to a specific type within an instance script. This method is
    typically employed in World of Warcraft's TrinityCore server implementation to
    manage and track game objects, creatures, or players within a dungeon or raid
    instance. The returned GUID can be used for various purposes such as identifying
    specific entities during event triggers, managing spawn points, or coordinating
    scripted behaviors. The method operates on a type-based lookup system where each
    type maps to a unique GUID stored in the instance's data structure.
  parameters: []
  returns: Returns an integer representing the GUID associated with the specified
    type. If no valid GUID is found for the given type, the method may return 0 or
    a special sentinel value indicating an invalid or unassigned identifier.
  examples:
  - title: Retrieving a Player's GUID
    code: uint32 playerGuid = instance->GetGuidData(PLAYER_GUID_TYPE);
    language: cpp
  - title: Using GUID for Object Tracking
    code: "if (Creature* boss = instance->instance->GetCreature(GetGuidData(BOSS_GUID_TYPE)))\n\
      {\n    // Perform actions on the boss creature\n}"
    language: cpp
  notes: This method is part of the InstanceScript base class and relies on internal
    data structures to map types to GUIDs. Developers should ensure that all types
    used with this method have been properly initialized in the instance's data storage
    before calling GetGuidData. The method does not perform any validation on the
    input type, so calling it with an invalid or uninitialized type may result in
    undefined behavior.
  warnings: Calling GetGuidData with an invalid type parameter can lead to incorrect
    GUID retrieval or potential crashes if the internal mapping is not properly initialized.
    Always verify that the type has been registered with valid GUID data before invoking
    this method.
  related:
  - SetGuidData
  - GetCreature
  - GetGameObject
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:48:32.018062'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
