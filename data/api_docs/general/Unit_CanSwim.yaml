api:
  class: Unit
  method: CanSwim
  signature: bool Unit::CanSwim() const
documentation:
  brief: Determines whether the unit can swim in water.
  description: The CanSwim method checks if a unit (player or creature) is capable
    of swimming in water. This method evaluates the unit's ability to move through
    water without drowning, which depends on factors such as the unit's movement type,
    current state, and any applicable buffs or debuffs. It returns true when the unit
    can swim and false otherwise. The method is commonly used in game mechanics to
    determine if a unit can navigate water-based environments.
  parameters: []
  returns: Returns true if the unit can swim, false otherwise. This indicates whether
    the unit has the capability to move through water without drowning.
  examples:
  - title: Basic usage example
    code: "if (unit->CanSwim()) {\n    // Unit can swim\n    // Do something related\
      \ to swimming\n}"
    language: cpp
  notes: This method typically checks the unit's movement type and state, and may
    be affected by buffs or debuffs that alter swimming capabilities. Performance-wise,
    it is a lightweight check that does not involve complex calculations.
  warnings: This method should not be used to determine if a unit can swim in specific
    water bodies, as it only indicates general swimming capability. It does not account
    for water depth or current conditions.
  related:
  - Unit::CanWalk
  - Unit::CanFly
  - Unit::HasUnitState
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:42:20.294927'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
