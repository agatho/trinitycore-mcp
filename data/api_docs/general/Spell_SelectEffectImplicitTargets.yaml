api:
  class: Spell
  method: SelectEffectImplicitTargets
  signature: void Spell::SelectEffectImplicitTargets(const SpellEffectInfo & spellEffectInfo,
    const SpellImplicitTargetInfo & targetType, int targetIndex, uint32 & processedEffectMask)
documentation:
  brief: Selects implicit targets for spell effects based on provided target information
    and processes the effect mask.
  description: This method determines and selects appropriate implicit targets for
    spell effects by analyzing the provided SpellEffectInfo and SpellImplicitTargetInfo
    structures. It processes the effect mask to ensure proper targeting of spell effects,
    particularly in relation to the target index. The method is crucial for handling
    spell target selection during spell execution, especially when dealing with multiple
    targets or complex targeting mechanics. This function directly influences how
    spells interact with their targets and can affect gameplay mechanics such as damage
    calculation, healing, and area-of-effect targeting.
  parameters:
  - name: spellEffectInfo
    description: The SpellEffectInfo structure containing information about the spell
      effect being processed, including effect type, target type, and other relevant
      parameters.
  - name: targetType
    description: The SpellImplicitTargetInfo structure that defines the implicit target
      types for the spell effect, including target selection rules and constraints.
  - name: targetIndex
    description: The index of the target being processed, used to determine which
      specific target within a spell's target list is being selected.
  - name: processedEffectMask
    description: A reference to a uint32 value that tracks which effects have been
      processed, allowing for proper effect handling and preventing duplicate processing
      of targets.
  returns: null
  examples:
  - title: Basic usage example
    code: 'SpellEffectInfo spellEffect;

      SpellImplicitTargetInfo targetType;

      uint32 processedMask = 0;

      int targetIndex = 0;

      Spell::SelectEffectImplicitTargets(spellEffect, targetType, targetIndex, processedMask);'
    language: cpp
  - title: Advanced usage example with multiple targets
    code: '// This example demonstrates how the method might be used in a spell processing
      context

      // where multiple targets are handled based on effect type

      SpellEffectInfo spellEffect;

      SpellImplicitTargetInfo targetType;

      uint32 processedMask = 0;

      int targetIndex = 1;

      Spell::SelectEffectImplicitTargets(spellEffect, targetType, targetIndex, processedMask);

      // This would typically be part of a larger spell processing loop'
    language: cpp
  notes: The method is designed to handle complex targeting logic within the context
    of spell effects. It requires careful handling of effect masks and target indices
    to ensure correct targeting behavior. Performance considerations include avoiding
    unnecessary repeated calls when processing multiple targets, as this method may
    be called frequently during spell execution.
  warnings: This method should not be called directly without proper context; it's
    typically used internally by the spell system. Care must be taken to avoid incorrect
    target selection or effect mask manipulation which could lead to incorrect spell
    targeting or game mechanics issues.
  related:
  - Spell::SelectEffectImplicitTargets
  - Spell::GetEffect
  - Spell::GetTarget
  - Spell::GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:56:27.670034'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
