api:
  class: AuraEffect
  method: SetPeriodic
  signature: void AuraEffect::SetPeriodic(bool isPeriodic)
documentation:
  brief: Sets whether the aura effect is periodic.
  description: The SetPeriodic method configures whether an AuraEffect operates in
    a periodic manner, meaning it applies its effect at regular intervals rather than
    just once. This is commonly used for effects like DoT (damage over time) or HoT
    (heal over time) spells. The method directly modifies the internal state of the
    aura effect to determine if it should trigger its application logic on each tick
    of the periodic interval.
  parameters: []
  returns: null
  examples:
  - title: Enable Periodic Aura Effect
    code: "AuraEffect* auraEffect = unit->GetAuraEffect(12345, 0);\nif (auraEffect)\n\
      {\n    auraEffect->SetPeriodic(true);\n}"
    language: cpp
  - title: Disable Periodic Aura Effect
    code: "AuraEffect* auraEffect = unit->GetAuraEffect(12345, 0);\nif (auraEffect)\n\
      {\n    auraEffect->SetPeriodic(false);\n}"
    language: cpp
  notes: This method should be called before the aura is applied to ensure proper
    behavior. Changing the periodic state after an aura has started may lead to unexpected
    results or inconsistent gameplay behavior.
  warnings: Modifying the periodic state of an active aura effect can cause inconsistencies
    in spell behavior and should only be done during aura initialization or when explicitly
    required by game logic.
  related:
  - GetPeriodic
  - IsPeriodic
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:55:30.981695'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
