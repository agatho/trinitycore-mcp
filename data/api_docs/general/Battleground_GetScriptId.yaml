api:
  class: Battleground
  method: GetScriptId
  signature: int Battleground::GetScriptId() const
documentation:
  brief: Returns the script identifier associated with the battleground instance.
  description: The GetScriptId method retrieves the unique script identifier assigned
    to a battleground instance. This ID is used internally by TrinityCore to determine
    which game logic and behaviors should be applied to the specific battleground.
    The script ID typically corresponds to predefined battleground types or custom
    scripts registered in the game's scripting system. This method is commonly used
    during battleground initialization, matchmaking, and when applying specific rules
    or modifications based on the battleground type.
  parameters: []
  returns: An integer representing the script identifier of the battleground. This
    value typically maps to a predefined battleground type or custom script definition
    within the TrinityCore framework. A return value of 0 often indicates an invalid
    or unassigned script ID.
  examples:
  - title: Basic Usage to Identify Battleground Type
    code: "Battleground* bg = ...; // Assume bg is a valid battleground instance\n\
      int scriptId = bg->GetScriptId();\nif (scriptId == 30) {\n    // This is a Warsong\
      \ Gulch battleground\n    // Apply specific logic for WSG\n}"
    language: cpp
  - title: Using Script ID for Conditional Logic
    code: "Battleground* bg = sBattlegroundMgr->GetBattleground(12345);\nif (bg) {\n\
      \    int scriptId = bg->GetScriptId();\n    switch (scriptId) {\n        case\
      \ 1:\n            // Alterac Valley\n            break;\n        case 2:\n \
      \           // Eye of the Storm\n            break;\n        default:\n    \
      \        // Generic battleground logic\n            break;\n    }\n}"
    language: cpp
  notes: The script ID returned by this method is set during battleground creation
    and should remain constant throughout the battleground's lifecycle. It's important
    to note that different battleground types have different script IDs, which are
    defined in the game's configuration or database. This method does not perform
    any validation on the returned ID; it simply returns what was assigned during
    initialization.
  warnings: Do not modify the script ID directly through this method as it is typically
    read-only. Incorrect interpretation of the script ID may lead to applying wrong
    battleground rules or behaviors, potentially breaking game mechanics or causing
    unexpected behavior in player interactions.
  related:
  - GetTypeId
  - GetStatus
  - GetBgTypeID
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:08:47.870507'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
