api:
  class: Unit
  method: GetRace
  signature: uint8 Unit::GetRace() const
documentation:
  brief: Returns the race identifier of the unit.
  description: The GetRace method retrieves the racial identifier of a Unit object,
    which represents a creature or player in the game. This value corresponds to the
    race type as defined in the DBC files and is used for determining character creation,
    faction relationships, and various gameplay mechanics. The method returns a uint8
    value representing the race ID, which can be used for conditional logic in scripts
    or for determining specific behavior based on race. For players, this value typically
    corresponds to one of the standard races available in the game such as Human,
    Dwarf, Night Elf, etc.
  parameters: []
  returns: Returns a uint8 value representing the race identifier of the unit. This
    value corresponds to the race ID used internally by TrinityCore and maps to specific
    race types defined in the DBC files. Possible values include standard races like
    Human (1), Dwarf (2), Night Elf (3), Undead (4), Tauren (5), Gnome (6), Troll
    (7), Blood Elf (8), Draenei (9), and others depending on the game version.
  examples:
  - title: Basic Usage Example
    code: "uint8 race = unit->GetRace();\nif (race == RACE_HUMAN)\n{\n    // Perform\
      \ actions specific to human players\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* target = player->GetSelectedUnit();\nuint8 race = target->GetRace();\n\
      switch (race)\n{\n    case RACE_HUMAN:\n    case RACE_DWARF:\n        // Handle\
      \ human or dwarf players\n        break;\n    case RACE_NIGH_ELF:\n        //\
      \ Handle night elf players\n        break;\n    default:\n        // Handle\
      \ other races\n        break;\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. The
    returned race value is cached and does not require additional database queries
    for retrieval. Performance considerations are minimal as this is a simple getter
    method that accesses internal data structures.
  warnings: This method should not be used to determine faction relationships directly,
    as the race ID does not always correspond to faction IDs. Developers should be
    aware that some races may have different faction IDs based on their class or other
    factors in the game.
  related:
  - GetClass
  - GetGender
  - GetLevel
  - GetFaction
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:46:37.979661'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
