api:
  class: Player
  method: FindEquipSlot
  signature: uint8 Player::FindEquipSlot(const Item * item, uint8 slot, bool swap)
    const
documentation:
  brief: Determines the appropriate equipment slot for an item based on its type and
    the player's current inventory state.
  description: The FindEquipSlot method evaluates an item's type and determines the
    most suitable equipment slot for placement, considering the player's current inventory
    state and whether swapping is allowed. This method is crucial for handling item
    equipement logic during character progression and gear management within World
    of Warcraft. It takes into account various factors including item type, slot requirements,
    and potential swap scenarios to ensure proper placement of items in the player's
    equipment slots.
  parameters:
  - name: item
    description: Pointer to the Item object whose slot needs to be determined. This
      parameter is essential for evaluating item properties such as item type, slot
      requirements, and other relevant characteristics.
  - name: slot
    description: The specific slot type to consider when determining placement. This
      parameter allows for precise control over which slot type should be evaluated
      for item placement, particularly useful when dealing with specific slot types
      like head, chest, or weapon slots.
  - name: swap
    description: Boolean flag indicating whether swapping is allowed during the process.
      When true, this method will attempt to swap items in existing slots if necessary
      to accommodate the new item, allowing for more flexible gear management.
  returns: Returns uint8 representing the slot number where the item should be placed.
    If no suitable slot exists or if the item cannot be placed, it returns 0. The
    returned value corresponds to a valid equipment slot number that can be used in
    subsequent operations.
  examples:
  - title: Basic usage example
    code: "uint8 slot = player->FindEquipSlot(item, SLOT_HEAD, true);\nif (slot !=\
      \ 0)\n{\n    // Place item in slot\n}"
    language: cpp
  - title: Advanced usage example
    code: "Item* item = new Item();\nuint8 slot = player->FindEquipSlot(item, SLOT_WEAPON,\
      \ false);\nif (slot == 0)\n{\n    // Handle case where no suitable slot exists\n\
      }\nelse\n{\n    // Proceed with item placement\n}"
    language: cpp
  notes: This method is part of the core player equipment management system and should
    be used in conjunction with other inventory-related methods for full functionality.
    Performance considerations include checking item type and slot requirements efficiently,
    especially when dealing with multiple items simultaneously.
  warnings: Care must be taken when using swap=true as it may lead to unexpected behavior
    if not properly handled. The method may return 0 if no suitable slot exists, which
    could indicate either a problem or simply that the item cannot be placed in any
    equipment slot.
  related:
  - FindEquipSlot
  - GetItemByPos
  - EquipItem
  - Item::GetSlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:49:04.384556'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
