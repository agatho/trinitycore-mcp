api:
  class: BotThreatManager
  method: UpdateThreatValue
  signature: void BotThreatManager::UpdateThreatValue(Unit * target, float threat,
    ThreatType type)
documentation:
  brief: Updates the threat value of a target unit for the bot's current threat manager.
  description: The UpdateThreatValue method modifies the threat level that a specific
    target unit holds within the bot's threat management system. This is used in the
    context of AI-driven behavior where bots maintain a list of targets and their
    associated threat levels to determine which enemies to prioritize for attacks
    or defensive actions. The method accepts a pointer to the target unit, a float
    value representing the new threat level, and a threat type to categorize the threat
    source. It updates the internal threat table accordingly without returning any
    value.
  parameters:
  - name: target
    description: Pointer to the Unit object for which the threat value is being updated.
      Must not be null.
  - name: threat
    description: Float value representing the new threat level assigned to the target.
      Typically ranges from 0.0f (no threat) to a maximum defined by the system or
      combat mechanics.
  - name: type
    description: ThreatType enum value indicating the category or source of the threat,
      such as melee, spell, or periodic damage.
  returns: null
  examples:
  - title: Basic Threat Update Example
    code: 'Unit* target = player->GetVictim();

      float newThreat = 100.0f;

      BotThreatManager::UpdateThreatValue(target, newThreat, ThreatType::THREAT_MELEE);'
    language: cpp
  - title: Updating Spell-Based Threat
    code: 'Unit* target = spell->GetTarget();

      float threatFromSpell = 50.0f;

      BotThreatManager::UpdateThreatValue(target, threatFromSpell, ThreatType::THREAT_SPELL);'
    language: cpp
  notes: This method directly manipulates the internal threat table of the bot's threat
    manager and should be used carefully to avoid inconsistent or unexpected AI behavior.
    The threat value is typically normalized within a system-defined range, and repeated
    calls may overwrite previous values.
  warnings: Ensure that the target unit pointer is valid before calling this method;
    passing a null pointer can lead to undefined behavior. Also, be cautious about
    updating threat values too frequently during combat as it may cause performance
    issues or disrupt AI decision-making logic.
  related:
  - GetThreatValue
  - ClearThreatList
  - GetHighestThreatTarget
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:31:25.364841'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
