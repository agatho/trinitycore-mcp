api:
  class: Unit
  method: IsGuildMaster
  signature: bool Unit::IsGuildMaster() const
documentation:
  brief: Checks whether the unit is the guild master of a guild
  description: This method determines if the current unit object represents a player
    who is the guild master of their guild. It returns true if the unit has the guild
    master status, false otherwise. The method is commonly used in game logic to verify
    administrative privileges within guilds, particularly for handling guild-related
    actions such as managing guild members, setting guild permissions, or performing
    guild operations that require elevated privileges. This functionality is essential
    for maintaining proper guild hierarchy and ensuring correct execution of guild-specific
    commands.
  parameters: []
  returns: Returns true if the unit is the guild master of their guild, false otherwise.
    The method does not return null or error values; it simply returns a boolean result
    based on the unit's guild status.
  examples:
  - title: Basic usage example
    code: "if (unit->IsGuildMaster()) {\n    // Perform guild master actions\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other guild-related methods
    to determine the current player's role within a guild. It may be called in various
    game contexts such as when processing guild commands or checking permissions for
    specific actions.
  warnings: This method should not be used to verify general player status; it specifically
    checks for guild master privileges. Using this method inappropriately may lead
    to incorrect logic in guild management operations.
  related:
  - IsInGuild
  - GetGuildId
  - GetGuildMaster
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:07:29.842768'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
