api:
  class: WaypointMgr
  method: instance
  signature: WaypointMgr * WaypointMgr::instance()
documentation:
  brief: Returns the singleton instance of the WaypointMgr class
  description: The instance() method implements the singleton pattern for the WaypointMgr
    class, ensuring that only one instance of the waypoint management system exists
    throughout the TrinityCore server runtime. This method is typically used to access
    global waypoint-related functionality such as pathfinding, NPC movement, and waypoint
    database operations. The returned pointer should be used directly without attempting
    to delete or manage its lifetime, as it is managed internally by the server's
    core systems.
  parameters: []
  returns: A pointer to the single global instance of WaypointMgr. Returns a valid
    pointer to the singleton instance; never returns NULL under normal circumstances.
  examples:
  - title: Accessing Waypoint Manager for NPC Path Operations
    code: "WaypointMgr* wpMgr = WaypointMgr::instance();\n// Use wpMgr to manage NPC\
      \ waypoints\nif (wpMgr)\n{\n    // Perform waypoint operations\n    wpMgr->LoadPathData();\n\
      }"
    language: cpp
  - title: Retrieving Waypoint Manager in Custom AI Module
    code: "class CustomAI : public CreatureAI\n{\npublic:\n    void UpdateAI(uint32\
      \ diff) override\n    {\n        WaypointMgr* wpMgr = WaypointMgr::instance();\n\
      \        if (wpMgr && !HasPath())\n        {\n            // Initialize waypoint\
      \ path for this creature\n            wpMgr->InitializeCreaturePath(me);\n \
      \       }\n    }\n};"
    language: cpp
  notes: This method follows standard singleton pattern conventions. The WaypointMgr
    instance is initialized during server startup and destroyed at shutdown. It's
    thread-safe for read operations, but modifications should be synchronized if accessed
    from multiple threads.
  warnings: Do not attempt to delete or manage the returned pointer's lifetime as
    it's managed by the TrinityCore core system. Calling this method in early initialization
    phases before the singleton is constructed may result in undefined behavior.
  related:
  - LoadPathData
  - InitializeCreaturePath
  - GetWaypointPath
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:37:59.587898'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
