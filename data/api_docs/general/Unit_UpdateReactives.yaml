api:
  class: Unit
  method: UpdateReactives
  signature: void Unit::UpdateReactives(uint32 p_time)
documentation:
  brief: Updates the reactive abilities and states of the unit based on elapsed time.
  description: The UpdateReactives method processes and updates all reactive abilities,
    such as defensive cooldowns, combat reactions, and other time-based unit states.
    This method is typically called during the game loop to ensure that reactive states
    are properly managed and updated according to the passage of time. It handles
    internal timers and state transitions for abilities that trigger in response to
    specific events or conditions. The method ensures that units maintain proper reactive
    behavior during combat and non-combat situations.
  parameters: []
  returns: null
  examples:
  - title: Basic UpdateReactives Call
    code: 'Unit* unit = player->GetVehicleBase();

      unit->UpdateReactives(100); // Update with 100ms elapsed time'
    language: cpp
  notes: This method is usually invoked automatically by the core game loop and should
    not typically be called directly in most cases. It's important to understand that
    reactive abilities may include things like defensive cooldowns, combat triggers,
    and other time-sensitive unit behaviors that are managed internally.
  warnings: Direct calls to UpdateReactives should be avoided unless you have a specific
    need to manually update reactive states. Improper usage can lead to unexpected
    behavior in combat or ability cooldown management.
  related:
  - Update
  - UpdateAI
  - UpdateReactiveTimer
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T16:17:55.311585'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
