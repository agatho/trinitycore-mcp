api:
  class: BlackMarketMgr
  method: BlackMarketMgr
  signature: void BlackMarketMgr::BlackMarketMgr(BlackMarketMgr && param0)
documentation:
  brief: Moves ownership of a BlackMarketMgr instance to another instance using move
    semantics.
  description: This method implements the move constructor for the BlackMarketMgr
    class, transferring all resources and state from the source object to the current
    object. It is typically used when assigning or initializing a BlackMarketMgr object
    with an rvalue reference, allowing efficient resource transfer without deep copying.
    The original object becomes invalid after this operation and should not be used.
    This method is part of the standard C++ move semantics pattern and is essential
    for optimizing performance in scenarios involving temporary objects or object
    transfers within the TrinityCore framework's black market system implementation.
  parameters: []
  returns: null
  examples:
  - title: Move Construct BlackMarketMgr
    code: 'BlackMarketMgr manager1;

      // ... populate manager1 ...

      BlackMarketMgr manager2 = std::move(manager1); // Calls move constructor'
    language: cpp
  notes: This is a move constructor and should only be called with rvalue references.
    After calling this constructor, the source object is left in a valid but unspecified
    state. The implementation assumes that the BlackMarketMgr class manages resources
    that can be safely transferred via move semantics.
  warnings: Do not use this constructor directly with lvalue expressions. Always use
    std::move() or similar to convert lvalues to rvalues before passing them to this
    constructor. Using the moved-from object afterward results in undefined behavior.
  related:
  - BlackMarketMgr::~BlackMarketMgr
  - BlackMarketMgr& BlackMarketMgr::operator=(BlackMarketMgr&&)
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:34:14.518679'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
