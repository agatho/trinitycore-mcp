api:
  class: MotionMaster
  method: MoveFleeing
  signature: void MotionMaster::MoveFleeing(Unit * enemy, int time, int param2)
documentation:
  brief: Initiates a fleeing movement away from the specified enemy unit with optional
    time and parameter constraints.
  description: The MoveFleeing method instructs the AI-controlled unit to begin fleeing
    away from a designated enemy unit. This behavior typically occurs when the unit's
    health drops below a certain threshold or when it is under attack. The method
    allows for specifying a duration for which the fleeing should continue, and an
    additional parameter that may influence how the fleeing movement is executed.
    Fleeing movements are usually handled by the MotionMaster class as part of the
    creature's AI behavior system in TrinityCore. This method does not return any
    value but modifies the motion state of the unit to initiate a flee action.
  parameters:
  - name: enemy
    description: Pointer to the Unit object that represents the enemy from which the
      current unit should flee. Must be a valid Unit pointer; passing NULL may result
      in undefined behavior or immediate cancellation of the fleeing motion.
  - name: time
    description: Duration in milliseconds for how long the fleeing movement should
      persist. A value of 0 typically means indefinite fleeing until interrupted by
      other events such as being attacked again or reaching a safe distance.
  - name: param2
    description: An additional parameter that may be used to modify the fleeing behavior,
      such as influencing the flee path or determining whether to flee towards a specific
      point. The exact meaning depends on internal implementation and can vary between
      different creature types or AI modules.
  returns: null
  examples:
  - title: Basic Fleeing from Enemy
    code: 'Unit* targetEnemy = ...; // Assume this is a valid enemy unit

      MotionMaster* motion = creature->GetMotionMaster();

      motion->MoveFleeing(targetEnemy, 5000); // Flee for 5 seconds'
    language: cpp
  - title: Fleeing with Custom Parameters
    code: 'Unit* enemy = ...;

      MotionMaster* mm = creature->GetMotionMaster();

      mm->MoveFleeing(enemy, 3000, 1); // Flee for 3 seconds with custom parameter

      '
    language: cpp
  notes: This method is primarily used in AI logic to simulate fear-based behavior
    in creatures. The fleeing motion will be interrupted if the creature receives
    damage or if another movement command is issued. It's important to ensure that
    the enemy pointer passed is valid and alive during the duration of the flee action.
  warnings: Passing a NULL enemy pointer may lead to crashes or unexpected behavior.
    Also, calling this method repeatedly without proper state management can cause
    erratic motion behavior in the creature.
  related:
  - MoveChase
  - MoveIdle
  - MoveTo
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:36:56.249884'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
