api:
  class: GroupEventHandler
  method: GetSubscribedEvents
  signature: int GroupEventHandler::GetSubscribedEvents() const
documentation:
  brief: Retrieves the bitmask of subscribed events for a group event handler
  description: The GetSubscribedEvents method returns an integer bitmask representing
    all events that this GroupEventHandler instance is currently subscribed to. In
    TrinityCore's group management system, event handlers are used to respond to various
    group-related occurrences such as member joins, leaves, invitations, or loot settings
    changes. This method allows developers to inspect which specific events the handler
    is listening for, enabling debugging and dynamic event management within group-based
    systems.
  parameters: []
  returns: An integer bitmask where each bit represents a specific group event type.
    The exact bit values are defined by the GroupEvent enum or related constants in
    TrinityCore's codebase. A value of zero indicates no subscribed events.
  examples:
  - title: Check if a handler is subscribed to member join events
    code: "GroupEventHandler* handler = new GroupEventHandler();\nint events = handler->GetSubscribedEvents();\n\
      if (events & GROUP_EVENT_MEMBER_JOINED)\n{\n    // Handle member join logic\n\
      }"
    language: cpp
  notes: The returned bitmask is typically used in conjunction with bitwise operations
    to check for specific event types. This method does not modify the handler's subscription
    state; it only retrieves the current subscription information.
  warnings: null
  related:
  - SubscribeToEvent
  - UnsubscribeFromEvent
  - IsSubscribedToEvent
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:20:53.563620'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
