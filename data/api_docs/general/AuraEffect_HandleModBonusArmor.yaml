api:
  class: AuraEffect
  method: HandleModBonusArmor
  signature: void AuraEffect::HandleModBonusArmor(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the target's bonus armor value when an aura application is applied
    or removed.
  description: The HandleModBonusArmor method is responsible for adjusting a unit's
    bonus armor attribute based on the application or removal of an aura effect. This
    method is typically invoked during aura application or removal events to modify
    how much additional armor a unit receives from auras such as buffs or debuffs.
    The adjustment is performed through the AuraApplication parameter which provides
    context about the specific aura being applied or removed, and the mode parameter
    indicates whether the operation is for application (true) or removal (false).
    This method directly influences combat mechanics by altering the target's defensive
    capabilities.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter provides context for which
      specific aura effect is triggering this handler.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. The value
      determines whether the aura is being applied (typically 1) or removed (typically
      0). This parameter controls how the bonus armor adjustment is calculated and
      applied.
  - name: apply
    description: A boolean flag that indicates whether to apply (true) or remove (false)
      the bonus armor effect. When true, the aura's bonus armor value is added to
      the target; when false, it is subtracted.
  returns: null
  examples:
  - title: Basic Aura Application
    code: "void MyAuraEffect::HandleModBonusArmor(const AuraApplication* aurApp, uint8\
      \ mode, bool apply) const {\n    if (apply) {\n        // Apply bonus armor\n\
      \        Unit* target = aurApp->GetTarget();\n        target->AddBonusArmor(m_amount);\n\
      \    } else {\n        // Remove bonus armor\n        Unit* target = aurApp->GetTarget();\n\
      \        target->RemoveBonusArmor(m_amount);\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore. It
    should only be called from within the aura application lifecycle and typically
    involves direct modification of unit attributes such as armor. The method assumes
    that the aura's bonus armor value has already been calculated and stored in a
    member variable (e.g., m_amount).
  warnings: Improper use of this method can lead to incorrect combat calculations,
    especially if the bonus armor values are not properly managed or synchronized
    with the target unit's actual armor attributes. Ensure that the aura application
    context is valid before calling this method.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::AddBonusArmor
  - Unit::RemoveBonusArmor
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:43:18.520550'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
