api:
  class: Unit
  method: AtDisengage
  signature: void Unit::AtDisengage()
documentation:
  brief: Handles the unit's disengagement from combat, typically called when a creature
    or player exits combat state.
  description: The AtDisengage method is invoked when a Unit (player or creature)
    disengages from combat. This method performs necessary cleanup and state updates
    to ensure proper transition out of combat. It may reset combat-related flags,
    clear threat lists, update AI behavior, and notify subsystems that the unit is
    no longer engaged in combat. The method is typically called internally by the
    core engine when combat ends naturally or through explicit disengagement commands.
  parameters: []
  returns: null
  examples:
  - title: Basic usage in custom AI
    code: "class MyCreatureAI : public CreatureAI\n{\npublic:\n    void JustDied()\
      \ override\n    {\n        // Perform actions before disengaging\n        Unit::AtDisengage();\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the core combat system and should not be called directly
    from outside the combat flow unless specifically required. It's designed to be
    invoked automatically by the TrinityCore engine during combat state transitions.
  warnings: Do not call this method manually unless you understand its internal behavior
    and dependencies. Incorrect usage may lead to inconsistent combat states or AI
    behavior.
  related:
  - EnterCombat
  - IsInCombat
  - CombatStart
  - CombatStop
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T09:36:02.145658'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
