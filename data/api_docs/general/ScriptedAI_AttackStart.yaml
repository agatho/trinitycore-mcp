api:
  class: ScriptedAI
  method: AttackStart
  signature: void ScriptedAI::AttackStart(int * param0)
documentation:
  brief: Initiates attack behavior against a specified target for the AI-controlled
    creature.
  description: The AttackStart method is used by ScriptedAI implementations to begin
    attacking a target. This method typically handles the initial setup of combat
    state, including engaging the target, starting melee or ranged attacks, and triggering
    any associated AI behaviors. It is commonly called when an AI creature detects
    a player or NPC within its aggro range. The method does not directly perform damage
    calculations but rather activates the attack sequence and sets up the necessary
    combat state for the creature.
  parameters:
  - name: param0
    description: Pointer to an integer representing the target's identifier or index
      in the AI's target list. This parameter is used internally by the AI system
      to determine which entity to attack.
  returns: null
  examples:
  - title: Basic Attack Start Usage
    code: "void MyCreatureAI::UpdateAI(uint32 diff)\n{\n    if (!UpdateVictim())\n\
      \        return;\n\n    // Begin attacking the current victim\n    AttackStart(&m_creature->GetVictim()->GetGUID().GetRawValue());\n\
      }"
    language: cpp
  notes: This method is part of the core AI framework in TrinityCore and should only
    be called when a valid target exists. The parameter 'param0' must point to a valid
    target identifier; otherwise, undefined behavior may occur.
  warnings: Improper use of AttackStart without verifying that a valid target exists
    can lead to crashes or unexpected AI behavior. Always ensure the target is valid
    before calling this method.
  related:
  - UpdateAI
  - AttackStartNoMove
  - DoMeleeAttackIfReady
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:54:57.402258'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
