api:
  class: Unit
  method: IsInWater
  signature: bool Unit::IsInWater() const
documentation:
  brief: Determines whether the unit is currently in water.
  description: The IsInWater method checks if a Unit object is currently located within
    a water body. This method is commonly used in game mechanics to determine if a
    unit is standing in water, which affects various gameplay behaviors such as movement,
    casting, and interaction with environment objects. The method returns true when
    the unit's position is inside a water zone, and false otherwise. It is particularly
    useful for determining whether a unit can perform actions that require being out
    of water, such as certain spells or abilities.
  parameters: []
  returns: Returns true if the unit is currently in water, false otherwise. This indicates
    whether the unit's current position is within a water zone.
  examples:
  - title: Basic Usage Example
    code: "if (unit->IsInWater())\n{\n    // Do something\n}\nelse\n{\n    // Do something\
      \ else\n}"
    language: cpp
  notes: This method relies on the unit's current position and the game world's water
    detection system. It may be affected by the unit's movement or teleportation,
    and should not be used for checking whether a unit is in a specific water body
    but rather for determining if the unit is currently in any water.
  warnings: This method does not account for water bodies that are not directly connected
    to the game world's water zones, such as temporary water effects or custom water
    zones. It also may not correctly detect water when the unit is standing on a floating
    object or platform.
  related:
  - IsOnGround
  - IsInMap
  - GetPosition
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:00:34.609056'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
