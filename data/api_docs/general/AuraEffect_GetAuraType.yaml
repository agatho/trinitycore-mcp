api:
  class: AuraEffect
  method: GetAuraType
  signature: AuraType AuraEffect::GetAuraType() const
documentation:
  brief: Retrieves the aura type identifier associated with this aura effect.
  description: The GetAuraType method returns the specific type of aura effect that
    this AuraEffect instance represents. In TrinityCore's implementation, aura types
    define the behavior and mechanics of auras, such as periodic damage, stat modifications,
    or control effects. This method is commonly used in aura handling logic to determine
    how an aura should behave or interact with game systems. The returned AuraType
    enum value corresponds to predefined constants that categorize different aura
    functionalities within the game engine.
  parameters: []
  returns: An AuraType enumeration value representing the specific type of this aura
    effect. Possible values include but are not limited to AURA_TYPE_PERIODIC_DAMAGE,
    AURA_TYPE_MOD_STAT, AURA_TYPE_CONTROL_VEHICLE, etc., depending on the aura's intended
    functionality.
  examples:
  - title: Checking Aura Type for Damage Over Time
    code: "AuraEffect* auraEffect = unit->GetAuraEffect(SPELL_ID_DOT_AURA, EFFECT_INDEX_0);\n\
      if (auraEffect)\n{\n    AuraType type = auraEffect->GetAuraType();\n    if (type\
      \ == AURA_TYPE_PERIODIC_DAMAGE)\n    {\n        // Handle damage over time aura\
      \ logic\n        SendDamageOverTimePacket(unit);\n    }\n}"
    language: cpp
  notes: This method is a simple getter that directly accesses a cached value stored
    within the AuraEffect object. It does not perform any calculations or lookups,
    making it efficient for frequent calls during game loop processing. The aura type
    is set when the aura effect is created and remains constant throughout its lifetime.
  warnings: null
  related:
  - GetAura
  - GetAmount
  - GetBaseAmount
  - GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:05:52.554139'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
