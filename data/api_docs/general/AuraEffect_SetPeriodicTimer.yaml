api:
  class: AuraEffect
  method: SetPeriodicTimer
  signature: void AuraEffect::SetPeriodicTimer(int32 periodicTimer)
documentation:
  brief: Sets the periodic timer for an aura effect, controlling when the effect will
    next trigger.
  description: The SetPeriodicTimer method updates the internal timer of an AuraEffect,
    determining how long until the next periodic application of the aura's effect.
    This is commonly used in combat mechanics to control the frequency of damage-over-time
    or healing-over-time effects. The timer value represents milliseconds until the
    next tick. Setting this value directly affects when the aura will apply its periodic
    effect, which can be useful for adjusting durations, syncing with other game events,
    or implementing custom behavior. This method does not validate the input value
    and will accept any integer, though negative values may produce unexpected results.
  parameters:
  - name: periodicTimer
    description: The new timer value in milliseconds until the next periodic tick
      of this aura effect. A value of 0 or negative may cause the effect to trigger
      immediately or behave unexpectedly.
  returns: null
  examples:
  - title: Set a 3-second periodic timer
    code: 'AuraEffect* auraEffect = ...;

      auraEffect->SetPeriodicTimer(3000); // Triggers every 3 seconds'
    language: cpp
  - title: Reset periodic timer to immediate trigger
    code: 'AuraEffect* auraEffect = ...;

      auraEffect->SetPeriodicTimer(0); // Forces next tick immediately'
    language: cpp
  notes: This method directly modifies the internal timer state of the aura effect.
    It should be used carefully as it can override the default behavior of periodic
    effects, potentially breaking expected game mechanics or causing synchronization
    issues with other systems.
  warnings: Modifying the periodic timer directly may cause unexpected behavior if
    not properly synchronized with the aura's overall lifecycle. Avoid setting very
    small values (less than 10ms) as this could lead to performance issues or infinite
    loops in effect application.
  related:
  - GetPeriodicTimer
  - GetAura
  - GetAmount
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:55:17.381036'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
