api:
  class: ChatHandler
  method: HasLowerSecurityAccount
  signature: bool ChatHandler::HasLowerSecurityAccount(WorldSession * target, int
    account, bool strong)
documentation:
  brief: Checks if the target account has lower security than the current session
  description: The HasLowerSecurityAccount method determines whether a specified target
    account holds a lower security level compared to the currently logged-in session.
    This functionality is crucial for enforcing administrative privileges and access
    control within the TrinityCore framework. The method evaluates the security levels
    of both the current session and the target account, returning true if the target's
    security level is deemed lower. It supports an optional 'strong' parameter that
    may enforce stricter validation rules depending on implementation details.
  parameters:
  - name: target
    description: Pointer to the WorldSession of the target player whose security level
      is being evaluated
  - name: account
    description: Integer identifier representing the account ID of the target to compare
      against current session's security level
  - name: strong
    description: Boolean flag indicating whether to apply strict validation rules
      when comparing security levels; true may enforce additional checks
  returns: Returns true if the target account has a lower security level than the
    current session, otherwise false. In cases where the target is invalid or the
    comparison cannot be made, behavior depends on internal implementation but typically
    defaults to false.
  examples:
  - title: Basic usage for checking target's security level
    code: "if (handler->HasLowerSecurityAccount(targetSession, targetAccountId, false))\
      \ {\n    // Target has lower security\n    handler->SendSysMessage(\"Target\
      \ has lower security level.\");\n}"
    language: cpp
  - title: Using strong validation for stricter checks
    code: "if (handler->HasLowerSecurityAccount(targetSession, targetAccountId, true))\
      \ {\n    // Perform action only if strict validation passes\n    handler->SendSysMessage(\"\
      Target passes strict security check.\");\n} else {\n    handler->SendSysMessage(\"\
      Target failed strict security check.\");\n}"
    language: cpp
  notes: This method relies on internal security level tracking within the WorldSession
    and account management systems. Developers should ensure that session and account
    data are valid before calling this function to avoid unexpected behavior or crashes.
  warnings: Improper handling of session pointers or invalid account IDs can lead
    to undefined behavior. Always validate input parameters before invoking this method
    in production code.
  related:
  - HasLowerSecurity
  - GetSession
  - GetSecurityLevel
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:18:52.217359'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
