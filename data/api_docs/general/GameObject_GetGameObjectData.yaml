api:
  class: GameObject
  method: GetGameObjectData
  signature: const GameObjectData * GameObject::GetGameObjectData() const
documentation:
  brief: Returns the GameObjectData structure containing static information about
    this game object.
  description: This method retrieves the GameObjectData structure associated with
    the current GameObject instance, providing access to static data such as the game
    object's entry ID, display ID, and other fixed properties. The returned pointer
    points to a read-only data structure that defines how the game object behaves
    in the world, including its type, flags, and spawn parameters. This method is
    essential for accessing game object metadata without modifying the object's dynamic
    state.
  parameters: []
  returns: Returns a pointer to the GameObjectData structure which contains static
    information about this game object, including its entry ID, display ID, and other
    fixed properties. The returned pointer may be null if the game object has not
    been initialized properly or if the data is not available.
  examples:
  - title: Basic Usage Example
    code: "GameObject* go = ...;\nconst GameObjectData* data = go->GetGameObjectData();\n\
      if (data)\n{\n    uint32 entry = data->entry;\n    uint32 displayId = data->displayId;\n\
      }"
    language: cpp
  notes: This method is thread-safe and does not modify any game object state. It
    should be used carefully when accessing data that may change during runtime, as
    the GameObjectData structure is typically immutable once loaded.
  warnings: Be cautious when using this method with objects that might not have been
    initialized properly; the returned pointer can be null if the game object's data
    hasn't been loaded yet.
  related:
  - GetGOData
  - GetGameObjectInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:27:00.409872'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
