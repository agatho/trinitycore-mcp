api:
  class: BattlePetManager
  method: GetRarePetsInZone
  signature: int BattlePetManager::GetRarePetsInZone(int * player) const
documentation:
  brief: Retrieves the count of rare battle pets available in the current zone for
    the player.
  description: The GetRarePetsInZone method returns an integer representing the number
    of rare battle pets that are currently available for capture within the player's
    active zone. This method is typically used in the context of World of Warcraft's
    Battle Pet system, where players can encounter and collect various pets with different
    rarity levels. The returned value indicates how many rare pets the player might
    be able to interact with or capture in their current location. This functionality
    is part of the BattlePetManager class which handles all aspects of battle pet
    management within the game environment.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's identifier (GUID).
      This parameter is likely used internally to determine which player's data should
      be queried for rare pet information in the current zone.
  returns: An integer value indicating the number of rare battle pets available in
    the current zone. Returns 0 if no rare pets are present or if there was an error
    retrieving the data.
  examples:
  - title: Basic Usage
    code: "int playerGUID = player->GetGUID();\nint rarePetsCount = battlePetManager->GetRarePetsInZone(&playerGUID);\n\
      if (rarePetsCount > 0) {\n    // Proceed with logic for handling rare pets\n\
      }"
    language: cpp
  - title: Checking for Rare Pets Before Encounter
    code: "int playerGUID = player->GetGUID();\nint rarePetsInZone = battlePetManager->GetRarePetsInZone(&playerGUID);\n\
      if (rarePetsInZone > 0) {\n    // Notify player about rare pets in zone\n  \
      \  player->SendNotification(\"Rare pets are available in this area!\");\n} else\
      \ {\n    // No rare pets, proceed with normal exploration\n}"
    language: cpp
  notes: This method likely performs internal checks to determine the current zone
    and player's location. It may also consider player level restrictions or faction-specific
    pet availability. The method is probably optimized to avoid frequent database
    queries by caching results for a short period.
  warnings: The parameter 'player' should be a valid pointer to an integer representing
    a player GUID. Passing an invalid or null pointer could result in undefined behavior
    or crashes. Ensure that the BattlePetManager instance is properly initialized
    before calling this method.
  related:
  - GetCommonPetsInZone
  - GetRarePetsInMap
  - GetBattlePetInfo
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T18:01:56.553769'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
