api:
  class: WhoListStorageMgr
  method: operator=
  signature: WhoListStorageMgr & WhoListStorageMgr::operator=(WhoListStorageMgr &&
    param0)
documentation:
  brief: Moves ownership of a WhoListStorageMgr object to another WhoListStorageMgr
    object
  description: The operator= method performs a move assignment operation on the WhoListStorageMgr
    class, transferring all resources and state from the source object to the target
    object. This is typically used when assigning one WhoListStorageMgr instance to
    another, allowing efficient resource management by avoiding unnecessary copying.
    The move operation leaves the source object in a valid but unspecified state.
    In the context of TrinityCore's World of Warcraft server implementation, this
    method likely manages storage and retrieval of who list data for player queries.
  parameters: []
  returns: A reference to the target WhoListStorageMgr object after the move assignment
    has been completed
  examples:
  - title: Basic Move Assignment Example
    code: 'WhoListStorageMgr source;

      WhoListStorageMgr target = std::move(source); // Uses move constructor

      // Or alternatively:

      target = std::move(source); // Uses move assignment operator'
    language: cpp
  - title: Move Assignment in Server Context
    code: "void HandleWhoListRequest(Player* player) {\n    WhoListStorageMgr storage;\n\
      \    // ... populate storage with who list data ...\n    WhoListStorageMgr newStorage;\n\
      \    newStorage = std::move(storage); // Efficiently transfer ownership\n  \
      \  // storage is now in a valid but unspecified state\n}"
    language: cpp
  notes: This method is part of the C++ move semantics implementation. The source
    object after move assignment will be left in a valid but unspecified state, meaning
    it should not be used for further operations unless reinitialized. This operation
    is typically more efficient than copy assignment as it transfers ownership of
    resources rather than copying them.
  warnings: After calling this operator, the source object should not be used for
    any operations that require its data to remain valid. The moved-from object may
    contain garbage data or have an inconsistent state until reassigned.
  related:
  - WhoListStorageMgr()
  - WhoListStorageMgr(WhoListStorageMgr&&)
  - WhoListStorageMgr(const WhoListStorageMgr&)
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:33:55.319865'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
