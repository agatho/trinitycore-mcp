api:
  class: ObjectMgr
  method: GetDBCLocaleIndex
  signature: LocaleConstant ObjectMgr::GetDBCLocaleIndex() const
documentation:
  brief: Returns the database client locale index used for localization in the TrinityCore
    server.
  description: The GetDBCLocaleIndex method retrieves the current locale setting that
    determines which language files and localized data should be used for database
    entries. This value is typically set during server initialization based on configuration
    settings or command-line arguments. The returned LocaleConstant represents a specific
    language identifier that corresponds to the DBC (Database Client) locale definitions
    used by the game client. This method is essential for ensuring proper localization
    of game content such as item names, quest texts, and NPC dialogues when serving
    players from different regions.
  parameters: []
  returns: A LocaleConstant enum value representing the current database client locale
    index. Possible values include LOCALE_enUS, LOCALE_koKR, LOCALE_frFR, LOCALE_deDE,
    LOCALE_zhCN, LOCALE_zhTW, LOCALE_esES, LOCALE_esMX, LOCALE_ruRU, and others depending
    on supported locales.
  examples:
  - title: Basic usage to check current locale
    code: "LocaleConstant currentLocale = sObjectMgr->GetDBCLocaleIndex();\nif (currentLocale\
      \ == LOCALE_enUS)\n{\n    // Handle English locale\n    printf(\"Using English\
      \ locale\\n\");\n}"
    language: cpp
  - title: Using locale in localization logic
    code: "void HandlePlayerLocale(Player* player)\n{\n    LocaleConstant dbcLocale\
      \ = sObjectMgr->GetDBCLocaleIndex();\n    switch (dbcLocale)\n    {\n      \
      \  case LOCALE_enUS:\n        case LOCALE_koKR:\n            // Use English\
      \ or Korean localized strings\n            break;\n        case LOCALE_zhCN:\n\
      \            // Use Simplified Chinese localized strings\n            break;\n\
      \        default:\n            // Default to English\n            break;\n \
      \   }\n}"
    language: cpp
  notes: This method is typically called during server startup and configuration loading.
    The locale value affects how database entries are interpreted and localized, particularly
    for content that has multiple language versions. It's important to note that this
    locale setting may differ from the player's actual client locale, as it represents
    the server's configured localization rather than individual player preferences.
  warnings: Changing the DBC locale at runtime may cause inconsistencies in localized
    data retrieval. This method should only be called after the server has properly
    initialized its locale settings. Be cautious when using this value for dynamic
    content selection, as it may not reflect player-specific language preferences.
  related:
  - SetDBCLocaleIndex
  - GetLocaleByName
  - GetMangosString
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:50:33.396550'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
