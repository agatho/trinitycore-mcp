api:
  class: Pet
  method: FillPetInfo
  signature: void Pet::FillPetInfo(PetStable::PetInfo * petInfo, int forcedReactState)
    const
documentation:
  brief: Fills a PetInfo structure with the pet's current data and state information.
  description: The FillPetInfo method populates a provided PetStable::PetInfo structure
    with comprehensive details about the pet, including its stats, behavior, and current
    status. This method is typically used when saving or transmitting pet data to
    the client or server. The forcedReactState parameter allows overriding the pet's
    natural reaction state for specific scenarios such as combat or training. The
    method does not perform any validation on the input structure and assumes it is
    properly initialized by the caller.
  parameters:
  - name: petInfo
    description: Pointer to a PetStable::PetInfo structure that will be filled with
      pet data. Must not be null.
  - name: forcedReactState
    description: Integer value representing the forced reaction state for the pet.
      Negative values typically indicate no override, while positive values define
      specific states like 'aggressive', 'defensive', or 'passive'.
  returns: null
  examples:
  - title: Basic usage in pet management
    code: 'PetStable::PetInfo petInfo;

      playerPet->FillPetInfo(&petInfo, -1);

      // petInfo now contains current pet data

      '
    language: cpp
  - title: Forced reaction state override
    code: 'PetStable::PetInfo petInfo;

      int forcedState = PET_REACT_AGGRESSIVE; // Assume defined constant

      playerPet->FillPetInfo(&petInfo, forcedState);

      // Pet info includes overridden aggressive reaction state

      '
    language: cpp
  notes: This method is primarily used internally by the server for synchronization
    between client and server pet states. It's important to ensure that the PetInfo
    structure is properly allocated before calling this method. The forcedReactState
    parameter should be carefully managed as incorrect values may cause unexpected
    behavior in pet AI or combat interactions.
  warnings: Calling this method with a null pointer for petInfo will result in undefined
    behavior and likely crash. Ensure proper initialization of the PetStable::PetInfo
    structure before passing it to this method. Incorrect use of forcedReactState
    values can lead to pets behaving unexpectedly in combat situations.
  related:
  - Pet::GetPetInfo
  - Pet::SavePetToDB
  - Pet::LoadPetFromDB
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T21:12:41.845877'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
