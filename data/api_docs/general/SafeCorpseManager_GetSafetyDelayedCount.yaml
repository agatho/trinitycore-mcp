api:
  class: SafeCorpseManager
  method: GetSafetyDelayedCount
  signature: uint32 SafeCorpseManager::GetSafetyDelayedCount() const
documentation:
  brief: Returns the count of corpses that are currently delayed due to safety restrictions.
  description: The GetSafetyDelayedCount method retrieves the number of corpses in
    the game world that are currently pending removal or processing because they are
    subject to safety delays. This typically occurs when a player dies in a PvP zone
    or under certain conditions where immediate corpse despawn is not allowed, such
    as during combat or in specific battlegrounds. The delay ensures that players
    cannot exploit corpse looting mechanics immediately after death. This count reflects
    the number of corpses currently in this delayed state and can be used by systems
    to manage corpse cleanup logic or player experience timing.
  parameters: []
  returns: A uint32 value representing the total number of corpses that are currently
    delayed due to safety restrictions. Returns zero if no corpses are currently delayed.
  examples:
  - title: Check Delayed Corpse Count
    code: "uint32 delayedCount = sObjectAccessor->GetSafetyDelayedCount();\nif (delayedCount\
      \ > 0)\n{\n    sLog->outString(\"There are %u corpses currently delayed.\",\
      \ delayedCount);\n}"
    language: cpp
  notes: This method is typically used in conjunction with corpse management systems
    to ensure proper handling of player deaths in PvP and battleground scenarios.
    The delay mechanism helps prevent abuse of corpse looting mechanics.
  warnings: null
  related:
  - SafeCorpseManager::AddCorpse
  - SafeCorpseManager::RemoveCorpse
  - SafeCorpseManager::Update
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:00:14.413226'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
