api:
  class: DungeonScriptMgr
  method: GetBossMappingCount
  signature: uint32 DungeonScriptMgr::GetBossMappingCount() const
documentation:
  brief: Returns the total count of boss mappings defined in the dungeon script manager.
  description: The GetBossMappingCount method retrieves the number of boss mappings
    currently registered within the DungeonScriptMgr. This count represents how many
    unique boss encounters are defined for dungeon instances, which is essential for
    managing dynamic dungeon generation and ensuring proper encounter handling during
    instance creation. The method provides a quick way to determine the size of the
    internal boss mapping collection without needing to iterate through all entries.
    It's commonly used during dungeon initialization or when validating script configurations.
  parameters: []
  returns: A uint32 value representing the total number of boss mappings stored in
    the DungeonScriptMgr. Returns 0 if no boss mappings are defined.
  examples:
  - title: Basic Usage to Check Boss Mappings
    code: "uint32 bossCount = sDungeonScriptMgr->GetBossMappingCount();\nif (bossCount\
      \ > 0)\n{\n    TC_LOG_INFO(\"scripts\", \"Dungeon has %u boss mappings defined.\"\
      , bossCount);\n}"
    language: cpp
  - title: Using Count for Validation in Script Initialization
    code: "void InitializeDungeonScripts()\n{\n    uint32 count = sDungeonScriptMgr->GetBossMappingCount();\n\
      \    if (count == 0)\n    {\n        TC_LOG_ERROR(\"scripts\", \"No boss mappings\
      \ found! Dungeon scripts may be improperly configured.\");\n        return;\n\
      \    }\n    TC_LOG_INFO(\"scripts\", \"Loaded %u boss mappings for dungeon scripts.\"\
      , count);\n}"
    language: cpp
  notes: This method performs a simple lookup operation and should have minimal performance
    impact. The returned count reflects the current state of the manager's internal
    data structure, which may change if new mappings are added or removed during runtime.
  warnings: The method does not validate whether the boss mappings are actually functional
    or properly configured; it only returns the raw count. Ensure that any logic depending
    on this count also validates the actual mapping data to prevent runtime errors.
  related:
  - GetBossMapping
  - AddBossMapping
  - RemoveBossMapping
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:09:42.862006'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
