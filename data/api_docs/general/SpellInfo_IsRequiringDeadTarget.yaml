api:
  class: SpellInfo
  method: IsRequiringDeadTarget
  signature: bool SpellInfo::IsRequiringDeadTarget() const
documentation:
  brief: Determines whether the spell requires a dead target to be cast.
  description: This method checks if a spell requires the target to be dead in order
    to be cast successfully. It is commonly used in spell mechanics to determine if
    a spell can only be cast on dead targets, such as certain death knight abilities
    or other spells that require a corpse. The method returns true if the spell's
    requirements include a dead target, and false otherwise. This functionality is
    crucial for proper spell handling and game balance within TrinityCore.
  parameters: []
  returns: Returns true if the spell requires a dead target to be cast, false otherwise.
    This indicates whether the spell can only be cast on targets that are already
    dead or have been killed.
  examples:
  - title: Basic Usage Example
    code: "if (spellInfo->IsRequiringDeadTarget()) {\n    // Spell requires dead target\n\
      \    // Perform appropriate actions\n}\nelse {\n    // Spell does not require\
      \ dead target\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other spell validation
    methods to ensure proper targeting and execution. It may be used in conjunction
    with spell target selection logic to determine if a spell can only be cast on
    dead targets.
  warnings: Care should be taken when using this method as it may affect spell targeting
    logic and could potentially cause issues if used incorrectly in combination with
    other spell mechanics.
  related:
  - SpellInfo::IsSpellRequiredTarget
  - SpellInfo::IsSpellRequiredTarget
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:46:40.091246'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
