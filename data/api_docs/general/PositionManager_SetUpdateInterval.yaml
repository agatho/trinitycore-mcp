api:
  class: PositionManager
  method: SetUpdateInterval
  signature: void PositionManager::SetUpdateInterval(uint32 intervalMs)
documentation:
  brief: Sets the update interval for position tracking in milliseconds.
  description: Configures the frequency at which position updates are processed by
    the PositionManager. This interval determines how often the system checks and
    records positional data for entities within the game world. The update interval
    is crucial for balancing performance and accuracy of position tracking, especially
    for moving objects like players, NPCs, or game objects. Setting this value too
    low can cause performance issues due to excessive processing, while setting it
    too high may result in outdated position data. This method directly affects how
    frequently position-related events are triggered and how accurately the system
    maintains entity locations.
  parameters:
  - name: intervalMs
    description: The update interval in milliseconds. Valid values are positive integers
      representing time intervals. Lower values (e.g., 50-100ms) provide more frequent
      updates but increase CPU usage, while higher values (e.g., 500ms or more) reduce
      processing overhead but may cause position lag.
  returns: null
  examples:
  - title: Set Position Update Interval to 100ms
    code: 'PositionManager* posMgr = sObjectAccessor->GetMap(0)->GetPositionManager();

      posMgr->SetUpdateInterval(100);'
    language: cpp
  - title: Configure High-Frequency Position Updates for Critical Entities
    code: 'Player* player = ...;

      PositionManager* posMgr = player->GetMap()->GetPositionManager();

      // Set frequent updates for player movement tracking

      posMgr->SetUpdateInterval(25); // 40 updates per second'
    language: cpp
  notes: The PositionManager typically uses this interval to schedule periodic position
    checks. This value may be overridden or adjusted by other systems such as the
    Map's update frequency settings. The method does not immediately trigger an update;
    it only changes the scheduling interval for future updates.
  warnings: Setting very low intervals (e.g., below 10ms) can severely impact server
    performance and should be avoided in production environments. Frequent updates
    may cause synchronization issues if not properly managed with other game systems.
  related:
  - GetPositionUpdateInterval
  - UpdatePosition
  - SetPosition
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:50:00.254631'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
