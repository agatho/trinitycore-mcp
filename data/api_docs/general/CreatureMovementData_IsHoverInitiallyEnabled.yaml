api:
  class: CreatureMovementData
  method: IsHoverInitiallyEnabled
  signature: bool CreatureMovementData::IsHoverInitiallyEnabled() const
documentation:
  brief: Determines whether the creature's hover movement mode is enabled by default
    at spawn.
  description: The IsHoverInitiallyEnabled method checks if a creature has hover movement
    enabled from the moment it spawns. This is typically used in conjunction with
    movement data configuration to determine how a creature should behave in terms
    of vertical movement, such as flying or hovering above the ground. The return
    value indicates whether this mode is active by default for the creature's movement
    behavior.
  parameters: []
  returns: A boolean value indicating whether hover movement is enabled initially.
    Returns true if the creature should start with hover movement enabled, false otherwise.
  examples:
  - title: Check if a creature starts with hover enabled
    code: "CreatureMovementData* movementData = creature->GetCreatureMovementData();\n\
      if (movementData->IsHoverInitiallyEnabled()) {\n    // Creature will begin with\
      \ hover movement active\n    LOG_INFO(\"server\", \"Creature {} starts with\
      \ hover enabled.\", creature->GetGUID().ToString());\n}"
    language: cpp
  notes: This method is commonly used during creature initialization and movement
    behavior setup in TrinityCore. The result of this check may affect how the creature's
    AI and movement are configured upon spawning.
  warnings: null
  related:
  - SetHoverInitiallyEnabled
  - IsFlyingEnabled
  - GetMovementFlags
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:33:47.433636'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
