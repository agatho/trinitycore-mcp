api:
  class: Unit
  method: CalculateSpellDamageTaken
  signature: void Unit::CalculateSpellDamageTaken(SpellNonMeleeDamage * damageInfo,
    int32 damage, const SpellInfo * spellInfo, int attackType, bool crit, bool blocked,
    Spell * spell)
documentation:
  brief: Calculates spell damage taken by a unit, accounting for critical hits, blockage,
    and other combat factors.
  description: This method processes spell damage received by a unit, determining
    how much damage is actually dealt based on various combat mechanics including
    critical hit chances, block status, and spell-specific modifiers. It handles the
    calculation of damage reduction from armor, resistances, and other defensive mechanisms
    while considering the impact of critical hits and blocked attacks. The method
    integrates with the broader combat system to ensure accurate damage reporting
    in World of Warcraft's gameplay.
  parameters:
  - name: damageInfo
    description: Pointer to SpellNonMeleeDamage structure containing damage information
      for the spell being processed
  - name: damage
    description: Base damage amount to be calculated, typically from spell effects
      or direct damage sources
  - name: spellInfo
    description: Pointer to SpellInfo structure defining the spell properties and
      mechanics being applied
  - name: attackType
    description: Integer representing attack type (physical, magical, etc.) that determines
      how damage is processed
  - name: crit
    description: Boolean indicating whether the damage was a critical hit, affecting
      multiplier calculations
  - name: blocked
    description: Boolean indicating whether the attack was blocked by the target's
      defense mechanisms
  - name: spell
    description: Pointer to Spell object representing the specific spell being calculated,
      used for additional context and effects
  returns: null
  examples:
  - title: Basic Damage Calculation Example
    code: 'Unit* target = GetTarget();

      SpellNonMeleeDamage damageInfo;

      SpellInfo* spellInfo = GetSpellInfo();

      int32 baseDamage = 100;

      int attackType = SPELL_SCHOOL_MASK_NORMAL;

      bool crit = false;

      bool blocked = false;

      Spell* spell = nullptr;


      // Calculate damage taken by target

      target->CalculateSpellDamageTaken(&damageInfo, baseDamage, spellInfo, attackType,
      crit, blocked, spell);'
    language: cpp
  - title: Advanced Damage Calculation with Critical Hit
    code: 'Unit* attacker = GetAttacker();

      SpellNonMeleeDamage damageInfo;

      SpellInfo* spellInfo = GetSpellInfo();

      int32 baseDamage = 150;

      int attackType = SPELL_SCHOOL_MASK_FROST;

      bool crit = true;

      bool blocked = false;

      Spell* spell = nullptr;


      // Calculate critical damage taken by attacker

      attacker->CalculateSpellDamageTaken(&damageInfo, baseDamage, spellInfo, attackType,
      crit, blocked, spell);'
    language: cpp
  notes: This method is part of the core combat system and should be called during
    damage calculation phases. It requires proper initialization of damageInfo structure
    before calling. The method uses internal unit's stats to determine damage reduction
    factors and may be affected by buffs/debuffs that alter defensive capabilities.
  warnings: Improper initialization of damageInfo can cause memory corruption or incorrect
    damage calculations. Ensure all parameters are properly set before calling this
    method. This method should not be called in situations where the unit is not actively
    engaged in combat.
  related:
  - CalculateSpellDamage
  - CalculateDamage
  - Spell::CalculateDamage
  - Unit::HandleSpellNonMeleeDamage
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:20:37.544019'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
