api:
  class: AuraEffect
  method: HandleModSpellCritChance
  signature: void AuraEffect::HandleModSpellCritChance(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the spell critical chance for the affected unit based on aura application.
  description: The HandleModSpellCritChance method is responsible for adjusting the
    critical strike chance of spells for a unit that has an aura applied. This method
    is typically invoked during aura application or removal to update the affected
    unit's spell critical chance statistics. It takes into account whether the effect
    is being applied or removed, and updates the relevant attributes accordingly.
    The method operates on the AuraApplication object which contains information about
    how the aura is affecting the target, including the mode of application (add/remove)
    and the specific effect parameters.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that describes how this aura
      is applied to a target. Contains information about the aura's effect, duration,
      and target.
  - name: mode
    description: The mode of operation indicating whether the aura is being applied
      (1) or removed (0). This determines how the spell critical chance modifier should
      be handled.
  - name: apply
    description: Boolean flag indicating if the effect should be applied (true) or
      removed (false) from the target's spell critical chance.
  returns: null
  examples:
  - title: Applying a Spell Crit Chance Aura
    code: "void ApplySpellCritAura(Unit* target, int32 critMod)\n{\n    AuraApplication*\
      \ aurApp = new AuraApplication(target, target, nullptr);\n    aurApp->SetEffectMask(1\
      \ << 0); // Assuming effect index 0\n    aurApp->SetAmount(critMod);\n    \n\
      \    AuraEffect* auraEffect = new AuraEffect();\n    auraEffect->HandleModSpellCritChance(aurApp,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing a Spell Crit Chance Aura
    code: "void RemoveSpellCritAura(Unit* target)\n{\n    AuraApplication* aurApp\
      \ = GetAuraApplication(target);\n    if (aurApp)\n    {\n        AuraEffect*\
      \ auraEffect = new AuraEffect();\n        auraEffect->HandleModSpellCritChance(aurApp,\
      \ 0, false);\n    }\n}"
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore. It directly
    modifies spell critical chance values and should only be called from within the
    aura application/removal logic. The actual spell critical chance calculation may
    involve multiple sources, so this method's effect might be additive or multiplicative
    depending on how other effects are processed.
  warnings: Improper use of this method can lead to incorrect spell critical chance
    calculations. Ensure that the AuraApplication object is properly initialized before
    calling this method. Be cautious when applying or removing effects in rapid succession
    as it may cause inconsistent state updates.
  related:
  - AuraEffect::HandleModSpellPower
  - AuraEffect::HandleModCritChance
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:23:08.477164'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
