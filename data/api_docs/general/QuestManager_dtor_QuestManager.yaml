api:
  class: QuestManager
  method: ~QuestManager
  signature: void QuestManager::~QuestManager()
documentation:
  brief: Destroys the QuestManager instance and cleans up associated quest data and
    resources.
  description: The QuestManager destructor is responsible for properly cleaning up
    all quest-related data and resources when a QuestManager instance is destroyed.
    This includes releasing memory allocated for active quests, clearing quest state
    information, and ensuring no dangling references remain. In the context of TrinityCore's
    World of Warcraft emulation, this method ensures that quest progress, objectives,
    and related data are correctly freed from memory when the manager is no longer
    needed. The destructor typically runs automatically during object destruction
    and should not be called manually unless explicitly required by specific cleanup
    logic.
  parameters: []
  returns: void
  examples:
  - title: Automatic Destruction of QuestManager
    code: "void CleanupQuests()\n{\n    QuestManager* manager = new QuestManager();\n\
      \    // ... perform quest operations ...\n    delete manager; // Destructor\
      \ automatically called here\n}"
    language: cpp
  notes: The destructor is automatically invoked when a QuestManager object goes out
    of scope or is explicitly deleted. It's important to ensure that no references
    to the QuestManager remain after deletion to prevent use-after-free errors. The
    cleanup process may involve notifying other systems about quest state changes
    and releasing any held resources.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:20:58.417585'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
