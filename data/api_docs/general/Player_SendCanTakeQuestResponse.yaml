api:
  class: Player
  method: SendCanTakeQuestResponse
  signature: void Player::SendCanTakeQuestResponse(int reason, bool sendErrorMessage,
    std::string reasonText) const
documentation:
  brief: Sends a quest availability response to the player, indicating whether they
    can take the quest based on various conditions.
  description: This method sends a response to the player regarding whether they can
    take a quest, based on the specified reason and error message settings. It is
    used internally by the game system to communicate quest availability status to
    players, typically when a player interacts with a quest giver or attempts to accept
    a quest. The method allows for different reasons such as quest requirements, level
    restrictions, or class restrictions, and can optionally send an error message
    if the player cannot take the quest. This functionality is crucial for maintaining
    proper quest progression mechanics in World of Warcraft.
  parameters:
  - name: reason
    description: 'The reason code indicating why the player cannot take the quest.
      Possible values include: 0 (no reason), 1 (quest requirements not met), 2 (level
      too low), 3 (level too high), 4 (class restrictions not met), 5 (quest already
      completed), 6 (quest not available), 7 (quest requirements not met), 8 (quest
      not in player''s quest log), 9 (quest not available to player), 10 (quest not
      available to player due to faction requirements)'
  - name: sendErrorMessage
    description: Boolean flag indicating whether an error message should be sent to
      the player. If true, the method will send a formatted error message; if false,
      only the reason code is sent without additional messaging.
  - name: reasonText
    description: The text string that describes the specific reason for not being
      able to take the quest. This is used when sendErrorMessage is true to provide
      detailed information about why the player cannot take the quest.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->SendCanTakeQuestResponse(1, true, "You do not meet the requirements
      for this quest.");'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = new Player();

      int reason = 2;

      bool sendErrorMessage = false;

      std::string reasonText = "You are too low level for this quest.";

      player->SendCanTakeQuestResponse(reason, sendErrorMessage, reasonText);

      // This will send only the reason code without error message'
    language: cpp
  notes: This method is typically called during quest interaction handling and should
    be used carefully to avoid sending inappropriate messages. The method uses internal
    game mechanics to determine whether a player can take a quest, including checking
    against quest requirements, level restrictions, class restrictions, and other
    factors.
  warnings: The method must be called with appropriate reason codes and error message
    flags to ensure proper communication with players. Using incorrect reason codes
    may lead to confusion or incorrect quest progression. Also, sending error messages
    when not needed can clutter the player's chat log.
  related:
  - SendQuestFailed
  - SendQuestUpdate
  - SendQuestAccept
  - SendQuestComplete
  - SendQuestReward
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:33:06.938636'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
