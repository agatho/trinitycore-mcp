api:
  class: Unit
  method: BuildAuraStateUpdateForTarget
  signature: uint32 Unit::BuildAuraStateUpdateForTarget(const Unit * target) const
documentation:
  brief: Updates and returns the aura state for a target unit.
  description: The BuildAuraStateUpdateForTarget method calculates and returns the
    current aura state of the unit as it applies to a specific target. This method
    is used internally by the TrinityCore server to synchronize aura states between
    the server and client, ensuring that the visual and functional effects of auras
    are properly communicated to players. The returned uint32 value represents a bitmask
    encoding various active aura states for the target. This function typically gets
    invoked during packet sending or state synchronization operations when an aura's
    influence on another unit needs to be updated.
  parameters: []
  returns: A uint32 bitmask representing the current aura state of this unit as it
    affects the specified target. Each bit in the mask corresponds to a specific aura
    state type defined in the game's aura system, allowing clients to accurately render
    visual effects and apply appropriate gameplay mechanics based on active auras.
  examples:
  - title: Basic Usage Example
    code: 'Unit* attacker = ...;

      Unit* target = ...;

      uint32 auraStateMask = attacker->BuildAuraStateUpdateForTarget(target);

      // Use auraStateMask to send update packet or perform logic

      '
    language: cpp
  notes: This method is primarily used in network synchronization and packet building
    for aura state updates. It should not be called excessively as it may involve
    iterating through active auras on the unit. The returned value is cached internally
    when possible to avoid redundant calculations.
  warnings: Do not call this method from within aura application or removal logic,
    as it might lead to recursion or inconsistent states. Ensure that the target parameter
    is valid and not null before calling this function.
  related:
  - GetAuraState
  - SetAuraState
  - HasAuraState
  - AddAura
  - RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:46:44.949110'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
