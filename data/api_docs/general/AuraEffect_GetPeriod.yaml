api:
  class: AuraEffect
  method: GetPeriod
  signature: int32 AuraEffect::GetPeriod() const
documentation:
  brief: Returns the periodic interval in milliseconds of the aura effect.
  description: The GetPeriod method retrieves the time interval in milliseconds at
    which the aura effect ticks or applies its periodic effects. This value determines
    how frequently the aura's periodic actions occur, such as damage over time or
    healing over time effects. The returned value represents the base period before
    any modifiers or multipliers are applied. For aura effects that do not have a
    periodic component, this method will typically return zero or a default value
    indicating no periodic application.
  parameters: []
  returns: An int32 value representing the periodic interval in milliseconds. A value
    of 0 indicates that the aura effect does not have a periodic component or is not
    currently active.
  examples:
  - title: Basic Usage to Check Periodic Interval
    code: "AuraEffect* auraEff = unit->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\nif\
      \ (auraEff)\n{\n    int32 period = auraEff->GetPeriod();\n    if (period > 0)\n\
      \    {\n        // This aura has a periodic effect\n        printf(\"Periodic\
      \ interval: %d ms\\n\", period);\n    }\n}"
    language: cpp
  - title: Using Period to Calculate Tick Count
    code: "AuraEffect* auraEff = player->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\n\
      if (auraEff)\n{\n    int32 period = auraEff->GetPeriod();\n    if (period >\
      \ 0)\n    {\n        uint32 duration = auraEff->GetDuration();\n        uint32\
      \ tickCount = duration / period;\n        printf(\"Aura will tick %u times during\
      \ its duration\\n\", tickCount);\n    }\n}"
    language: cpp
  notes: The returned period value is in milliseconds and represents the base interval
    before any haste or other modifiers are applied. This method should only be called
    on active aura effects that have a periodic component. The value may change during
    the lifetime of an aura effect if modifiers are applied.
  warnings: Calling this method on a non-periodic aura effect will return zero, which
    might be misinterpreted as an error condition. Always verify that the aura effect
    has a periodic component before relying on the returned value for calculations.
  related:
  - GetDuration
  - GetAuraType
  - GetAmplitude
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:02:39.212601'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
