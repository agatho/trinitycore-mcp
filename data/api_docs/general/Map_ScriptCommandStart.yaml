api:
  class: Map
  method: ScriptCommandStart
  signature: void Map::ScriptCommandStart(const ScriptInfo & script, uint32 delay,
    Object * source, Object * target)
documentation:
  brief: Initiates execution of a script command with specified delay and target objects.
  description: The ScriptCommandStart method is responsible for starting the execution
    of a scripted command within the game world. It takes a ScriptInfo object that
    defines the command to be executed, a delay in milliseconds before execution begins,
    and optional source and target objects that provide context for the script. This
    method is typically used by the TrinityCore scripting system to manage timed events,
    quest triggers, or other scripted behaviors in the game world. The method schedules
    the script to run after the specified delay, allowing for controlled timing of
    in-game events.
  parameters:
  - name: script
    description: A reference to a ScriptInfo object that contains the definition and
      parameters of the script command to be executed.
  - name: delay
    description: The delay in milliseconds before the script command begins execution.
      A value of 0 means immediate execution.
  - name: source
    description: Pointer to the Object that is initiating or providing context for
      the script. Can be null if no source is required.
  - name: target
    description: Pointer to the Object that is the target of the script command. Can
      be null if no specific target is needed.
  returns: null
  examples:
  - title: Basic Script Command Start
    code: 'ScriptInfo script;

      script.id = 12345;

      script.type = SCRIPT_COMMAND_TALK;

      Map* map = player->GetMap();

      map->ScriptCommandStart(script, 1000, player, npc);'
    language: cpp
  - title: Immediate Script Execution
    code: 'ScriptInfo script;

      script.id = 67890;

      script.type = SCRIPT_COMMAND_CAST_SPELL;

      map->ScriptCommandStart(script, 0, nullptr, targetObject);'
    language: cpp
  notes: This method is part of the TrinityCore's script execution system and integrates
    with the game's event handling framework. The actual script execution is deferred
    by the delay parameter using the core's timer system. Developers should ensure
    that the ScriptInfo object passed to this method is properly initialized before
    calling, as invalid script definitions may cause runtime errors or unexpected
    behavior.
  warnings: Calling this method with a null ScriptInfo pointer will likely result
    in undefined behavior or crashes. The source and target objects must remain valid
    for the duration of the script execution delay, as the system does not perform
    automatic reference counting on these objects.
  related:
  - ScriptCommandExecute
  - ScriptCommandCancel
  - GetScriptById
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:56:41.791029'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
