api:
  class: Creature
  method: CalculateMinMaxDamage
  signature: void Creature::CalculateMinMaxDamage(int attType, bool normalized, bool
    addTotalPct, float & minDamage, float & maxDamage) const
documentation:
  brief: Calculates minimum and maximum damage values for a creature based on attack
    type and various modifiers.
  description: This method computes the minimum and maximum damage values for a creature's
    melee attacks, taking into account the specified attack type, normalization settings,
    and percentage modifiers. It is used primarily in combat calculations to determine
    damage ranges for different attack types. The method considers factors such as
    creature level, base damage, and various modifiers that affect damage calculation.
    This function is essential for determining proper damage output during combat
    encounters.
  parameters:
  - name: attType
    description: The attack type to calculate damage for (e.g., melee, ranged, spell).
      Valid values include normal, ranged, and spell attacks.
  - name: normalized
    description: Whether to normalize the damage calculation. When true, the method
      applies normalization factors that affect how damage is calculated.
  - name: addTotalPct
    description: Whether to add percentage modifiers to the total damage calculation.
      When true, percentage modifiers are applied to the final damage values.
  - name: minDamage
    description: Reference to store the calculated minimum damage value. This parameter
      is modified in-place by the method.
  - name: maxDamage
    description: Reference to store the calculated maximum damage value. This parameter
      is modified in-place by the method.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Creature* creature = new Creature();

      float minDamage, maxDamage;

      creature->CalculateMinMaxDamage(ATT_TYPE_MELEE, true, false, minDamage, maxDamage);

      // minDamage and maxDamage now contain calculated values'
    language: cpp
  - title: Advanced Usage Example
    code: 'Creature* creature = new Creature();

      float minDamage, maxDamage;

      creature->CalculateMinMaxDamage(ATT_TYPE_RANGED, false, true, minDamage, maxDamage);

      // Applies percentage modifiers to ranged damage calculation'
    language: cpp
  notes: This method is typically used internally by the game engine during combat
    calculations. It requires the creature to have valid level and base damage data.
    Performance considerations include the use of reference parameters which avoids
    copying values. Thread safety depends on proper synchronization of creature data
    access.
  warnings: This method should not be called directly without proper context, as it
    relies on internal creature data that may not be initialized properly. The method
    modifies the input parameters directly, so care must be taken to handle the references
    correctly.
  related:
  - Creature::GetMeleeDamage
  - Creature::GetRangedDamage
  - Creature::CalculateDamage
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T02:47:44.846307'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
