api:
  class: Group
  method: GetMemberGUID
  signature: int Group::GetMemberGUID(const int & name) const
documentation:
  brief: Returns the unique identifier (GUID) of a group member by their name
  description: The GetMemberGUID method retrieves the globally unique identifier (GUID)
    associated with a specific group member identified by their character name. This
    method is commonly used in World of Warcraft TrinityCore server development to
    obtain player identifiers for group-related operations, such as checking membership
    status, managing loot distribution, or performing actions on specific group members.
    The method operates on the group's internal member list and returns the GUID if
    a matching member is found, or an invalid value if no match exists. It's important
    to note that this method may not be thread-safe and should be used carefully in
    multi-threaded environments.
  parameters:
  - name: name
    description: The character name of the group member whose GUID is to be retrieved.
      This parameter must be a valid, non-empty string representing an existing group
      member.
  returns: Returns the unique identifier (GUID) of the specified group member if found.
    Returns 0 or an invalid GUID value if no matching member exists in the group.
  examples:
  - title: Retrieve GUID of a Group Member
    code: "Group* group = player->GetGroup();\nif (group)\n{\n    int memberGUID =\
      \ group->GetMemberGUID(\"PlayerName\");\n    if (memberGUID != 0)\n    {\n \
      \       // Successfully retrieved the GUID\n        printf(\"Member GUID: %d\\\
      n\", memberGUID);\n    }\n    else\n    {\n        // Member not found in group\n\
      \        printf(\"Member not found in group.\\n\");\n    }\n}"
    language: cpp
  notes: This method assumes that the group object is valid and contains members.
    The implementation likely uses internal data structures to map character names
    to GUIDs for efficient lookup. Developers should be aware that this method may
    not handle case-sensitive name matching consistently with the game's internal
    systems.
  warnings: The method signature appears to have an incorrect parameter type (const
    int&) instead of const char* or std::string, which could cause compilation issues
    or unexpected behavior. This might be a documentation error in the provided signature.
    Always verify that the parameter passed matches the expected data type for the
    actual implementation.
  related:
  - GetMemberName
  - IsMember
  - GetMembers
metadata:
  confidence: 0.75
  generated_at: '2025-10-31T16:45:09.756906'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
