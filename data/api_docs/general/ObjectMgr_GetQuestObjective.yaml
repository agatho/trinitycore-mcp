api:
  class: ObjectMgr
  method: GetQuestObjective
  signature: const int * ObjectMgr::GetQuestObjective(uint32 questObjectiveId) const
documentation:
  brief: Retrieves the quest objective data associated with a given quest objective
    ID
  description: The GetQuestObjective method retrieves a pointer to an integer array
    containing the quest objective data for a specified quest objective ID. This method
    is typically used within the TrinityCore framework to access quest-related objective
    information stored in the game's database. The returned pointer points to internal
    data structures managed by the ObjectMgr class, and should be treated as read-only.
    The method performs a lookup in an internal cache or database structure to find
    the corresponding quest objective data. It is important to note that the returned
    pointer may be null if no quest objective data exists for the given ID.
  parameters: []
  returns: A const int* pointing to the quest objective data array, or nullptr if
    no data is found for the specified quest objective ID
  examples:
  - title: Basic usage of GetQuestObjective
    code: "const int* objectiveData = sObjectMgr->GetQuestObjective(12345);\nif (objectiveData\
      \ != nullptr)\n{\n    // Process the quest objective data\n    printf(\"Objective\
      \ data found: %d\\n\", *objectiveData);\n}\nelse\n{\n    printf(\"No quest objective\
      \ data found for ID 12345\\n\");\n}"
    language: cpp
  notes: This method is part of the ObjectMgr class which manages game objects and
    their associated data. The returned integer array may contain multiple values
    representing different aspects of a quest objective such as required item counts,
    NPC kill targets, or other objective parameters. The internal data structures
    are typically populated during server startup from database entries.
  warnings: The returned pointer is only valid while the ObjectMgr instance remains
    alive and should not be stored for long-term use. Accessing memory beyond the
    bounds of the returned array may cause undefined behavior. This method does not
    perform any validation on the input questObjectiveId parameter, so invalid IDs
    may return null pointers.
  related:
  - GetQuestTemplate
  - GetQuestOfferReward
  - GetQuestRequestItems
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:18:44.400785'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
