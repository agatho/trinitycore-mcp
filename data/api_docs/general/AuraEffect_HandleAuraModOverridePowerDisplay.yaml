api:
  class: AuraEffect
  method: HandleAuraModOverridePowerDisplay
  signature: void AuraEffect::HandleAuraModOverridePowerDisplay(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the power display override for an aura application.
  description: The HandleAuraModOverridePowerDisplay method is responsible for managing
    how a player's power (such as mana, rage, or energy) is displayed visually when
    affected by an aura. This method is invoked during aura application or removal
    to adjust the power bar's appearance, including its color and visual indicators.
    It interacts with the AuraApplication object to determine whether to apply or
    remove the override effect. The method ensures that game mechanics like mana regeneration
    or power cost modifications are visually represented correctly in the UI.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter is used to determine which unit and aura
      properties should be modified.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation, typically
      specifying whether to apply (1) or remove (0) the power display override effect.
  - name: apply
    description: Boolean flag that determines if the override should be applied (true)
      or removed (false). This value is used in conjunction with the mode parameter
      to control the behavior of the aura effect.
  returns: null
  examples:
  - title: Applying Power Display Override
    code: "void ApplyPowerOverride(AuraApplication* app, uint8 mode) {\n    AuraEffect*\
      \ effect = new AuraEffect();\n    effect->HandleAuraModOverridePowerDisplay(app,\
      \ mode, true);\n}"
    language: cpp
  - title: Removing Power Display Override
    code: "void RemovePowerOverride(AuraApplication* app, uint8 mode) {\n    AuraEffect*\
      \ effect = new AuraEffect();\n    effect->HandleAuraModOverridePowerDisplay(app,\
      \ mode, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and is typically
    called internally by the core engine when applying or removing auras. Developers
    should ensure that the AuraApplication object passed to this method is valid and
    properly initialized before calling it.
  warnings: Improper use of this method with invalid AuraApplication pointers can
    lead to undefined behavior or crashes. Always verify that the aura application
    exists and is in a valid state before invoking this method.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - AuraApplication::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:14:21.511692'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
