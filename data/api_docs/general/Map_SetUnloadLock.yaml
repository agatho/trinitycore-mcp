api:
  class: Map
  method: SetUnloadLock
  signature: void Map::SetUnloadLock(const int & p, bool on)
documentation:
  brief: Sets the unload lock status for a map instance, preventing it from being
    unloaded.
  description: The SetUnloadLock method is used to control whether a map can be unloaded
    or not. It takes a reference to an integer parameter and a boolean value indicating
    whether to enable or disable the unload lock. When enabled, this lock prevents
    the map from being removed from memory during server operation, which is particularly
    important for maps containing active players or objects that need to remain in
    memory. This method is typically used in conjunction with other map management
    functions to ensure proper handling of map lifecycle and resource management.
  parameters:
  - name: p
    description: A reference to an integer parameter that represents the map identifier
      or a related value used to determine which map instance to lock. This parameter
      is typically used in conjunction with other map-related functions.
  - name: 'on'
    description: A boolean value indicating whether to enable (true) or disable (false)
      the unload lock for the specified map. When true, prevents the map from being
      unloaded; when false, allows the map to be unloaded.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Map* map = new Map();

      map->SetUnloadLock(123, true);

      // This prevents the map from being unloaded

      '
    language: cpp
  - title: Advanced Usage Example
    code: 'Map* map = World::GetMap(123);

      map->SetUnloadLock(123, true);

      // Prevents map from being unloaded during player activity

      '
    language: cpp
  notes: This method is typically used in scenarios where a map needs to remain loaded
    for extended periods such as during player activities or when objects are actively
    being processed. The implementation may involve internal locking mechanisms that
    prevent concurrent access issues.
  warnings: Improper use of this method can lead to memory leaks or incorrect behavior
    if the map remains locked indefinitely without proper unlocking mechanism. Developers
    should ensure that the lock is properly managed and released after use.
  related:
  - Map::GetUnloadLock
  - Map::IsUnloadable
  - Map::UnsetUnloadLock
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T03:58:16.636355'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
