api:
  class: InterruptDatabase
  method: GetSpellConfig
  signature: const SpellInterruptConfig * InterruptDatabase::GetSpellConfig(uint32
    spellId)
documentation:
  brief: Retrieves the interrupt configuration for a specified spell ID from the database.
  description: The GetSpellConfig method fetches the SpellInterruptConfig object associated
    with a given spell identifier. This configuration typically defines how a spell
    behaves in terms of interruption mechanics, such as whether it can be interrupted
    by certain actions or effects. The method performs a lookup in an internal database
    structure that maps spell IDs to their respective interrupt configurations. It
    is commonly used during spell execution to determine if and how a spell should
    be interrupted by external factors like movement, damage, or other abilities.
  parameters:
  - name: spellId
    description: The unique identifier of the spell for which to retrieve the interrupt
      configuration. Must be a valid spell ID present in the game's spell database.
  returns: A pointer to a const SpellInterruptConfig object if a configuration exists
    for the specified spell ID; otherwise, returns nullptr if no matching configuration
    is found.
  examples:
  - title: Basic usage of GetSpellConfig
    code: "const SpellInterruptConfig* config = interruptDatabase->GetSpellConfig(12345);\n\
      if (config != nullptr)\n{\n    // Use the config to determine spell interruption\
      \ behavior\n    if (config->IsInterruptible())\n        printf(\"Spell can be\
      \ interrupted\\n\");\n}"
    language: cpp
  - title: Checking for interruptibility before casting
    code: "uint32 spellId = 98765;\nconst SpellInterruptConfig* config = interruptDatabase->GetSpellConfig(spellId);\n\
      if (config && config->IsInterruptible())\n{\n    // Proceed with spell casting\
      \ logic\n    // Apply interruption rules based on config\n}\nelse\n{\n    //\
      \ Handle non-interruptible spell case\n}"
    language: cpp
  notes: This method assumes that the interrupt database has been properly initialized
    and populated with valid spell configurations. The returned pointer is read-only
    and should not be modified directly. Performance-wise, this lookup is generally
    fast due to internal indexing structures used by the database.
  warnings: Ensure that the provided spellId corresponds to a valid spell in the game's
    database; otherwise, the method will return nullptr. Do not assume that all spells
    have interrupt configurations defined, as some may be excluded from interruption
    mechanics.
  related:
  - GetSpellConfig
  - LoadSpellInterruptConfigs
  - IsSpellInterruptible
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:41:20.398531'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
