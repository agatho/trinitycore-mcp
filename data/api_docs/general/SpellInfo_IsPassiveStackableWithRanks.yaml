api:
  class: SpellInfo
  method: IsPassiveStackableWithRanks
  signature: bool SpellInfo::IsPassiveStackableWithRanks() const
documentation:
  brief: Determines whether the spell is passive and stackable with ranks.
  description: This method checks if a spell is both passive (does not require activation)
    and can be stacked with other instances of the same spell when it has ranks. The
    method returns true if the spell meets these conditions, indicating that multiple
    instances of the spell can coexist on the player without conflicting. This is
    particularly important for managing passive effects that may have different ranks
    and can stack in the game mechanics.
  parameters: []
  returns: Returns true if the spell is passive and stackable with ranks, false otherwise.
    The method evaluates whether the spell's properties allow it to be stacked with
    other instances of the same spell when it has ranks, which affects how the spell
    behaves in relation to other similar spells.
  examples:
  - title: Basic usage example
    code: "bool isStackable = spellInfo->IsPassiveStackableWithRanks();\nif (isStackable)\n\
      {\n    // The spell can be stacked with itself\n    // This might be used in\
      \ a conditional check\n}"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related checks
    to determine how spells interact with each other in the game mechanics. It's important
    for developers working with spell systems to understand that this method does
    not directly affect activation or non-activation behavior, but rather focuses
    on stacking behavior of passive spells.
  warnings: This method should be used carefully when checking for passive spells
    that may have ranks, as it only applies to spells that are both passive and stackable.
    It does not cover all passive spell scenarios, so developers must ensure they
    understand the specific conditions being evaluated.
  related:
  - SpellInfo::IsPassive
  - SpellInfo::HasRank
  - SpellInfo::IsStackableWithRanks
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:49:00.982910'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
