api:
  class: Item
  method: GetSpellCharges
  signature: int32 Item::GetSpellCharges(const int * effect) const
documentation:
  brief: Returns the charge count of a spell associated with an item.
  description: This method retrieves the number of charges remaining for a specific
    spell that is linked to an item. It is commonly used in conjunction with item
    enchantments or spell effects to determine how many times a spell can be activated
    before it expires. The method returns a negative value if no charges are available,
    and positive values indicate the number of charges remaining. This functionality
    is crucial for managing item-based spell usage in World of Warcraft's TrinityCore
    framework.
  parameters: []
  returns: Returns an integer representing the number of charges remaining for the
    spell associated with the item. A value of 0 indicates no charges, while negative
    values suggest that the spell has expired or is not available. Positive values
    indicate active charges remaining.
  examples:
  - title: Basic Usage Example
    code: "int32 charges = item->GetSpellCharges(&effect);\nif (charges > 0)\n{\n\
      \    // Use the spell\n}\nelse\n{\n    // Spell is not available or expired\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with item enchantment or spell
    effect handling. It requires proper initialization of the item's spell effects
    to function correctly. Performance considerations include checking for valid spell
    IDs before calling this method.
  warnings: Be cautious when using this method with items that may have multiple spells;
    ensure correct indexing of the effect parameter to avoid incorrect charge counts.
  related:
  - GetSpellCharges
  - GetSpellCooldown
  - GetItemTemplate
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T04:51:10.668668'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
