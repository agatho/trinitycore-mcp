api:
  class: Unit
  method: GetAuraOfRankedSpell
  signature: Aura * Unit::GetAuraOfRankedSpell(uint32 spellId, int casterGUID, int
    itemCasterGUID, uint32 reqEffMask) const
documentation:
  brief: Retrieves the aura associated with a ranked spell, considering caster and
    item caster GUIDs.
  description: This method retrieves the aura that corresponds to a specific ranked
    spell, taking into account the caster's GUID and item caster GUID. It allows for
    precise targeting of spell effects based on their rank, which is essential for
    managing spell interactions in World of Warcraft. The method considers the required
    effect mask to determine which aura should be returned, making it useful for handling
    complex spell mechanics where multiple ranks exist.
  parameters:
  - name: spellId
    description: The identifier of the spell being queried, typically representing
      a ranked spell.
  - name: casterGUID
    description: The GUID of the caster that initiated the spell effect. This can
      be a player or NPC GUID.
  - name: itemCasterGUID
    description: The GUID of the item that cast the spell, if applicable. Used for
      tracking item-based spell effects.
  - name: reqEffMask
    description: A bitmask representing the required effect mask to determine which
      aura should be retrieved.
  returns: Returns a pointer to the Aura object associated with the specified ranked
    spell. If no matching aura is found, it returns nullptr.
  examples:
  - title: Basic usage example
    code: Aura* aura = unit->GetAuraOfRankedSpell(12345, 67890, 0, 1);
    language: cpp
  - title: Advanced usage example
    code: Aura* aura = unit->GetAuraOfRankedSpell(12345, 67890, 123456, 3);
    language: cpp
  notes: This method is particularly useful in scenarios involving spell rank tracking
    and when dealing with multiple effects from the same spell. It's important to
    note that the method may return nullptr if no matching aura exists or if the parameters
    are not properly set.
  warnings: Be cautious when using this method as it can lead to memory issues if
    used incorrectly, especially when dealing with non-owning pointers. Also, ensure
    that the spellId and effect mask are correctly set to avoid incorrect results.
  related:
  - GetAura
  - GetSpellInfo
  - GetAuraOfRank
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:29:03.613338'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
