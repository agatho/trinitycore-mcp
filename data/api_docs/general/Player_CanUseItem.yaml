api:
  class: Player
  method: CanUseItem
  signature: int Player::CanUseItem(Item * pItem, bool not_loading) const
documentation:
  brief: Determines whether a player can use a specific item based on requirements
    and restrictions.
  description: The CanUseItem method evaluates whether a player can use a given item,
    taking into account various game mechanics such as item requirements, class restrictions,
    level requirements, and other conditions. This method is commonly used in the
    context of item usage checks, particularly when handling player interactions with
    items that have specific requirements or when determining if an item can be equipped
    or used by the player. It returns different integer values indicating success
    or failure based on whether the item can be used by the player.
  parameters:
  - name: pItem
    description: Pointer to the Item object that is being checked for usability. This
      parameter represents the specific item whose usability is being evaluated.
  - name: not_loading
    description: Boolean flag indicating whether the check should be performed during
      loading or not. When true, it means the check is performed outside of loading
      context, typically during gameplay operations.
  returns: Returns an integer value representing the result of the usability check.
    The return value can be 0 for failure, 1 for success, or other values depending
    on specific conditions and requirements. This method typically returns 1 when
    the item can be used by the player, and 0 when it cannot.
  examples:
  - title: Basic Usage Example
    code: int result = player->CanUseItem(item);
    language: cpp
  - title: Advanced Usage with Conditional Logic
    code: "if (player->CanUseItem(item, true) == 1)\n{\n    // Player can use the\
      \ item\n}\nelse\n{\n    // Player cannot use the item\n}"
    language: cpp
  notes: This method is typically used in conjunction with other item-related methods
    such as CanUseItem or Item::CanUse. It is important to note that this method does
    not perform any actual item usage; it only checks whether the player can use the
    item based on various conditions. The method may also be affected by game mechanics
    like item cooldowns, class restrictions, and level requirements.
  warnings: This method should not be used as a direct replacement for item usage
    or equipment checks in all cases. It is important to understand that this method
    only evaluates whether the player can use an item, but does not necessarily mean
    that the item will be used successfully in gameplay. Care must be taken when using
    this method in conjunction with other item-related methods to avoid incorrect
    assumptions about item usability.
  related:
  - Item::CanUse
  - Player::IsUsingItem
  - Player::CanUseItem
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:32:01.819393'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
