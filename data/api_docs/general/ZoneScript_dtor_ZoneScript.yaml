api:
  class: ZoneScript
  method: ~ZoneScript
  signature: void ZoneScript::~ZoneScript()
documentation:
  brief: Destroys a ZoneScript instance and cleans up associated resources.
  description: The destructor for the ZoneScript class is responsible for cleaning
    up any resources allocated during the lifetime of the zone script. In TrinityCore,
    ZoneScripts are used to define custom behavior for specific zones, such as handling
    events, managing creature spawns, or triggering quests. This destructor ensures
    proper cleanup of internal data structures and prevents memory leaks when a zone
    script object is no longer needed. It's automatically invoked by the game engine
    when the zone script is removed from memory, typically during zone unload or server
    shutdown.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of ZoneScript
    code: "class MyZoneScript : public ZoneScript\n{\npublic:\n    MyZoneScript(Map*\
      \ map) : ZoneScript(map) {}\n    ~MyZoneScript() override\n    {\n        //\
      \ Cleanup code here\n    }\n};\n\n// The destructor is automatically called\
      \ when the zone script instance is destroyed"
    language: cpp
  notes: Developers should ensure that any custom cleanup logic in derived classes'
    destructors properly releases all allocated resources. Since ZoneScript objects
    are managed by the TrinityCore framework, manual deletion of these objects should
    not be performed directly.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:48:40.462503'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
