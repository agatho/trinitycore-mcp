api:
  class: Player
  method: ReplaceAllPlayerLocalFlags
  signature: void Player::ReplaceAllPlayerLocalFlags(PlayerLocalFlags flags)
documentation:
  brief: Replaces all player local flags with the specified flags.
  description: This method replaces all existing player local flags with a new set
    of flags provided as input. It is used to update or reset the local flags associated
    with a player character, typically in response to game mechanics that require
    flag changes or updates. The operation affects the player's internal state and
    may influence various gameplay behaviors such as visibility, interaction, or status
    effects. This method is commonly used during player initialization, flag updates,
    or when transitioning between different game states.
  parameters:
  - name: flags
    description: The new set of player local flags to replace all existing flags with.
      This parameter defines the specific flags that will be applied to the player
      character.
  returns: null
  examples:
  - title: Basic usage example
    code: 'PlayerLocalFlags newFlags = PlayerLocalFlags::None;

      player->ReplaceAllPlayerLocalFlags(newFlags);'
    language: cpp
  - title: Advanced usage example
    code: '// Example with specific flags

      PlayerLocalFlags flags = PlayerLocalFlags::Invisible | PlayerLocalFlags::Ghost;

      player->ReplaceAllPlayerLocalFlags(flags);

      // This would update the player''s local flags to reflect invisibility and ghost
      status'
    language: cpp
  notes: This method is typically used in conjunction with other flag-related methods
    to manage player state. It may trigger internal updates to the player's game state,
    affecting visibility or interaction with other players or NPCs. Performance considerations
    include potential overhead from flag updates, especially if called frequently
    during gameplay.
  warnings: Improper use of this method can lead to incorrect player state, potentially
    causing issues with visibility, interaction, or game mechanics. Care should be
    taken when applying flags that may conflict with each other or with existing player
    states.
  related:
  - GetPlayerLocalFlags
  - SetPlayerLocalFlags
  - AddPlayerLocalFlags
  - ClearPlayerLocalFlags
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:10:47.892590'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
