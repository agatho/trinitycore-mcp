api:
  class: Unit
  method: HasStrongerAuraWithDR
  signature: bool Unit::HasStrongerAuraWithDR(const SpellInfo * auraSpellInfo, Unit
    * caster) const
documentation:
  brief: Determines whether a unit has a stronger aura than the specified spell with
    respect to diminishing returns.
  description: This method checks if the unit possesses a stronger aura than the provided
    spellInfo in terms of diminishing returns. It evaluates whether the current unit's
    aura is more effective than the specified aura, considering the diminishing return
    mechanics that apply to certain spells. This functionality is crucial for determining
    aura interactions and effectiveness within World of Warcraft's combat system,
    particularly when dealing with aura-based effects such as those from talents or
    abilities that reduce the duration of enemy effects.
  parameters:
  - name: auraSpellInfo
    description: Pointer to the SpellInfo structure representing the spell whose aura
      strength is being compared. This represents the specific spell being evaluated
      for its aura strength.
  - name: caster
    description: Pointer to the Unit that casted the aura being compared. This parameter
      determines which unit's aura is being evaluated against the provided spellInfo.
  returns: Returns true if the unit has a stronger aura than the specified spell with
    respect to diminishing returns, false otherwise.
  examples:
  - title: Basic Usage Example
    code: "if (unit->HasStrongerAuraWithDR(spellInfo, caster)) {\n    // Do something\n\
      }\n"
    language: cpp
  notes: This method is typically used in conjunction with other aura-related functions
    to determine the effectiveness of a unit's aura against another. It requires careful
    handling of spell information and caster relationships to ensure accurate results.
  warnings: The method may not behave as expected if the spellInfo or caster parameters
    are null, which could lead to undefined behavior or crashes. Care should be taken
    to validate these parameters before calling the method.
  related:
  - Unit::HasAura
  - Unit::HasAuraWithDR
  - Unit::HasAuraWithSpell
  - Unit::HasAuraWithSpellType
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T12:17:33.965655'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
