api:
  class: Unit
  method: GetAI
  signature: UnitAI * Unit::GetAI() const
documentation:
  brief: Returns the AI instance associated with this unit for handling combat and
    behavior logic.
  description: The GetAI method retrieves the UnitAI instance that is currently assigned
    to a Unit object, which governs the unit's artificial intelligence behavior including
    combat actions, movement patterns, and scripted responses. This method is essential
    for accessing AI-related functionality in TrinityCore's core system, allowing
    developers to interact with AI components such as combat logic, movement controllers,
    and event handling. The returned AI instance may be nullptr if no AI has been
    assigned or if the unit is not properly initialized for AI operations.
  parameters: []
  returns: Returns a pointer to the UnitAI instance associated with this unit; returns
    nullptr if no AI has been assigned or if the unit is not initialized for AI operations.
  examples:
  - title: Basic Usage Example
    code: "Unit* target = GetAI();\nif (target != nullptr)\n{\n    // Perform actions\
      \ using the AI\n    target->AI()->DoAction(1);\n}\nelse\n{\n    // Handle no\
      \ AI case\n    // Do nothing or fallback behavior\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* unit = GetAI();\nif (unit && unit->AI())\n{\n    UnitAI* ai = unit->AI();\n\
      \    if (ai->IsInCombat())\n    {\n        // Handle combat logic\n        ai->AttackStart(unit->GetVictim());\n\
      \    }\n    else\n    {\n        // Handle non-combat behavior\n        ai->DoAction(2);\n\
      \    }\n}\nelse\n{\n    // Error handling for missing AI\n    // Log error or\
      \ fallback\n}"
    language: cpp
  notes: The method should be used carefully as it may return nullptr if the unit
    has not been initialized with an AI component. Developers must ensure that the
    unit is properly set up before calling GetAI, especially in cases where AI behavior
    is expected to be active.
  warnings: This method does not perform any initialization or assignment of AI components;
    developers must ensure that the unit has been assigned an AI instance before calling
    this method. Failure to do so may result in nullptr dereference errors.
  related:
  - GetAI
  - SetAI
  - GetVictim
  - GetTarget
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:40:18.085455'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
