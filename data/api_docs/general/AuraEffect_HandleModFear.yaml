api:
  class: AuraEffect
  method: HandleModFear
  signature: void AuraEffect::HandleModFear(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes the fear effect aura on the target.
  description: The HandleModFear method manages the application and removal of the
    fear effect aura, which causes the affected unit to flee from its current position.
    This method is invoked during aura application or removal events and modifies
    the target's movement behavior by setting or clearing the fear state. The implementation
    typically involves updating the target's unit flags, adjusting movement speed,
    and potentially triggering visual effects or animations associated with the fear
    state.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      how this aura is applied to the target. This includes details such as the application
      time, stack count, and other context-specific data.
  - name: mode
    description: The mode of operation for the aura effect, typically indicating whether
      it's being applied (1) or removed (0). This parameter controls how the fear
      effect is processed during aura events.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the fear effect. When true, the target will be affected by fear; when false,
      the fear effect is removed.
  returns: null
  examples:
  - title: Basic Fear Aura Application
    code: "void ApplyFearAura(Unit* target)\n{\n    if (target)\n    {\n        AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo);\n        auraEffect->HandleModFear(aurApp,\
      \ 1, true);\n    }\n}"
    language: cpp
  - title: Removing Fear Effect
    code: "void RemoveFearAura(Unit* target)\n{\n    if (target)\n    {\n        AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo);\n        auraEffect->HandleModFear(aurApp,\
      \ 1, false);\n    }\n}"
    language: cpp
  notes: This method is part of the aura handling system and should only be called
    from within the context of an aura application or removal process. The fear effect
    may interact with other movement-imposing effects like root or charm, and care
    must be taken to ensure proper stacking behavior.
  warnings: Improper use of this method can lead to unexpected movement behavior in
    units. Ensure that the AuraApplication object is properly initialized before calling
    this method. Failure to correctly manage the apply flag may result in inconsistent
    fear state for the target unit.
  related:
  - AuraEffect::HandleModSpeed
  - AuraEffect::HandleModRoot
  - AuraEffect::HandleModConfuse
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:38:05.904903'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
