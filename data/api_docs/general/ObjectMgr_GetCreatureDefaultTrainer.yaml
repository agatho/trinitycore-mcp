api:
  class: ObjectMgr
  method: GetCreatureDefaultTrainer
  signature: uint32 ObjectMgr::GetCreatureDefaultTrainer(uint32 creatureId) const
documentation:
  brief: Retrieves the trainer ID associated with a specified creature ID from the
    default trainer database.
  description: The GetCreatureDefaultTrainer method fetches the trainer identifier
    (trainerId) linked to a given creature entry ID. This function is typically used
    in World of Warcraft TrinityCore servers to determine which trainer template or
    NPC should be assigned to a specific creature for training purposes. It accesses
    internal data structures that map creature entries to their default trainers,
    ensuring proper functionality of trainer NPCs within the game world. The method
    assumes that the creature ID provided corresponds to an existing entry in the
    database and returns 0 if no mapping is found.
  parameters: []
  returns: Returns a uint32 representing the trainer ID associated with the specified
    creature ID. If no default trainer is defined for the given creature, it returns
    0.
  examples:
  - title: Retrieve Trainer ID for a Specific Creature
    code: "uint32 trainerId = sObjectMgr->GetCreatureDefaultTrainer(34567);\nif (trainerId\
      \ != 0)\n{\n    // Use the trainerId to fetch trainer data\n    sLog->outString(\"\
      Trainer ID for creature 34567 is: %u\", trainerId);\n}\nelse\n{\n    sLog->outString(\"\
      No default trainer found for creature 34567\");\n}"
    language: cpp
  notes: This method relies on internal database tables such as `creature_template`
    and potentially `trainer_template`. It's commonly used during NPC initialization
    or when determining how a creature should behave in terms of training. The returned
    trainer ID may be used to look up further information about the trainer, including
    their available spells, learnable skills, and other training-related data.
  warnings: Ensure that the creatureId passed into this method is valid and exists
    in the database; otherwise, it will return 0 without indicating an error. Also,
    note that this function only retrieves default trainers and does not account for
    dynamic trainer assignments or custom modifications made at runtime.
  related:
  - GetCreatureTemplate
  - GetTrainerTemplate
  - GetTrainerSpell
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T10:00:10.413321'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
