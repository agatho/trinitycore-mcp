api:
  class: Unit
  method: CanDualWield
  signature: bool Unit::CanDualWield() const
documentation:
  brief: Determines whether the unit can dual wield weapons
  description: This method checks if the unit is capable of dual-wielding, which means
    having two weapons equipped simultaneously. The functionality is typically used
    to determine if a character can perform dual-wield attacks or if they have the
    appropriate class and level requirements for dual-wielding. This method is commonly
    used in combat calculations and weapon handling logic within TrinityCore's game
    mechanics.
  parameters: []
  returns: Returns true if the unit can dual wield, false otherwise. This indicates
    whether the character has the necessary prerequisites such as level requirement
    or class specialization to perform dual-wield attacks.
  examples:
  - title: Basic Usage Example
    code: "if (unit->CanDualWield()) {\n    // Unit can dual wield\n    // Perform\
      \ dual-wield logic here\n}\nelse {\n    // Unit cannot dual wield\n}"
    language: cpp
  notes: null
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:44:24.362119'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
