api:
  class: AuraEffect
  method: HandleAuraModFakeInebriation
  signature: void AuraEffect::HandleAuraModFakeInebriation(const AuraApplication *
    aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a fake inebriation effect to a player, simulating intoxication
    without actual alcohol mechanics.
  description: The HandleAuraModFakeInebriation method manages the application and
    removal of a visual and mechanical fake inebriation aura on a player. This aura
    simulates the effects of intoxication such as reduced movement speed and altered
    behavior, but does not affect actual game resources like mana or health. The effect
    is purely cosmetic and behavioral, designed to enhance roleplay or simulate drunk
    gameplay mechanics. When applied, it modifies the player's movement speed and
    may trigger certain visual effects. When removed, it restores normal movement
    and behavior. This method is typically invoked during aura application or removal
    events within the TrinityCore framework.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. Contains information about the aura's context, target, and
      application state.
  - name: mode
    description: The mode of operation for the aura effect. Typically indicates whether
      the effect is being applied (1) or removed (0), though exact values may vary
      based on implementation details in TrinityCore.
  - name: apply
    description: Boolean flag indicating if the aura should be applied (true) or removed
      (false). Used to determine the direction of the effect modification.
  returns: null
  examples:
  - title: Applying Fake Inebriation Aura
    code: "void ApplyFakeInebriation(Player* player)\n{\n    if (Aura* aura = new\
      \ Aura(player, player->GetMap(), SpellInfo::GetSpellInfo(12345)))\n    {\n \
      \       AuraApplication* aurApp = new AuraApplication(player, aura, EFFECT_0);\n\
      \        aura->ApplyEffect(aurApp, 0, true);\n    }\n}"
    language: cpp
  - title: Handling Aura Application Event
    code: "void HandleFakeInebriationAura(AuraEffect* aurEff, const AuraApplication*\
      \ aurApp, uint8 mode, bool apply)\n{\n    if (apply)\n        aurEff->HandleAuraModFakeInebriation(aurApp,\
      \ mode, true);\n    else\n        aurEff->HandleAuraModFakeInebriation(aurApp,\
      \ mode, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system and relies on proper initialization
    of the AuraApplication object. The effect is not tied to real alcohol mechanics
    but rather simulates inebriation for gameplay or roleplay purposes. It modifies
    player movement speed and may interact with other systems such as combat behavior
    or NPC interactions.
  warnings: Improper use of this method without correct aura application context can
    lead to undefined behavior or visual glitches. Ensure that the AuraApplication
    object passed is valid and properly initialized before calling this method.
  related:
  - AuraEffect::HandleAuraModSpeed
  - AuraEffect::HandleAuraModMovementSpeed
  - AuraApplication::ApplyEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:23:05.372966'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
