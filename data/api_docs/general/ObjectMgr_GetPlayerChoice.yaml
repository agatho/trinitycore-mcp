api:
  class: ObjectMgr
  method: GetPlayerChoice
  signature: const PlayerChoice * ObjectMgr::GetPlayerChoice(int32 choiceId) const
documentation:
  brief: Retrieves a player choice entry by its unique identifier from the object
    manager.
  description: The GetPlayerChoice method retrieves a const reference to a PlayerChoice
    object based on the provided choiceId. This method is used within the TrinityCore
    framework to access predefined player choice data, which typically represents
    dialogue options or quest choices that players can make during interactions with
    NPCs. The returned pointer will be null if no valid player choice exists for the
    given ID. This method is commonly used in conjunction with player interaction
    systems and quest handling logic.
  parameters: []
  returns: A const pointer to a PlayerChoice object if a valid entry exists for the
    specified choiceId, or nullptr if no such entry is found.
  examples:
  - title: Basic Usage
    code: "const PlayerChoice* choice = sObjectMgr->GetPlayerChoice(12345);\nif (choice)\n\
      {\n    // Process the player choice\n    sLog->outString(\"Found player choice:\
      \ %u\", choice->ChoiceId);\n}"
    language: cpp
  notes: This method performs a lookup in an internal data structure that stores all
    registered player choices. It's recommended to cache results if the same choice
    is accessed frequently to avoid repeated lookups. The method is thread-safe as
    it only reads from immutable data structures.
  warnings: Ensure that the choiceId parameter is valid and corresponds to an existing
    player choice entry, otherwise the returned pointer will be null. Always check
    for null before dereferencing the returned pointer to prevent crashes.
  related:
  - GetPlayerChoiceEntry
  - GetAllPlayerChoices
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T09:23:45.140585'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
