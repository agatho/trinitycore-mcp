api:
  class: WorldObject
  method: GetFloorZ
  signature: float WorldObject::GetFloorZ() const
documentation:
  brief: Calculates and returns the Z-coordinate (height) of the floor at the WorldObject's
    current position.
  description: The GetFloorZ method determines the vertical position of the ground
    or floor beneath a WorldObject in the game world. This is essential for proper
    positioning, collision detection, and ensuring objects are placed correctly relative
    to terrain or platform heights. The method accounts for the object's current location
    and queries the underlying map system to find the appropriate Z-coordinate at
    that point. It is commonly used when placing creatures, game objects, or players
    on the ground, or when calculating movement paths that must respect terrain elevation.
  parameters: []
  returns: A float value representing the Z-coordinate (height) of the floor directly
    beneath the WorldObject's current position in the game world. This value corresponds
    to the vertical elevation at the object's X and Y coordinates.
  examples:
  - title: Basic usage for placing a creature on the ground
    code: 'Creature* creature = ...;

      float floorZ = creature->GetFloorZ();

      creature->SetPosition(creature->GetPositionX(), creature->GetPositionY(), floorZ,
      creature->GetOrientation());'
    language: cpp
  - title: Using GetFloorZ to ensure object placement is above terrain
    code: 'GameObject* go = ...;

      float floorZ = go->GetFloorZ();

      go->SetPosition(go->GetPositionX(), go->GetPositionY(), floorZ + 1.0f, go->GetOrientation());
      // Place 1 unit above ground'
    language: cpp
  notes: This method internally uses the map's height query system to determine the
    floor Z-coordinate. It may involve terrain sampling or collision checking depending
    on the map implementation. The result is cached for performance in many cases,
    but can be recalculated if the object's position changes significantly.
  warnings: The returned value represents only the immediate floor height and does
    not account for objects like furniture, buildings, or other interactive elements
    that might be above the terrain at the same location. For precise positioning
    with collision detection, consider using additional methods such as GetHeight()
    or checking for nearby GameObjects.
  related:
  - GetPositionZ
  - SetPosition
  - GetHeight
  - IsInMap
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T22:09:18.545982'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
