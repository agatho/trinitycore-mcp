api:
  class: WorldObject
  method: UpdateObjectVisibilityOnCreate
  signature: void WorldObject::UpdateObjectVisibilityOnCreate()
documentation:
  brief: Updates the visibility state of an object upon creation, ensuring it is properly
    registered with surrounding players and systems.
  description: The UpdateObjectVisibilityOnCreate method is responsible for initializing
    the visibility state of a WorldObject when it is first created within the game
    world. This method ensures that the object becomes visible to nearby players and
    that appropriate visibility updates are sent to the client. It typically handles
    internal bookkeeping such as adding the object to relevant visibility lists, triggering
    initial visibility calculations, and notifying surrounding players of the new
    object's presence. The method is usually called automatically during object construction
    or activation, but may also be invoked manually in specific scenarios where an
    object needs to be re-introduced into the visibility system after being hidden
    or removed.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage During Object Creation
    code: 'Player* player = new Player();

      // ... initialization code ...

      player->UpdateObjectVisibilityOnCreate(); // Ensures player is visible to nearby
      players'
    language: cpp
  - title: Manual Visibility Update for Hidden Objects
    code: "Creature* creature = GetCreature(12345);\nif (creature && !creature->IsVisible())\n\
      {\n    creature->UpdateObjectVisibilityOnCreate(); // Reveal hidden creature\n\
      }"
    language: cpp
  notes: This method is typically called automatically during object initialization
    and should not be invoked manually unless there's a specific need to force visibility
    refresh. It may trigger network packets to nearby clients, so excessive calls
    could impact performance. The method relies on the object's position and map data
    being correctly set before execution.
  warnings: Calling this method on an already visible object may cause duplicate visibility
    updates or unexpected behavior. Ensure that the WorldObject has valid position
    data and is properly initialized before calling this method. Avoid calling it
    from within visibility calculation loops to prevent potential stack overflow or
    performance degradation.
  related:
  - UpdateVisibility
  - AddToVisibilityList
  - RemoveFromVisibilityList
  - IsVisible
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T16:07:09.206727'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
