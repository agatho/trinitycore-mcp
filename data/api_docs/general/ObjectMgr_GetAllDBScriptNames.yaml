api:
  class: ObjectMgr
  method: GetAllDBScriptNames
  signature: int ObjectMgr::GetAllDBScriptNames() const
documentation:
  brief: Retrieves the total count of all database script names registered in the
    ObjectMgr.
  description: The GetAllDBScriptNames method returns an integer value representing
    the total number of database script names currently loaded and managed by the
    ObjectMgr. This method is typically used to enumerate or validate the presence
    of scripts within the game's database system. It does not perform any operations
    on the scripts themselves but rather provides a count for informational or administrative
    purposes. The method is read-only and does not modify any internal state.
  parameters: []
  returns: An integer value representing the total number of database script names
    registered in the ObjectMgr. A return value of zero indicates that no scripts
    are currently loaded, while a positive integer reflects the count of available
    scripts.
  examples:
  - title: Basic Usage to Check Script Count
    code: "int scriptCount = sObjectMgr->GetAllDBScriptNames();\nif (scriptCount >\
      \ 0)\n{\n    TC_LOG_INFO(\"scripts\", \"Loaded %d database scripts.\", scriptCount);\n\
      }\nelse\n{\n    TC_LOG_WARNING(\"scripts\", \"No database scripts found.\");\n\
      }"
    language: cpp
  notes: This method is likely used internally by TrinityCore's scripting system to
    manage and track loaded scripts. It may be called during server startup or script
    reloading processes to ensure proper initialization of the script registry.
  warnings: null
  related:
  - GetScriptName
  - LoadDBScripts
  - IsScriptLoaded
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:09:34.106402'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
