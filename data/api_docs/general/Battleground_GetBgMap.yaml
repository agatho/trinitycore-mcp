api:
  class: Battleground
  method: GetBgMap
  signature: BattlegroundMap * Battleground::GetBgMap() const
documentation:
  brief: Returns a pointer to the battleground map associated with this battleground
    instance.
  description: The GetBgMap method retrieves the BattlegroundMap object that represents
    the specific map instance where this battleground is currently running. This method
    provides access to the underlying map data structure which contains all the necessary
    information about the battleground's layout, objectives, and game state. The returned
    pointer is valid only while the battleground instance exists and should not be
    used after the battleground has ended or been destroyed. This method is commonly
    used by battleground systems to access map-specific functionality such as objective
    handling, player positioning, and zone-based logic.
  parameters: []
  returns: A pointer to the BattlegroundMap object associated with this battleground
    instance, or nullptr if the battleground has not been initialized with a valid
    map.
  examples:
  - title: Accessing battleground map for objective handling
    code: "BattlegroundMap* bgMap = bg->GetBgMap();\nif (bgMap)\n{\n    // Use bgMap\
      \ to access map-specific data\n    // e.g., get objectives, handle zone triggers\n\
      }"
    language: cpp
  - title: Checking if battleground has valid map before operations
    code: "BattlegroundMap* map = bg->GetBgMap();\nif (map && map->IsActive())\n{\n\
      \    // Safe to perform map-related operations\n    map->UpdatePlayers();\n\
      }\nelse\n{\n    // Handle case where battleground map is not ready\n}"
    language: cpp
  notes: This method returns a raw pointer to the BattlegroundMap, so callers must
    ensure that the battleground instance is still valid before using the returned
    pointer. The method does not perform any reference counting or memory management
    - it simply returns an internal member variable. In TrinityCore's architecture,
    battleground maps are typically created and managed by the battleground system
    itself.
  warnings: Never assume the returned pointer is non-null without checking first.
    Using the returned pointer after the battleground has been destroyed will result
    in undefined behavior. The method should only be called from within the context
    of an active battleground instance.
  related:
  - GetBgType
  - GetStatus
  - GetMap
  - GetArenaType
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:19:30.408887'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
