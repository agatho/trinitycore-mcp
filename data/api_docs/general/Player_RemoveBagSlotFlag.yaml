api:
  class: Player
  method: RemoveBagSlotFlag
  signature: void Player::RemoveBagSlotFlag(uint32 bagIndex, int flags)
documentation:
  brief: Removes a specific flag from a bag slot in the player's inventory.
  description: This method removes a specified flag from a bag slot within the player's
    inventory, allowing for precise control over bag slot permissions and capabilities.
    The method operates on the bag index and flags parameters to modify the bag slot's
    state. It is typically used during gameplay mechanics involving bag management,
    such as when removing certain restrictions or permissions from bags. This method
    does not directly affect the physical bag item but rather modifies the internal
    representation of bag slot flags within the player's inventory system.
  parameters:
  - name: bagIndex
    description: The index of the bag slot from which the flag will be removed. This
      represents a zero-based index into the player's bag slots, typically ranging
      from 0 to 11 for normal bags.
  - name: flags
    description: The specific flags to remove from the bag slot. These flags represent
      bitwise values that determine various permissions or capabilities of the bag
      slot, such as whether it can be used for specific item types or has certain
      restrictions applied.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->RemoveBagSlotFlag(0, 1);

      // Removes flag 1 from bag slot 0'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = new Player();

      uint32 bagIndex = 5;

      uint32 flags = 8;

      player->RemoveBagSlotFlag(bagIndex, flags);

      // Removes flag 8 from bag slot 5'
    language: cpp
  notes: This method is part of the internal bag slot management system and should
    be used carefully to avoid unexpected behavior in bag slot permissions. The implementation
    likely involves bitwise operations on internal flags stored in the player's inventory
    structure.
  warnings: Improper use of this method may lead to incorrect bag slot permissions,
    potentially causing issues with item placement or access. Care should be taken
    when removing flags to ensure that the intended behavior is preserved.
  related:
  - AddBagSlotFlag
  - GetBagSlotFlags
  - SetBagSlotFlag
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T00:25:49.049411'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
