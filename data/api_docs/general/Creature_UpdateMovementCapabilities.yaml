api:
  class: Creature
  method: UpdateMovementCapabilities
  signature: void Creature::UpdateMovementCapabilities()
documentation:
  brief: Updates the movement capabilities and flags of a creature based on its current
    state and AI configuration.
  description: The UpdateMovementCapabilities method recalculates and applies the
    appropriate movement flags and capabilities for a Creature object. This includes
    determining whether the creature can fly, swim, walk, or use other movement types
    based on its current AI state, health status, and environmental conditions. The
    method is typically invoked during AI updates or when the creature's state changes
    to ensure that its movement behavior accurately reflects its current situation
    in the game world. It may also update internal movement-related properties such
    as speed modifiers, pathfinding capabilities, and animation states.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage in AI Update Loop
    code: "class MyCreatureAI : public CreatureAI {\npublic:\n    void UpdateAI(uint32\
      \ diff) override {\n        // ... other AI logic ...\n        if (updateMovement)\n\
      \            me->UpdateMovementCapabilities();\n        // ... rest of AI logic\
      \ ...\n    }\n};"
    language: cpp
  - title: Usage After State Change
    code: "void ApplySpecialEffect(Creature* creature, bool isFlying) {\n    if (isFlying)\n\
      \        creature->SetCanFly(true);\n    else\n        creature->SetCanFly(false);\n\
      \    \n    // Update movement capabilities to reflect new state\n    creature->UpdateMovementCapabilities();\n\
      }"
    language: cpp
  notes: This method is typically called internally by the TrinityCore framework during
    AI updates and state transitions. Developers should not generally need to call
    this manually unless implementing custom movement logic or modifying creature
    behavior in ways that affect mobility. The method may trigger internal recalculations
    of movement-related properties such as speed, animation states, and pathfinding
    parameters.
  warnings: Calling UpdateMovementCapabilities manually outside of the normal AI update
    cycle may cause unexpected behavior if not properly synchronized with other movement-related
    systems. It should only be called when there's a legitimate reason to update movement
    state that isn't handled by the standard AI framework.
  related:
  - Creature::SetCanFly
  - Creature::SetCanSwim
  - Creature::SetCanWalk
  - Creature::GetMovementFlags
  - Creature::UpdatePosition
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T20:23:31.049057'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
