api:
  class: MotionMaster
  method: MoveJump
  signature: void MotionMaster::MoveJump(float x, float y, float z, float speedXY,
    float speedZ, uint32 id, const int & facing, bool orientationFixed, const JumpArrivalCastArgs
    * arrivalCast, const Movement::SpellEffectExtraData * spellEffectExtraData, int
    param10)
documentation:
  brief: Initiates a jumping movement to a specified location with configurable speed
    and trajectory.
  description: The MoveJump method schedules a character or creature to perform a
    jump motion towards a given coordinate. It supports customizable horizontal and
    vertical speeds, optional facing direction, and can be configured to cast spells
    upon arrival. This method is typically used for AI-driven movement patterns, such
    as leaping over obstacles or performing acrobatic actions in World of Warcraft.
    The jump trajectory is calculated based on the provided parameters, including
    initial position, target position, and speed values. The motion will be executed
    asynchronously and may involve multiple movement updates during the jump animation.
  parameters:
  - name: x
    description: The X coordinate of the destination point for the jump.
  - name: y
    description: The Y coordinate of the destination point for the jump.
  - name: z
    description: The Z coordinate (height) of the destination point for the jump.
  - name: speedXY
    description: Horizontal speed of the jump movement in yards per second.
  - name: speedZ
    description: Vertical speed of the jump movement in yards per second. Positive
      values indicate upward motion, negative downward.
  - name: id
    description: Unique identifier for this specific jump motion. Used to distinguish
      between different jump actions.
  - name: facing
    description: The facing angle (in degrees) the unit should face during or after
      the jump. A negative value indicates that no specific facing is enforced.
  - name: orientationFixed
    description: If true, the unit's orientation will remain fixed during the jump;
      otherwise, it may change based on movement direction.
  - name: arrivalCast
    description: Optional pointer to spell cast arguments that define a spell to be
      cast upon arrival at the destination. Can be null.
  - name: spellEffectExtraData
    description: Optional pointer to additional data related to spell effects during
      the jump, such as targeting or casting information. Can be null.
  - name: param10
    description: Reserved parameter for future use or specific internal behavior control;
      typically set to zero.
  returns: null
  examples:
  - title: Basic Jump Movement
    code: motionMaster->MoveJump(10.0f, 20.0f, 5.0f, 8.0f, 12.0f, 1, -1, false);
    language: cpp
  - title: Jump with Spell Cast on Arrival
    code: 'JumpArrivalCastArgs castArgs;

      castArgs.spellId = 12345;

      MotionMaster* mm = creature->GetMotionMaster();

      mm->MoveJump(100.0f, 150.0f, 20.0f, 10.0f, 15.0f, 2, 90.0f, true, &castArgs);'
    language: cpp
  notes: This method does not immediately execute the jump but queues it for processing
    in the next movement update cycle. The actual jump animation and physics are handled
    by the core movement system. Ensure that all coordinates are valid and within
    world boundaries to avoid unexpected behavior.
  warnings: Using invalid or out-of-bounds coordinates may cause undefined behavior
    or client-side errors. Do not call this method from within a movement handler
    without proper synchronization, as it can lead to stack overflows or motion conflicts.
  related:
  - MoveTo
  - MoveCharge
  - MoveFall
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:35:06.495653'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
