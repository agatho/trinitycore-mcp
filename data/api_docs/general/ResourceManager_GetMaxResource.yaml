api:
  class: ResourceManager
  method: GetMaxResource
  signature: uint32 ResourceManager::GetMaxResource(ResourceType type)
documentation:
  brief: Retrieves the maximum resource value for a specified resource type.
  description: The GetMaxResource method returns the maximum allowable value for a
    given resource type, such as health, mana, or rage. This value is typically used
    to determine the upper bound of a player's or creature's resource pool. The method
    takes a ResourceType enum parameter that specifies which resource type's maximum
    value should be retrieved. This functionality is essential for calculating resource
    percentages, displaying UI elements, and enforcing resource limits within the
    game mechanics.
  parameters: []
  returns: Returns a uint32 representing the maximum value allowed for the specified
    resource type. If an invalid resource type is provided, the method may return
    0 or an undefined value depending on implementation.
  examples:
  - title: Retrieve Maximum Health Value
    code: 'uint32 maxHealth = resourceManager->GetMaxResource(ResourceType::HEALTH);

      // Returns the maximum health value for the current unit'
    language: cpp
  - title: Calculate Resource Percentage
    code: 'uint32 currentMana = unit->GetPower(POWER_MANA);

      uint32 maxMana = resourceManager->GetMaxResource(ResourceType::MANA);

      float manaPercentage = (currentMana / static_cast<float>(maxMana)) * 100.0f;

      // Calculates the percentage of maximum mana remaining'
    language: cpp
  notes: This method likely accesses internal resource configuration data or database
    values to determine maximum resource limits. It may be called frequently during
    gameplay, so performance considerations should be taken into account for high-frequency
    operations.
  warnings: Ensure that the ResourceType parameter is valid before calling this method,
    as invalid types might cause undefined behavior or return incorrect values. This
    method should not be used in performance-critical code paths without proper caching.
  related:
  - GetResource
  - SetMaxResource
  - GetResourceType
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:18:44.015040'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
