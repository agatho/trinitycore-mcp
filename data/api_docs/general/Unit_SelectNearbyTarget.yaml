api:
  class: Unit
  method: SelectNearbyTarget
  signature: Unit * Unit::SelectNearbyTarget(Unit * exclude, float dist) const
documentation:
  brief: Selects a nearby target unit within specified distance, excluding a given
    unit.
  description: The SelectNearbyTarget method retrieves a target unit that is within
    a defined distance from the current unit, while excluding a specific unit from
    the selection. This method is commonly used in AI behavior for selecting targets
    for attacks or spells, particularly when the unit needs to avoid targeting a specific
    enemy. The method operates under the assumption that the unit's current position
    and orientation are relevant for determining proximity, and it typically returns
    the first valid target found within the specified range. It may return nullptr
    if no suitable targets exist within the distance range.
  parameters:
  - name: exclude
    description: The Unit to exclude from selection, typically representing an enemy
      or specific target that should not be chosen as a target.
  - name: dist
    description: The maximum distance within which to search for a target unit. This
      parameter defines the range of proximity for target selection.
  returns: Returns a pointer to a Unit that is within the specified distance and not
    excluded, or nullptr if no such unit exists within the range.
  examples:
  - title: Basic usage example
    code: "Unit *target = this->SelectNearbyTarget(nullptr, 10.0f);\nif (target !=\
      \ nullptr)\n{\n    // Proceed with attack or spell\n}"
    language: cpp
  - title: Advanced usage with exclusion
    code: "Unit *target = this->SelectNearbyTarget(Enemy, 25.0f);\nif (target != nullptr)\n\
      {\n    // Use target for attack\n    // Target is not Enemy\n}"
    language: cpp
  notes: This method relies on the unit's current position and orientation to determine
    proximity. It may be affected by terrain or other game mechanics that influence
    target selection. Performance considerations include distance calculations and
    potential multiple iterations if many targets are present in range.
  warnings: The method may return nullptr if no valid targets exist within the specified
    distance, which can lead to null pointer dereferences if not handled properly.
    Be cautious when using this method in AI logic where target selection is critical
    for behavior.
  related:
  - Unit::GetVictim
  - Unit::GetTarget
  - Unit::SelectHostileTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T08:30:15.638739'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
