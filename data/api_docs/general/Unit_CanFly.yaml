api:
  class: Unit
  method: CanFly
  signature: bool Unit::CanFly() const
documentation:
  brief: Determines whether the unit can fly in the game world.
  description: The CanFly method checks if a unit is capable of flying, which is essential
    for determining movement capabilities in World of Warcraft. This method evaluates
    the unit's current state and any applicable modifiers that might affect flight
    ability. It returns true when the unit has the capability to fly, such as when
    it possesses a flight spell or is in a state where flying is allowed. The method
    is commonly used in movement logic and AI behavior calculations for determining
    whether a unit can perform aerial actions.
  parameters: []
  returns: Returns true if the unit can fly, false otherwise. This indicates whether
    the unit has the ability to fly based on its current state and modifiers.
  examples:
  - title: Basic usage example
    code: "if (unit->CanFly()) {\n    // Unit can fly\n    // Perform flight-related\
      \ actions\n}"
    language: cpp
  - title: In AI behavior context
    code: "bool canFly = unit->CanFly();\nif (canFly) {\n    // Unit is capable of\
      \ flying, use in pathfinding logic\n}\nelse {\n    // Unit cannot fly, use alternative\
      \ movement methods\n}"
    language: cpp
  notes: This method typically checks against the unit's current state and any active
    spell effects that might enable or disable flight capabilities. Performance considerations
    include checking for active flight spells or modifiers rather than performing
    expensive calculations.
  warnings: Be aware that this method may return false even if a unit has a flight
    spell active, as it depends on the unit's current state and any restrictions that
    might apply to flying behavior in certain situations.
  related:
  - Unit::CanMove
  - Unit::CanSwim
  - Unit::HasAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:43:57.836284'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
