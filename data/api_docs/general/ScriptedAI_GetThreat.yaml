api:
  class: ScriptedAI
  method: GetThreat
  signature: float ScriptedAI::GetThreat(const int * victim, const int * who)
documentation:
  brief: Retrieves the threat value of a specified unit from the AI's threat list.
  description: The GetThreat method returns the current threat level that the AI has
    toward a specific target. This value represents how much aggro the AI currently
    holds on the given unit, which is used internally by the game engine to determine
    targeting behavior and combat priority. The method takes two optional integer
    pointers as parameters, likely representing the victim and the attacker units
    in the threat calculation. It's commonly used within scripted AI behaviors to
    make decisions based on current threat levels.
  parameters:
  - name: victim
    description: Pointer to an integer representing the target unit for which threat
      is being queried. May be nullptr if no specific victim is provided.
  - name: who
    description: Pointer to an integer representing the unit whose threat level is
      being checked. May be nullptr if no specific attacker is provided.
  returns: A float value indicating the current threat level for the specified target.
    Returns 0.0f if either parameter is invalid or if no threat data exists for the
    given units.
  examples:
  - title: Basic Threat Retrieval
    code: "float threat = me->GetThreat(&victimGuid, &attackerGuid);\nif (threat >\
      \ 100.0f)\n{\n    // Perform action when high threat is detected\n}"
    language: cpp
  - title: Using GetThreat in Combat Decision Making
    code: "Unit* target = me->GetVictim();\nif (target)\n{\n    float threat = me->GetThreat(&target->GetGUID(),\
      \ nullptr);\n    if (threat > 500.0f && me->GetHealthPct() < 30.0f)\n    {\n\
      \        // Flee or cast defensive spell when threat is high and health is low\n\
      \        DoFlee();\n    }\n}"
    language: cpp
  notes: This method is part of the ScriptedAI framework used in TrinityCore for creating
    custom AI behaviors. The threat system is fundamental to WoW's combat mechanics,
    determining which units will be targeted by enemies and how aggro is distributed
    among multiple attackers.
  warnings: Ensure that the GUIDs passed to this method are valid and correspond to
    existing units in the current instance, otherwise the method may return unexpected
    results or cause undefined behavior. The parameters should not be dereferenced
    directly without proper null checks.
  related:
  - AddThreat
  - ModifyThreat
  - GetVictim
  - SetVictim
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:44:10.948760'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
