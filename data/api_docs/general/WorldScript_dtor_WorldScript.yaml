api:
  class: WorldScript
  method: ~WorldScript
  signature: void WorldScript::~WorldScript()
documentation:
  brief: Destroys a WorldScript instance and performs necessary cleanup operations.
  description: The destructor for the WorldScript class is responsible for cleaning
    up any resources allocated during the lifetime of the script instance. As a base
    class for world-related scripting functionality in TrinityCore, this destructor
    ensures proper memory management and prevents resource leaks when script instances
    are removed from memory. It is automatically invoked when a WorldScript object
    goes out of scope or is explicitly deleted. The destructor does not perform any
    specific actions beyond standard cleanup, as the base class typically does not
    hold complex resources that require special handling.
  parameters: []
  returns: void
  examples:
  - title: Default Destructor Usage
    code: 'WorldScript* script = new WorldScript();

      // ... perform operations ...

      delete script; // Triggers ~WorldScript() destructor'
    language: cpp
  notes: This is a virtual destructor, meaning it can be properly called on base class
    pointers to derived class objects. The destructor is part of the standard C++
    object lifecycle and should not be overridden unless custom cleanup logic is required
    in derived classes.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:50:14.931409'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
