api:
  class: WorldObject
  method: WorldObject
  signature: void WorldObject::WorldObject(bool isWorldObject)
documentation:
  brief: Sets the world object flag for the object instance
  description: This method is used to configure whether an object instance is recognized
    as a WorldObject within the TrinityCore framework. It typically involves setting
    internal flags or properties that determine how the object interacts with world
    systems and game mechanics. The method is part of the core object initialization
    process and affects the object's behavior in world contexts.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'WorldObject* obj = new WorldObject();

      obj->WorldObject(true);'
    language: cpp
  notes: This method is typically used internally during object construction or initialization.
    It may affect how the object is handled by the game world system, including collision
    detection and interaction with other objects.
  warnings: Improper use of this method can lead to incorrect behavior in world interactions
    and may cause issues with object visibility or collision detection.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T02:55:04.452556'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
