api:
  class: Unit
  method: UpdateStatBuffModForClient
  signature: void Unit::UpdateStatBuffModForClient(int stat)
documentation:
  brief: Updates the specified stat buff modifier for the client display
  description: The UpdateStatBuffModForClient method is responsible for synchronizing
    stat buff modifications from the server to the client interface. This method ensures
    that any changes to a unit's statistical modifiers, such as strength, agility,
    or intellect buffs, are properly communicated to the player's client for visual
    representation. It typically gets invoked when stat modifications occur due to
    spells, items, or other game effects that alter a character's base attributes.
    The method operates on a per-stat basis, allowing targeted updates rather than
    full stat recalculations.
  parameters:
  - name: stat
    description: The specific stat index to update. This parameter corresponds to
      the internal stat enumeration used by TrinityCore, typically representing indices
      like STAT_STRENGTH, STAT_AGILITY, STAT_STAMINA, etc.
  returns: null
  examples:
  - title: Updating Strength Stat Buff
    code: 'Unit* player = ...;

      player->UpdateStatBuffModForClient(STAT_STRENGTH);'
    language: cpp
  - title: Updating All Stats After Buff Application
    code: "Unit* player = ...;\nfor (int i = 0; i < MAX_STATS; ++i)\n{\n    player->UpdateStatBuffModForClient(i);\n\
      }"
    language: cpp
  notes: This method is primarily used internally by the TrinityCore framework to
    maintain synchronization between server-side stat calculations and client-side
    visual representation. It's usually called automatically when stat modifiers change,
    but can also be invoked manually in special circumstances. The method does not
    perform any calculation itself; it simply notifies the client of existing stat
    modifications.
  warnings: This method should only be called on units that have a valid client connection.
    Calling this method on units without active players (such as creatures or game
    objects) may result in undefined behavior or no effect. Additionally, frequent
    calls to this method can cause unnecessary network traffic if not properly batched.
  related:
  - UpdateStatBuffMod
  - SetStatBuffMod
  - GetStatBuffMod
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:15:35.460254'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
