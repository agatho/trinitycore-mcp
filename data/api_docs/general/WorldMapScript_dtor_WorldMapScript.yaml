api:
  class: WorldMapScript
  method: ~WorldMapScript
  signature: void WorldMapScript::~WorldMapScript()
documentation:
  brief: Destroys a WorldMapScript instance and releases its resources
  description: The destructor for the WorldMapScript class is responsible for cleaning
    up any resources allocated during the object's lifetime. This method is automatically
    invoked when a WorldMapScript instance goes out of scope or is explicitly deleted.
    In the context of TrinityCore's WorldMapScript system, this typically involves
    releasing memory associated with map-specific scripts and ensuring proper cleanup
    of any internal data structures. The destructor ensures that no memory leaks occur
    when map scripts are removed from memory, which is crucial for maintaining server
    stability during map transitions or server shutdowns.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of WorldMapScript
    code: "void SomeFunction()\n{\n    WorldMapScript* script = new WorldMapScript();\n\
      \    // ... use the script ...\n    delete script; // Destructor called here\n\
      }"
    language: cpp
  notes: The destructor is implicitly virtual in the base class, ensuring proper cleanup
    of derived class instances. Developers should not manually invoke this destructor
    unless explicitly managing object lifetime through custom deletion patterns.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:50:30.795671'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
