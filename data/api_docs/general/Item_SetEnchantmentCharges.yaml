api:
  class: Item
  method: SetEnchantmentCharges
  signature: void Item::SetEnchantmentCharges(EnchantmentSlot slot, uint32 charges)
documentation:
  brief: Sets the charges for an enchantment on an item.
  description: This method configures the charge count for a specific enchantment
    slot on an item. It allows developers to control how many times an enchantment
    can be used before it expires. The method is typically used in conjunction with
    other enchantment-related functions to manage item properties and gameplay mechanics.
    This function is essential for implementing custom enchantment systems or modifying
    existing enchantment behavior within the TrinityCore framework.
  parameters:
  - name: slot
    description: The enchantment slot to modify, typically representing a specific
      enchantment type (e.g., EnchantmentSlot::ENCHANT_SLOT_0, EnchantmentSlot::ENCHANT_SLOT_1,
      etc.).
  - name: charges
    description: The number of charges to set for the specified enchantment slot.
      This value determines how many times the enchantment can be used before it expires.
  returns: null
  examples:
  - title: Setting Enchantment Charges
    code: 'Item* item = new Item();

      item->SetEnchantmentCharges(EnchantmentSlot::ENCHANT_SLOT_0, 5);

      // Sets the first enchantment slot to have 5 charges'
    language: cpp
  notes: This method directly affects the item's enchantment state and should be used
    carefully when modifying item properties. It may require synchronization with
    other methods that handle enchantment management, particularly in multi-threaded
    environments.
  warnings: Improper use of this method can lead to incorrect enchantment behavior
    or item corruption. Care must be taken when setting charges to ensure they match
    the intended gameplay mechanics and do not cause unexpected behavior.
  related:
  - Item::GetEnchantmentCharges
  - Item::SetEnchantmentSlot
  - Item::AddEnchantment
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:34:47.391896'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
