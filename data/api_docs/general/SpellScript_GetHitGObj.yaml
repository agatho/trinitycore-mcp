api:
  class: SpellScript
  method: GetHitGObj
  signature: GameObject * SpellScript::GetHitGObj() const
documentation:
  brief: Returns the game object that was hit by the spell.
  description: The GetHitGObj method retrieves a pointer to the GameObject that was
    struck by the spell during execution. This method is typically used within SpellScript
    implementations to access information about the specific game object target that
    the spell affected. The returned GameObject pointer can be used to inspect or
    modify properties of the targeted object, such as its health, position, or state.
    It's important to note that this method should only be called during the appropriate
    spell execution phase when the hit target has been determined and is valid.
  parameters: []
  returns: A pointer to the GameObject that was hit by the spell, or nullptr if no
    game object was hit or if called outside of a valid execution context.
  examples:
  - title: Basic usage in SpellScript
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\n\
      \    {\n        GameObject* go = GetHitGObj();\n        if (go)\n        {\n\
      \            // Perform actions on the hit game object\n            go->SetGoState(GO_STATE_ACTIVE);\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method is part of the SpellScript API and should only be called during
    spell execution phases where the hit target has been established. The returned
    GameObject pointer is valid only for the duration of the current spell effect
    processing.
  warnings: Calling this method outside of a spell's execution context or after the
    spell has completed may result in accessing invalid memory. Always check if the
    returned pointer is not null before using it to prevent segmentation faults.
  related:
  - GetHitUnit
  - GetHitDest
  - GetHitSpell
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:55:55.054363'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
