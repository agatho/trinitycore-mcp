api:
  class: AuraEffect
  method: HandleAuraModFixate
  signature: void AuraEffect::HandleAuraModFixate(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes the fixate aura effect on a target.
  description: The HandleAuraModFixate method manages the application and removal
    of the fixate aura effect, which forces a target to focus its attention and movement
    on a specific source. This effect is commonly used in World of Warcraft to control
    enemy behavior, ensuring they remain engaged with a particular unit. The method
    operates based on the AuraApplication context and the specified mode (apply or
    remove) to modify the target's state accordingly. It typically involves updating
    the target's threat table and preventing movement away from the fixated source.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter defines which aura effect
      is being handled and provides context for the operation.
  - name: mode
    description: The mode of operation, indicating whether the aura is being applied
      (1) or removed (0). This value controls the behavior of the method to either
      activate or deactivate the fixate effect on the target.
  - name: apply
    description: Boolean flag that determines if the aura should be applied (true)
      or removed (false). This parameter works in conjunction with the mode parameter
      to control the exact behavior of the aura effect.
  returns: null
  examples:
  - title: Applying a Fixate Aura
    code: 'AuraApplication* app = new AuraApplication();

      HandleAuraModFixate(app, 1, true);

      // Applies the fixate aura to the target'
    language: cpp
  - title: Removing a Fixate Aura
    code: 'AuraApplication* app = GetAuraApplication();

      HandleAuraModFixate(app, 0, false);

      // Removes the fixate aura from the target'
    language: cpp
  notes: This method is typically invoked internally by the TrinityCore aura system
    when applying or removing a fixate effect. Developers should ensure that the AuraApplication
    object passed to this method is valid and properly initialized before calling
    the function.
  warnings: Improper handling of the AuraApplication pointer may lead to undefined
    behavior or crashes. Ensure that all parameters are validated before passing them
    to this method.
  related:
  - AuraEffect::HandleAuraModStun
  - AuraEffect::HandleAuraModRoot
  - AuraEffect::HandleAuraModThreat
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:22:30.943444'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
