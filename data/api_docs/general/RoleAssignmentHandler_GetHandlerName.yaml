api:
  class: RoleAssignmentHandler
  method: GetHandlerName
  signature: std::string RoleAssignmentHandler::GetHandlerName() const
documentation:
  brief: Returns the name of the role assignment handler.
  description: The GetHandlerName method retrieves the string identifier associated
    with a RoleAssignmentHandler instance. This identifier is typically used to uniquely
    identify different types of role assignment handlers within the TrinityCore framework,
    particularly in systems that manage player roles, permissions, or group assignments.
    The returned name can be used for logging, debugging, or routing specific role
    assignment logic based on handler type.
  parameters: []
  returns: A std::string containing the unique name identifier of the RoleAssignmentHandler
    instance.
  examples:
  - title: Basic Usage
    code: 'RoleAssignmentHandler* handler = new PlayerRoleAssignmentHandler();

      std::string name = handler->GetHandlerName();

      // name would contain something like "PlayerRoleAssignmentHandler"

      '
    language: cpp
  - title: Logging Handler Name
    code: "void LogHandlerInfo(RoleAssignmentHandler* handler) {\n    std::string\
      \ handlerName = handler->GetHandlerName();\n    sLog->outString(\"Active role\
      \ assignment handler: %s\", handlerName.c_str());\n}\n"
    language: cpp
  notes: This method is typically called during system initialization or when debugging
    role assignment logic. The returned string should be treated as read-only and
    not modified by the caller.
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:05:16.410212'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
