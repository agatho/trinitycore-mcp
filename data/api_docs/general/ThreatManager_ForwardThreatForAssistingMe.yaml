api:
  class: ThreatManager
  method: ForwardThreatForAssistingMe
  signature: void ThreatManager::ForwardThreatForAssistingMe(Unit * assistant, float
    baseAmount, const SpellInfo * spell, bool ignoreModifiers)
documentation:
  brief: Forwards threat from an assisting unit to the ThreatManager's owner, optionally
    applying spell modifiers.
  description: The ForwardThreatForAssistingMe method is used in TrinityCore's AI
    system to propagate threat generated by an assisting unit (such as a pet or minion)
    back to the primary unit that owns the ThreatManager. This ensures that the threat
    distribution logic correctly accounts for contributions from allied units. The
    method accepts a base amount of threat and applies optional spell modifiers based
    on the provided SpellInfo. It is typically invoked during combat when a unit assists
    another in generating aggro, such as when a pet attacks an enemy while its owner
    is engaged in combat.
  parameters:
  - name: assistant
    description: Pointer to the Unit that is assisting and contributing threat. Must
      not be null.
  - name: baseAmount
    description: The base amount of threat to forward. Should be a positive float
      value representing the initial threat contribution.
  - name: spell
    description: Pointer to the SpellInfo that defines modifiers to apply to the threat.
      Can be null, in which case no spell-specific modifications are applied.
  - name: ignoreModifiers
    description: If true, any spell-based threat modifiers from the provided SpellInfo
      will be ignored. If false, modifiers may be applied depending on the spell and
      context.
  returns: null
  examples:
  - title: Basic usage with a pet assisting in combat
    code: 'Unit* pet = ...; // Assume this is a valid pet

      float threatAmount = 100.0f;

      SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345); // Example spell ID

      threatManager->ForwardThreatForAssistingMe(pet, threatAmount, spellInfo, false);'
    language: cpp
  - title: Ignoring spell modifiers when forwarding threat
    code: 'Unit* minion = ...; // Assume this is a valid minion

      float baseThreat = 50.0f;

      threatManager->ForwardThreatForAssistingMe(minion, baseThreat, nullptr, true);'
    language: cpp
  notes: This method is part of the internal threat management system in TrinityCore
    and is usually called by AI scripts or combat handlers. It's important to ensure
    that the assistant unit is valid and in a combat state for meaningful threat propagation.
  warnings: Passing a null assistant pointer will likely cause undefined behavior
    or crashes. Always verify that the Unit pointer is valid before calling this method.
  related:
  - AddThreat
  - GetThreat
  - ModifyThreatByPercent
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:45:06.836580'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
