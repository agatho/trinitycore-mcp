api:
  class: Unit
  method: HasScheduledAIChange
  signature: bool Unit::HasScheduledAIChange() const
documentation:
  brief: Determines whether the unit has a scheduled AI change.
  description: This method checks if the unit object has an AI change scheduled, which
    typically occurs when the unit's AI behavior is set to change at a specific time
    or event. The method returns true if there is a scheduled AI change pending, false
    otherwise. This functionality is commonly used in World of Warcraft's TrinityCore
    framework to manage NPC behavior transitions and ensure proper execution of AI
    scripts. It is particularly useful for detecting when an AI change might be triggered
    by events such as combat, movement, or other game mechanics.
  parameters: []
  returns: Returns true if the unit has a scheduled AI change pending, false otherwise.
    This indicates that the unit's AI behavior will change at some point in the future
    based on internal scheduling mechanisms.
  examples:
  - title: Basic usage example
    code: "if (unit->HasScheduledAIChange())\n{\n    // Handle scheduled AI change\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other AI-related methods
    to track and manage unit behavior changes. It may be called during AI update cycles
    or when checking for pending events that could trigger an AI change.
  warnings: This method should not be used as a direct replacement for checking if
    an AI change has occurred, as it only indicates scheduling, not execution. Care
    must be taken to ensure proper timing of AI changes in relation to other event
    triggers.
  related:
  - Unit::SetScheduledAIChange
  - Unit::GetAIChange
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:06:32.090121'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
