api:
  class: Unit
  method: CountPctFromMaxPower
  signature: int32 Unit::CountPctFromMaxPower(int power, int32 pct) const
documentation:
  brief: Calculates a percentage of the unit's maximum power value.
  description: This method computes a specified percentage of the unit's maximum power
    value and returns the result as an integer. It is commonly used in World of Warcraft
    scripting to determine power values such as mana, rage, or energy based on percentage
    calculations. The method takes into account the unit's current maximum power and
    applies the given percentage to it, returning a value that represents the calculated
    portion of the maximum power. This functionality is essential for various game
    mechanics including spell effects, ability calculations, and resource management.
  parameters:
  - name: power
    description: The power type to calculate the percentage from (e.g., mana, rage,
      energy). This parameter typically represents the unit's maximum power value.
  - name: pct
    description: The percentage value to apply to the maximum power. This is usually
      a positive integer representing the percentage of the maximum power to calculate.
  returns: Returns an integer value representing the calculated percentage of the
    unit's maximum power. The result can be zero or a positive integer depending on
    the input values, and may be used in various game calculations such as spell effects
    or resource management.
  examples:
  - title: Basic usage example
    code: int32 manaPct = unit->CountPctFromMaxPower(0, 50); // Calculates 50% of
      maximum mana
    language: cpp
  - title: Advanced usage example
    code: int32 energyPct = unit->CountPctFromMaxPower(1, 75); // Calculates 75% of
      maximum energy
    language: cpp
  notes: This method is typically used in conjunction with other power-related methods
    to calculate dynamic values based on percentage. It's important to note that the
    method returns integer values and may not account for floating point precision
    in some cases.
  warnings: Be cautious when using this method with negative percentages, as it may
    result in unexpected behavior or zero values depending on how the system handles
    negative inputs.
  related:
  - Unit::GetMaxPower
  - Unit::GetPower
  - Unit::CountPctFromMaxHealth
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T21:15:01.019867'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
