api:
  class: ThreatManager
  method: PurgeThreatenedByMeRef
  signature: void ThreatManager::PurgeThreatenedByMeRef(const int & guid)
documentation:
  brief: Removes all threat entries from the threat manager that were generated by
    the specified GUID.
  description: The PurgeThreatenedByMeRef method clears all threat references in the
    ThreatManager that originated from a specific entity identified by its GUID. This
    is typically used when an NPC or creature is no longer threatening a target, such
    as when it dies, becomes neutral, or is removed from combat. The method ensures
    that the threat list does not contain stale or invalid entries that could affect
    AI behavior or combat mechanics. It operates on the internal data structures of
    the ThreatManager to maintain accurate threat tracking for the current combat
    state.
  parameters:
  - name: guid
    description: The global unique identifier (GUID) of the entity whose threat references
      should be purged from the threat manager.
  returns: null
  examples:
  - title: Purge threat entries for a dead NPC
    code: "void OnDeath(Unit* unit)\n{\n    if (unit->GetTypeId() == TYPEID_UNIT)\n\
      \    {\n        ThreatManager* threatMgr = unit->GetThreatManager();\n     \
      \   threatMgr->PurgeThreatenedByMeRef(unit->GetGUID().GetCounter());\n    }\n\
      }"
    language: cpp
  notes: This method is typically called internally by the core AI system when entities
    leave combat or are destroyed. It's important to ensure that the GUID passed corresponds
    to a valid entity in the current world state, otherwise the operation may have
    no effect.
  warnings: null
  related:
  - AddThreat
  - GetThreat
  - UpdateThreat
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:25:07.620112'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
