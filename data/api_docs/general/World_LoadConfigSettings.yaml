api:
  class: World
  method: LoadConfigSettings
  signature: void World::LoadConfigSettings(bool reload)
documentation:
  brief: Loads and initializes core configuration settings for the World object.
  description: The LoadConfigSettings method is responsible for loading all essential
    configuration parameters from the TrinityCore configuration files (such as worldserver.conf)
    into the World class instance. This method ensures that the server's operational
    parameters, including network settings, game rules, and system behaviors, are
    properly initialized at startup or during a reload operation. It typically reads
    values such as maximum player count, auction house fees, experience multipliers,
    and other critical server settings that affect gameplay mechanics.
  parameters:
  - name: reload
    description: When set to true, indicates that the configuration is being reloaded
      during runtime rather than at initial startup. This allows for dynamic updates
      without requiring a full server restart.
  returns: null
  examples:
  - title: Basic usage during server initialization
    code: 'World* world = World::instance();

      world->LoadConfigSettings(false);'
    language: cpp
  - title: Reloading configuration at runtime
    code: 'World* world = World::instance();

      world->LoadConfigSettings(true);'
    language: cpp
  notes: This method should only be called once during server initialization or when
    explicitly reloading the configuration. It is typically invoked by the core server
    startup process and should not be called manually unless necessary for dynamic
    configuration updates.
  warnings: null
  related:
  - ReloadConfig
  - GetConfigIntDefault
  - GetConfigBoolDefault
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:32:11.983356'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
