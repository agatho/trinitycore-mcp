api:
  class: BotLifecycleMgr
  method: GetUpdateIntervalMs
  signature: uint32 BotLifecycleMgr::GetUpdateIntervalMs() const
documentation:
  brief: Returns the update interval in milliseconds used by the bot lifecycle manager
    for periodic operations.
  description: The GetUpdateIntervalMs method retrieves the configured time interval,
    in milliseconds, that the BotLifecycleMgr uses to perform periodic updates and
    management tasks for bot entities. This interval determines how frequently the
    system checks on bot status, processes AI behaviors, or performs other maintenance
    operations. The value is typically loaded from configuration settings and may
    be adjusted dynamically during runtime. This method is essential for understanding
    timing behavior of bot lifecycle management within the TrinityCore framework.
  parameters: []
  returns: A uint32 value representing the update interval in milliseconds. This value
    indicates how often the bot lifecycle manager performs its periodic tasks, with
    typical values ranging from a few hundred milliseconds to several seconds depending
    on configuration.
  examples:
  - title: Retrieve and Log Update Interval
    code: 'uint32 interval = sBotLifecycleMgr->GetUpdateIntervalMs();

      TC_LOG_INFO(LOG_FILTER_BOTS, "Bot lifecycle update interval: %u ms", interval);'
    language: cpp
  - title: Use Interval in Custom Timer Logic
    code: "uint32 interval = sBotLifecycleMgr->GetUpdateIntervalMs();\nif (WorldTimer::getMSTime()\
      \ - lastUpdate >= interval)\n{\n    // Perform bot lifecycle update\n    sBotLifecycleMgr->UpdateBots();\n\
      \    lastUpdate = WorldTimer::getMSTime();\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. The
    returned value should not be modified directly as it's typically read-only configuration
    data. The interval may be cached internally, so changes to the underlying configuration
    might not immediately reflect in subsequent calls.
  warnings: Do not assume this interval represents exact timing guarantees for bot
    updates. The actual execution timing depends on the game loop and other system
    constraints. This value should not be used as a basis for precise timing calculations
    requiring high accuracy.
  related:
  - SetUpdateIntervalMs
  - GetBotCount
  - UpdateBots
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T01:49:21.364760'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
