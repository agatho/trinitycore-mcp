api:
  class: ScriptedAI
  method: IsHeroicOrHigher
  signature: bool ScriptedAI::IsHeroicOrHigher() const
documentation:
  brief: Determines whether the current encounter is running in heroic or higher difficulty.
  description: The IsHeroicOrHigher method checks if the current instance or encounter
    is operating at heroic difficulty or above. This is commonly used in scripted
    AI behaviors to adjust mob abilities, health, damage, or other mechanics based
    on the difficulty level. The method typically relies on the instance's difficulty
    settings and returns true for heroic, mythic, and any higher difficulty modes,
    while returning false for normal and heroic difficulties. It is particularly useful
    for creating dynamic content that adapts to player choices in raid encounters.
  parameters: []
  returns: Returns true if the current encounter is running in heroic or higher difficulty
    (including mythic and other higher modes), and false otherwise.
  examples:
  - title: Basic usage in AI behavior
    code: "class MyBossAI : public ScriptedAI\n{\npublic:\n    void JustEngagedWith(Unit*\
      \ who) override\n    {\n        if (IsHeroicOrHigher())\n        {\n       \
      \     // Apply enhanced abilities for heroic mode\n            DoCast(me, SPELL_ENHANCED_ABILITY);\n\
      \        }\n        else\n        {\n            // Normal difficulty behavior\n\
      \            DoCast(me, SPELL_NORMAL_ABILITY);\n        }\n    }\n};"
    language: cpp
  - title: Using in damage scaling logic
    code: "void MyBossAI::CalculateDamage(Unit* target)\n{\n    if (IsHeroicOrHigher())\n\
      \    {\n        // Increase damage multiplier for heroic and higher\n      \
      \  float damageMultiplier = 1.5f;\n        // Apply scaled damage logic\n  \
      \  }\n    else\n    {\n        // Normal damage scaling\n        float damageMultiplier\
      \ = 1.0f;\n    }\n}"
    language: cpp
  notes: This method typically accesses the instance difficulty through the associated
    map or instance data. It's important to note that this check is usually performed
    at runtime when the encounter begins, and the result remains constant throughout
    the fight unless the difficulty changes mid-combat (which is rare in most TrinityCore
    implementations).
  warnings: Be aware that this method may not behave as expected if used outside of
    an actual instance context or if the difficulty hasn't been properly initialized.
    Also, some legacy code might not distinguish between heroic and mythic difficulties,
    so ensure compatibility with your specific TrinityCore version.
  related:
  - IsNormalMode
  - IsHeroicMode
  - GetDifficulty
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:42:20.580256'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
