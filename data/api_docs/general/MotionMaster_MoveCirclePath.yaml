api:
  class: MotionMaster
  method: MoveCirclePath
  signature: void MotionMaster::MoveCirclePath(float x, float y, float z, float radius,
    bool clockwise, uint8 stepCount, int duration, int speed, MovementWalkRunSpeedSelectionMode
    speedSelectionMode, int param9)
documentation:
  brief: Initiates a circular movement path for a creature or unit around a specified
    center point.
  description: The MoveCirclePath method schedules a unit to move in a circular trajectory
    around a given center position. It allows control over the radius of the circle,
    direction (clockwise or counter-clockwise), number of steps to complete the circle,
    and duration/speed settings. This is commonly used for AI behaviors such as patrolling
    in circles, casting spells with circular AoE effects, or creating visual movement
    patterns for NPCs. The method integrates with the MotionMaster's movement queue
    and will override any existing movement unless explicitly managed.
  parameters:
  - name: x
    description: The X coordinate of the center point around which the unit will move
      in a circle.
  - name: y
    description: The Y coordinate of the center point around which the unit will move
      in a circle.
  - name: z
    description: The Z coordinate of the center point around which the unit will move
      in a circle.
  - name: radius
    description: The radius of the circular path in world units. Must be positive.
  - name: clockwise
    description: If true, the movement follows a clockwise direction; otherwise counter-clockwise.
  - name: stepCount
    description: Number of discrete steps to take to complete one full circle. Higher
      values result in smoother motion.
  - name: duration
    description: Total duration (in milliseconds) for completing the circular path.
      If -1, uses default behavior based on speed and radius.
  - name: speed
    description: Movement speed multiplier or fixed speed value depending on speedSelectionMode.
      Negative values may be interpreted as reverse direction or invalid.
  - name: speedSelectionMode
    description: 'Defines how the speed parameter is interpreted: 0 for absolute speed,
      1 for relative speed, etc. Values depend on internal implementation.'
  - name: param9
    description: Reserved or unused parameter; may be used for future extensions or
      specific movement modes.
  returns: null
  examples:
  - title: Basic Circular Movement
    code: motionMaster->MoveCirclePath(100.0f, 200.0f, 50.0f, 10.0f, true, 8, 5000,
      1.0f, 0, 0);
    language: cpp
  - title: Counter-Clockwise Circular Path with Custom Speed
    code: motionMaster->MoveCirclePath(0.0f, 0.0f, 0.0f, 15.0f, false, 12, -1, 2.0f,
      1, 0);
    language: cpp
  notes: This method does not immediately start movement; it queues the motion for
    execution during the next update cycle. The actual path calculation is performed
    using trigonometric functions to determine intermediate waypoints. For performance
    reasons, avoid very high step counts or frequent calls in tight loops.
  warnings: Using a radius of zero or negative values may lead to undefined behavior.
    Ensure that the center point coordinates are valid and within bounds of the current
    map. If duration is set to -1 but speed is not properly configured, movement might
    not complete as expected.
  related:
  - MoveTo
  - MoveFollow
  - MoveChase
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:39:19.335118'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
