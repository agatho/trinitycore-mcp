api:
  class: SpellInfo
  method: operator=
  signature: SpellInfo & SpellInfo::operator=(SpellInfo && param0)
documentation:
  brief: Moves a SpellInfo object to another SpellInfo object, transferring ownership
    of its data.
  description: The operator= method in SpellInfo performs move assignment, transferring
    all data from one SpellInfo object to another. This operation is typically used
    when moving resources between objects to avoid unnecessary copying. The method
    efficiently handles the transfer of memory and data, ensuring that the destination
    object receives all properties from the source object while leaving the source
    object in a valid state. In World of Warcraft context, this is particularly relevant
    for managing spell data structures during runtime operations where performance
    optimization is crucial.
  parameters: []
  returns: Returns a reference to the SpellInfo object after the move assignment operation
    has completed, allowing for chaining operations.
  examples:
  - title: Basic Move Assignment Example
    code: 'SpellInfo spell1;

      SpellInfo spell2 = std::move(spell1);

      // spell2 now contains all data from spell1

      '
    language: cpp
  notes: This method is part of the move semantics implementation in C++ and should
    be used carefully to avoid dangling references. It's important to note that after
    a move assignment, the source object may not be in a usable state if it's not
    properly reset.
  warnings: Using this method without proper understanding can lead to undefined behavior
    or memory corruption if the source object is accessed afterward. Always ensure
    that moved-from objects are reset to a valid state.
  related:
  - SpellInfo::SpellInfo
  - SpellInfo::operator=
  - SpellInfo::operator==
  - SpellInfo::operator!=
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:36:43.696557'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
