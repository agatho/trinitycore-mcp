api:
  class: SpellMgr
  method: GetSpellWithRank
  signature: uint32 SpellMgr::GetSpellWithRank(uint32 spell_id, uint32 rank, bool
    strict) const
documentation:
  brief: Returns the spell ID for a given spell and rank, with optional strict mode
    enforcement.
  description: The GetSpellWithRank method retrieves the specific spell ID corresponding
    to a base spell identifier and a desired rank. This is commonly used in World
    of Warcraft spell systems where spells have multiple ranks that are stored as
    separate entries in the database. The method allows for flexible lookup, with
    an optional strict mode that can enforce exact matches or allow fallback behavior.
    When strict mode is enabled, it will only return the exact spell ID matching both
    the base spell and rank. In non-strict mode, it may return a valid spell even
    if the exact rank does not exist, potentially falling back to the highest available
    rank or defaulting to the base spell.
  parameters:
  - name: spell_id
    description: The base spell identifier to look up. This is typically the ID of
      the first rank of a spell in the database.
  - name: rank
    description: The desired rank of the spell to retrieve. Ranks usually start from
      1 and increment for higher tiers of the same spell.
  - name: strict
    description: When true, enforces exact matching of the spell and rank. When false,
      allows fallback behavior if the exact rank is not found.
  returns: Returns the spell ID for the specified base spell and rank. If no valid
    spell is found, it may return 0 or the base spell_id depending on strict mode
    and implementation details.
  examples:
  - title: Basic usage to get a specific rank of a spell
    code: uint32 fireballRank3 = sSpellMgr->GetSpellWithRank(133, 3, true); // Gets
      Fireball Rank 3
    language: cpp
  - title: Using non-strict mode to get the highest available rank
    code: uint32 healingWave = sSpellMgr->GetSpellWithRank(331, 5, false); // Gets
      Healing Wave Rank 5 or fallback
    language: cpp
  notes: This method is typically used in spell handling logic where spell ranks need
    to be resolved dynamically. It's important to understand that spell rank systems
    in TrinityCore are defined in the spell database and may vary between different
    spell types. The method relies on internal spell rank mappings which must be correctly
    configured in the database.
  warnings: Ensure that the provided spell_id exists in the database, otherwise the
    method might return invalid or unexpected results. Using strict mode with non-existent
    ranks can lead to returning 0 or base spell IDs instead of proper error handling.
  related:
  - GetSpellInfo
  - IsSpellRanked
  - GetFirstSpellInChain
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:11:42.730301'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
