api:
  class: Player
  method: ApplyModDamageDoneNeg
  signature: void Player::ApplyModDamageDoneNeg(int school, int32 mod, bool apply)
documentation:
  brief: Applies a negative modifier to damage done for a specific school of magic.
  description: This method modifies the damage dealt by the player for a specified
    magical school, applying a negative adjustment to the damage value. It is commonly
    used in game mechanics to adjust spell damage or weapon damage based on various
    effects such as debuffs, talents, or buffs. The method affects the player's damage
    output in a specific school and can be applied or removed based on the apply parameter.
  parameters:
  - name: school
    description: The magical school to which the modifier applies. Valid values are
      0-6 representing different schools (Physical, Holy, Fire, Nature, Frost, Shadow,
      Arcane).
  - name: mod
    description: The amount of damage reduction to apply. Negative values reduce damage
      output, positive values increase it.
  - name: apply
    description: Whether to apply or remove the modifier. True applies the modifier,
      false removes it.
  returns: null
  examples:
  - title: Apply Negative Damage Modifier
    code: 'Player* player = GetPlayer();

      player->ApplyModDamageDoneNeg(1, -20, true);

      // Applies a -20 damage reduction to Holy school damage'
    language: cpp
  - title: Remove Damage Modifier
    code: 'Player* player = GetPlayer();

      player->ApplyModDamageDoneNeg(3, 10, false);

      // Removes a +10 damage increase from Frost school damage'
    language: cpp
  notes: The method directly modifies the player's damage done values for the specified
    school. It should be used carefully as it affects combat performance and may interact
    with other game mechanics such as spell modifiers or weapon damage calculations.
  warnings: This method should not be used to modify damage done in a way that could
    cause unexpected behavior or imbalance in gameplay. Ensure that the modifier values
    are appropriate for the intended effect.
  related:
  - ApplyModDamageDonePos
  - ApplyModSpellDamageDone
  - ApplyModSpellDamageDonePos
  - ApplyModSpellDamageDoneNeg
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:16:44.698265'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
