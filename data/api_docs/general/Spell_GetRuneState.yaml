api:
  class: Spell
  method: GetRuneState
  signature: uint8 Spell::GetRuneState() const
documentation:
  brief: Returns the current rune state of the spell
  description: This method retrieves the rune state associated with the spell, which
    represents the status of runes required for the spell's execution. In World of
    Warcraft, particularly for Death Knights class abilities, runes are essential
    resources that determine whether a spell can be cast. The returned value indicates
    the current state of all runes involved in the spell, where each bit corresponds
    to a specific rune type (Blood, Unholy, Frost, or Death). This method is crucial
    for determining spell availability and cooldown management.
  parameters: []
  returns: 'Returns a uint8 value representing the rune state. Each bit in the returned
    value corresponds to a different rune type: 0x01 for Blood rune, 0x02 for Unholy
    rune, 0x04 for Frost rune, and 0x08 for Death rune. The value can be interpreted
    as a bitmask where set bits indicate available runes, and unset bits indicate
    unavailable runes.'
  examples:
  - title: Basic usage example
    code: "uint8 runeState = spell->GetRuneState();\nif (runeState & 0x01) {\n   \
      \ // Blood rune is available\n}\nif (runeState & 0x02) {\n    // Unholy rune\
      \ is available\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related methods
    to determine if a spell can be cast. The returned value should be interpreted
    as a bitmask where each bit represents the availability of a specific rune type.
    This method does not modify any state or perform any side effects, making it thread-safe.
  warnings: This method should not be used directly for spell casting logic without
    considering other related methods like GetSpellCooldown or checking if the spell
    is on cooldown. Also, this method may return different values depending on the
    current state of the player's runes, so it should be used carefully in conjunction
    with other rune-related methods.
  related:
  - Spell::GetSpellCooldown
  - Spell::IsSpellOnCooldown
  - Spell::GetRuneCost
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:24:23.540485'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
