api:
  class: Aura
  method: CallScriptEffectRemoveHandlers
  signature: bool Aura::CallScriptEffectRemoveHandlers(const AuraEffect * aurEff,
    const AuraApplication * aurApp, AuraEffectHandleModes mode)
documentation:
  brief: Calls all script handlers registered for removing an aura effect.
  description: The CallScriptEffectRemoveHandlers method invokes all registered script
    handlers associated with the removal of a specific aura effect. This function
    is typically called during the aura application's removal process, allowing scripted
    behavior to execute when an aura is about to be removed from a unit. It takes
    into account the aura effect being removed, its application context, and the handle
    mode to determine which scripts should be executed. The method returns true if
    all handlers executed successfully, or false if any handler failed.
  parameters:
  - name: aurEff
    description: Pointer to the AuraEffect object that is being removed. This represents
      the specific effect component of the aura.
  - name: aurApp
    description: Pointer to the AuraApplication object representing the application
      context of the aura. Contains information about how and where the aura was applied.
  - name: mode
    description: The AuraEffectHandleModes value indicating the mode in which the
      effect is being handled during removal. This determines the behavior and context
      of the script execution.
  returns: Returns true if all registered script handlers for removing the aura effect
    executed successfully, false otherwise.
  examples:
  - title: Basic Usage in Aura Removal Context
    code: "bool result = aura->CallScriptEffectRemoveHandlers(aurEff, aurApp, AURA_EFFECT_HANDLE_REAL);\n\
      if (!result)\n{\n    // Handle script failure\n    sLog->outError(\"Failed to\
      \ execute remove handler for aura effect\");\n}"
    language: cpp
  notes: This method is part of the internal aura management system in TrinityCore.
    It's crucial for maintaining proper scripting behavior when auras are removed
    from units, especially during combat or status changes. The method ensures that
    any custom logic defined in scripts related to aura removal is properly executed.
  warnings: Do not call this method directly unless you are implementing or extending
    core aura handling logic. Improper use can lead to unexpected behavior in aura
    application and removal sequences. Ensure all script handlers registered for the
    effect are properly implemented to avoid silent failures.
  related:
  - CallScriptEffectApplyHandlers
  - CallScriptEffectUpdateHandlers
  - Aura::GetEffect
  - Aura::GetApplication
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:02:04.629517'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
