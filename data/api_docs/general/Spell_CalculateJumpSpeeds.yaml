api:
  class: Spell
  method: CalculateJumpSpeeds
  signature: void Spell::CalculateJumpSpeeds(const SpellEffectInfo * effInfo, float
    dist, float & speedXY, float & speedZ)
documentation:
  brief: Calculates horizontal and vertical speed components for a spell jump effect
    based on distance and effect information.
  description: The CalculateJumpSpeeds method computes the necessary horizontal (XY)
    and vertical (Z) velocity components required to execute a jumping spell effect
    over a specified distance. This method is typically used in spell mechanics where
    an object or player must be launched through the air with realistic physics. It
    takes into account the spell effect parameters, particularly those related to
    jump height and distance, to determine appropriate speed values for movement interpolation
    during the jump animation. The calculated speeds are stored in the provided float
    references and can be used by the spell's execution system to control movement
    trajectory.
  parameters:
  - name: effInfo
    description: Pointer to the SpellEffectInfo structure containing effect-specific
      parameters that influence jump mechanics, such as height, speed modifiers, or
      duration values.
  - name: dist
    description: The horizontal distance (in yards) that the spell effect needs to
      travel during the jump motion. This value determines how far the target should
      move horizontally.
  - name: speedXY
    description: Reference to a float that will be populated with the calculated horizontal
      (X/Y axis) speed component for the jump movement.
  - name: speedZ
    description: Reference to a float that will be populated with the calculated vertical
      (Z axis) speed component for the jump movement.
  returns: null
  examples:
  - title: Basic usage in spell effect processing
    code: "void MySpell::HandleJumpEffect(Unit* target)\n{\n    SpellEffectInfo const*\
      \ effInfo = GetSpellInfo()->GetEffect(0);\n    float distance = 10.0f;\n   \
      \ float speedXY, speedZ;\n    \n    CalculateJumpSpeeds(effInfo, distance, speedXY,\
      \ speedZ);\n    \n    // Apply calculated speeds to target's movement\n    target->SetSpeed(MOVE_RUN,\
      \ speedXY);\n    target->SetSpeed(MOVE_FLIGHT, speedZ);\n}"
    language: cpp
  notes: This method is part of the core spell execution system and should only be
    called during active spell processing. The calculation assumes standard gravitational
    physics and does not account for environmental factors like terrain height or
    obstacles. It's designed to work with spell effects that have jump-related properties
    defined in the spell database.
  warnings: Ensure that effInfo is valid and contains proper jump-related parameters;
    otherwise, incorrect speed values may be calculated. The method modifies the speedXY
    and speedZ references directly, so they must be initialized before calling this
    function.
  related:
  - Spell::CalculateJumpHeight
  - Spell::CalculateJumpDuration
  - Spell::DoSpellEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:01:25.007142'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
