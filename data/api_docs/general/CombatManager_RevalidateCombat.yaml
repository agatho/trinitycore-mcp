api:
  class: CombatManager
  method: RevalidateCombat
  signature: void CombatManager::RevalidateCombat()
documentation:
  brief: Revalidates the current combat state for all involved parties
  description: The RevalidateCombat method ensures that the combat status of all participants
    in the current combat session is up-to-date and consistent with the game's current
    state. This method typically checks for invalid combat states, resolves conflicts
    between different combat triggers, and updates internal combat flags and timers.
    It is commonly invoked when there may be inconsistencies in combat tracking due
    to rapid state changes, network latency, or external events that could disrupt
    normal combat flow.
  parameters: []
  returns: null
  examples:
  - title: Basic Combat Revalidation
    code: 'CombatManager* combatMgr = player->GetCombatManager();

      combatMgr->RevalidateCombat();'
    language: cpp
  notes: This method should be called sparingly as it may trigger multiple internal
    state updates and can impact performance if invoked too frequently during active
    combat. It is typically called automatically by the core system when combat state
    inconsistencies are detected.
  warnings: Calling RevalidateCombat during critical combat operations may cause unexpected
    behavior or temporary combat disruptions. Avoid calling this method in high-frequency
    loops or from time-sensitive event handlers.
  related:
  - StartCombat
  - EndCombat
  - IsInCombat
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T11:47:14.981911'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
