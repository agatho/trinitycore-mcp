api:
  class: InventoryManager
  method: GetBagSpace
  signature: uint32 InventoryManager::GetBagSpace() const
documentation:
  brief: Calculates and returns the total available space in all bags for storing
    items.
  description: The GetBagSpace method computes the cumulative free inventory space
    across all container slots in the player's possession. This value represents how
    many more items can be added to the player's bags before they become completely
    full. The calculation takes into account the maximum capacity of each bag and
    the number of occupied slots within those bags. This method is commonly used by
    the game engine to determine if an item can be added to a player's inventory,
    or to display available space information in UI elements such as bag panels.
  parameters: []
  returns: Returns a uint32 value representing the total number of free slots available
    across all bags. A return value of 0 indicates that no additional items can be
    stored in the player's bags.
  examples:
  - title: Check if player has space for new item
    code: "if (player->GetBagSpace() > 0)\n{\n    // Player has space to add an item\n\
      \    player->AddItem(itemTemplate, 1);\n}\nelse\n{\n    // No space available\n\
      \    player->SendNotification(\"Your bags are full.\");\n}"
    language: cpp
  - title: Display available bag space to player
    code: 'uint32 freeSpace = player->GetBagSpace();

      player->GetSession()->SendNotification("Available bag space: %u slots", freeSpace);'
    language: cpp
  notes: This method iterates through all container slots in the inventory to calculate
    available space. It does not account for item stacking or specific slot restrictions,
    so it provides a general estimate of total capacity rather than per-slot availability.
  warnings: The returned value may be misleading if items with different stack sizes
    are considered; the actual number of items that can be added might be less than
    the reported free slots due to stacking limitations. Additionally, this method
    does not consider the player's current inventory state changes during a transaction,
    so it should be called after all relevant operations for accurate results.
  related:
  - GetInventorySpace
  - GetBagSlotCount
  - AddItem
  - CanStoreItem
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:16:48.887640'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
