api:
  class: InstanceScript
  method: InstanceScript
  signature: void InstanceScript::InstanceScript(InstanceScript && right)
documentation:
  brief: Moves an InstanceScript object to another InstanceScript object, transferring
    ownership of its resources.
  description: The InstanceScript move constructor transfers all resources from a
    source InstanceScript object to the current InstanceScript object. This operation
    is typically used when an InstanceScript needs to be moved from one location to
    another, such as during object construction or assignment. The move constructor
    ensures that the source object is left in a valid but unspecified state after
    the transfer. In the context of TrinityCore's World of Warcraft server implementation,
    this constructor is essential for managing instance script lifecycle and resource
    ownership within dungeon and raid instances.
  parameters: []
  returns: null
  examples:
  - title: Moving InstanceScript to New Object
    code: 'InstanceScript* newScript = new InstanceScript(std::move(*existingScript));

      // existingScript is now in a valid but unspecified state'
    language: cpp
  - title: Move Constructor Usage in Instance Creation
    code: "class MyDungeonScript : public InstanceScript {\npublic:\n    MyDungeonScript(InstanceScript&&\
      \ right) : InstanceScript(std::move(right)) {}\n};\n\n// Used when creating\
      \ new instance scripts\nMyDungeonScript script(std::move(existingInstance));"
    language: cpp
  notes: This is a move constructor, not a copy constructor. The source object becomes
    invalid after the move operation and should not be used afterward. This pattern
    is essential for efficient resource management in TrinityCore's instance system
    where scripts are frequently created and destroyed during dungeon/raid lifecycle
    events.
  warnings: Never use the source InstanceScript object after moving it. The moved-from
    object will be left in a valid but unspecified state, and accessing its members
    may result in undefined behavior or crashes.
  related:
  - InstanceScript::InstanceScript()
  - InstanceScript& InstanceScript::operator=(InstanceScript&&)
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:55:31.572723'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
