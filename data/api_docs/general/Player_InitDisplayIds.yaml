api:
  class: Player
  method: InitDisplayIds
  signature: void Player::InitDisplayIds()
documentation:
  brief: Initializes display IDs for the player character, setting up visual appearance
    attributes.
  description: The InitDisplayIds method initializes the display IDs for a Player
    object, configuring the visual representation of the character including gender-specific
    models and appearance attributes. This method is typically called during player
    creation or when changing character appearance. It sets up the necessary display
    information that determines how the character appears in the game world, including
    hair styles, facial features, and skin tone. The method ensures that all display-related
    properties are properly configured before the player becomes active in the game
    world.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->InitDisplayIds();'
    language: cpp
  notes: This method is typically called internally by the TrinityCore framework during
    player initialization. It may be invoked multiple times during a player's lifecycle,
    particularly when changing character appearance or when switching between different
    race/sex combinations. The method should not be called directly in most cases
    as it's handled automatically by the core system.
  warnings: This method should not be called manually unless specifically required
    by custom code. Calling it at inappropriate times may cause visual inconsistencies
    or display errors in the game world.
  related:
  - Player::SetDisplayId
  - Player::GetDisplayId
  - Player::SetNativeDisplayId
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T00:43:06.050232'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
