api:
  class: GarrisonMgr
  method: GetPreviousLevelBuildingId
  signature: uint32 GarrisonMgr::GetPreviousLevelBuildingId(uint32 buildingType, uint32
    currentLevel) const
documentation:
  brief: Returns the building type ID of the previous level for a given building type
    and current level.
  description: The GetPreviousLevelBuildingId method retrieves the unique identifier
    of the previous building level in the garrison system. This is used primarily
    for determining upgrade paths and managing building progression within the player's
    garrison. The method takes into account the building type and the current level
    to return the appropriate previous level's building type ID. It's commonly used
    when checking if a building can be upgraded or when calculating resource requirements
    for building improvements. The function does not perform any validation on input
    parameters, so callers should ensure valid building types and levels are provided.
  parameters:
  - name: buildingType
    description: The unique identifier representing the type of building (e.g., farm,
      lumber mill, etc.). This value corresponds to entries in the building database
      table.
  - name: currentLevel
    description: The current level of the building for which to retrieve the previous
      level's building type ID. Must be a positive integer greater than 0.
  returns: Returns the building type ID of the previous level for the specified building
    type and current level. If the current level is 1, it typically returns 0 or an
    invalid value indicating no previous level exists. Returns 0 if the input parameters
    are invalid or if there's no defined previous level in the system.
  examples:
  - title: Get Previous Level Building ID for a Farm
    code: uint32 farmPreviousLevel = sGarrisonMgr->GetPreviousLevelBuildingId(BUILDING_TYPE_FARM,
      3);
    language: cpp
  - title: Check if Building Has Previous Level Before Upgrading
    code: "uint32 currentBuildingType = player->GetGarrison()->GetBuildingType(0);\n\
      uint32 previousLevelId = sGarrisonMgr->GetPreviousLevelBuildingId(currentBuildingType,\
      \ 2);\nif (previousLevelId != 0)\n{\n    // Proceed with upgrade logic\n}"
    language: cpp
  notes: This method is part of the garrison management system and relies on internal
    building progression tables. The implementation assumes that building types and
    levels are properly defined in the database. Performance is generally fast as
    it's a lookup operation, but repeated calls should be optimized if used in performance-critical
    sections.
  warnings: Ensure that both parameters are valid before calling this method. Passing
    invalid building type or level values may result in unexpected behavior or incorrect
    return values. The method does not validate input parameters, so callers must
    ensure data integrity.
  related:
  - GetBuildingLevel
  - GetNextLevelBuildingId
  - GetBuildingInfo
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:31:48.451805'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
