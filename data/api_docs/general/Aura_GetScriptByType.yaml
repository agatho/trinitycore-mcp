api:
  class: Aura
  method: GetScriptByType
  signature: AuraScript * Aura::GetScriptByType(const std::type_info & type) const
documentation:
  brief: Retrieves the AuraScript instance associated with a specific type from the
    aura.
  description: The GetScriptByType method is used to obtain a pointer to an AuraScript
    instance that corresponds to a given type information. This method allows for
    dynamic access to script components attached to an aura, enabling developers to
    interact with specific script behaviors or data. It's particularly useful in scenarios
    where multiple scripts are associated with a single aura and you need to retrieve
    one based on its type. The method performs a lookup within the aura's internal
    script registry using the provided type information to find and return the matching
    AuraScript instance.
  parameters: []
  returns: A pointer to the AuraScript instance of the specified type if found; otherwise,
    returns nullptr if no matching script is registered with the aura.
  examples:
  - title: Basic Usage
    code: "AuraScript* script = aura->GetScriptByType(typeid(MyAuraScript));\nif (script)\n\
      {\n    // Use the script\n}"
    language: cpp
  - title: Checking for Specific Script Type
    code: "if (AuraScript* periodicScript = aura->GetScriptByType(typeid(PeriodicAuraScript)))\n\
      {\n    // Perform operations specific to periodic aura scripts\n}"
    language: cpp
  notes: This method assumes that the AuraScript instances are properly registered
    with the aura during initialization. The type_info parameter should match exactly
    with the type used when registering the script. Performance is optimized through
    internal hash-based lookups, but repeated calls on the same type may benefit from
    caching the returned pointer.
  warnings: Ensure that the provided type_info corresponds to a valid AuraScript subclass
    that was actually registered with the aura; otherwise, the method will return
    nullptr. Avoid using this method in performance-critical code paths without caching
    results if the same script type is accessed repeatedly.
  related:
  - GetScript
  - AddScript
  - RemoveScript
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:35:11.692483'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
