api:
  class: Player
  method: SendTransferAborted
  signature: void Player::SendTransferAborted(uint32 mapid, TransferAbortReason reason,
    uint8 arg, int32 mapDifficultyXConditionID) const
documentation:
  brief: Sends a transfer aborted message to the player's client with specified reason
    and arguments.
  description: This method sends a transfer abort notification to the player's client,
    indicating that a pending teleportation or instance transfer has been cancelled.
    The method is used to inform the player about why the transfer was aborted, including
    specific reasons such as insufficient level, missing requirements, or other game-related
    conditions. It allows for precise control over the abort message sent to the player,
    with parameters specifying the map ID, reason for abort, and additional argument
    values. This functionality is essential for managing player movement in World
    of Warcraft instances and ensures proper communication of transfer failures.
  parameters:
  - name: mapid
    description: The map ID where the transfer was attempted. This parameter determines
      which map the player was being transferred to, and is used to identify the specific
      instance or zone.
  - name: reason
    description: The reason for the transfer abort. This specifies why the transfer
      was cancelled, such as insufficient level, missing requirements, or other conditions
      that prevented the transfer from proceeding.
  - name: arg
    description: Additional argument value used to provide extra context for the abort
      message. This could be used to specify additional details like required items
      or specific conditions related to the transfer.
  - name: mapDifficultyXConditionID
    description: The map difficulty condition ID that was being checked during the
      transfer attempt. This parameter helps identify which specific difficulty or
      condition caused the abort, particularly in cases involving instance difficulties
      or requirements.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->SendTransferAborted(123, TRANSFER_ABORT_REASON_INSUFFICIENT_LEVEL, 0,
      456);'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = new Player();

      uint32 mapId = 123;

      TransferAbortReason reason = TRANSFER_ABORT_REASON_NOT_IN_GROUP;

      uint8 arg = 1;

      int32 mapDifficultyXConditionID = 456;

      player->SendTransferAborted(mapId, reason, arg, mapDifficultyXConditionID);'
    language: cpp
  notes: This method is typically called when a player's transfer fails due to game
    mechanics such as level requirements or instance conditions. The method ensures
    that the client receives proper feedback about why the transfer was aborted, allowing
    for better player experience and game flow management.
  warnings: This method should not be used in situations where the player has already
    been transferred or when the player is already in a different zone. It is important
    to ensure that the parameters are correctly set to avoid confusion or incorrect
    messaging to the player.
  related:
  - SendTransferComplete
  - SendTransferFailed
  - Player::GetMapId
  - Player::GetLevel
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T23:30:38.278051'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
