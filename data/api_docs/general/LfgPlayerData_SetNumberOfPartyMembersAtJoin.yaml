api:
  class: LfgPlayerData
  method: SetNumberOfPartyMembersAtJoin
  signature: void LfgPlayerData::SetNumberOfPartyMembersAtJoin(uint8 count)
documentation:
  brief: Sets the number of party members that were present when the player joined
    a LFG (Looking for Group) instance.
  description: This method updates an internal tracking variable within the LfgPlayerData
    class that records how many members were in the player's party at the moment they
    joined a Looking for Group activity. This information is used by the LFG system
    to manage group composition, enforce restrictions, and track player participation
    metrics. The value is typically set during the LFG join process and may be used
    for various game mechanics such as determining loot distribution rules or group
    size requirements. This method does not validate the input count against actual
    party membership; it simply stores the provided value.
  parameters:
  - name: count
    description: The number of party members present when the player joined the LFG
      instance. Valid values are typically between 1 and 5 (inclusive), representing
      standard party sizes in World of Warcraft.
  returns: null
  examples:
  - title: Setting Party Member Count
    code: 'LfgPlayerData playerData;

      playerData.SetNumberOfPartyMembersAtJoin(4);

      // The internal count is now set to 4, representing a 4-player party at join
      time.'
    language: cpp
  - title: Updating Party Size After Join
    code: "LfgPlayerData* data = sLFGMgr->GetPlayerData(playerGuid);\nif (data)\n\
      {\n    uint8 currentMembers = player->GetGroup()->GetMembersCount();\n    data->SetNumberOfPartyMembersAtJoin(currentMembers);\n\
      }"
    language: cpp
  notes: This method is part of the internal LFG tracking system and is usually called
    automatically by the TrinityCore framework during LFG join operations. Developers
    should not typically call this method directly unless implementing custom LFG
    logic or debugging.
  warnings: Modifying this value manually without proper context may cause inconsistencies
    in LFG-related game mechanics, such as incorrect group size validation or improper
    loot handling. Ensure that the count accurately reflects the party composition
    at join time.
  related:
  - GetNumberOfPartyMembersAtJoin
  - LfgPlayerData::SetState
  - LfgPlayerData::GetState
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:21:02.272011'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
