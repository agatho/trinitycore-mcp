api:
  class: Creature
  method: HasClassification
  signature: bool Creature::HasClassification(int classification) const
documentation:
  brief: Determines whether the creature belongs to a specific classification.
  description: This method checks if a creature object is classified as a specific
    type, such as 'Boss', 'Elite', or 'Normal'. It returns true if the creature's
    classification matches the specified classification, false otherwise. The classification
    system in TrinityCore allows for differentiating between various creature types
    based on their behavior and properties within the game world. This method is commonly
    used in AI scripts and quest conditions to determine creature behavior.
  parameters: []
  returns: Returns true if the creature's classification matches the specified classification,
    false otherwise.
  examples:
  - title: Basic usage example
    code: "if (creature->HasClassification(1))\n{\n    // Creature is classified as\
      \ Boss\n}"
    language: cpp
  notes: This method relies on the creature's classification value which is set during
    creature creation and cannot be changed at runtime. The classification values
    are defined in the TrinityCore database and correspond to specific creature types.
  warnings: This method should not be used for dynamic classification changes as it
    only checks static classification values. Avoid using this method in scenarios
    where creature classification may change dynamically.
  related:
  - Creature::GetClassification
  - Creature::SetClassification
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:05:37.487447'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
