api:
  class: AccountMgr
  method: UpdateAccountAccess
  signature: void AccountMgr::UpdateAccountAccess(rbac::RBACData * rbac, uint32 accountId,
    uint8 securityLevel, int32 realmId)
documentation:
  brief: Updates the access level and realm permissions for a specified account using
    RBAC data.
  description: The UpdateAccountAccess method modifies the security level and realm-specific
    access rights for a given account within the TrinityCore system. It utilizes Role-Based
    Access Control (RBAC) data to enforce permissions across different realms. This
    function is typically used by administrative tools or game master commands to
    adjust user privileges dynamically without requiring a server restart. The method
    updates both global account permissions and realm-specific access levels based
    on the provided parameters.
  parameters:
  - name: rbac
    description: Pointer to the RBAC data structure containing role-based access control
      information for the account.
  - name: accountId
    description: Unique identifier of the account whose access level is being updated.
      Must correspond to an existing account in the database.
  - name: securityLevel
    description: New security level (access rights) to assign to the account. Valid
      values typically range from 0 (player) to 3 (admin), though exact values depend
      on server configuration.
  - name: realmId
    description: Identifier of the realm for which access permissions are being updated.
      Use -1 to apply changes globally across all realms, or specify a particular
      realm ID.
  returns: null
  examples:
  - title: Update account access level for a specific realm
    code: 'rbac::RBACData* rbacData = new rbac::RBACData();

      AccountMgr::UpdateAccountAccess(rbacData, 12345, 2, 0);

      // Sets account ID 12345 to security level 2 (GM) for realm 0'
    language: cpp
  - title: Apply global access changes across all realms
    code: 'rbac::RBACData* rbacData = new rbac::RBACData();

      AccountMgr::UpdateAccountAccess(rbacData, 12345, 3, -1);

      // Sets account ID 12345 to security level 3 (admin) globally'
    language: cpp
  notes: This method directly interacts with the database to persist access control
    changes. Ensure that the RBAC data is properly initialized before calling this
    function. The realmId parameter allows for fine-grained control over permissions,
    enabling different access levels per realm or global settings.
  warnings: Modifying account access levels can have significant security implications.
    Always validate inputs and ensure proper authorization before invoking this method.
    Incorrect use may lead to unauthorized access or denial of service.
  related:
  - AccountMgr::GetAccountAccess
  - AccountMgr::SetAccountAccess
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:47:03.515153'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
