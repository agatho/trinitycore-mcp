api:
  class: Unit
  method: _RegisterAuraEffect
  signature: void Unit::_RegisterAuraEffect(AuraEffect * aurEff, bool apply)
documentation:
  brief: Registers an aura effect with the unit's aura system.
  description: This method is responsible for registering a specific aura effect with
    the Unit's aura system, allowing the unit to properly track and manage the effects
    of spells or abilities. It handles the application or removal of aura effects
    based on the provided parameters, ensuring that the unit's state changes appropriately
    when the aura is applied or removed. The method plays a crucial role in maintaining
    the integrity of the unit's aura system during gameplay mechanics such as spell
    casting, buff/debuff management, and combat interactions.
  parameters:
  - name: aurEff
    description: Pointer to the AuraEffect object that represents the specific effect
      being registered. This parameter defines the type, duration, and properties
      of the aura being applied or removed.
  - name: apply
    description: Boolean flag indicating whether the aura effect should be applied
      (true) or removed (false). This determines the behavior of the method in relation
      to the unit's aura system.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* target = new Unit();

      AuraEffect* effect = new AuraEffect();

      target->_RegisterAuraEffect(effect, true);'
    language: cpp
  notes: This method is typically called internally by the TrinityCore framework during
    spell application or removal processes. It should not be directly invoked by developers
    unless explicitly required by custom code logic. Performance considerations include
    avoiding unnecessary calls when the aura effect is already registered.
  warnings: Improper handling of this method can lead to incorrect aura tracking,
    potentially causing issues with spell effects, buff/debuff management, and combat
    mechanics. Developers must ensure that the aura effect object is valid and properly
    initialized before calling this method.
  related:
  - Unit::GetAura
  - Unit::RemoveAura
  - Unit::AddAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:00:48.553882'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
