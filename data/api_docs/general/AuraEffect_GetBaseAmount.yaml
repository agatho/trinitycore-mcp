api:
  class: AuraEffect
  method: GetBaseAmount
  signature: int32 AuraEffect::GetBaseAmount() const
documentation:
  brief: Retrieves the base amount value of this aura effect.
  description: The GetBaseAmount method returns the base amount associated with this
    AuraEffect instance. This value typically represents the initial or unmodified
    value of the aura's effect before any modifiers, scaling, or calculations are
    applied. In World of Warcraft's TrinityCore framework, aura effects can be modified
    by various factors such as spell modifiers, item bonuses, or player stats. The
    base amount serves as a reference point for these modifications and is crucial
    for accurately calculating the final effect value during gameplay. This method
    does not perform any computation or modification; it simply retrieves the pre-defined
    base value stored within the aura effect.
  parameters: []
  returns: An int32 value representing the base amount of this aura effect. This value
    is typically used as a starting point for calculating modified effect values and
    may represent damage, healing, stat bonuses, or other numerical modifiers depending
    on the specific aura type.
  examples:
  - title: Retrieve Base Amount for Damage Aura
    code: "AuraEffect* auraEff = unit->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\nif\
      \ (auraEff)\n{\n    int32 baseAmount = auraEff->GetBaseAmount();\n    // Use\
      \ baseAmount to calculate final damage\n    int32 finalDamage = baseAmount +\
      \ additionalModifiers;\n}"
    language: cpp
  - title: Debugging Aura Effect Values
    code: "Unit* target = player->GetSelectedUnit();\nif (target && target->HasAura(SPELL_ID))\n\
      {\n    Aura* aura = target->GetAura(SPELL_ID);\n    if (aura)\n    {\n     \
      \   for (uint8 i = 0; i < MAX_AURA_EFFECTS; ++i)\n        {\n            AuraEffect*\
      \ auraEff = aura->GetEffect(i);\n            if (auraEff)\n            {\n \
      \               int32 baseAmount = auraEff->GetBaseAmount();\n             \
      \   // Log or inspect the base amount\n                sLog->outString(\"Aura\
      \ Effect %u Base Amount: %d\", i, baseAmount);\n            }\n        }\n \
      \   }\n}"
    language: cpp
  notes: The base amount is set when the aura is applied and generally remains constant
    unless modified by specific game mechanics or scripts. This value should not be
    confused with the current or modified effect value which may change during the
    aura's duration due to various factors such as stat changes, buff/debuff stacking,
    or spell modifications.
  warnings: Ensure that the AuraEffect pointer is valid before calling this method
    to avoid null pointer dereferences. While GetBaseAmount itself does not modify
    any state, improper handling of aura effects can lead to incorrect gameplay behavior
    or crashes if used inappropriately within combat or critical systems.
  related:
  - GetAmount
  - SetAmount
  - GetAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:05:19.476206'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
