api:
  class: InventoryManager
  method: GetItemCount
  signature: uint32 InventoryManager::GetItemCount(uint32 itemId, bool includeBank)
    const
documentation:
  brief: Retrieves the total count of a specific item in the player's inventory and
    optionally includes items in the bank.
  description: The GetItemCount method calculates the total quantity of a specified
    item that a player possesses across their main inventory and, if requested, their
    bank. This method is commonly used in game logic to check item availability for
    quests, crafting, or other gameplay mechanics. It aggregates counts from all relevant
    containers including bags, backpack, and bank slots. The method does not consider
    temporary or equipped items unless they are stored in the player's inventory or
    bank. The result is a cumulative count that reflects the player's total possession
    of the specified item.
  parameters:
  - name: itemId
    description: The unique identifier of the item to count. This corresponds to the
      ItemTemplate entry ID from the database.
  - name: includeBank
    description: A boolean flag indicating whether to include items in the player's
      bank. If true, counts are aggregated from inventory and bank; if false, only
      inventory items are counted.
  returns: Returns a uint32 representing the total number of items with the specified
    itemId found in the player's inventory and optionally bank. Returns zero if no
    such items exist.
  examples:
  - title: Counting Items in Inventory Only
    code: uint32 count = inventoryManager->GetItemCount(12345, false); // Counts only
      items in backpack/bags
    language: cpp
  - title: Counting Items Including Bank
    code: uint32 total = inventoryManager->GetItemCount(67890, true); // Includes
      bank items in count
    language: cpp
  notes: This method performs a full scan of the player's inventory containers and
    bank to calculate the item count. For performance-critical code paths, consider
    caching results or using alternative methods that do not require scanning all
    containers. The method does not account for item stacks beyond their individual
    counts.
  warnings: Be cautious when using this method in frequently called functions as it
    may cause performance degradation due to container traversal. Also, ensure the
    itemId is valid before calling to avoid unexpected behavior.
  related:
  - GetItemByEntry
  - AddItem
  - RemoveItem
  - HasItemCount
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:14:17.078726'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
