api:
  class: ZoneScript
  method: operator=
  signature: ZoneScript & ZoneScript::operator=(ZoneScript && right)
documentation:
  brief: Moves a ZoneScript object, transferring ownership of its resources to the
    target object.
  description: The move assignment operator for ZoneScript transfers all resources
    from the right-hand side ZoneScript object to the left-hand side object. This
    operation is typically used in scenarios where a ZoneScript instance needs to
    be reassigned while efficiently transferring ownership of dynamically allocated
    memory or other resources. The moved-from object will be left in a valid but unspecified
    state, typically with its resources cleared. In the context of TrinityCore's World
    of Warcraft server implementation, this operator supports efficient management
    of zone-based scripts and their lifecycle during game world updates and script
    reinitialization.
  parameters: []
  returns: A reference to the left-hand side ZoneScript object after the move assignment
    has been completed.
  examples:
  - title: Basic Move Assignment
    code: 'ZoneScript script1;

      ZoneScript script2 = std::move(script1); // Move-assigns script1 to script2

      // script1 is now in a valid but unspecified state'
    language: cpp
  - title: Move Assignment in Container
    code: 'std::vector<ZoneScript> scripts;

      scripts.emplace_back();

      scripts[0] = std::move(scripts.back()); // Move-assign last element to first

      // The moved-from element is left in a valid but unspecified state'
    language: cpp
  notes: This operator implements move semantics, which is crucial for performance
    optimization when dealing with ZoneScript objects that manage dynamic resources.
    It should only be used when the right-hand side object will no longer be used,
    as it transfers ownership of its internal state.
  warnings: Using this operator on an already moved-from object can lead to undefined
    behavior. Ensure that the right-hand side object is not accessed after move assignment.
    Also, be aware that the moved-from object's destructor may still be called, so
    it must be in a valid state for destruction.
  related:
  - ZoneScript::ZoneScript
  - ZoneScript::operator=
  - ZoneScript::ZoneScript(ZoneScript &&)
  - ZoneScript::Clone
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:56:59.987494'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
