api:
  class: Player
  method: _LoadActions
  signature: void Player::_LoadActions(int result)
documentation:
  brief: Loads player actions from database into memory
  description: This method retrieves player action data from the database and loads
    it into the player's action cache. It is called during player initialization or
    when actions need to be refreshed from persistent storage. The method handles
    loading of action slots, action types, and associated data for all player actions.
    This ensures that player actions are properly initialized and available for use
    in game mechanics.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->_LoadActions(0);

      // This loads actions from database into player''s action cache'
    language: cpp
  notes: This method is typically called internally by TrinityCore during player login
    process. It may be called multiple times during a player's session, particularly
    when actions are modified or when the database connection is re-established.
  warnings: This method should not be called directly by external code unless specifically
    required. The method handles database loading and should be called only once per
    player session to avoid performance issues.
  related:
  - Player::LoadActions
  - Player::SaveActions
  - Player::GetAction
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T23:13:14.143764'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
