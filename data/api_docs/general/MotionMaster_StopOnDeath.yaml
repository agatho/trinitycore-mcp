api:
  class: MotionMaster
  method: StopOnDeath
  signature: bool MotionMaster::StopOnDeath()
documentation:
  brief: Stops all active movement motions for the unit and returns true if successful.
  description: The StopOnDeath method halts any currently executing movement behaviors
    within the MotionMaster's queue. It is typically invoked when a unit (such as
    a creature or player) dies, ensuring that no further movement actions are processed.
    This method ensures clean state management for AI-controlled entities by clearing
    their motion queues and preventing potential issues with movement after death.
    The return value indicates whether the operation was successfully executed.
  parameters: []
  returns: Returns true if the motion queue was successfully cleared and all active
    motions stopped; otherwise, returns false if no motions were present or an error
    occurred during processing.
  examples:
  - title: Basic usage in death handler
    code: "void Creature::Die()\n{\n    // Perform death logic\n    if (motionMaster.StopOnDeath())\n\
      \    {\n        // Motion successfully stopped\n    }\n}"
    language: cpp
  notes: This method is commonly used internally by the TrinityCore engine during
    unit death events to prevent movement-related issues. It does not directly handle
    animation or visual effects, but rather manages the motion state of the AI system.
  warnings: Calling this method on a MotionMaster that has already been destroyed
    or is in an invalid state may lead to undefined behavior. Ensure proper lifecycle
    management before invoking this function.
  related:
  - MoveIdle
  - Clear
  - UpdateMovement
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:23:28.793584'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
