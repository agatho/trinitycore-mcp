api:
  class: Transport
  method: AddPassenger
  signature: void Transport::AddPassenger(int * passenger, const int & offset)
documentation:
  brief: Adds a passenger to the transport at the specified offset position.
  description: The AddPassenger method is used to register a player or creature as
    a passenger on a transport vehicle. This method assigns the passenger to a specific
    seat or position on the transport based on the provided offset parameter. The
    method typically handles the necessary game state updates to ensure the passenger
    is properly mounted onto the transport and will move with it. It's commonly called
    during transport initialization, player boarding events, or when adding passengers
    dynamically during gameplay. The offset parameter determines where on the transport
    the passenger will be positioned.
  parameters:
  - name: passenger
    description: Pointer to the passenger object (player or creature) that is being
      added to the transport. This should point to a valid GameObject or Unit instance
      representing the entity boarding the transport.
  - name: offset
    description: Reference to an integer value that specifies the position or seat
      index on the transport where the passenger will be placed. The offset typically
      corresponds to a specific location on the transport model or a predefined seating
      arrangement.
  returns: null
  examples:
  - title: Basic Passenger Addition
    code: 'Transport* transport = ...; // Get reference to transport

      Player* player = ...; // Get reference to player

      int seatOffset = 0;

      transport->AddPassenger(reinterpret_cast<int*>(&player), seatOffset);'
    language: cpp
  - title: Adding Multiple Passengers
    code: "Transport* transport = ...;\nPlayer* players[3] = {player1, player2, player3};\n\
      int offsets[] = {0, 1, 2};\nfor (int i = 0; i < 3; ++i)\n{\n    transport->AddPassenger(reinterpret_cast<int*>(&players[i]),\
      \ offsets[i]);\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore transport system
    when players board transports. The passenger pointer must be valid and point to
    a GameObject or Unit that can be mounted on a transport. The offset parameter
    should correspond to valid seating positions defined for the specific transport
    type. This method does not perform any validation of the passenger's ability to
    board the transport.
  warnings: Passengers added using this method will automatically move with the transport.
    Ensure that the passenger is in a valid state before calling this method, as invalid
    passengers may cause undefined behavior. The offset value must be within the bounds
    of available seating positions on the transport; otherwise, it could lead to incorrect
    positioning or errors.
  related:
  - RemovePassenger
  - HasPassenger
  - GetPassengers
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T17:43:46.645295'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
