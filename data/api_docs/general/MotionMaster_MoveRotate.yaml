api:
  class: MotionMaster
  method: MoveRotate
  signature: void MotionMaster::MoveRotate(uint32 id, RotateDirection direction, int
    time, int turnSpeed, int totalTurnAngle, int param5)
documentation:
  brief: Initiates a rotation motion for a creature or unit over a specified duration
    with given turn parameters.
  description: The MoveRotate method starts a rotational movement for an AI-controlled
    unit, allowing it to rotate in place over a defined time period. This method is
    typically used in AI behavior scripting to make units turn towards a target, perform
    idle rotations, or execute specific turning animations during combat or patrol
    behaviors. The rotation can be performed in either direction (clockwise or counter-clockwise)
    and is controlled by parameters such as total turn angle, turn speed, and duration.
    The motion is added to the unit's movement queue and will execute sequentially
    with other movement commands.
  parameters:
  - name: id
    description: Unique identifier for this specific rotation motion. Used to track
      or cancel the motion later if needed.
  - name: direction
    description: Direction of rotation, typically defined as RotateDirection enum
      values (e.g., ROTATE_CLOCKWISE, ROTATE_COUNTER_CLOCKWISE).
  - name: time
    description: Total duration in milliseconds for the rotation to complete. If set
      to 0, the rotation will use default timing based on turnSpeed and totalTurnAngle.
  - name: turnSpeed
    description: Rotation speed in degrees per second. Controls how fast the unit
      rotates during the motion.
  - name: totalTurnAngle
    description: Total angle in degrees that the unit should rotate. Positive values
      indicate clockwise rotation, negative values counter-clockwise.
  - name: param5
    description: Reserved parameter; currently unused but may be used for future extensions
      or specific AI behavior flags.
  returns: null
  examples:
  - title: Basic rotation example
    code: motionMaster->MoveRotate(1, ROTATE_CLOCKWISE, 2000, 90, 180, 0);
    language: cpp
  - title: Counter-clockwise turn with custom timing
    code: motionMaster->MoveRotate(2, ROTATE_COUNTER_CLOCKWISE, 3000, 45, -90, 0);
    language: cpp
  notes: This method adds a new movement to the MotionMaster's queue. If another motion
    is already active, this rotation will be queued to execute after the current motion
    completes. The actual rotation speed may be adjusted by the game engine based
    on unit capabilities and animation constraints.
  warnings: Using incorrect values for turnSpeed or totalTurnAngle can result in unnatural
    movement behavior. Ensure that time parameter is sufficient for the specified
    rotation to complete smoothly, otherwise the motion might be cut short or behave
    unexpectedly.
  related:
  - MoveTo
  - MoveIdle
  - MoveStop
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:28:13.357251'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
