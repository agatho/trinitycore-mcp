api:
  class: Unit
  method: UpdateMaxPower
  signature: void Unit::UpdateMaxPower(int power)
documentation:
  brief: Updates the maximum power value for the unit, recalculating current power
    if necessary.
  description: The UpdateMaxPower method adjusts the maximum power value for a Unit
    object, which typically represents players or creatures in the game world. This
    method is commonly used when a unit's power type (such as mana, rage, or energy)
    changes due to level ups, class changes, or other game mechanics. The method ensures
    that the current power does not exceed the new maximum and may trigger updates
    to the client's UI to reflect the change. It is an internal utility method often
    called by other system functions rather than directly by scripts or external code.
  parameters:
  - name: power
    description: The new maximum power value to set for the unit. This value must
      be non-negative and typically represents the base maximum amount of power (e.g.,
      mana, rage) the unit can have.
  returns: null
  examples:
  - title: Setting a new maximum power value
    code: 'Unit* player = ...; // Get reference to player unit

      player->UpdateMaxPower(1000); // Set new max power to 1000'
    language: cpp
  - title: Updating power after a level-up
    code: 'Unit* player = ...;

      int newMaxPower = player->GetLevel() * 50; // Example calculation

      player->UpdateMaxPower(newMaxPower);'
    language: cpp
  notes: This method is typically invoked internally by the core engine when power-related
    attributes change. It does not directly send updates to the client unless other
    systems trigger UI refreshes. The method assumes that the provided power value
    is valid and does not perform bounds checking beyond ensuring it's non-negative.
  warnings: Direct usage of this method should be avoided in most cases as it bypasses
    normal game state management. Improper use can lead to inconsistent power values
    or UI desynchronization. Always consider using higher-level methods like SetMaxPower()
    or ApplyPowerMod() which handle proper validation and synchronization.
  related:
  - SetMaxPower
  - GetMaxPower
  - ModifyPower
  - SetPower
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:23:37.082276'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
