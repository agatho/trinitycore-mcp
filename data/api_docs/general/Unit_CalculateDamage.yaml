api:
  class: Unit
  method: CalculateDamage
  signature: uint32 Unit::CalculateDamage(int attType, bool normalized, bool addTotalPct)
    const
documentation:
  brief: Calculates damage output for a unit's attack, considering various modifiers
    and factors.
  description: The CalculateDamage method computes the total damage dealt by a Unit's
    attack, taking into account base damage, weapon damage, modifiers, and various
    bonuses. It handles both physical and magical attacks based on the attack type
    specified. The method considers normalized damage (where applicable) and applies
    additional percentage bonuses to the final damage calculation. This function is
    essential for determining attack power and damage output in World of Warcraft
    combat mechanics.
  parameters:
  - name: attType
    description: 'The attack type determines how damage is calculated. Valid values
      include: 0 (melee), 1 ( ranged), 2 (spell), 3 (physical), 4 ( magical). Each
      type represents different damage calculation methods based on weapon type and
      modifiers.'
  - name: normalized
    description: When true, applies normalized damage calculations which typically
      affects the final damage output based on weapon speed. When false, damage is
      calculated without normalization.
  - name: addTotalPct
    description: When true, adds percentage bonuses to the total damage calculation.
      This parameter controls whether additional percentage modifiers are applied
      to the final damage value.
  returns: Returns uint32 representing the calculated damage value in a single integer.
    The value represents the total damage output after all modifiers and calculations
    have been applied.
  examples:
  - title: Basic Damage Calculation
    code: uint32 damage = unit->CalculateDamage(0, true, false);
    language: cpp
  - title: Full Damage Calculation with Percentage Bonuses
    code: uint32 damage = unit->CalculateDamage(3, false, true);
    language: cpp
  notes: This method is typically used in combat calculations and requires the Unit
    to have valid weapon information. The method may be called from different threads
    depending on the context, so thread safety should be considered when using it
    in concurrent environments.
  warnings: The method assumes that the unit has valid weapon information and attack
    type. If these conditions are not met, the result may be inaccurate or undefined.
    Also, the method does not account for critical hits or miss calculations - these
    must be handled separately.
  related:
  - GetDamage
  - CalculateSpellDamage
  - GetAttackPower
  - GetWeaponDamage
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:22:26.058288'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
