api:
  class: Player
  method: IsInventoryPos
  signature: bool Player::IsInventoryPos(uint8 bag, uint8 slot)
documentation:
  brief: Checks whether a given inventory position is valid for the player.
  description: The IsInventoryPos method determines if a specified bag and slot combination
    represents a valid inventory position within the player's inventory system. This
    method verifies that the provided bag and slot values fall within acceptable ranges
    for the player's inventory, ensuring that the position is not only valid but also
    accessible. It is commonly used in game mechanics to validate inventory operations
    such as item placement, removal, or movement. The method returns true if the position
    is valid, false otherwise, making it essential for preventing invalid inventory
    operations and maintaining game integrity.
  parameters:
  - name: bag
    description: The bag identifier that represents the inventory container. Valid
      values range from 0 to 255, where 0 typically represents the main backpack,
      and higher values represent various bag types including bags, bank slots, etc.
  - name: slot
    description: The slot identifier within the specified bag. Valid values range
      from 0 to 255, representing individual slots within the bag or container. The
      slot value must be within the bounds of the bag's capacity.
  returns: Returns true if the provided bag and slot combination represents a valid
    inventory position for the player; otherwise returns false.
  examples:
  - title: Basic Inventory Position Check
    code: "if (player->IsInventoryPos(0, 1))\n{\n    // The position is valid\n  \
      \  // Do something with the item\n}"
    language: cpp
  - title: Checking Validity of Item Placement
    code: "uint8 bag = 1;\nuint8 slot = 5;\nif (player->IsInventoryPos(bag, slot))\n\
      {\n    // The position is valid\n    // Proceed with item placement\n}"
    language: cpp
  notes: This method is typically used in conjunction with other inventory-related
    methods to validate operations. It performs a simple range check and does not
    verify if the slot is empty or contains an item. Performance considerations are
    minimal as it only involves basic validation checks.
  warnings: The method does not validate that the slot actually contains an item;
    it only checks if the position is valid. Care should be taken when using this
    method in conjunction with other inventory operations to avoid invalid item placement
    or removal.
  related:
  - IsBagPos
  - IsItemPos
  - HasItemAtPos
  - GetInventorySlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:46:24.826608'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
