api:
  class: Unit
  method: CombatStop
  signature: void Unit::CombatStop(bool includingCast, bool mutualPvP, bool (*)(const
    Unit *) unitFilter)
documentation:
  brief: Stops all combat activities for the unit, including casting and melee attacks.
  description: The CombatStop method terminates all combat-related activities for
    a Unit, including stopping any ongoing casts, melee attacks, and other combat
    states. It can optionally include or exclude specific combat behaviors based on
    parameters. This method is commonly used in game mechanics to end combat situations
    for NPCs or players, particularly when transitioning between different states
    such as from combat to non-combat. The method ensures that the unit's combat state
    is properly reset, preventing further engagement with targets.
  parameters:
  - name: includingCast
    description: If true, stops any ongoing casting activities; if false, only stops
      melee attacks and combat state.
  - name: mutualPvP
    description: If true, includes mutual PvP behavior in the stoppage; if false,
      excludes it from stopping.
  - name: unitFilter
    description: Optional function pointer that filters which units to stop combat
      for. If null, all units are affected.
  returns: null
  examples:
  - title: Basic Combat Stop Example
    code: 'Unit* unit = new Unit;

      unit->CombatStop(true, false);

      // Stops all combat activities including casting for the unit'
    language: cpp
  - title: Advanced Combat Stop with Filter
    code: "Unit* unit = new Unit;\nunit->CombatStop(true, true, [](const Unit* u)\
      \ {\n    return u->GetTypeId() == TYPEID_PLAYER;\n});\n// Stops combat for players\
      \ only"
    language: cpp
  notes: This method is typically used in conjunction with other combat-related methods
    to ensure proper state management. Performance considerations include potential
    delays if the unit has active casts or complex combat states. Thread safety depends
    on the implementation of the underlying Unit class, which may vary across different
    TrinityCore versions.
  warnings: Improper use of CombatStop can lead to unexpected behavior in combat state
    transitions. Care should be taken when using filters to avoid unintended consequences
    in PvP scenarios.
  related:
  - CombatStart
  - CombatState
  - Unit::GetCombatStatus
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:16:36.618001'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
