api:
  class: BotPopulationManager
  method: GetOverpopulatedZones
  signature: int BotPopulationManager::GetOverpopulatedZones() const
documentation:
  brief: Calculates and returns the number of zones where bot population exceeds predefined
    thresholds
  description: The GetOverpopulatedZones method evaluates all active zones in the
    game world to determine how many currently have more bots than allowed by the
    configured population limits. This method is typically used by the bot management
    system to identify areas that require population control or balancing. It iterates
    through all zones, compares current bot counts against maximum allowed values,
    and returns a cumulative count of zones exceeding these limits. The result helps
    administrators and automated systems make decisions about bot distribution, spawning,
    or removal in overloaded regions.
  parameters: []
  returns: An integer value representing the total number of zones where the current
    bot population exceeds the configured maximum limit for that zone. Returns zero
    if no zones are overpopulated.
  examples:
  - title: Basic Usage Example
    code: "int overpopulatedZones = sBotPopulationManager->GetOverpopulatedZones();\n\
      if (overpopulatedZones > 0)\n{\n    TC_LOG_INFO(\"bot\", \"Detected {} overpopulated\
      \ zones\", overpopulatedZones);\n}"
    language: cpp
  notes: This method performs a full iteration of all active zones and their bot counts,
    which may have performance implications during high-traffic periods. The method
    is typically called periodically by the bot management system's maintenance routines
    rather than on every game tick.
  warnings: null
  related:
  - GetZoneBotCount
  - GetMaxBotLimitForZone
  - AdjustBotPopulation
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T17:01:12.623420'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
