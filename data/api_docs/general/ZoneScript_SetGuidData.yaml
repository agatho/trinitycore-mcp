api:
  class: ZoneScript
  method: SetGuidData
  signature: void ZoneScript::SetGuidData(uint32 param0, int param1)
documentation:
  brief: Sets a GUID data value for a specified zone script parameter.
  description: The SetGuidData method is used within ZoneScript classes to store or
    update a GUID-related data value associated with a specific parameter identifier.
    This method typically serves as part of the scripting system in TrinityCore, allowing
    zone-specific scripts to maintain and manage unique identifiers or references
    for game objects, creatures, or players within a particular zone. It enables persistent
    state management across different events or phases of a zone's lifecycle. The
    method does not return any value, making it a void function primarily used for
    data assignment purposes.
  parameters:
  - name: param0
    description: The identifier or key used to reference the GUID data within the
      zone script. This parameter typically corresponds to a predefined constant or
      index that identifies a specific data slot or variable in the zone's scripting
      context.
  - name: param1
    description: The integer value representing the GUID data to be stored. In most
      cases, this will be a valid GameObject, Creature, or Player GUID from the TrinityCore
      database system, though it may also represent other types of identifiers depending
      on the zone script's implementation.
  returns: null
  examples:
  - title: Setting a Boss GUID in a Zone Script
    code: "class ExampleZoneScript : public ZoneScript\n{\npublic:\n    void SetGuidData(uint32\
      \ id, int64 guid) override\n    {\n        // Store the GUID of a boss creature\
      \ for later reference\n        if (id == BOSS_GUID)\n            m_bossGuid\
      \ = guid;\n    }\n};"
    language: cpp
  - title: Updating Multiple GUIDs in Sequence
    code: "void UpdateZoneGUIDs(ZoneScript* zoneScript)\n{\n    zoneScript->SetGuidData(0,\
      \ 12345);\n    zoneScript->SetGuidData(1, 67890);\n    zoneScript->SetGuidData(2,\
      \ 54321);\n}"
    language: cpp
  notes: This method is commonly used in conjunction with GetGuidData to provide bidirectional
    access to stored GUID values within a zone script. The ZoneScript class typically
    manages its own internal data storage for these GUIDs, so calling SetGuidData
    effectively updates that persistent state. It's important to note that the parameter
    identifiers should match those defined in the corresponding zone script implementation
    to ensure correct behavior.
  warnings: Ensure that param0 corresponds to a valid index or key used by the ZoneScript
    implementation; otherwise, the data may not be stored correctly or could overwrite
    unintended values. Additionally, while this method accepts int32 values for param1,
    it's recommended to use actual GUIDs from the TrinityCore database system to maintain
    consistency with the game's internal systems.
  related:
  - GetGuidData
  - Load
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:53:31.079715'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
