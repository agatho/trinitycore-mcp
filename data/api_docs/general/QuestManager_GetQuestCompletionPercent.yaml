api:
  class: QuestManager
  method: GetQuestCompletionPercent
  signature: float QuestManager::GetQuestCompletionPercent(uint32 questId) const
documentation:
  brief: Calculates and returns the completion percentage of a specified quest for
    the player.
  description: The GetQuestCompletionPercent method computes the progress of a given
    quest by evaluating how many objectives have been completed relative to the total
    number of objectives in that quest. This value is returned as a floating-point
    number between 0.0 and 100.0, where 0.0 indicates no progress and 100.0 indicates
    full completion. The method relies on the internal state of the player's quest
    log and checks against the current quest requirements. It does not modify any
    quest data but instead provides a read-only view of progress. This function is
    typically used for UI display purposes, such as showing progress bars or quest
    status indicators.
  parameters: []
  returns: A float value representing the percentage of quest completion (0.0 to 100.0).
    Returns 0.0 if the quest is not found or not active in the player's log.
  examples:
  - title: Basic Usage
    code: "float completion = player->GetQuestManager()->GetQuestCompletionPercent(12345);\n\
      if (completion > 0.0f)\n{\n    printf(\"Quest progress: %.2f%%\\n\", completion);\n\
      }"
    language: cpp
  - title: Using in UI Context
    code: "float percent = player->GetQuestManager()->GetQuestCompletionPercent(67890);\n\
      if (percent >= 100.0f)\n{\n    // Quest completed\n    SendQuestCompleteMessage(\"\
      Quest Complete!\");\n}\nelse if (percent > 0.0f)\n{\n    // Show progress bar\n\
      \    UpdateProgressBar(percent);\n}"
    language: cpp
  notes: This method assumes that the player's quest log has been properly initialized
    and that the quest ID is valid. The calculation includes all objectives, including
    those that may not be visible to the player (e.g., hidden or conditional objectives).
    Performance-wise, this method should be used sparingly in performance-critical
    code paths as it involves iterating through quest data structures.
  warnings: Do not rely on this value for game logic decisions; use it only for display
    purposes. The returned percentage may not reflect the actual state of a quest
    if the player has modified their quest log or if certain conditions are not met
    in the server-side logic.
  related:
  - GetQuestStatus
  - IsQuestComplete
  - GetQuestObjectiveProgress
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:46:48.081360'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
