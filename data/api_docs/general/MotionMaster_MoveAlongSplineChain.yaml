api:
  class: MotionMaster
  method: MoveAlongSplineChain
  signature: void MotionMaster::MoveAlongSplineChain(uint32 pointId, const int & chain,
    bool walk)
documentation:
  brief: Initiates a movement along a spline chain path for the unit's motion controller.
  description: The MoveAlongSplineChain method schedules a unit to follow a predefined
    spline-based path defined by a chain of points. This method is typically used
    in AI behavior scripting or scripted creature movement where smooth, curved paths
    are required. The motion controller will execute the movement using the specified
    point ID as the starting reference and the provided chain data. The 'walk' parameter
    determines whether the unit moves at walk speed or run speed. This method does
    not immediately start the movement; it queues the action for execution in the
    next update cycle.
  parameters:
  - name: pointId
    description: The identifier of the starting point in the spline chain. This value
      is used to determine where along the chain the movement should begin.
  - name: chain
    description: A reference to an integer representing the chain index or identifier
      that defines which specific spline chain to follow. The actual data structure
      for this chain is typically managed by the AI or movement system.
  - name: walk
    description: Boolean flag indicating whether the unit should move at walk speed
      (true) or run speed (false).
  returns: null
  examples:
  - title: Basic usage for creature movement
    code: 'Creature* creature = ...;

      MotionMaster& mm = creature->GetMotionMaster();

      mm.MoveAlongSplineChain(10, 5, true); // Start at point ID 10, follow chain
      5, walk speed'
    language: cpp
  - title: Using with dynamic chain selection
    code: 'Unit* unit = ...;

      MotionMaster& mm = unit->GetMotionMaster();

      int chainIndex = GetRandomChainIndex();

      mm.MoveAlongSplineChain(0, chainIndex, false); // Start at point 0, random chain,
      run speed'
    language: cpp
  notes: This method integrates with the TrinityCore's movement system and relies
    on pre-defined spline data structures. The actual implementation of the chain
    data is usually handled by the AI subsystem or through database entries. Movement
    execution occurs asynchronously during the next update cycle, so immediate effects
    are not guaranteed.
  warnings: Ensure that the pointId and chain values correspond to valid entries in
    the movement data; otherwise, the movement may fail silently or result in undefined
    behavior. Using incorrect chain indices can cause crashes or erratic movement
    patterns.
  related:
  - MoveAlongSpline
  - MoveTo
  - MoveForward
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:42:04.131625'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
