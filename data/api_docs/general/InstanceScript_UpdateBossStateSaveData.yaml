api:
  class: InstanceScript
  method: UpdateBossStateSaveData
  signature: std::string InstanceScript::UpdateBossStateSaveData(const std::string
    & oldData, const UpdateBossStateSaveDataEvent & event)
documentation:
  brief: Updates and returns boss state save data for instance scripting.
  description: The UpdateBossStateSaveData method is responsible for managing the
    serialization and updating of boss encounter states within an instance script.
    It takes existing save data and an event object that defines how the boss states
    should be modified, then returns the updated serialized string containing all
    current boss state information. This method is typically used during instance
    progression, where boss encounters are either defeated or reset, and the save
    data needs to be updated accordingly for future load operations. The method ensures
    that encounter state persistence works correctly across server restarts or player
    reloads.
  parameters:
  - name: oldData
    description: The existing serialized boss state data string that contains current
      encounter statuses.
  - name: event
    description: An UpdateBossStateSaveDataEvent object containing information about
      which bosses have changed state and how they should be updated in the save data.
  returns: A std::string representing the updated serialized boss state data, suitable
    for saving to the database or persisting across sessions.
  examples:
  - title: Updating Boss State After Defeat
    code: 'std::string oldSaveData = instanceScript->GetBossSaveData();

      UpdateBossStateSaveDataEvent event;

      event.bossId = 12345;

      event.state = BOSS_STATE_DEFEATED;

      std::string newSaveData = instanceScript->UpdateBossStateSaveData(oldSaveData,
      event);

      instanceScript->SetBossSaveData(newSaveData);'
    language: cpp
  notes: This method is part of the core instance scripting system in TrinityCore.
    It's designed to work with the existing save/load mechanism for boss encounters
    and should be called whenever a boss encounter state changes. The method assumes
    that the input data is valid and properly formatted according to the expected
    serialization format.
  warnings: Improper handling of the event object or malformed oldData can lead to
    incorrect save states, potentially causing bosses to appear as defeated when they
    are not, or vice versa. Always ensure that boss IDs and state values conform to
    the expected enum values defined in the core codebase.
  related:
  - GetBossSaveData
  - SetBossSaveData
  - LoadBossState
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T00:09:27.880629'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
