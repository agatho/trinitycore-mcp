api:
  class: DB2Manager
  method: GetChrModel
  signature: const ChrModelEntry * DB2Manager::GetChrModel(uint8 race, uint8 gender)
    const
documentation:
  brief: Retrieves the character model entry for a specified race and gender.
  description: The GetChrModel method retrieves a ChrModelEntry from the DB2 database
    based on the provided race and gender parameters. This entry contains information
    about how characters of that race and gender are visually represented in the game,
    including model IDs, textures, and other visual attributes. The method is typically
    used during character creation or when loading player data to determine the appropriate
    visual representation for a given race and gender combination. It performs a lookup
    in an internal cache or database structure that maps race-gender combinations
    to their respective model entries.
  parameters: []
  returns: A pointer to a ChrModelEntry object containing the character model data
    for the specified race and gender. Returns nullptr if no matching entry is found
    for the given parameters.
  examples:
  - title: Retrieve Male Human Model
    code: "const ChrModelEntry* maleHumanModel = sDB2Manager->GetChrModel(RACE_HUMAN,\
      \ GENDER_MALE);\nif (maleHumanModel)\n{\n    // Use the model data\n    uint32\
      \ modelId = maleHumanModel->ModelID;\n    // ... process model data\n}"
    language: cpp
  - title: Validate Model Entry Before Use
    code: "uint8 race = RACE_ORC;\nuint8 gender = GENDER_FEMALE;\nconst ChrModelEntry*\
      \ modelEntry = sDB2Manager->GetChrModel(race, gender);\nif (modelEntry != nullptr)\n\
      {\n    // Safe to use the model entry\n    printf(\"Female Orc Model ID: %u\\\
      n\", modelEntry->ModelID);\n}\nelse\n{\n    // Handle missing model case\n \
      \   printf(\"No model found for female orc\\n\");\n}"
    language: cpp
  notes: This method accesses cached DB2 data and is generally fast. The ChrModelEntry
    structure contains fields such as ModelID, Texture IDs, and other visual properties
    that are used by the client to render characters. The internal lookup mechanism
    uses a hash map or similar data structure for efficient retrieval.
  warnings: The returned pointer may be null if no matching race-gender combination
    exists in the DB2 files. Always check for nullptr before using the returned entry
    to avoid segmentation faults. Ensure that the race and gender values passed are
    valid constants defined in the game's header files.
  related:
  - GetChrRace
  - GetChrClass
  - GetCreatureDisplayInfo
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:16:09.561448'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
