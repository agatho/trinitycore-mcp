api:
  class: SpellInfo
  method: IsExplicitDiscovery
  signature: bool SpellInfo::IsExplicitDiscovery() const
documentation:
  brief: Determines whether the spell is an explicit discovery spell.
  description: This method checks if a spell represents an explicit discovery mechanism,
    which typically occurs when a player discovers a new recipe or spell through specific
    game mechanics. The method returns true for spells that are explicitly designed
    to be discoveries, such as those used in professions or other specialized gameplay
    systems where players gain access to previously unknown abilities. This is particularly
    relevant for understanding how spells interact with the discovery system in World
    of Warcraft.
  parameters: []
  returns: Returns true if the spell is an explicit discovery spell, false otherwise.
    This indicates whether the spell triggers a discovery mechanism rather than being
    a regular spell that simply gets cast.
  examples:
  - title: Basic usage example
    code: "if (spellInfo->IsExplicitDiscovery()) {\n    // Handle discovery logic\n\
      }\n"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related functions
    to determine whether a spell should trigger a discovery event. It's important
    to note that this method does not directly handle the discovery process itself,
    but rather identifies if a spell is designed to be part of that system.
  warnings: Care should be taken when using this method as it may not always reflect
    the full picture of how spells are handled in game mechanics. Some spells might
    have multiple purposes or could be used in different contexts where explicit discovery
    isn't applicable.
  related:
  - SpellInfo::IsSpell
  - SpellInfo::HasSpell
  - SpellInfo::IsAutoCastable
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:51:20.839932'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
