api:
  class: Unit
  method: MeleeSpellHitResult
  signature: int Unit::MeleeSpellHitResult(Unit * victim, const SpellInfo * spellInfo)
    const
documentation:
  brief: Determines the outcome of a melee attack against a target unit.
  description: This method evaluates the result of a melee attack performed by the
    current unit against a victim unit, considering factors such as spell information,
    combat mechanics, and hit probabilities. It returns an integer value representing
    the outcome of the attack, which can be used to determine whether the attack lands
    successfully, misses, or is blocked. The method is typically used in combat calculations
    and is essential for determining attack outcomes in World of Warcraft's TrinityCore
    engine.
  parameters:
  - name: victim
    description: The target unit that is being attacked by the current unit. This
      parameter must be a valid Unit object, and cannot be nullptr.
  - name: spellInfo
    description: Pointer to the SpellInfo structure describing the spell being used
      in the attack. This parameter must be a valid pointer to a SpellInfo structure,
      and cannot be nullptr.
  returns: 'Returns an integer value representing the outcome of the melee attack.
    Possible values include: 0 for ''miss'', 1 for ''hit'', 2 for ''block'', 3 for
    ''critical hit'', and 4 for ''glancing blow''. The exact meaning depends on the
    implementation and context within the TrinityCore framework.'
  examples:
  - title: Basic Usage Example
    code: int result = this->MeleeSpellHitResult(target, spellInfo);
    language: cpp
  - title: Advanced Usage Example
    code: "if (result == 1) {\n    // Handle successful hit\n    // Perform damage\
      \ calculations\n}\nelse if (result == 2) {\n    // Handle block\n    // Reduce\
      \ damage\n}\nelse {\n    // Handle other outcomes\n}"
    language: cpp
  notes: This method is part of the core combat system and should be used carefully
    in conjunction with other combat-related methods. The implementation may vary
    depending on the specific type of attack being performed, and it's important to
    understand that this method does not directly perform damage but rather determines
    the outcome of a melee attack.
  warnings: This method requires both victim and spellInfo parameters to be valid
    objects; passing nullptr values will result in undefined behavior or crashes.
    Additionally, the return value should be interpreted carefully as it may vary
    based on game mechanics and specific implementation details.
  related:
  - Unit::MeleeHitResult
  - Unit::SpellHitResult
  - Unit::CalculateSpellHitResult
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T08:30:43.984496'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
