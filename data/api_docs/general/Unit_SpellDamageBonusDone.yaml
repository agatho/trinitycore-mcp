api:
  class: Unit
  method: SpellDamageBonusDone
  signature: int32 Unit::SpellDamageBonusDone(Unit * victim, const SpellInfo * spellProto,
    int32 pdamage, DamageEffectType damagetype, const SpellEffectInfo & spellEffectInfo,
    uint32 stack, Spell * spell, const AuraEffect * aurEff) const
documentation:
  brief: Calculates spell damage bonus done for a target unit
  description: This method computes the total spell damage bonus applied to a target
    unit based on various factors including spell properties, damage type, and aura
    effects. It is used in the calculation of damage dealt by spells, particularly
    for damage-over-time effects or direct damage spells. The method considers the
    victim's resistance, the spell's base damage, and any applicable modifiers from
    aura effects or stacking. This function plays a crucial role in determining how
    much damage a spell will deal to a target during combat.
  parameters:
  - name: victim
    description: The target unit receiving the spell damage. Must be valid and not
      null.
  - name: spellProto
    description: Pointer to the SpellInfo structure defining the spell properties.
      This includes base damage, effects, and other relevant information.
  - name: pdamage
    description: Base damage value to be modified by bonus calculations. Can be positive
      or negative depending on context.
  - name: damagetype
    description: Enum representing the type of damage being calculated (physical,
      magical, etc.). Determines how bonuses are applied.
  - name: spellEffectInfo
    description: Reference to SpellEffectInfo structure containing details about the
      specific spell effect being processed.
  - name: stack
    description: Number of times the spell is stacked (or applied). Affects how bonuses
      are calculated, particularly for effects like damage over time.
  - name: spell
    description: Pointer to the Spell object being cast. Used to determine which specific
      spell is being processed and its effects.
  - name: aurEff
    description: Pointer to the AuraEffect that may be influencing the damage calculation.
      Can be null if no aura effect applies.
  returns: Returns an integer representing the calculated bonus damage value. Positive
    values indicate increased damage, while negative values indicate reduced damage.
  examples:
  - title: Basic usage example
    code: int32 damage = unit->SpellDamageBonusDone(target, spellInfo, baseDamage,
      SPELL_DAMAGE_TYPE, spellEffectInfo, stack, spell, aura);
    language: cpp
  - title: Advanced usage with multiple effects
    code: int32 bonus = unit->SpellDamageBonusDone(target, spellInfo, baseDamage,
      SPELL_DAMAGE_TYPE, spellEffectInfo, stack, spell, aura); int32 totalDamage =
      baseDamage + bonus;
    language: cpp
  notes: This method is part of the core damage calculation system in TrinityCore.
    It should be used carefully as it directly affects combat mechanics and damage
    output. Performance considerations include checking for null pointers and ensuring
    proper spell data validation before calling.
  warnings: Improper handling of parameters can lead to incorrect damage calculations,
    potentially causing game balance issues or unexpected behavior during combat.
    Ensure that all parameters are valid before calling this method.
  related:
  - SpellDamageBonusDone
  - SpellDamageBonusTaken
  - SpellCast
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:14:24.508237'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
