api:
  class: SpellScript
  method: GetHitDest
  signature: WorldLocation * SpellScript::GetHitDest() const
documentation:
  brief: Returns the destination location where a spell hits its target.
  description: The GetHitDest method retrieves the WorldLocation object representing
    the final destination point of a spell's impact. This location is typically set
    during spell casting and represents where the spell effect will occur in the world.
    The returned pointer points to an internal data structure that should not be modified
    directly. This method is commonly used in spell script implementations to determine
    where effects are applied or to calculate positional relationships between caster
    and target.
  parameters: []
  returns: A pointer to a WorldLocation object representing the destination coordinates
    where the spell impacts, or nullptr if no valid destination has been set.
  examples:
  - title: Basic Usage in Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\n\
      \    {\n        WorldLocation* dest = GetHitDest();\n        if (dest)\n   \
      \     {\n            // Use the destination coordinates\n            float x\
      \ = dest->coord_x;\n            float y = dest->coord_y;\n            float\
      \ z = dest->coord_z;\n            // Perform actions based on hit location\n\
      \        }\n    }\n};"
    language: cpp
  - title: Checking Distance to Hit Destination
    code: "class DistanceCheckSpellScript : public SpellScript\n{\npublic:\n    void\
      \ CheckDistance()\n    {\n        WorldLocation* dest = GetHitDest();\n    \
      \    if (dest && GetCaster())\n        {\n            float distance = GetCaster()->GetDistance(dest->coord_x,\
      \ dest->coord_y, dest->coord_z);\n            // Apply logic based on distance\
      \ to hit location\n        }\n    }\n};"
    language: cpp
  notes: The returned WorldLocation pointer is managed internally by the spell system
    and should not be deleted or modified. The destination may be nullptr if the spell
    has not yet been processed or if it's a spell that doesn't have a defined hit
    location. This method is primarily used within spell effect handlers and should
    only be called during appropriate spell execution phases.
  warnings: Do not store the returned pointer beyond the scope of the current spell
    execution cycle as it may become invalid. Avoid modifying the returned WorldLocation
    object directly, as this can cause unexpected behavior in the spell system. Be
    cautious when using this method with spells that might not have a defined destination
    (e.g., area-of-effect spells with no specific target).
  related:
  - GetHitTarget
  - GetCaster
  - GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:56:27.369420'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
