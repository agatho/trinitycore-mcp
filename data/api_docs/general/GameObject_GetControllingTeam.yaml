api:
  class: GameObject
  method: GetControllingTeam
  signature: int GameObject::GetControllingTeam() const
documentation:
  brief: Returns the team identifier that controls the GameObject
  description: This method retrieves the team ID associated with the GameObject's
    controlling player or faction. It is commonly used in World of Warcraft's TrinityCore
    framework to determine which team (Alliance or Horde) a GameObject belongs to,
    particularly for quest-related objects or those controlled by players. The returned
    value corresponds to either 0 (Alliance) or 1 (Horde), with 2 indicating no controlling
    team. This method is essential for determining object ownership and can be used
    in conjunction with other methods like GetOwner() to understand the GameObject's
    relationship with player characters.
  parameters: []
  returns: Returns an integer representing the team ID of the controlling player or
    faction. Value 0 indicates Alliance, value 1 indicates Horde, and value 2 indicates
    no controlling team. Returns -1 if the GameObject has no owner or control.
  examples:
  - title: Basic Usage Example
    code: "int team = gameObject->GetControllingTeam();\nif (team == 0)\n{\n    //\
      \ Handle Alliance team\n}\nelse if (team == 1)\n{\n    // Handle Horde team\n\
      }\nelse\n{\n    // No team control\n}"
    language: cpp
  notes: This method is typically used in conjunction with GetOwner() to determine
    the relationship between a GameObject and player characters. The implementation
    relies on the GameObject's owner or faction information, which may be set during
    creation or through game mechanics. Performance considerations are minimal as
    this method involves simple data retrieval.
  warnings: Be cautious when using this method with objects that may not have an owner
    or control; it can return -1 in such cases, which might lead to unexpected behavior
    if not handled properly. Also note that the returned value is not necessarily
    tied to the GameObject's faction but rather to its controlling player or team.
  related:
  - GetOwner
  - GetFaction
  - GetEntry
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:30:59.810244'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
