api:
  class: Spell
  method: SendPetCastResult
  signature: void Spell::SendPetCastResult(SpellCastResult result, int32 * param1,
    int32 * param2) const
documentation:
  brief: Sends a pet cast result message to the player's client
  description: This method sends a spell cast result message to the player's client,
    indicating whether a pet spell was successfully cast or if there were any errors.
    It is used primarily in conjunction with pet spell casting mechanics and handles
    the communication between server and client for pet spell outcomes. The method
    takes a SpellCastResult enum value and two optional integer parameters that may
    contain additional information about the spell result.
  parameters:
  - name: result
    description: The SpellCastResult enum value indicating the outcome of the pet
      spell cast. This can be one of several values such as SPELL_CAST_SUCCESS, SPELL_CAST_FAILED,
      or other error conditions.
  - name: param1
    description: Optional integer pointer containing additional data about the spell
      result, typically used for specific parameters like spell ID or target information.
  - name: param2
    description: Optional integer pointer containing additional data about the spell
      result, typically used for specific parameters like spell ID or target information.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Spell* spell = new Spell(player, spellId);

      spell->SendPetCastResult(SPELL_CAST_SUCCESS, nullptr, nullptr);'
    language: cpp
  - title: Advanced usage example
    code: 'Spell* spell = new Spell(player, spellId);

      int32 param1 = 100;

      int32 param2 = 200;

      spell->SendPetCastResult(SPELL_CAST_FAILED, &param1, &param2);'
    language: cpp
  notes: This method is typically used in the context of pet spell casting and requires
    proper handling of spell cast results. The method may be called from various spell-related
    functions within the TrinityCore framework and should be used carefully to ensure
    correct client communication.
  warnings: Improper use of this method can lead to incorrect client behavior or failed
    spell casting. Care must be taken when passing parameters to ensure they are properly
    initialized and valid.
  related:
  - Spell::SendCastResult
  - Spell::SendSpellStart
  - Spell::SendSpellGo
  - Spell::SendSpellFailed
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:48:47.371425'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
