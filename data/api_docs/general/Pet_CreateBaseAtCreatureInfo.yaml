api:
  class: Pet
  method: CreateBaseAtCreatureInfo
  signature: bool Pet::CreateBaseAtCreatureInfo(const int * cinfo, int * owner)
documentation:
  brief: Initializes a pet's base creature information using provided creature data
    and owner reference.
  description: The CreateBaseAtCreatureInfo method sets up the foundational creature
    attributes for a Pet object based on the provided creature template information.
    This method typically initializes core properties such as entry ID, level, health,
    and other essential stats required for the pet to function within the game world.
    It requires valid creature information and an owner reference to properly configure
    the pet's base characteristics. The method is commonly used during pet creation
    or when loading existing pets from database storage.
  parameters:
  - name: cinfo
    description: Pointer to an array of integers containing creature template information
      including entry ID, level, health, and other base stats. Expected to be a valid
      pointer to at least 10 integer values representing creature data.
  - name: owner
    description: Pointer to an integer representing the owner's GUID or identifier.
      Must point to a valid player or creature GUID that will become the pet's owner.
  returns: Returns true if the pet was successfully initialized with the provided
    creature information and owner reference, false otherwise. The method may return
    false if either parameter is null, invalid data is provided, or initialization
    fails due to internal validation checks.
  examples:
  - title: Basic Pet Creation
    code: "int creatureData[10] = {1234, 10, 100, 50, 25, 10, 5, 2, 1, 0};\nint ownerGUID\
      \ = 5678;\nPet* pet = new Pet();\nbool success = pet->CreateBaseAtCreatureInfo(creatureData,\
      \ &ownerGUID);\nif (success) {\n    // Pet initialized successfully\n}"
    language: cpp
  - title: Error Handling Example
    code: "int* invalidData = nullptr;\nint ownerGUID = 5678;\nPet* pet = new Pet();\n\
      bool success = pet->CreateBaseAtCreatureInfo(invalidData, &ownerGUID);\nif (!success)\
      \ {\n    // Handle initialization failure\n    printf(\"Failed to create pet\
      \ from creature data\\n\");\n}"
    language: cpp
  notes: This method is typically called during pet instantiation and should only
    be invoked once per pet object. The cinfo array must contain valid creature template
    data that matches the expected format for the game's internal pet system. The
    owner parameter must reference a valid existing entity in the world.
  warnings: Passing null pointers to either parameter will likely result in undefined
    behavior or crashes. Ensure that the creature data array contains at least 10
    integers with valid values before calling this method. This method does not perform
    full validation of all creature data - it assumes the input is properly formatted.
  related:
  - Pet::LoadFromDB
  - Pet::SaveToDB
  - Pet::SetOwner
  - Pet::GetCreatureInfo
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:21:39.082858'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
