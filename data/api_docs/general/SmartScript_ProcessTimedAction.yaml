api:
  class: SmartScript
  method: ProcessTimedAction
  signature: void SmartScript::ProcessTimedAction(SmartScriptHolder & e, const uint32
    & min, const uint32 & max, Unit * unit, uint32 var0, uint32 var1, bool bvar, const
    SpellInfo * spell, GameObject * gob, int varString)
documentation:
  brief: Processes a timed action within the SmartScript AI system based on provided
    parameters.
  description: The ProcessTimedAction method is responsible for executing a specific
    timed action defined in the SmartScript AI framework. It evaluates whether a given
    time-based event should be triggered, using minimum and maximum delay values to
    determine timing. The method accepts various contextual data including unit, spell,
    game object, and variable parameters to customize the behavior of the action.
    This function is typically invoked by the AI system during script execution when
    a timed event needs to be processed. It integrates with the overall SmartScript
    system to manage conditional logic and event scheduling for NPC behaviors.
  parameters:
  - name: e
    description: Reference to the SmartScriptHolder containing the script data and
      action configuration for this timed event.
  - name: min
    description: Minimum delay value (in milliseconds) before the timed action is
      executed.
  - name: max
    description: Maximum delay value (in milliseconds) before the timed action is
      executed. If min equals max, a fixed delay is used.
  - name: unit
    description: Pointer to the Unit object that triggered or is associated with this
      timed action. Can be NULL if not applicable.
  - name: var0
    description: First variable parameter used for customizing action behavior. Value
      depends on the specific action type defined in the SmartScriptHolder.
  - name: var1
    description: Second variable parameter used for customizing action behavior. Value
      depends on the specific action type defined in the SmartScriptHolder.
  - name: bvar
    description: Boolean flag that can be used to control conditional logic within
      the timed action execution.
  - name: spell
    description: Pointer to a SpellInfo object representing the spell associated with
      this timed action. Can be NULL if not applicable.
  - name: gob
    description: Pointer to a GameObject that is relevant to this timed action. Can
      be NULL if not applicable.
  - name: varString
    description: Integer value used for string-based parameters or custom logic within
      the timed action. Value depends on the specific action type defined in the SmartScriptHolder.
  returns: null
  examples:
  - title: Basic Timed Action Processing
    code: 'SmartScriptHolder holder;

      holder.entry = 12345;

      holder.event_type = SMART_EVENT_TIMED_ACTION;

      // Set up other holder properties...

      uint32 minDelay = 1000;

      uint32 maxDelay = 3000;

      Unit* targetUnit = nullptr;

      uint32 var0 = 5;

      uint32 var1 = 10;

      bool bvar = true;

      const SpellInfo* spellInfo = nullptr;

      GameObject* go = nullptr;

      int stringVar = 0;

      smartScript->ProcessTimedAction(holder, minDelay, maxDelay, targetUnit, var0,
      var1, bvar, spellInfo, go, stringVar);'
    language: cpp
  notes: This method is part of the core SmartScript AI system and should only be
    called from within the AI execution context. The timing mechanism uses a random
    value between min and max to determine when the action executes, providing variability
    in behavior. It's important to ensure that all parameters are properly initialized
    before calling this function to avoid undefined behavior.
  warnings: Calling this method with invalid or uninitialized parameters may lead
    to crashes or unexpected AI behavior. The SmartScriptHolder must contain valid
    configuration data for the action to execute correctly. Be cautious when using
    NULL pointers for unit, spell, or game object parameters as they may cause assertion
    failures in debug builds.
  related:
  - SmartScript::ProcessEvent
  - SmartScript::ExecuteAction
  - SmartScript::StartTimer
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:21:53.587887'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
