api:
  class: Creature
  method: GetAIName
  signature: const std::string & Creature::GetAIName() const
documentation:
  brief: Returns the AI script name assigned to the creature.
  description: The GetAIName method retrieves the AI script name that has been assigned
    to a specific creature instance. This method is used to determine which AI script
    is currently active for the creature, allowing developers to identify and potentially
    modify the behavior of creatures based on their AI configuration. The returned
    string represents the name of the AI script registered in the database for this
    particular creature, which can be used for debugging or implementing custom logic
    based on specific AI types.
  parameters: []
  returns: Returns a const reference to a std::string containing the AI script name
    assigned to the creature. If no AI script has been assigned, it returns an empty
    string.
  examples:
  - title: Basic Usage Example
    code: "Creature* creature = GetCreature();\nstd::string aiName = creature->GetAIName();\n\
      if (!aiName.empty()) {\n    // Do something with the AI name\n}"
    language: cpp
  notes: This method is typically used in conjunction with other AI-related methods
    to manage creature behavior. It should be noted that the AI script name returned
    may not always correspond to a real script in the database, as some creatures
    might have their AI set to "none" or similar default values.
  warnings: Be cautious when using this method in performance-critical code sections,
    as accessing the AI name may involve string comparisons and could potentially
    impact performance if used frequently. Also, ensure that the creature object is
    valid before calling this method, as dereferencing an invalid pointer can lead
    to crashes.
  related:
  - GetAI
  - SetAIName
  - GetEntry
  - GetScriptName
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:24:26.255131'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
