api:
  class: LfgPlayerData
  method: LfgPlayerData
  signature: void LfgPlayerData::LfgPlayerData(LfgPlayerData && other)
documentation:
  brief: Moves another LfgPlayerData object's resources into this instance.
  description: The LfgPlayerData move constructor transfers all resources from the
    source LfgPlayerData object to the current object, leaving the source in a valid
    but unspecified state. This is a standard C++ move semantics implementation used
    for efficient resource management when transferring ownership of data. In the
    context of TrinityCore's LFG (Looking for Group) system, this constructor facilitates
    efficient handling of player data objects during group formation and management
    operations. The operation is typically used internally by the LFG subsystem when
    reorganizing or relocating player data structures.
  parameters: []
  returns: null
  examples:
  - title: Move Constructing an LfgPlayerData Object
    code: 'LfgPlayerData data1;

      // ... populate data1 with some LFG data ...

      LfgPlayerData data2 = std::move(data1); // Move constructor called here

      // data1 is now in a valid but unspecified state'
    language: cpp
  notes: This constructor follows standard move semantics. After the move, the source
    object should not be used for operations that require valid data. The implementation
    assumes that the moved-from object will be left in a valid state suitable for
    destruction or assignment.
  warnings: Using the moved-from object after this operation results in undefined
    behavior. Ensure that no other code attempts to access the source object's data
    after the move operation completes.
  related:
  - LfgPlayerData::~LfgPlayerData
  - LfgPlayerData& LfgPlayerData::operator=(LfgPlayerData&& other)
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T03:42:11.973204'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
