api:
  class: Unit
  method: getDeathState
  signature: DeathState Unit::getDeathState() const
documentation:
  brief: Returns the death state of the unit, indicating whether it is alive or dead.
  description: The getDeathState method retrieves the current death state of a Unit
    object, which determines whether the unit is in a live or dead state. This method
    is commonly used in game mechanics to check if a creature or player has died and
    to handle various death-related behaviors such as loot drops, quest completion,
    or respawn conditions. The returned DeathState enum value can be used to determine
    the appropriate action based on the unit's status.
  parameters: []
  returns: Returns a DeathState enum value that indicates whether the unit is alive
    (DeathState::Alive) or dead (DeathState::Dead). The enum typically includes states
    such as 'Alive', 'Dead', and potentially 'Corpse' depending on the context.
  examples:
  - title: Basic usage example
    code: "if (unit->getDeathState() == DeathState::Dead)\n{\n    // Handle dead unit\n\
      }"
    language: cpp
  notes: This method is thread-safe and does not require any special considerations
    for implementation. It simply returns the current state of the unit without modifying
    anything.
  warnings: null
  related:
  - getHealth
  - getMaxHealth
  - isDead
  - setDeathState
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:56:18.441536'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
