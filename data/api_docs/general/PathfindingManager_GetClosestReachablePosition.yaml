api:
  class: PathfindingManager
  method: GetClosestReachablePosition
  signature: int PathfindingManager::GetClosestReachablePosition(const int & target)
documentation:
  brief: Finds the closest reachable position to a given target within the navigation
    mesh.
  description: The GetClosestReachablePosition method calculates and returns the nearest
    navigable position that is reachable from the current agent's location, based
    on the provided target position. This method is essential for pathfinding operations
    in TrinityCore's AI system, ensuring that NPCs or creatures can navigate to valid
    locations even when direct paths are blocked. It utilizes the underlying navigation
    mesh to determine reachability and returns a unique identifier representing this
    closest reachable point. The method assumes that the target position has already
    been validated for validity within the game world.
  parameters: []
  returns: An integer identifier representing the closest reachable position in the
    navigation system. Returns -1 if no valid reachable position can be found or if
    the input is invalid.
  examples:
  - title: Basic Usage Example
    code: "int targetPosition = 12345;\nint closestReachable = pathfindingManager->GetClosestReachablePosition(targetPosition);\n\
      if (closestReachable != -1) {\n    // Proceed with navigation to the reachable\
      \ position\n    printf(\"Closest reachable position: %d\\n\", closestReachable);\n\
      } else {\n    // Handle case where no reachable position exists\n    printf(\"\
      No reachable position found.\\n\");\n}"
    language: cpp
  notes: This method relies on the navigation mesh being properly initialized and
    updated. Performance may be affected by complex terrain or large numbers of obstacles
    in the vicinity of the target position. The returned identifier should be used
    directly with other pathfinding APIs that expect position identifiers.
  warnings: Ensure that the target parameter represents a valid position within the
    game world before calling this method. Invalid positions may lead to unexpected
    behavior or return values. This method does not perform any automatic obstacle
    avoidance; it only finds the closest reachable point based on the current navigation
    mesh state.
  related:
  - GetNextWaypoint
  - CalculatePath
  - IsPositionReachable
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T08:41:02.816612'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
