api:
  class: Unit
  method: GetArmorMultiplierForTarget
  signature: float Unit::GetArmorMultiplierForTarget(const int * param0) const
documentation:
  brief: Calculates the armor multiplier for a target based on the specified parameter.
  description: This method computes the armor multiplier that applies to a target,
    using an integer parameter as input. The function is typically used in combat
    calculations where armor values are adjusted based on target characteristics or
    difficulty levels. It returns a float value representing the calculated multiplier
    which can be used for determining damage reduction or other combat-related mechanics.
    The method operates on the unit's internal armor calculation logic and may involve
    specific game mechanics related to armor penetration or target resistance.
  parameters:
  - name: param0
    description: An integer parameter that determines the target's armor multiplier
      calculation. This value typically represents a difficulty level or target type,
      and may influence how armor is applied in combat calculations.
  returns: A float value representing the calculated armor multiplier for the target.
    This value can be less than 1.0 if armor penetration reduces effectiveness, or
    greater than 1.0 if the target has increased armor resistance. The return value
    may also be zero if the target is invalid or if no armor calculation is applicable.
  examples:
  - title: Basic usage example
    code: "float multiplier = unit->GetArmorMultiplierForTarget(&difficulty);\nif\
      \ (multiplier > 0) {\n    // Apply armor reduction\n}"
    language: cpp
  notes: This method is part of the Unit class and relies on internal combat calculations.
    It may involve complex game mechanics related to armor penetration, target resistance,
    or difficulty adjustment. Performance considerations include potential for multiple
    calls during combat calculations.
  warnings: Be cautious when using this method with invalid parameters, as it may
    lead to unexpected results or errors. Ensure that the parameter value is valid
    before calling this method.
  related:
  - GetArmor
  - GetAttackPower
  - GetDamageMultiplierForTarget
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T08:23:23.612657'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
