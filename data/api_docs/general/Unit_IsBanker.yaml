api:
  class: Unit
  method: IsBanker
  signature: bool Unit::IsBanker() const
documentation:
  brief: Determines whether the unit is a banker.
  description: The IsBanker method checks if the current Unit object represents a
    banker NPC, typically found in cities or towns where players can deposit and withdraw
    gold from their bank. This method is commonly used in game logic to identify NPCs
    that handle banking services. The function returns true when the unit is a banker,
    false otherwise, and is often used in conjunction with other banking-related methods
    to determine if an NPC supports banking functionality.
  parameters: []
  returns: Returns true if the unit is a banker NPC, false otherwise. This indicates
    whether the current unit object represents a bank manager or similar banking service
    provider.
  examples:
  - title: Basic usage example
    code: "if (unit->IsBanker()) {\n    // Handle banker logic\n}"
    language: cpp
  notes: This method is typically used in conjunction with other methods like IsTrainer
    or IsVendor to determine NPC service types. Implementation relies on the unit's
    entry ID and flags, which are checked against known banker NPC IDs.
  warnings: This method should be used carefully as it may not always reflect the
    actual banking functionality of an NPC. Some NPCs might have banking capabilities
    but not be flagged as bankers in their database entries.
  related:
  - IsTrainer
  - IsVendor
  - IsInnkeeper
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:13:40.356727'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
