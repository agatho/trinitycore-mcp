api:
  class: ObjectMgr
  method: GetPetLevelInfo
  signature: const PetLevelInfo * ObjectMgr::GetPetLevelInfo(uint32 creature_id, uint8
    level) const
documentation:
  brief: Retrieves pet level information for a specified creature ID and level.
  description: The GetPetLevelInfo method fetches the PetLevelInfo structure that
    contains data about a pet's statistics, such as health, mana, damage, and other
    attributes, based on the creature ID and the pet's level. This function is typically
    used in the context of pet management within World of Warcraft's TrinityCore server
    implementation. It allows for dynamic scaling of pet stats according to their
    level and type, which is essential for balancing gameplay mechanics. The method
    accesses internal data structures that store pet level progression information,
    ensuring accurate stat calculation for pets across different levels.
  parameters:
  - name: creature_id
    description: The unique identifier of the creature type (pet) for which to retrieve
      level information.
  - name: level
    description: The level of the pet for which to retrieve statistics. Valid range
      is typically 1-100 depending on game rules.
  returns: A pointer to a const PetLevelInfo structure containing the pet's level-specific
    data, or nullptr if no information is found for the given creature ID and level.
  examples:
  - title: Retrieve pet stats for a level 10 Imp
    code: "const PetLevelInfo* info = sObjectMgr->GetPetLevelInfo(416, 10); // Imp\
      \ has creature ID 416\nif (info)\n{\n    printf(\"Imp HP: %u, Mana: %u\\n\"\
      , info->health, info->mana);\n}"
    language: cpp
  - title: Validate pet level data before use
    code: "uint32 petCreatureId = 416; // Imp\nuint8 petLevel = 50;\nconst PetLevelInfo*\
      \ petInfo = sObjectMgr->GetPetLevelInfo(petCreatureId, petLevel);\nif (petInfo\
      \ != nullptr)\n{\n    // Use petInfo for calculations or display\n    uint32\
      \ maxHealth = petInfo->health;\n}\nelse\n{\n    // Handle missing data case\n\
      \    sLog->outError(\"No level info found for pet %u at level %u\", petCreatureId,\
      \ petLevel);\n}"
    language: cpp
  notes: This method relies on internal database or static data tables that define
    pet progression. The returned pointer is valid only during the lifetime of the
    ObjectMgr instance and should not be stored for later use. It's designed to be
    thread-safe for read operations, but modifications to the underlying data should
    be handled carefully.
  warnings: Do not assume all creature IDs have corresponding PetLevelInfo entries;
    always check for null return values. The method may return nullptr if invalid
    parameters are passed or if no data exists for that specific creature ID and level
    combination.
  related:
  - GetCreatureTemplate
  - GetPetLevelInfo
  - LoadPetLevelInfo
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:25:50.756240'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
