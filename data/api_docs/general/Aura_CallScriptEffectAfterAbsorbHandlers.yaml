api:
  class: Aura
  method: CallScriptEffectAfterAbsorbHandlers
  signature: void Aura::CallScriptEffectAfterAbsorbHandlers(AuraEffect * aurEff, const
    AuraApplication * aurApp, HealInfo & healInfo, uint32 & absorbAmount)
documentation:
  brief: Calls all script handlers for the AfterAbsorb effect of an aura.
  description: This method invokes all registered script handlers that are associated
    with the 'AfterAbsorb' effect of a given aura. It is typically called during the
    healing absorption process to allow custom scripts to modify or react to how healing
    is absorbed by a target. The method passes along the relevant aura effect, application
    context, heal information, and the absorb amount for manipulation or logging purposes.
  parameters:
  - name: aurEff
    description: Pointer to the AuraEffect that triggered this call. Represents the
      specific effect of the aura being processed.
  - name: aurApp
    description: Pointer to the AuraApplication context, providing information about
      how the aura is applied to a target.
  - name: healInfo
    description: Reference to a HealInfo structure containing details about the healing
      being processed, such as original amount, overhealing, etc.
  - name: absorbAmount
    description: Reference to a uint32 value representing the current absorb amount.
      This can be modified by script handlers to alter how much healing is absorbed.
  returns: null
  examples:
  - title: Basic usage in a custom aura script
    code: "void MyAuraScript::HandleAfterAbsorb(AuraEffect* aurEff, const AuraApplication*\
      \ aurApp, HealInfo& healInfo, uint32& absorbAmount)\n{\n    // Modify the absorb\
      \ amount based on some condition\n    if (absorbAmount > 100)\n        absorbAmount\
      \ = 100;\n    \n    // Call base handler if needed\n    CallScriptEffectAfterAbsorbHandlers(aurEff,\
      \ aurApp, healInfo, absorbAmount);\n}"
    language: cpp
  notes: This method is part of the aura script system in TrinityCore and should only
    be called from within aura effect handlers. It's important to ensure that any
    modifications to 'absorbAmount' are done carefully to avoid unexpected behavior
    in healing absorption mechanics.
  warnings: Modifying the 'absorbAmount' parameter directly can significantly affect
    how healing is processed, potentially leading to game balance issues or unexpected
    visual effects. Always validate changes before applying them.
  related:
  - CallScriptEffectApplyHandlers
  - CallScriptEffectRemoveHandlers
  - CallScriptEffectCalcAbsorb
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:08:25.079916'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
