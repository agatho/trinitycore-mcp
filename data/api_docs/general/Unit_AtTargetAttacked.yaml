api:
  class: Unit
  method: AtTargetAttacked
  signature: void Unit::AtTargetAttacked(Unit * target, bool canInitialAggro)
documentation:
  brief: Handles target attack behavior for unit
  description: This method manages the attack behavior when a unit is attacked by
    another unit. It determines whether the attacked unit should initiate aggressive
    behavior towards the attacker, considering factors such as initial aggro state
    and combat mechanics. The method is typically used in AI systems to control how
    units respond to attacks and maintain proper combat states.
  parameters:
  - name: target
    description: The unit that is attacking this unit. This parameter defines the
      source of the attack and determines how the attacked unit responds to the aggression.
  - name: canInitialAggro
    description: Boolean flag indicating whether initial aggro can be established.
      If true, the attacked unit may establish initial aggressive behavior towards
      the target; if false, it will not initiate aggressive behavior.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit *target = new Unit();

      Unit *attacker = new Unit();

      attacker->AtTargetAttacked(target, true);'
    language: cpp
  - title: Advanced usage example
    code: "Unit *target = new Unit();\nUnit *attacker = new Unit();\nif (attacker->AtTargetAttacked(target,\
      \ false)) {\n    // Handle non-aggressive response\n}\nelse {\n    // Handle\
      \ aggressive response\n}"
    language: cpp
  notes: This method is part of the core combat system and should be used carefully
    in AI implementations. It may affect unit's aggro behavior and should be called
    only when necessary to avoid performance issues.
  warnings: Improper use of this method can lead to incorrect combat behavior, including
    failure to establish proper aggro or unexpected aggressive responses. Care must
    be taken when implementing AI logic involving this method.
  related:
  - Unit::AtTargetAttacked
  - Unit::Attack
  - Unit::Aggro
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:25:42.881133'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
