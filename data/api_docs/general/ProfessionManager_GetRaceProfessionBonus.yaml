api:
  class: ProfessionManager
  method: GetRaceProfessionBonus
  signature: uint16 ProfessionManager::GetRaceProfessionBonus(uint8 raceId, ProfessionType
    profession) const
documentation:
  brief: Retrieves the racial bonus value for a specified profession type.
  description: The GetRaceProfessionBonus method returns the bonus modifier applied
    to a specific profession for a given race. This value is typically used in World
    of Warcraft's skill calculation system to determine how much additional skill
    points or proficiency a player gains based on their character's race when training
    a particular profession. The method takes into account both the race identifier
    and the profession type to return an appropriate bonus value that may influence
    crafting, gathering, or other profession-related mechanics.
  parameters:
  - name: raceId
    description: The unique identifier of the player's race. Valid values correspond
      to the Race enum values in TrinityCore (e.g., RACE_HUMAN = 1, RACE_ORC = 2,
      etc.).
  - name: profession
    description: The type of profession for which to retrieve the bonus. This parameter
      should be a value from the ProfessionType enum representing specific professions
      like PROFESSION_FIRST_AID, PROFESSION_COOKING, etc.
  returns: Returns a uint16 value representing the racial bonus modifier for the specified
    profession and race combination. A value of 0 typically indicates no bonus is
    applied for that particular race-profession pair.
  examples:
  - title: Retrieve racial bonus for Human Alchemy
    code: uint16 bonus = manager.GetRaceProfessionBonus(RACE_HUMAN, PROFESSION_ALCHEMY);
    language: cpp
  - title: Check bonus for Orc Enchanting
    code: "uint16 bonus = manager.GetRaceProfessionBonus(RACE_ORC, PROFESSION_ENCHANTING);\n\
      if (bonus > 0)\n{\n    printf(\"Orcs get +%u bonus to Enchanting skill\\n\"\
      , bonus);\n}"
    language: cpp
  notes: This method likely accesses internal data structures that store racial profession
    bonuses defined in the game's configuration files or database. The implementation
    may cache results for performance reasons, especially since this method could
    be called frequently during skill calculations.
  warnings: Ensure that raceId and profession values are valid enums to avoid undefined
    behavior. Invalid enum values might lead to incorrect bonus calculations or memory
    access violations.
  related:
  - GetProfessionBonus
  - GetRaceProfessionSkillLevel
  - SetRaceProfessionBonus
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:01:28.178310'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
