api:
  class: Map
  method: GetCorpse
  signature: int * Map::GetCorpse(const int & guid)
documentation:
  brief: Returns the corpse object associated with a given GUID for the current map.
  description: The GetCorpse method retrieves the corpse object corresponding to a
    specific GUID within the current map. This method is commonly used in World of
    Warcraft's TrinityCore framework to access player corpses after death, allowing
    developers to query or manipulate corpse data such as position, faction, and respawn
    time. The method operates on the map's internal corpse storage system, ensuring
    that only valid GUIDs are returned. It is particularly useful for handling player
    death mechanics and corpse management in game logic.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the corpse being retrieved. This
      should be a valid GUID representing a player or creature corpse within the map's
      scope.
  returns: Returns a pointer to the corpse object associated with the given GUID,
    or nullptr if no such corpse exists in the current map. The returned pointer can
    be used for further manipulation of corpse data including position, faction, and
    respawn time.
  examples:
  - title: Basic usage example
    code: "Corpse* corpse = map->GetCorpse(12345);\nif (corpse != nullptr)\n{\n  \
      \  // Process the corpse\n}"
    language: cpp
  - title: Advanced usage with faction checking
    code: "Corpse* corpse = map->GetCorpse(12345);\nif (corpse && corpse->GetCorpseType()\
      \ == CORPSE_TYPE_NORMAL)\n{\n    // Check if corpse is a normal player corpse\n\
      }"
    language: cpp
  notes: This method should be used carefully as it may return nullptr if the GUID
    does not correspond to an existing corpse. The method is thread-safe within the
    context of map operations, but developers must ensure that the map's internal
    state remains consistent during operations. Performance considerations include
    checking for valid GUIDs before calling this method.
  warnings: Be cautious when using this method with invalid GUIDs as it may lead to
    null pointer dereferences. Ensure that the GUID is valid and corresponds to an
    existing corpse before attempting to access it. Also, be aware of potential race
    conditions if multiple threads are accessing the same map's corpse data simultaneously.
  related:
  - GetCorpse
  - GetPlayer
  - GetCreature
  - GetGameObject
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:24:39.794105'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
