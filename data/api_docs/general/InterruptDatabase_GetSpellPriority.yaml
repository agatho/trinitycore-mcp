api:
  class: InterruptDatabase
  method: GetSpellPriority
  signature: InterruptPriority InterruptDatabase::GetSpellPriority(uint32 spellId,
    uint8 mythicLevel)
documentation:
  brief: Retrieves the interrupt priority level for a specified spell and mythic dungeon
    level.
  description: The GetSpellPriority method determines the priority of a given spell
    when used in interrupting enemy actions during Mythic+ dungeons. This priority
    value influences how spells are prioritized for use against enemies, particularly
    in high-level content where timing and effectiveness of interrupts are crucial.
    The method takes into account both the spell's inherent properties and the current
    mythic dungeon level to return an appropriate interrupt priority classification.
    This is essential for AI behavior and player decision-making in challenging dungeon
    scenarios.
  parameters:
  - name: spellId
    description: The unique identifier of the spell being evaluated for interrupt
      priority. Must correspond to a valid spell entry in the game database.
  - name: mythicLevel
    description: The current Mythic+ dungeon level (1-20). Used to adjust spell priority
      based on dungeon difficulty and encounter complexity.
  returns: Returns an InterruptPriority enum value indicating the spell's interrupt
    priority level. Possible values typically include LOW, MEDIUM, HIGH, or VERY_HIGH,
    representing how effectively the spell should be used for interrupting enemy actions.
  examples:
  - title: Basic Usage Example
    code: "InterruptPriority priority = interruptDatabase.GetSpellPriority(12345,\
      \ 10);\nif (priority >= InterruptPriority::HIGH) {\n    // Use this spell for\
      \ interrupts\n}"
    language: cpp
  - title: Advanced Usage with Priority Comparison
    code: "uint32 interruptSpellId = 67890;\nInterruptPriority currentPriority = interruptDatabase.GetSpellPriority(interruptSpellId,\
      \ player->GetMythicPlusLevel());\nif (currentPriority >= InterruptPriority::HIGH)\
      \ {\n    // Prioritize this spell for interrupt usage\n    player->SetInterruptSpell(interruptSpellId);\n\
      }"
    language: cpp
  notes: This method likely uses internal database lookups or cached values for performance.
    The mythicLevel parameter affects priority scaling, with higher levels potentially
    increasing the effectiveness of certain interrupt spells. The implementation may
    cache results to avoid repeated database queries during combat scenarios.
  warnings: Ensure that spellId corresponds to a valid interrupt spell in the game
    database; invalid IDs may return unexpected priority values. The method should
    not be called during high-frequency operations without considering performance
    implications.
  related:
  - GetSpellInterruptType
  - GetInterruptCooldown
  - IsInterruptSpell
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:40:51.644574'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
