api:
  class: Unit
  method: IsVendor
  signature: bool Unit::IsVendor() const
documentation:
  brief: Determines whether the unit is a vendor with available items for purchase
  description: The IsVendor method checks if the current Unit object represents a
    vendor entity that has items for sale. This method is commonly used in player
    interaction logic to identify when a character is acting as a merchant or vendor,
    allowing developers to distinguish between regular units and vendor units. The
    method returns true when the unit possesses vendor functionality, indicating that
    it can provide goods or services to players through trading mechanisms.
  parameters: []
  returns: Returns true if the unit is a vendor with items available for purchase,
    false otherwise. This indicates whether the entity can serve as a merchant or
    not.
  examples:
  - title: Basic Vendor Check
    code: "if (player->IsVendor())\n{\n    // Handle vendor interaction\n    player->GetSession()->SendNPCTextUpdate(player->GetGUID());\n\
      }"
    language: cpp
  notes: Implementation relies on internal unit flags and data structures that define
    vendor behavior. Performance considerations include checking vendor status during
    player interactions to avoid unnecessary overhead.
  warnings: null
  related:
  - IsPlayer
  - IsCreature
  - HasVendorItems
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T11:51:05.046890'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
