api:
  class: Player
  method: HasAtLoginFlag
  signature: bool Player::HasAtLoginFlag(AtLoginFlags f) const
documentation:
  brief: Checks if a specific at-login flag is set for the player.
  description: The HasAtLoginFlag method determines whether a particular AtLoginFlags
    value is currently set for the player character. This method is used to check
    the state of various at-login flags that control how the player's character behaves
    upon login, such as whether they will be flagged for PvP, have their faction reset,
    or other special behaviors. The method returns true if the specified flag is set,
    and false otherwise. It is commonly used in conjunction with the SetAtLoginFlag
    method to manage player behavior during login.
  parameters: []
  returns: Returns true if the specified AtLoginFlags value is set for the player,
    false otherwise. This indicates whether the player will exhibit the specified
    behavior upon login.
  examples:
  - title: Checking PvP Flag
    code: "if (player->HasAtLoginFlag(AT_LOGIN_PVP)) {\n    // Player will be flagged\
      \ for PvP on login\n}"
    language: cpp
  - title: Checking Reset Faction Flag
    code: "if (player->HasAtLoginFlag(AT_LOGIN_RESET_FACTION)) {\n    // Player's\
      \ faction will be reset on login\n}"
    language: cpp
  notes: This method is part of the player's at-login flag system and should be used
    carefully during character creation or modification. The flags are stored in a
    bitmask within the player object, and checking them requires bitwise operations
    to determine if specific flags are set.
  warnings: Be careful when using this method as it may affect player behavior during
    login. If multiple flags are set, the method will return true for any flag that
    is set, not just the one being checked.
  related:
  - SetAtLoginFlag
  - GetAtLoginFlags
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:09:12.237013'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
