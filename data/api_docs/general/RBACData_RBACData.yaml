api:
  class: RBACData
  method: RBACData
  signature: void RBACData::RBACData(RBACData && other)
documentation:
  brief: Moves resources from another RBACData object to this instance.
  description: The RBACData move constructor transfers all resources from the source
    RBACData object to the current object, leaving the source in a valid but unspecified
    state. This is a standard C++ move semantics implementation for the RBACData class,
    which manages Role-Based Access Control data within TrinityCore. The method is
    typically used when transferring ownership of RBAC data between objects without
    performing expensive deep copies. It's important to note that after calling this
    constructor, the source object should not be used in any way that assumes it still
    holds valid data.
  parameters: []
  returns: null
  examples:
  - title: Move RBACData object
    code: 'RBACData sourceData;

      // ... populate sourceData ...

      RBACData newData = std::move(sourceData); // Move constructor called here'
    language: cpp
  notes: This is a move constructor, not a copy constructor. The source object will
    be left in a valid but unspecified state after the operation. It's recommended
    to avoid using the moved-from object afterward.
  warnings: null
  related:
  - RBACData::RBACData(const RBACData& other)
  - RBACData::~RBACData()
  - RBACData& RBACData::operator=(RBACData&& other)
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:19:28.416694'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
