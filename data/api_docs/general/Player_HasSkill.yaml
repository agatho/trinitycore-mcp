api:
  class: Player
  method: HasSkill
  signature: bool Player::HasSkill(uint32 skill) const
documentation:
  brief: Determines whether a player has a specific skill level
  description: The HasSkill method checks if a player possesses a particular skill,
    returning true if the skill exists and is not zero, false otherwise. This method
    is commonly used in game mechanics to verify player skill availability or to determine
    if a skill meets certain requirements for actions such as crafting, professions,
    or spell casting. The method operates on the player's skill data stored within
    their character sheet, making it essential for validating skill-based interactions.
  parameters: []
  returns: Returns true if the player has the specified skill with a non-zero level,
    false otherwise. A return value of false typically indicates that the skill either
    does not exist or is not active in the player's skill list.
  examples:
  - title: Basic Skill Check
    code: "if (player->HasSkill(SKILL_ENGINERING))\n{\n    // Player has engineering\
      \ skill\n    // Proceed with engineering-related actions\n}"
    language: cpp
  notes: The method performs a simple lookup within the player's skill list, making
    it efficient for frequent checks. It does not account for skill modifiers or temporary
    skill changes such as those from buffs or debuff effects.
  warnings: This method does not validate skill level or check for skill requirements;
    it only confirms presence of a skill in the player's data. Be cautious when using
    this method in conjunction with other skill-related methods to avoid incorrect
    assumptions about skill status.
  related:
  - HasSkill
  - GetSkillValue
  - SetSkill
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:00:21.023179'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
