api:
  class: ScriptedAI
  method: ResetThreat
  signature: void ScriptedAI::ResetThreat(int * victim, int * who)
documentation:
  brief: Resets threat values for the AI's current target and victim.
  description: The ResetThreat method in ScriptedAI is used to clear or reset the
    threat levels associated with the AI's current target and victim. This function
    typically resets the aggro state of the creature, allowing it to potentially re-target
    other units in the vicinity. It's commonly called during AI behavior transitions
    or when a creature needs to break its current threat engagement. The method operates
    on internal threat tracking data within the AI system and does not directly interact
    with the creature's combat state beyond threat management.
  parameters:
  - name: victim
    description: Pointer to the current victim unit whose threat will be reset. This
      parameter is typically used internally by the AI system.
  - name: who
    description: Pointer to the target unit whose threat will be reset. This parameter
      represents the entity that the AI is currently considering as a threat source.
  returns: null
  examples:
  - title: Basic usage in custom AI behavior
    code: "class MyCustomAI : public ScriptedAI\n{\npublic:\n    void ResetThreat(int*\
      \ victim, int* who) override\n    {\n        // Reset threat for current target\
      \ and victim\n        if (victim && who)\n        {\n            *victim = 0;\n\
      \            *who = 0;\n        }\n        // Call base implementation if needed\n\
      \        ScriptedAI::ResetThreat(victim, who);\n    }\n};"
    language: cpp
  notes: This method is typically part of the internal AI threat management system.
    It should be used carefully as improper handling may lead to unexpected targeting
    behavior or aggro issues in combat scenarios.
  warnings: The parameters are pointers to integer values representing threat levels,
    so ensure they point to valid memory locations before calling this method. Incorrect
    usage can cause undefined behavior or crashes.
  related:
  - UpdateThreat
  - AddThreat
  - GetThreat
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T21:44:24.221243'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
