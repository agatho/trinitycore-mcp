api:
  class: Aura
  method: TryRefreshStackOrCreate
  signature: Aura * Aura::TryRefreshStackOrCreate(AuraCreateInfo & createInfo, bool
    updateEffectMask)
documentation:
  brief: Attempts to refresh an existing aura stack or create a new one if it doesn't
    exist.
  description: This method tries to find an existing aura with the same spell ID and
    effect index, then attempts to refresh its duration and stack count. If no such
    aura exists, it creates a new one using the provided createInfo parameters. The
    method is commonly used in aura handling logic where multiple applications of
    the same spell need to be managed properly. It ensures that the aura's effect
    mask is updated when necessary, which affects how the aura interacts with other
    effects and mechanics.
  parameters:
  - name: createInfo
    description: Contains information about the aura to be created or refreshed including
      spell ID, effect index, and other relevant parameters. This determines how the
      aura will be handled in terms of stacking and duration.
  returns: Returns a pointer to the Aura object that was either refreshed or created.
    If no valid aura could be created or refreshed, it returns nullptr.
  examples:
  - title: Basic usage example
    code: Aura* aura = this->TryRefreshStackOrCreate(createInfo);
    language: cpp
  - title: Advanced usage with effect mask update
    code: "Aura* aura = this->TryRefreshStackOrCreate(createInfo, true);\nif (aura)\n\
      {\n    // Handle the refreshed or created aura\n}"
    language: cpp
  notes: This method is typically used in conjunction with other aura management functions
    to maintain proper stacking behavior. It may involve complex logic related to
    spell effects, duration calculations, and stack counts. The method assumes that
    the createInfo contains valid data for creating or updating an aura.
  warnings: Care should be taken when using this method as it can lead to memory leaks
    if not handled properly. Also, improper handling of the effect mask update can
    cause unexpected behavior in aura interactions.
  related:
  - Aura::GetSpellInfo
  - Aura::GetEffect
  - Aura::UpdateStackCount
  - Aura::RefreshDuration
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T02:52:49.938732'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
