api:
  class: Map
  method: GetGameObjectBySpawnIdStore
  signature: const GameObjectBySpawnIdContainer & Map::GetGameObjectBySpawnIdStore()
    const
documentation:
  brief: Returns the GameObjectBySpawnIdContainer storing all game objects in the
    map.
  description: This method provides access to the container that holds all game objects
    organized by their spawn ID within the map. It serves as a lookup mechanism for
    retrieving game objects based on their unique spawn identifiers, which is essential
    for managing object spawning, despawning, and tracking during gameplay. The returned
    container is read-only and should not be modified directly, as it's used internally
    by TrinityCore to maintain consistency between spawned objects and their data
    in the database.
  parameters: []
  returns: Returns a const reference to the GameObjectBySpawnIdContainer which contains
    all game objects currently present in the map, organized by their spawn ID. This
    container is used for efficient lookup of game objects based on their spawn ID,
    allowing for fast retrieval and management of spawned objects.
  examples:
  - title: Accessing GameObject by Spawn ID
    code: 'Map* map = player->GetMap();

      const GameObjectBySpawnIdContainer& container = map->GetGameObjectBySpawnIdStore();

      GameObject* go = container.find(spawnId)->second;'
    language: cpp
  notes: This method is thread-safe and should not be modified in any way. The container
    returned is read-only and used internally by TrinityCore for object management
    purposes.
  warnings: null
  related:
  - GetGameObjectBySpawnIdStore
  - GetGameObjectByGuidStore
  - GetGameObjectByEntryStore
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:08:02.133649'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
