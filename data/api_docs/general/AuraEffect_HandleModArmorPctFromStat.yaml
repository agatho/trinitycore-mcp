api:
  class: AuraEffect
  method: HandleModArmorPctFromStat
  signature: void AuraEffect::HandleModArmorPctFromStat(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a percentage-based armor modification based on a stat
    value.
  description: The HandleModArmorPctFromStat method is responsible for modifying a
    unit's armor by a percentage amount derived from a specified stat. This aura effect
    typically scales armor based on attributes like Intellect or Spirit, commonly
    seen in certain magical effects or talents. The method is invoked during aura
    application or removal and adjusts the target's armor accordingly. It takes into
    account whether the effect is being applied or removed, and uses the provided
    AuraApplication context to determine how to process the stat-based armor modification.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This includes details such as the caster,
      target, and aura properties.
  - name: mode
    description: The mode of operation indicating how the effect should be processed.
      Values are typically defined by the aura system and may control whether to add,
      remove, or modify the stat-based armor effect.
  - name: apply
    description: Boolean flag indicating if the aura is being applied (true) or removed
      (false). This determines whether the armor percentage modifier should be added
      or subtracted from the unit's effective armor.
  returns: null
  examples:
  - title: Applying a Stat-Based Armor Modifier
    code: "void ApplyStatArmorAura(Unit* target, Unit* caster, uint32 spellId) {\n\
      \    AuraApplication* auraApp = new AuraApplication(caster, target, spellId);\n\
      \    AuraEffect* effect = target->GetAuraEffect(spellId, 0);\n    if (effect)\n\
      \        effect->HandleModArmorPctFromStat(auraApp, 0, true);\n}"
    language: cpp
  - title: Removing a Stat-Based Armor Modifier
    code: "void RemoveStatArmorAura(Unit* target, uint32 spellId) {\n    AuraApplication*\
      \ auraApp = target->GetAuraApplication(spellId);\n    if (auraApp) {\n     \
      \   AuraEffect* effect = target->GetAuraEffect(spellId, 0);\n        if (effect)\n\
      \            effect->HandleModArmorPctFromStat(auraApp, 0, false);\n    }\n}"
    language: cpp
  notes: This method is part of the TrinityCore's aura handling system and relies
    on internal stat calculation logic. The actual percentage applied depends on the
    aura's data stored in the spell template and may vary depending on the unit's
    current stats.
  warnings: Incorrect usage of the mode parameter or improper handling of the apply
    flag can lead to unexpected armor modifications or visual inconsistencies in the
    client. Ensure that all aura applications are properly managed to avoid memory
    leaks or invalid state changes.
  related:
  - AuraEffect::HandleModArmorPct
  - AuraEffect::HandleStatModifier
  - Unit::ApplyStatMod
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:44:59.049372'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
