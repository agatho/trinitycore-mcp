api:
  class: AuraEffect
  method: HandleModThreat
  signature: void AuraEffect::HandleModThreat(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Modifies the threat generated by an aura effect on a target.
  description: The HandleModThreat method adjusts the threat level that an aura effect
    applies to a target. This is commonly used in combat mechanics to modify how much
    threat a spell or ability generates against a mob, affecting aggro behavior and
    enemy targeting. The method is called internally by the aura application system
    when applying or removing threat modifications from auras. It takes into account
    the aura's application state, mode of operation, and whether the effect is being
    applied or removed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about which unit the aura is affecting
      and the current state of the aura application.
  - name: mode
    description: The mode of operation for the threat modification, typically indicating
      whether this is a direct or indirect threat change. Values may include flags
      or specific modes defined by the aura system.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the threat effect from the target. This determines if the threat modification
      is being activated or deactivated.
  returns: null
  examples:
  - title: Basic Threat Modification Application
    code: "void ApplyThreatAura(AuraEffect* auraEffect, Unit* target) {\n    AuraApplication*\
      \ app = new AuraApplication(target, target, auraEffect);\n    auraEffect->HandleModThreat(app,\
      \ 0, true);\n}"
    language: cpp
  - title: Removing Threat Modification
    code: "void RemoveThreatAura(AuraEffect* auraEffect, AuraApplication* app) {\n\
      \    auraEffect->HandleModThreat(app, 1, false);\n}"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly by external code. It's typically invoked during aura application
    or removal events within the TrinityCore framework. The method modifies the threat
    calculation logic for the affected unit, which can significantly impact combat
    behavior.
  warnings: Improper use of this method may lead to incorrect aggro mechanics or unexpected
    enemy targeting behavior. Ensure that the AuraApplication object passed is valid
    and properly initialized before calling this method.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::ApplyAura
  - AuraApplication::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:18:12.958259'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
