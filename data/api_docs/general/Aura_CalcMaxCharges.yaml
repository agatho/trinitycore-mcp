api:
  class: Aura
  method: CalcMaxCharges
  signature: uint8 Aura::CalcMaxCharges() const
documentation:
  brief: Calculates and returns the maximum number of charges an aura can have.
  description: The CalcMaxCharges method determines the maximum number of charges
    that a specific aura instance can possess. This value is typically derived from
    the aura's spell properties, including any applicable modifiers or bonuses from
    the caster's effects. The calculation accounts for various game mechanics such
    as aura stacking rules, talent modifications, and item enchantments that may affect
    charge limits. This method is commonly used during aura application and refresh
    operations to ensure proper charge management.
  parameters: []
  returns: Returns a uint8 value representing the maximum number of charges the aura
    can have. A value of 0 indicates the aura does not support charges, while higher
    values indicate the maximum charge count allowed for that specific aura instance.
  examples:
  - title: Basic Usage Example
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    uint8 maxCharges\
      \ = aura->CalcMaxCharges();\n    // Use maxCharges for charge management logic\n\
      }"
    language: cpp
  notes: This method is typically called internally by the TrinityCore engine during
    aura application and update cycles. Developers should be aware that the returned
    value may vary depending on the aura's caster, spell modifiers, and active buffs
    or debuffs affecting the aura's properties.
  warnings: null
  related:
  - GetCharges
  - SetCharges
  - ModCharges
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:19:13.097901'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
