api:
  class: BotPriorityManager
  method: SetPriority
  signature: void BotPriorityManager::SetPriority(int botGuid, BotPriority priority)
documentation:
  brief: Sets the priority level for a specified bot within the BotPriorityManager
    system.
  description: The SetPriority method assigns a specific priority value to a bot identified
    by its unique GUID. This functionality allows the game's AI management system
    to determine how resources, attention, and actions should be allocated among different
    bots. The priority setting influences decision-making processes, task assignment,
    and overall behavior of the bot within the TrinityCore framework. This method
    is typically used in conjunction with other priority management functions to dynamically
    adjust bot behaviors based on in-game conditions or player interactions.
  parameters:
  - name: botGuid
    description: The unique identifier (GUID) of the bot for which the priority is
      being set. This value must correspond to an existing bot within the system.
  - name: priority
    description: The BotPriority enum value that defines the relative importance or
      urgency level of the bot. Valid values are typically defined within the BotPriority
      enumeration and may include levels such as LOW, NORMAL, HIGH, or CRITICAL.
  returns: null
  examples:
  - title: Setting a Bot's Priority to High
    code: 'BotPriorityManager priorityManager;

      uint32 botGuid = 12345;

      BotPriority highPriority = BotPriority::HIGH;

      priorityManager.SetPriority(botGuid, highPriority);'
    language: cpp
  - title: Updating Multiple Bots with Different Priorities
    code: 'BotPriorityManager priorityManager;

      uint32 bot1Guid = 1001;

      uint32 bot2Guid = 1002;

      uint32 bot3Guid = 1003;


      priorityManager.SetPriority(bot1Guid, BotPriority::HIGH);

      priorityManager.SetPriority(bot2Guid, BotPriority::NORMAL);

      priorityManager.SetPriority(bot3Guid, BotPriority::LOW);'
    language: cpp
  notes: This method likely updates internal data structures within the BotPriorityManager
    to reflect the new priority level. It may trigger recalculations of bot task assignments
    or resource allocation. The implementation should be thread-safe if called from
    multiple threads, though this is not explicitly stated.
  warnings: Ensure that the provided botGuid corresponds to an existing bot in the
    system; otherwise, behavior is undefined. Avoid setting invalid BotPriority values
    that are outside the expected range of the enumeration.
  related:
  - GetPriority
  - UpdateBotPriorities
  - ClearBotPriority
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:52:55.075290'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
