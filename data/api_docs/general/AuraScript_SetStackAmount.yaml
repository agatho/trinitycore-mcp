api:
  class: AuraScript
  method: SetStackAmount
  signature: void AuraScript::SetStackAmount(int num)
documentation:
  brief: Sets the stack amount of the aura to the specified number.
  description: The SetStackAmount method is used in AuraScript to modify the current
    stack count of an aura. This method directly updates the aura's stack value, which
    affects how many times the aura's effects are applied. In World of Warcraft mechanics,
    auras can have multiple stacks, and each stack typically amplifies the effect
    of the aura. The method accepts an integer parameter that represents the new stack
    amount to be set on the aura. This is commonly used in custom spell effects or
    aura modifications where dynamic stack changes are required during gameplay.
  parameters:
  - name: num
    description: The new stack amount to set for the aura. Must be a non-negative
      integer value. Values of zero or less will effectively remove the aura from
      the target.
  returns: null
  examples:
  - title: Basic Usage - Setting Aura Stacks
    code: "class MyAuraScript : public AuraScript\n{\n    void OnApply(AuraEffect\
      \ const* aurEff, AuraEffectHandleModes mode) override\n    {\n        // Set\
      \ aura to have 5 stacks when applied\n        SetStackAmount(5);\n    }\n};"
    language: cpp
  - title: Dynamic Stack Modification Based on Conditions
    code: "class DynamicStackAuraScript : public AuraScript\n{\n    void OnUpdate(int32\
      \ duration) override\n    {\n        Unit* caster = GetCaster();\n        if\
      \ (caster && caster->HasAura(12345)) // Check for another aura\n        {\n\
      \            SetStackAmount(3); // Set to 3 stacks\n        }\n        else\n\
      \        {\n            SetStackAmount(1); // Reset to 1 stack\n        }\n\
      \    }\n};"
    language: cpp
  notes: This method directly modifies the aura's internal stack counter. It should
    only be called from within AuraScript event handlers where the aura context is
    valid. The method does not validate whether the new stack amount is within expected
    bounds for the specific aura type, so care must be taken to ensure valid values
    are passed.
  warnings: Calling SetStackAmount with a negative or zero value will effectively
    remove the aura from the target if it's the only stack remaining. This can cause
    unexpected behavior in complex aura interactions where multiple stacks are involved.
    Always verify that the target still has the aura before calling this method to
    prevent unintended removal.
  related:
  - GetStackAmount
  - ModStackAmount
  - AddAura
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:07:52.053168'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
