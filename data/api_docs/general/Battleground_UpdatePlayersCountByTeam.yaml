api:
  class: Battleground
  method: UpdatePlayersCountByTeam
  signature: void Battleground::UpdatePlayersCountByTeam(int team, bool remove)
documentation:
  brief: Updates the player count for a specific team in the battleground.
  description: The UpdatePlayersCountByTeam method adjusts the internal player count
    tracking for a specified team within a battleground. This method is typically
    invoked when players join or leave a battleground, ensuring that the game engine
    maintains accurate team size information for various mechanics such as win conditions,
    scoring, and matchmaking. The method modifies the count by either incrementing
    or decrementing it based on the 'remove' parameter. It's an essential part of
    maintaining the integrity of battleground statistics and player engagement tracking.
  parameters:
  - name: team
    description: The team identifier (0 for Alliance, 1 for Horde) whose player count
      needs to be updated.
  - name: remove
    description: If true, decrements the player count; if false, increments the player
      count.
  returns: null
  examples:
  - title: Incrementing Player Count for Alliance Team
    code: 'Battleground* bg = sObjectMgr->GetBattleground(12345);

      bg->UpdatePlayersCountByTeam(0, false); // Increment Alliance player count'
    language: cpp
  - title: Decrementing Player Count for Horde Team
    code: 'Battleground* bg = sObjectMgr->GetBattleground(12345);

      bg->UpdatePlayersCountByTeam(1, true); // Decrement Horde player count'
    language: cpp
  notes: This method is usually called internally by the battleground system when
    players join or leave. It's important to ensure that the team parameter is valid
    (0 or 1) to prevent unexpected behavior. The method does not perform any validation
    on the current count, so calling it with invalid parameters may lead to negative
    counts.
  warnings: Calling this method with incorrect team values (not 0 or 1) can result
    in undefined behavior. Additionally, decrementing a player count that is already
    zero will cause the count to become negative, which could break game logic.
  related:
  - GetPlayersCountByTeam
  - AddPlayer
  - RemovePlayer
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:50:55.888240'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
