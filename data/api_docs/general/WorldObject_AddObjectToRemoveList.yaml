api:
  class: WorldObject
  method: AddObjectToRemoveList
  signature: void WorldObject::AddObjectToRemoveList()
documentation:
  brief: Adds the object to the removal list for processing during the next update
    cycle.
  description: This method marks the WorldObject for removal from the game world by
    adding it to the object removal list. The object will be processed and removed
    during the next update cycle, typically when the game world processes pending
    operations. This method is commonly used in scenarios where objects need to be
    scheduled for deletion, such as when a player logs out, a creature dies, or an
    item is destroyed. It ensures proper cleanup of resources and prevents dangling
    references in the game world.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'WorldObject* obj = new WorldObject();

      obj->AddObjectToRemoveList();'
    language: cpp
  - title: Advanced Usage Example
    code: "if (player->IsInWorld()) {\n    player->AddObjectToRemoveList();\n}\n//\
      \ The object will be removed during the next update cycle"
    language: cpp
  notes: This method is thread-safe and should be called from within the game world
    update thread. It's important to note that objects added to this list are not
    immediately removed but rather scheduled for removal during the next update cycle,
    which helps prevent race conditions and ensures proper cleanup of resources.
  warnings: This method should not be used directly in situations where immediate
    removal is required; use RemoveObjectFromWorld() instead. Also, calling this method
    on objects that are already marked for removal can lead to undefined behavior
    or double-free errors.
  related:
  - RemoveObjectFromWorld
  - AddObjectToMap
  - Update
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:50:32.624781'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
