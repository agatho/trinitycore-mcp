api:
  class: WorldObject
  method: UpdateAllowedPositionZ
  signature: void WorldObject::UpdateAllowedPositionZ(float x, float y, float & z,
    float * groundZ) const
documentation:
  brief: Updates the allowed Z (height) position for a WorldObject based on terrain
    and collision data.
  description: The UpdateAllowedPositionZ method adjusts the vertical coordinate (Z)
    of a WorldObject to ensure it remains within valid physical boundaries. It takes
    into account ground height, terrain features, and object-specific collision properties
    to determine whether the provided Z value is acceptable. This function is typically
    used during movement validation or position correction to prevent objects from
    penetrating the ground or floating in the air. The method modifies the Z coordinate
    in-place and optionally returns the actual ground level at the specified X,Y coordinates.
    It's a core part of TrinityCore's physics and positioning system, ensuring realistic
    object placement within the game world.
  parameters:
  - name: x
    description: The X coordinate of the position to validate
  - name: y
    description: The Y coordinate of the position to validate
  - name: z
    description: Reference to the Z coordinate that will be updated with the allowed
      height value
  - name: groundZ
    description: Optional pointer to store the actual ground level at the specified
      X,Y coordinates; can be null
  returns: null
  examples:
  - title: Basic Position Validation
    code: 'float x = 100.0f, y = 200.0f, z = 50.0f;

      float groundZ;

      player->UpdateAllowedPositionZ(x, y, z, &groundZ);

      // z now contains the corrected Z position

      // groundZ contains the actual ground height at (x,y)'
    language: cpp
  - title: Movement Validation Without Ground Reference
    code: 'float x = 100.0f, y = 200.0f, z = 50.0f;

      object->UpdateAllowedPositionZ(x, y, z, nullptr);

      // z is updated with the allowed Z position

      // No ground level is stored'
    language: cpp
  notes: This method performs collision detection and terrain height queries using
    TrinityCore's underlying navigation mesh and height map systems. It may involve
    expensive operations such as raycasting or height sampling, so it should not be
    called excessively during high-frequency updates like movement tracking. The method
    respects object-specific flags such as flying, swimming, or ground-based movement
    restrictions.
  warnings: Calling this method with invalid coordinates (e.g., out-of-bounds X,Y
    values) may result in undefined behavior or incorrect Z values. Ensure that the
    input coordinates are within valid world boundaries before calling this function.
    Also, be aware that modifying the Z value directly affects object positioning
    and can cause visual glitches if not handled properly in conjunction with other
    movement systems.
  related:
  - GetMap
  - GetPositionZ
  - SetPosition
  - IsInMap
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:09:33.590760'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
