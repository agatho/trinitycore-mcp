api:
  class: RestMgr
  method: AddRestBonus
  signature: void RestMgr::AddRestBonus(RestTypes restType, float restBonus)
documentation:
  brief: Adds a rest bonus of specified type to the player's rest state.
  description: The AddRestBonus method is used to apply a bonus value to a specific
    type of rest that a player has accumulated. This functionality is typically utilized
    within the context of World of Warcraft's resting mechanics, where players can
    gain different types of rest bonuses based on their activities or environment.
    The method accepts a RestTypes enumeration value and a float representing the
    bonus amount to be added. It modifies the internal state of the RestMgr instance
    to reflect this new bonus contribution.
  parameters:
  - name: restType
    description: An enumeration value specifying the type of rest to which the bonus
      applies. Valid values are typically defined in the RestTypes enum and may include
      values such as REST_TYPE_NORMAL, REST_TYPE_INN, or REST_TYPE_DUNGEON.
  - name: restBonus
    description: A floating-point value representing the amount of rest bonus to be
      added. This value can be positive or negative, depending on whether it's an
      increase or decrease in rest bonus.
  returns: null
  examples:
  - title: Adding a Normal Rest Bonus
    code: 'RestMgr* restMgr = player->GetRestMgr();

      restMgr->AddRestBonus(REST_TYPE_NORMAL, 10.5f);'
    language: cpp
  - title: Applying a Dungeon Rest Bonus
    code: 'RestMgr* restMgr = player->GetRestMgr();

      restMgr->AddRestBonus(REST_TYPE_DUNGEON, 20.0f);'
    language: cpp
  notes: This method likely modifies internal counters or accumulators within the
    RestMgr class that track various rest bonuses. It is important to ensure that
    the restType parameter corresponds to valid enumeration values defined in the
    RestTypes enum, otherwise behavior may be undefined. The method does not return
    any value and directly modifies the state of the RestMgr object.
  warnings: Ensure that the restType parameter is a valid member of the RestTypes
    enum, as invalid values could lead to unexpected behavior or crashes. Be cautious
    when applying negative bonus values, as they might reduce the player's rest state
    below zero, which may have unintended consequences in gameplay mechanics.
  related:
  - GetRestBonus
  - ResetRestBonus
  - UpdateRestState
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:31:58.406337'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
