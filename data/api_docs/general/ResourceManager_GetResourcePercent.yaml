api:
  class: ResourceManager
  method: GetResourcePercent
  signature: float ResourceManager::GetResourcePercent(ResourceType type)
documentation:
  brief: Returns the percentage value of a specified resource type for the current
    player.
  description: The GetResourcePercent method retrieves the current percentage value
    of a given resource type, such as mana, rage, or energy. This method is commonly
    used in game logic to determine how much of a particular resource remains relative
    to its maximum value. The returned float value represents the resource level as
    a percentage (e.g., 0.5f for 50%). It's typically used for UI updates, skill cooldowns,
    and gameplay mechanics that depend on resource availability. The method assumes
    a valid resource type is provided and will return 0.0f if an invalid type is passed.
  parameters: []
  returns: A float value representing the percentage of the specified resource type.
    Returns 0.0f if the resource type is invalid or not applicable to the current
    player.
  examples:
  - title: Get mana percentage
    code: "float manaPercent = resourceManager->GetResourcePercent(ResourceType::MANA);\n\
      if (manaPercent > 0.75f) {\n    // Player has more than 75% mana\n}"
    language: cpp
  - title: Check resource levels for abilities
    code: "float energy = resourceManager->GetResourcePercent(ResourceType::ENERGY);\n\
      if (energy >= 0.2f) {\n    // Player can use an ability that costs 20% energy\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other resource management
    functions to provide a complete picture of player resources. The implementation
    may vary depending on the specific resource type and how it's tracked internally
    by TrinityCore. Performance is generally low as it involves simple arithmetic
    operations.
  warnings: Ensure that the ResourceType enum value passed to this method is valid,
    otherwise the result will be 0.0f. This method does not validate resource types
    at runtime, so calling code should ensure proper usage.
  related:
  - GetResourceAmount
  - SetResourcePercent
  - IsResourceTypeValid
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:15:25.905625'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
