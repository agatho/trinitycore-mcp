api:
  class: GameObject
  method: CreateGameObjectFromDB
  signature: GameObject * GameObject::CreateGameObjectFromDB(int spawnId, int * map,
    bool addToMap)
documentation:
  brief: Creates a GameObject instance from data stored in the database using the
    specified spawn identifier.
  description: The CreateGameObjectFromDB method is responsible for instantiating
    a GameObject object based on data retrieved from the game's database. It takes
    a spawn identifier (spawnId) which corresponds to an entry in the game's database
    tables that define how the game object should be initialized, including its position,
    orientation, display ID, and other properties. The method can optionally add the
    created GameObject to the map if addToMap is set to true. This function is typically
    used during world initialization or when spawning dynamic game objects based on
    database entries.
  parameters:
  - name: spawnId
    description: Unique identifier for the spawn entry in the database that defines
      how the GameObject should be created and configured.
  - name: map
    description: Pointer to the map object where the GameObject will be placed if
      addToMap is true. Can be null if not adding to a specific map.
  - name: addToMap
    description: Boolean flag indicating whether the created GameObject should be
      automatically added to the specified map.
  returns: A pointer to the newly created GameObject instance, or nullptr if creation
    failed due to invalid data or database errors.
  examples:
  - title: Basic usage of CreateGameObjectFromDB
    code: "GameObject* go = GameObject::CreateGameObjectFromDB(12345, &map, true);\n\
      if (go)\n{\n    // Successfully created and added to map\n    go->SetRespawnTime(300);\
      \ // Set respawn time to 5 minutes\n}"
    language: cpp
  - title: Creating a GameObject without adding it to the map
    code: "GameObject* go = GameObject::CreateGameObjectFromDB(67890, nullptr, false);\n\
      if (go)\n{\n    // Created but not added to any map\n    // Can be manually\
      \ added later using AddToWorld()\n    go->AddToWorld();\n}"
    language: cpp
  notes: This method internally queries the database for the spawn data and initializes
    the GameObject with values from the database. The GameObject's position, rotation,
    and other properties are set according to the database entry. If addToMap is true,
    the GameObject will be added to the map's object list and become visible to players
    in that area.
  warnings: Ensure that the spawnId corresponds to a valid database entry; otherwise,
    the method may return nullptr. When using addToMap=true, make sure the map pointer
    is valid to avoid memory access violations or undefined behavior.
  related:
  - GameObject::AddToWorld
  - GameObject::RemoveFromWorld
  - GameObject::SetRespawnTime
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T20:17:47.130847'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
