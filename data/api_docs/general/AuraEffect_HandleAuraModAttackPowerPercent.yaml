api:
  class: AuraEffect
  method: HandleAuraModAttackPowerPercent
  signature: void AuraEffect::HandleAuraModAttackPowerPercent(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a percentage-based modifier to the aura's attack power.
  description: The HandleAuraModAttackPowerPercent method is responsible for modifying
    the attack power of a unit by a specified percentage when an aura is applied or
    removed. This method is typically invoked during aura application or removal events
    and adjusts the target's attack power stat accordingly. The modification is calculated
    based on the aura's base value and the percentage modifier, which can either increase
    or decrease the attack power depending on whether the aura is being applied or
    removed. This functionality is commonly used in spells and abilities that modify
    a character's attack power through percentage-based effects.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura application
      context. This parameter provides information about the specific aura instance
      and its application state.
  - name: mode
    description: The mode of operation indicating how the aura effect should be handled.
      This value typically determines whether the effect is being applied or removed,
      and may influence how calculations are performed.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect. When true, the percentage modifier is added to the attack power;
      when false, it's subtracted.
  returns: null
  examples:
  - title: Basic Aura Application
    code: "void ApplyAttackPowerAura(Unit* target, float percentMod) {\n    AuraApplication*\
      \ aurApp = new AuraApplication(target, target, nullptr);\n    AuraEffect* auraEffect\
      \ = new AuraEffect();\n    auraEffect->HandleAuraModAttackPowerPercent(aurApp,\
      \ 0, true);\n}"
    language: cpp
  - title: Removing Attack Power Modifier
    code: "void RemoveAttackPowerAura(Unit* target) {\n    AuraApplication* aurApp\
      \ = GetAuraApplication(target);\n    AuraEffect* auraEffect = GetAuraEffect(target,\
      \ SPELL_AURA_MOD_ATTACK_POWER_PERCENT);\n    auraEffect->HandleAuraModAttackPowerPercent(aurApp,\
      \ 0, false);\n}"
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore and is
    typically called internally by the aura application framework. The percentage
    modifier is usually stored within the aura's data structure and applied directly
    to the target's attack power calculation during stat updates.
  warnings: Ensure that the AuraApplication parameter is valid and properly initialized
    before calling this method, as passing an invalid pointer may lead to undefined
    behavior or crashes. Also, be cautious when applying negative percentage modifiers,
    as they can significantly reduce a unit's combat effectiveness.
  related:
  - HandleAuraModAttackPower
  - HandleAuraModRangedAttackPowerPercent
  - AuraEffect::ApplyModifier
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:29:17.193954'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
