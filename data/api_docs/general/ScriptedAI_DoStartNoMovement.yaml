api:
  class: ScriptedAI
  method: DoStartNoMovement
  signature: void ScriptedAI::DoStartNoMovement(int * target)
documentation:
  brief: Initiates movement stop for the AI-controlled creature without changing its
    orientation.
  description: The DoStartNoMovement method is used in TrinityCore's ScriptedAI framework
    to halt the movement of an AI-controlled creature. It stops the creature from
    moving while maintaining its current facing direction, effectively putting it
    into a stationary state. This method is typically called during combat or scripted
    events where the creature needs to remain in place but may still perform other
    actions like casting spells or attacking. The method does not reset the creature's
    movement generator or interrupt ongoing movements; instead, it simply stops any
    active movement behavior while preserving the AI's current state.
  parameters:
  - name: target
    description: Pointer to an integer that represents the target unit for which movement
      should be stopped. If null, the method will stop movement for the creature itself.
  returns: void
  examples:
  - title: Basic Usage in Combat
    code: "class MyCreatureAI : public ScriptedAI\n{\npublic:\n    void UpdateAI(uint32\
      \ diff) override\n    {\n        if (!UpdateVictim())\n            return;\n\
      \        \n        // Stop movement when entering combat\n        DoStartNoMovement(nullptr);\n\
      \        \n        // Continue with normal AI logic\n        DoMeleeAttackIfReady();\n\
      \    }\n};"
    language: cpp
  - title: Using Target Parameter
    code: "class MyCreatureAI : public ScriptedAI\n{\npublic:\n    void AttackStart(Unit*\
      \ target) override\n    {\n        if (!target)\n            return;\n     \
      \   \n        // Stop movement for specific target\n        int targetId = target->GetGUID().GetRawValue();\n\
      \        DoStartNoMovement(&targetId);\n        \n        ScriptedAI::AttackStart(target);\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the core AI framework in TrinityCore and integrates
    with the creature's movement system. It does not affect spell casting or other
    AI behaviors, only movement state. The method should be used carefully to avoid
    conflicts with other movement-related AI functions.
  warnings: Using this method without proper target validation may cause unexpected
    behavior. Ensure that any target pointer passed is valid and properly initialized
    to prevent memory access violations.
  related:
  - DoStartMovement
  - DoStopMovement
  - UpdateAI
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:50:41.374307'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
