api:
  class: ObjectMgr
  method: GetCreatureModelRandomGender
  signature: const int * ObjectMgr::GetCreatureModelRandomGender(int * model, const
    int * creatureTemplate) const
documentation:
  brief: Returns a random gender for a creature model based on the provided creature
    template.
  description: The GetCreatureModelRandomGender method determines and returns a random
    gender (male or female) for a given creature model. This is typically used in
    World of Warcraft's TrinityCore server to assign appropriate gender to creatures
    during their instantiation or when spawning new instances. The method takes a
    pointer to an integer representing the model ID and a pointer to a creature template,
    then returns a pointer to an integer that represents the selected gender. It ensures
    that the gender selection aligns with the creature's template definition where
    applicable.
  parameters:
  - name: model
    description: Pointer to an integer representing the creature model ID. This value
      is modified in-place to reflect the chosen gender.
  - name: creatureTemplate
    description: Pointer to a creature template structure that defines properties
      of the creature, including gender-related settings.
  returns: Returns a pointer to an integer representing the selected gender (typically
    0 for male, 1 for female). If no valid gender can be determined or if inputs are
    invalid, it may return NULL.
  examples:
  - title: Basic Usage Example
    code: "int modelId = 12345;\nconst CreatureTemplate* creatureTemplate = sObjectMgr->GetCreatureTemplate(1000);\n\
      const int* gender = sObjectMgr->GetCreatureModelRandomGender(&modelId, creatureTemplate);\n\
      if (gender != nullptr) {\n    printf(\"Selected gender: %d\\n\", *gender);\n\
      }"
    language: cpp
  notes: This method relies on internal data structures and configurations within
    TrinityCore related to creature genders. It may use randomization logic based
    on server settings or creature template flags. The returned pointer points to
    a static or managed value, so it should not be freed by the caller.
  warnings: Ensure that both parameters are valid pointers; passing NULL values could
    lead to undefined behavior. Also, note that this method might not always return
    a gender if the creature template does not define gender-specific models or if
    randomization is disabled in server settings.
  related:
  - GetCreatureTemplate
  - GetCreatureModelInfo
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:58:50.991667'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
