api:
  class: WorldObject
  method: SendSpellMiss
  signature: void WorldObject::SendSpellMiss(Unit * target, uint32 spellID, int missInfo)
documentation:
  brief: Sends spell miss information to a target unit for a specific spell ID.
  description: This method handles the transmission of spell miss notifications to
    a target unit, indicating that a spell failed to hit its target. It is used in
    the context of World of Warcraft's combat system to communicate miss results such
    as dodges, parries, or blocks. The method allows for precise control over the
    type of miss information sent, making it essential for accurate combat simulation
    and game mechanics implementation.
  parameters:
  - name: target
    description: The unit that is receiving the spell miss notification. This must
      be a valid Unit object, typically representing the target of the spell.
  - name: spellID
    description: The unique identifier for the spell being cast. This determines which
      spell's miss information is sent and can be used to determine specific effects
      or mechanics.
  - name: missInfo
    description: The type of miss information to send, indicating whether the spell
      missed due to dodge, parry, block, or other combat outcomes. This parameter
      controls the precise behavior of the miss notification.
  returns: null
  examples:
  - title: Basic usage example
    code: 'WorldObject* caster = new WorldObject();

      Unit* target = new Unit();

      uint32 spellID = 12345;

      int missInfo = 1;

      caster->SendSpellMiss(target, spellID, missInfo);'
    language: cpp
  - title: Advanced usage with multiple miss types
    code: 'WorldObject* caster = new WorldObject();

      Unit* target = new Unit();

      uint32 spellID = 12345;

      int missInfo = 0;

      caster->SendSpellMiss(target, spellID, missInfo);

      missInfo = 1;

      caster->SendSpellMiss(target, spellID, missInfo);'
    language: cpp
  notes: This method is part of the combat system and should be used carefully to
    ensure correct game mechanics. It requires valid Unit objects for the target parameter
    and must be called in the context of active combat situations.
  warnings: Improper use of this method can lead to incorrect combat results or even
    crashes if invalid units are passed. The missInfo parameter must be properly handled
    to avoid miscommunication of spell outcomes.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:35:36.122035'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
