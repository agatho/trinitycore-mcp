api:
  class: SpellHistory
  method: SaveCooldownStateBeforeDuel
  signature: void SpellHistory::SaveCooldownStateBeforeDuel()
documentation:
  brief: Saves the current cooldown state of spells before a duel begins
  description: The SaveCooldownStateBeforeDuel method preserves the current spell
    cooldown information for all spells in the SpellHistory object prior to a duel
    start. This ensures that when the duel ends, the original cooldown states can
    be restored, preventing players from retaining cooldown reductions or extensions
    that occurred during the duel. The method typically gets invoked automatically
    by the duel system when a duel is initiated, and it stores the current cooldown
    timers for all spells in a temporary backup state.
  parameters: []
  returns: null
  examples:
  - title: Saving cooldowns before starting a duel
    code: "void Player::StartDuelWith(Player* opponent)\n{\n    // Save current spell\
      \ cooldown states\n    this->GetSpellHistory()->SaveCooldownStateBeforeDuel();\n\
      \    \n    // Proceed with duel setup\n    DuelManager::StartDuel(this, opponent);\n\
      }"
    language: cpp
  notes: This method is typically called internally by the duel system and should
    not be invoked manually unless implementing custom duel logic. It uses internal
    storage to maintain a snapshot of cooldowns which may impact memory usage if spells
    have many active cooldowns.
  warnings: Do not call this method directly unless you understand how it interacts
    with the duel system. Incorrect usage can lead to cooldown state corruption or
    unexpected behavior during duel termination.
  related:
  - RestoreCooldownStateAfterDuel
  - GetSpellCooldown
  - SetSpellCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:09:37.953872'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
