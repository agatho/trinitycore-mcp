api:
  class: GameObject
  method: SetLinkedTrap
  signature: void GameObject::SetLinkedTrap(GameObject * linkedTrap)
documentation:
  brief: Sets the linked trap for a game object, establishing a relationship between
    the object and its associated trap.
  description: This method establishes a link between a GameObject and a linked trap,
    allowing the game object to trigger or reference the trap when certain conditions
    are met. The linked trap is typically used in conjunction with game object events
    or scripts to create complex interactions such as triggering traps when a door
    is opened or when a lever is activated. This method is commonly used in TrinityCore's
    scripting system to manage relationships between different game objects and their
    associated traps, particularly in scenarios involving quest triggers or environmental
    interactions.
  parameters:
  - name: linkedTrap
    description: A pointer to the GameObject that represents the trap to be linked.
      This parameter must be a valid GameObject instance that has been properly initialized
      and registered within the game world.
  returns: null
  examples:
  - title: Basic usage example
    code: 'GameObject* trap = new GameObject();

      GameObject* linkedObject = new GameObject();

      linkedObject->SetLinkedTrap(trap);'
    language: cpp
  - title: Advanced usage with quest system
    code: '// Assuming a quest script where a door triggers a trap

      GameObject* door = GetGameObjectByEntry(178900);

      GameObject* trap = GetGameObjectByEntry(178901);

      door->SetLinkedTrap(trap);

      // The trap will be triggered when the door is opened'
    language: cpp
  notes: This method should only be called on GameObject instances that are already
    initialized and registered in the world. The linked trap must be a valid GameObject
    instance with proper data to ensure successful linking. Performance considerations
    include avoiding frequent calls to this method during rapid event processing.
  warnings: Improper use of this method can lead to game object linking errors or
    memory leaks if the linked trap is not properly initialized. This method should
    not be used on unregistered GameObject instances as it may cause undefined behavior
    or crashes.
  related:
  - GetLinkedTrap
  - SetGoState
  - SetGoInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:07:19.696600'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
