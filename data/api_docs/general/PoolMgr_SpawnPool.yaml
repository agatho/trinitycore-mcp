api:
  class: PoolMgr
  method: SpawnPool
  signature: void PoolMgr::SpawnPool(SpawnedPoolData & spawnedPoolData, uint32 pool_id)
documentation:
  brief: Spawns all game objects and creatures associated with a specified pool ID
    into the world.
  description: The SpawnPool method is responsible for activating and spawning all
    entries that belong to a given pool within the TrinityCore instance. This method
    iterates through the internal data structures of the PoolMgr to find all spawned
    pool data related to the provided pool_id, then triggers the actual spawning process
    for each entry in the pool. It's typically invoked during world initialization
    or when a specific pool needs to be dynamically activated. The method ensures
    that all objects within the pool are properly added to their respective maps and
    made visible to players.
  parameters:
  - name: spawnedPoolData
    description: Reference to a SpawnedPoolData structure containing information about
      which objects have been spawned in the pool, including their GUIDs, map IDs,
      and spawn coordinates.
  - name: pool_id
    description: Unique identifier of the pool to be spawned. This ID corresponds
      to entries in the game's pool management system and determines which objects
      will be activated.
  returns: null
  examples:
  - title: Basic Pool Spawning
    code: 'SpawnedPoolData data;

      uint32 poolId = 12345;

      PoolMgr::Instance()->SpawnPool(data, poolId);'
    language: cpp
  - title: Spawning Multiple Pools
    code: "for (uint32 i = 1000; i < 1010; ++i)\n{\n    SpawnedPoolData data;\n  \
      \  PoolMgr::Instance()->SpawnPool(data, i);\n}"
    language: cpp
  notes: This method is part of the core pool management system in TrinityCore and
    directly interacts with the map systems to spawn objects. It assumes that the
    pool data has already been initialized and loaded into memory. The method may
    be called multiple times for the same pool ID, but it's designed to handle such
    cases gracefully without duplicating spawns.
  warnings: Calling this method with an invalid or non-existent pool_id can lead to
    undefined behavior or crashes. Ensure that pool IDs are validated before calling
    this function. Additionally, spawning large pools may cause temporary performance
    spikes as the system processes and loads numerous game objects simultaneously.
  related:
  - GetPoolFor
  - AddToPool
  - RemoveFromPool
  - SpawnAllPools
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:51:32.275928'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
