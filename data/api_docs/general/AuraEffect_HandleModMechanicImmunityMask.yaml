api:
  class: AuraEffect
  method: HandleModMechanicImmunityMask
  signature: void AuraEffect::HandleModMechanicImmunityMask(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the mechanic immunity mask for an aura application.
  description: The HandleModMechanicImmunityMask method adjusts the mechanic immunity
    mask of a given aura application, either applying or removing immunity effects
    based on the specified mode. This method is typically used in the context of aura
    handling within TrinityCore's spell system to control how different mechanics
    (such as stun, fear, root, etc.) affect creatures or players. The method operates
    on the AuraApplication object and modifies its internal mechanic immunity state
    according to the provided apply flag.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the aura being
      modified. This parameter is required and must not be null.
  - name: mode
    description: Integer value indicating the mode of operation, typically used to
      determine how the immunity mask should be updated (e.g., add, remove, or replace
      specific mechanics).
  - name: apply
    description: Boolean flag that determines whether to apply (true) or remove (false)
      the mechanic immunity effects from the aura application.
  returns: null
  examples:
  - title: Applying Mechanic Immunity
    code: 'AuraEffect* effect = ...;

      AuraApplication* app = ...;

      effect->HandleModMechanicImmunityMask(app, 1, true);'
    language: cpp
  - title: Removing Mechanic Immunity
    code: 'AuraEffect* effect = ...;

      AuraApplication* app = ...;

      effect->HandleModMechanicImmunityMask(app, 2, false);'
    language: cpp
  notes: This method is part of the internal aura handling system in TrinityCore and
    should only be called during spell application or removal events. It modifies
    the aura's mechanic immunity state directly without triggering additional callbacks.
  warnings: Incorrect usage of the mode parameter may lead to unexpected behavior
    in mechanic immunity application. Ensure that the AuraApplication pointer is valid
    before calling this method.
  related:
  - AuraEffect::HandleMechanicImmunity
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:34:02.879277'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
