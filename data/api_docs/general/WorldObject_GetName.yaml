api:
  class: WorldObject
  method: GetName
  signature: const std::string & WorldObject::GetName() const
documentation:
  brief: Returns the name of the WorldObject instance.
  description: The GetName method retrieves the string name associated with a WorldObject
    instance. This method is commonly used to obtain the display name of game entities
    such as players, NPCs, creatures, or game objects within the TrinityCore framework.
    The returned reference points to an internal string member of the WorldObject
    class, ensuring efficient access without unnecessary copying. The name is typically
    set during object creation or initialization and may be modified through specific
    game mechanics or scripting systems. This method does not perform any validation
    on the object's state, so it assumes the object has a valid name assigned.
  parameters: []
  returns: A constant reference to a std::string containing the name of the WorldObject.
    The returned string is guaranteed to be valid and non-empty for properly initialized
    objects, though it may be empty if no name has been assigned.
  examples:
  - title: Basic Usage
    code: 'WorldObject* obj = ...; // Assume this points to a valid WorldObject

      const std::string& name = obj->GetName();

      std::cout << "Object name: " << name << std::endl;'
    language: cpp
  - title: Using Name in Conditional Logic
    code: "WorldObject* target = ...;\nif (!target->GetName().empty()) {\n    // Perform\
      \ action only if object has a valid name\n    ChatHandler handler = ...;\n \
      \   handler.PSendSysMessage(\"Target is named %s\", target->GetName().c_str());\n\
      }"
    language: cpp
  notes: The returned std::string reference points to an internal member variable,
    so modifications to the string should be avoided. The method is thread-safe for
    read operations as long as no concurrent writes occur on the same object's name
    field. Performance is optimal since it returns a reference rather than copying
    the string data.
  warnings: Be cautious when storing or using the returned reference beyond the lifetime
    of the WorldObject instance, as this could lead to dangling references. Also,
    ensure that the object has been properly initialized before calling GetName, especially
    in scenarios involving dynamic creation or loading of game entities.
  related:
  - SetName
  - GetGUID
  - IsInWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:57:00.435473'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
