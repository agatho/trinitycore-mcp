api:
  class: InterruptManager
  method: CanInterrupt
  signature: bool InterruptManager::CanInterrupt(uint32 spellId, InterruptMethod method)
documentation:
  brief: Determines whether a spell can be interrupted based on its ID and the interrupt
    method used.
  description: The CanInterrupt method evaluates if a specific spell, identified by
    its spell ID, is eligible to be interrupted according to the provided interrupt
    method. This functionality is crucial in World of Warcraft's combat system where
    certain spells may be interruptible under specific conditions such as casting
    time, spell school, or player actions. The method checks against internal rules
    and configurations defined within the TrinityCore framework to determine validity.
    It ensures that only appropriate spells are subject to interruption mechanics
    during gameplay.
  parameters:
  - name: spellId
    description: The unique identifier of the spell being evaluated for interruption
      eligibility. This ID corresponds to entries in the spell database and must reference
      a valid spell entry.
  - name: method
    description: The interrupt method type that defines how the spell interruption
      is triggered. Valid values typically include casting interrupts, damage interrupts,
      or other defined interruption types within the game's logic.
  returns: Returns true if the specified spell can be interrupted using the given
    method; otherwise returns false. A return value of false indicates that the spell
    either does not support interruption via this method or is explicitly excluded
    from such behavior.
  examples:
  - title: Basic Usage Check
    code: "if (interruptManager->CanInterrupt(12345, InterruptMethod::CASTING)) {\n\
      \    // Spell can be interrupted during casting\n}"
    language: cpp
  - title: Conditional Interruption Logic
    code: "bool isInterruptible = interruptManager->CanInterrupt(player->GetCurrentSpell()->m_spellInfo->Id,\
      \ InterruptMethod::DAMAGE);\nif (isInterruptible) {\n    // Apply damage-based\
      \ interruption logic\n}"
    language: cpp
  notes: This method relies on internal spell configuration tables and may vary depending
    on server settings or custom modifications. Developers should ensure that spell
    IDs passed to this function are valid and exist in the database before calling
    this method.
  warnings: Passing invalid spell IDs can lead to undefined behavior or crashes. Ensure
    all spell IDs used are verified against the spell database before invoking this
    method.
  related:
  - InterruptManager::InterruptSpell
  - InterruptManager::IsInterruptible
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:39:16.325272'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
