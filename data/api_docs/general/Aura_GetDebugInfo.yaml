api:
  class: Aura
  method: GetDebugInfo
  signature: int Aura::GetDebugInfo() const
documentation:
  brief: Retrieves debug information integer value for the aura instance.
  description: The GetDebugInfo method returns an integer identifier or status code
    that provides diagnostic information about the current aura state. This value
    is typically used for debugging purposes during development and testing phases
    to inspect internal aura properties without exposing sensitive data. The returned
    integer may represent various states such as active duration, stack count, or
    specific aura flags depending on implementation details within TrinityCore's aura
    system.
  parameters: []
  returns: An integer value representing debug information about the aura. The exact
    meaning of this value depends on internal implementation and can vary based on
    aura type, state, or other factors. It is primarily intended for diagnostic use
    rather than functional logic.
  examples:
  - title: Basic Debug Info Retrieval
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    int debugInfo =\
      \ aura->GetDebugInfo();\n    // Use debugInfo for logging or debugging purposes\n\
      }"
    language: cpp
  notes: This method is intended for internal diagnostics and should not be relied
    upon for core gameplay logic. The returned value may change between different
    TrinityCore versions or builds. It's recommended to use this only in debug builds
    or during development.
  warnings: Do not use the return value for conditional gameplay logic as its meaning
    is implementation-specific and may vary across different aura types. Relying on
    this method for game mechanics could lead to unstable behavior or unexpected results.
  related:
  - GetAura
  - HasAura
  - RemoveAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T09:20:27.555714'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
