api:
  class: Transport
  method: Update
  signature: void Transport::Update(int diff)
documentation:
  brief: Updates the transport's position, rotation, and associated passengers based
    on elapsed time.
  description: The Transport::Update method is responsible for advancing the state
    of a transport object in the game world. It handles movement calculations, updates
    the transport's position and orientation, and manages the positioning of any passengers
    (such as players) who are currently aboard the transport. This method is typically
    called every game tick by the core update loop to ensure smooth and accurate transport
    behavior. The method uses the provided time delta (diff) to calculate new positions
    and rotations, ensuring that transports like boats, zeppelins, or elevator platforms
    move realistically within the game world.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last update. This value
      is used to calculate the transport's movement and positioning based on its speed
      and direction.
  returns: null
  examples:
  - title: Basic Update Call
    code: "void World::UpdateTransports(uint32 diff)\n{\n    for (auto& transport\
      \ : m_Transports)\n    {\n        transport->Update(diff);\n    }\n}"
    language: cpp
  - title: Transport Update with Passenger Handling
    code: "void Transport::Update(int diff)\n{\n    // Update the transport's position\n\
      \    MoveTransport(diff);\n    \n    // Update all passengers on the transport\n\
      \    for (auto& passenger : m_Passengers)\n    {\n        if (passenger)\n \
      \       {\n            passenger->UpdatePosition(GetPositionX(), GetPositionY(),\
      \ GetPositionZ(), GetOrientation());\n        }\n    }\n}"
    language: cpp
  notes: This method is called frequently by the core update system and should be
    optimized for performance. The transport's movement calculations are based on
    its defined path, speed, and orientation. It's important to note that this method
    does not directly handle collision detection or terrain interaction - those are
    handled separately in the core systems.
  warnings: Improper handling of the diff parameter can cause incorrect positioning
    or movement artifacts. Never call this method directly from outside the core update
    loop without understanding its implications for passenger positioning and synchronization.
  related:
  - Transport::MoveTransport
  - Transport::AddPassenger
  - Transport::RemovePassenger
  - Transport::GetPathProgress
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:37:03.320230'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
