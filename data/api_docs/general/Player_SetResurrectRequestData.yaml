api:
  class: Player
  method: SetResurrectRequestData
  signature: void Player::SetResurrectRequestData(const int * caster, uint32 health,
    uint32 mana, uint32 appliedAura)
documentation:
  brief: Sets the resurrection request data for a player, including caster information
    and applied aura details.
  description: This method configures the resurrection request data for a player,
    storing information about the caster who initiated the resurrection, the health
    and mana values that were restored, and the applied aura that was used. It is
    typically used during the resurrection process to ensure proper handling of resurrection
    mechanics and to maintain accurate tracking of the resurrection state. The method
    updates internal player data structures related to resurrection requests and should
    be called when a player is being resurrected by another player or NPC.
  parameters:
  - name: caster
    description: Pointer to the caster's GUID, representing the entity who initiated
      the resurrection request. This can be NULL if no specific caster exists.
  - name: health
    description: The health value that was restored during the resurrection process,
      typically representing the amount of health points returned to the player.
  - name: mana
    description: The mana value that was restored during the resurrection process,
      typically representing the amount of mana points returned to the player.
  - name: appliedAura
    description: The applied aura ID that was used during the resurrection process,
      indicating which spell or effect was applied to restore the player's health
      and mana.
  returns: null
  examples:
  - title: Basic Resurrection Request Setup
    code: 'Player* player = new Player();

      uint32 health = 100;

      uint32 mana = 50;

      uint32 appliedAura = 12345;

      int caster[2] = {12345, 67890};

      player->SetResurrectRequestData(caster, health, mana, appliedAura);'
    language: cpp
  - title: Advanced Resurrection Data Handling
    code: 'Player* player = new Player();

      uint32 health = 500;

      uint32 mana = 300;

      uint32 appliedAura = 98765;

      int caster[2] = {12345, 67890};

      player->SetResurrectRequestData(caster, health, mana, appliedAura);

      // Additional logic to handle resurrection state

      '
    language: cpp
  notes: This method is part of the internal player resurrection handling system and
    should be used carefully during resurrection events. It updates player data structures
    that track resurrection requests and should not be called directly without proper
    context. The method may involve complex interactions with other player systems,
    particularly related to resurrection state tracking.
  warnings: This method should only be called when a player is being resurrected by
    another player or NPC; calling it outside of this context may result in incorrect
    data handling. Be cautious about the values passed for health and mana as they
    must accurately reflect the actual values restored during the resurrection process.
  related:
  - GetResurrectRequestData
  - SetResurrectRequestData
  - Player::Resurrect
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:46:14.866674'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
