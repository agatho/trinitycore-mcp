api:
  class: TempSummon
  method: SaveToDB
  signature: void TempSummon::SaveToDB(uint32 param0, const int & param1)
documentation:
  brief: Saves the temporary summon instance to the database with specified parameters.
  description: 'The SaveToDB method persists the current state of a TempSummon object
    into the game database. This method is typically invoked when a temporary summoned
    creature needs to be stored for later retrieval or respawn, ensuring that its
    properties and status are maintained across server restarts or sessions. The method
    accepts two parameters: a uint32 identifier and a reference to an integer, which
    likely represent summon-specific data such as spawn location, duration, or faction
    information. This functionality is essential for maintaining the integrity of
    summoned creatures in persistent world environments.'
  parameters:
  - name: param0
    description: A uint32 identifier used to uniquely classify or categorize the temporary
      summon entry in the database.
  - name: param1
    description: A reference to an integer that typically holds configuration or status
      data related to the summon, such as duration, faction, or spawn conditions.
  returns: null
  examples:
  - title: Basic Usage of SaveToDB
    code: 'TempSummon* summon = ...; // Assume summon is initialized

      summon->SaveToDB(12345, summon->GetDuration());'
    language: cpp
  - title: Saving Summon with Custom Parameters
    code: 'uint32 summonType = 789;

      int factionId = player->GetFaction();

      summon->SaveToDB(summonType, factionId);'
    language: cpp
  notes: This method is part of the core summon management system in TrinityCore.
    It should only be called when a temporary summon's state must persist beyond its
    natural lifetime or when the server needs to maintain data across restarts. The
    database operations are handled internally by the framework, so developers do
    not need to manage direct SQL queries.
  warnings: Calling SaveToDB on an invalid or uninitialized TempSummon instance may
    lead to undefined behavior or database corruption. Ensure that the summon is properly
    initialized before invoking this method.
  related:
  - TempSummon::LoadFromDB
  - TempSummon::Despawn
  - TempSummon::SetDuration
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:37:39.312698'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
