api:
  class: InterruptManager
  method: GetMyAssignment
  signature: InterruptAssignment InterruptManager::GetMyAssignment(const InterruptTarget
    & target)
documentation:
  brief: Retrieves the interrupt assignment for a specified target.
  description: The GetMyAssignment method retrieves the current interrupt assignment
    associated with a given target. This functionality is typically used within the
    context of spell interruption mechanics in TrinityCore, where certain actions
    or events may interrupt ongoing spells or abilities. The method likely accesses
    internal data structures that track which interrupts are assigned to specific
    targets, ensuring proper handling of spell interuptions during gameplay. It's
    important to note that this method operates on a per-target basis and returns
    an InterruptAssignment object that encapsulates the relevant interrupt state information.
  parameters:
  - name: target
    description: The InterruptTarget object representing the target for which to retrieve
      the interrupt assignment. This parameter defines which entity's interrupt state
      should be accessed.
  returns: An InterruptAssignment object containing the interrupt assignment data
    for the specified target. This structure typically includes information about
    what interrupts are active, their duration, and other relevant properties associated
    with the target's interrupt state.
  examples:
  - title: Basic usage of GetMyAssignment
    code: 'InterruptTarget target;

      // ... initialize target ...

      InterruptAssignment assignment = interruptManager.GetMyAssignment(target);

      // Use assignment data as needed'
    language: cpp
  notes: This method likely involves internal tracking of interrupt states and may
    have performance implications if called frequently. The InterruptTarget parameter
    must be valid to avoid undefined behavior. Implementation details suggest this
    method interacts with core spell interruption systems.
  warnings: Ensure the target parameter is properly initialized before calling this
    method, as invalid targets could lead to unexpected behavior or crashes. This
    method should only be called within appropriate game context where interrupt mechanics
    are active.
  related:
  - SetMyAssignment
  - ClearMyAssignment
  - IsInterrupted
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:33:22.549798'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
