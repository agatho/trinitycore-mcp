api:
  class: IVMapManager
  method: ~IVMapManager
  signature: void IVMapManager::~IVMapManager()
documentation:
  brief: Destroys the IVMapManager instance and releases all associated memory resources.
  description: The ~IVMapManager destructor is responsible for cleaning up all memory
    allocations and resources used by the IVMapManager instance. This includes releasing
    any loaded map data, freeing internal data structures, and ensuring proper cleanup
    of the navigation mesh system. The destructor is automatically invoked when an
    IVMapManager object goes out of scope or is explicitly deleted. It's important
    to ensure that no other threads are actively using the manager during destruction
    to prevent race conditions or memory corruption.
  parameters: []
  returns: null
  examples:
  - title: Basic Destructor Usage
    code: 'IVMapManager* mapManager = new IVMapManager();

      // ... use the map manager ...

      delete mapManager; // Triggers ~IVMapManager'
    language: cpp
  notes: The destructor performs cleanup operations that may involve file system access
    and memory deallocation. It's recommended to ensure all map loading/unloading
    operations are completed before destroying the manager instance.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:56:04.548914'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
