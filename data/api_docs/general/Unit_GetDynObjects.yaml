api:
  class: Unit
  method: GetDynObjects
  signature: int Unit::GetDynObjects(uint32 spellId) const
documentation:
  brief: Returns the number of dynamic objects associated with a specific spell for
    the unit.
  description: This method retrieves the count of dynamic objects (such as area effect
    auras, game objects summons, etc.) that are currently active and linked to a specific
    spell on the unit. It is commonly used in World of Warcraft's TrinityCore framework
    to determine how many dynamic objects are present for a given spell, which can
    be useful for various gameplay mechanics including spell effects, summoning logic,
    and object management. The method operates on the unit's internal dynamic object
    list and provides a count that reflects the current state of active spell-related
    objects.
  parameters: []
  returns: Returns an integer representing the number of dynamic objects associated
    with the specified spellId. A value of 0 indicates no dynamic objects are currently
    active for that spell, while positive values indicate the presence of dynamic
    objects.
  examples:
  - title: Basic usage example
    code: int count = unit->GetDynObjects(12345); // Gets count of dynamic objects
      for spell ID 12345
    language: cpp
  - title: Advanced usage with conditional logic
    code: "if (unit->GetDynObjects(12345) > 0)\n{\n    // Handle the presence of dynamic\
      \ objects\n    // Do something with the objects\n}\nelse\n{\n    // No dynamic\
      \ objects present\n}"
    language: cpp
  notes: This method is typically used in conjunction with other dynamic object-related
    methods such as GetDynObject or GetSpellGO. It may be subject to performance considerations
    if frequently called during gameplay, particularly in combat situations where
    multiple spell effects are active. The method is thread-safe within the context
    of the unit's internal state management.
  warnings: Be cautious when using this method in scenarios involving multiple dynamic
    objects, as it may not distinguish between different types of dynamic objects
    (e.g., area effect auras vs game object summons). Ensure that the spellId passed
    corresponds to an active spell with dynamic objects present to avoid misleading
    results.
  related:
  - GetDynObject
  - GetSpellGO
  - GetSpellInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:12:39.980101'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
