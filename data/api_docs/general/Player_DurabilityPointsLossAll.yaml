api:
  class: Player
  method: DurabilityPointsLossAll
  signature: void Player::DurabilityPointsLossAll(int32 points, bool inventory)
documentation:
  brief: Removes all durability points from player's equipment and inventory items
  description: This method completely removes all durability points from a player's
    equipment and inventory items. It is typically used during character creation
    or when resetting player's equipment to zero durability. The method affects both
    equipped items and items in the player's inventory, with the 'inventory' parameter
    determining whether only equipped items are affected or all items including inventory
    ones. This method is commonly used in game mechanics where players need to be
    reset to full durability or when implementing custom game rules.
  parameters:
  - name: points
    description: The number of durability points to remove from each item. Typically
      set to -1 to remove all points, but can be any negative integer value.
  - name: inventory
    description: Boolean flag indicating whether to affect inventory items (true)
      or only equipped items (false). When true, all items including those in the
      player's inventory are affected.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      player->DurabilityPointsLossAll(-1, true);

      // Removes all durability points from all items including inventory'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = GetPlayer();

      player->DurabilityPointLossAll(0, false);

      // Removes all durability points only from equipped items'
    language: cpp
  notes: This method likely triggers a recalculation of player's equipment durability
    and may cause visual updates to appear in the game client. Implementation details
    suggest that this method is typically used during character creation or reset
    operations, and may be called by game master commands or custom scripts.
  warnings: This method should not be called frequently during gameplay as it may
    cause performance issues due to recalculating all equipment durability. Also,
    calling this method with negative values may cause unexpected behavior if not
    properly handled in the code.
  related:
  - DurabilityPointLossItem
  - GetPlayer
  - UpdateInventory
  - ResetPlayer
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:53:41.162490'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
