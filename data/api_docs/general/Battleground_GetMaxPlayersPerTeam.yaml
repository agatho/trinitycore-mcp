api:
  class: Battleground
  method: GetMaxPlayersPerTeam
  signature: int Battleground::GetMaxPlayersPerTeam() const
documentation:
  brief: Retrieves the maximum number of players allowed per team in the battleground.
  description: The GetMaxPlayersPerTeam method returns the maximum number of players
    that can be assigned to a single team within the battleground instance. This value
    is determined by the battleground's type and configuration, and it affects how
    many players can join each faction's team during the match. The returned value
    is typically used for validating player counts, managing team assignments, and
    enforcing game rules related to team sizes. This method does not modify any internal
    state and is safe to call at any time during a battleground's lifecycle.
  parameters: []
  returns: An integer representing the maximum number of players allowed per team
    in this battleground instance. Typical values are 10 for Rated Battlegrounds,
    15 for normal Battlegrounds, and 40 for some special events or large-scale battlegrounds.
  examples:
  - title: Basic Usage to Check Team Size
    code: "Battleground* bg = sObjectMgr->GetBattleground(12345);\nint maxPlayersPerTeam\
      \ = bg->GetMaxPlayersPerTeam();\nif (maxPlayersPerTeam > 0)\n{\n    printf(\"\
      Maximum players per team: %d\\n\", maxPlayersPerTeam);\n}"
    language: cpp
  - title: Using in Player Join Validation
    code: "void ValidatePlayerJoin(Battleground* bg, Player* player)\n{\n    int maxPlayers\
      \ = bg->GetMaxPlayersPerTeam();\n    int currentTeamPlayers = bg->GetPlayersCountByTeam(player->GetTeam());\n\
      \    \n    if (currentTeamPlayers >= maxPlayers)\n    {\n        // Handle team\
      \ full condition\n        player->SendNotification(\"Team is full.\");\n   \
      \     return;\n    }\n}"
    language: cpp
  notes: This method relies on the battleground's configuration data which is loaded
    from the database at startup. The value returned is constant for a given battleground
    instance and does not change during gameplay unless the battleground is reset
    or recreated. It should be used primarily for validation purposes rather than
    dynamic team management.
  warnings: Do not assume that all battlegrounds have the same maximum player count;
    different battleground types (e.g., Rated vs Normal) may return different values.
    Also, this method does not account for temporary modifications to team sizes during
    special events or custom configurations.
  related:
  - GetPlayersCountByTeam
  - GetMaxPlayers
  - GetMinPlayersPerTeam
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:14:07.019890'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
