api:
  class: Player
  method: CanNeverSee
  signature: bool Player::CanNeverSee(const int * obj, bool ignorePhaseShift) const
documentation:
  brief: Determines whether a player can never see a specific object, considering
    phase shifts and object visibility.
  description: This method evaluates whether a player has the ability to permanently
    ignore a particular object's visibility, taking into account phase shift settings
    and object-specific conditions. It is primarily used in game mechanics related
    to player-object interaction and visibility management. The method returns true
    if the player can never see the specified object, false otherwise, with consideration
    for phase shift states.
  parameters:
  - name: obj
    description: Pointer to an object that the player might be able to see. This parameter
      represents a specific object in the game world that could potentially be visible
      or invisible to the player.
  - name: ignorePhaseShift
    description: Boolean flag indicating whether phase shift should be ignored when
      determining visibility. If true, phase shift considerations are bypassed; if
      false, phase shift is taken into account.
  returns: Returns true if the player can never see the specified object, false otherwise.
    The method may return false even if the object is visible to the player under
    normal circumstances, depending on the phase shift settings and object-specific
    conditions.
  examples:
  - title: Basic usage example
    code: bool result = player->CanNeverSee(&object, true);
    language: cpp
  - title: Advanced usage with phase shift consideration
    code: "bool result = player->CanNeverSee(&object, false);\nif (result) {\n  //\
      \ Player can never see the object\n} else {\n  // Player may see the object\
      \ depending on phase shift\n}"
    language: cpp
  notes: This method is typically used in conjunction with visibility checks and phase
    shift management. Implementation details involve checking against specific game
    object types and their visibility settings. Performance considerations include
    potential overhead from phase shift calculations when ignorePhaseShift is false.
  warnings: The method may behave differently depending on the object type and its
    associated visibility rules. Care should be taken when using this method in complex
    visibility scenarios, as it might not always return expected results if phase
    shifts are involved.
  related:
  - Player::CanSee
  - Player::HasVisibility
  - Player::IsVisible
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:52:54.095968'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
