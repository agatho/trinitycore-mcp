api:
  class: InterruptManager
  method: GetInterruptTarget
  signature: Unit * InterruptManager::GetInterruptTarget()
documentation:
  brief: Retrieves the target unit that is currently being interrupted by the interrupt
    manager.
  description: The GetInterruptTarget method returns a pointer to the Unit object
    that represents the current target of an interruption process. This method is
    typically used within the context of spell or ability interruption mechanics in
    TrinityCore's game engine. The returned Unit pointer may be null if no valid target
    exists for interruption, which can occur when the interrupt manager has not yet
    been initialized with a target or when the target has become invalid (e.g., dead,
    despawned, or otherwise removed from the world). This method does not perform
    any validation on the returned unit beyond ensuring it is a valid pointer to a
    Unit object.
  parameters: []
  returns: A pointer to the Unit object that represents the current interruption target.
    Returns nullptr if no valid target exists for interruption.
  examples:
  - title: Basic usage of GetInterruptTarget
    code: "Unit* target = interruptManager->GetInterruptTarget();\nif (target != nullptr)\n\
      {\n    // Process the interrupted target\n    sLog->outString(\"Interrupting\
      \ target: %s\", target->GetName().c_str());\n}\nelse\n{\n    sLog->outString(\"\
      No valid interruption target found.\");\n}"
    language: cpp
  notes: This method is part of the interrupt management system and should only be
    called when an interruption process is actively in progress. The returned Unit
    pointer must not be stored or used outside of the immediate context where it was
    retrieved, as the target may change or become invalid during execution.
  warnings: Calling this method without ensuring that an interruption is actually
    occurring may result in returning a null pointer. Always validate the return value
    before using it to avoid potential crashes or undefined behavior.
  related:
  - InterruptManager::SetInterruptTarget
  - InterruptManager::HasInterruptTarget
  - InterruptManager::ClearInterruptTarget
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:35:26.388368'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
