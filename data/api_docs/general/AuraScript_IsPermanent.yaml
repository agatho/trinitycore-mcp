api:
  class: AuraScript
  method: IsPermanent
  signature: bool AuraScript::IsPermanent() const
documentation:
  brief: Determines whether the aura has a permanent duration.
  description: The IsPermanent method checks if the aura's duration is permanent,
    meaning it will not expire naturally based on time. This is commonly used in aura
    scripts to handle special cases where an aura should persist indefinitely or until
    manually removed. The method returns true if the aura is permanent, and false
    otherwise. In World of Warcraft's TrinityCore implementation, auras with permanent
    duration are typically used for passive effects, certain buffs, or mechanics that
    should remain active regardless of time-based expiration.
  parameters: []
  returns: Returns true if the aura has a permanent duration; otherwise returns false.
  examples:
  - title: Checking if an Aura is Permanent
    code: "class MyAuraScript : public AuraScript\n{\npublic:\n    void OnApply(AuraEffect\
      \ const* aurEff, AuraEffectHandleModes mode) override\n    {\n        if (IsPermanent())\n\
      \        {\n            // Handle permanent aura logic\n            SendPacketToPlayer();\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method is typically used within AuraScript event handlers to modify
    behavior based on whether the aura is temporary or permanent. Permanent auras
    are often associated with passive abilities, racial traits, or special game mechanics
    that should not be affected by time-based expiration.
  warnings: null
  related:
  - GetDuration
  - SetDuration
  - IsExpired
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:10:09.810635'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
