api:
  class: Player
  method: SetTraitConfigUseSharedActionBars
  signature: void Player::SetTraitConfigUseSharedActionBars(int32 traitConfigId, bool
    usesSharedActionBars, bool isLastSelectedSavedConfig)
documentation:
  brief: Sets whether a player uses shared action bars for a specific trait configuration.
  description: This method configures whether a player's action bars are shared across
    different trait configurations. It allows players to switch between using shared
    action bars or individual action bars for each trait configuration, which affects
    how abilities and spells are displayed on the action bar. The method is typically
    used during character customization or when changing trait configurations to ensure
    proper behavior of action bar setup.
  parameters:
  - name: traitConfigId
    description: The unique identifier of the trait configuration being modified.
      This value determines which trait configuration the shared action bar setting
      applies to.
  - name: usesSharedActionBars
    description: A boolean flag indicating whether the player should use shared action
      bars for this specific trait configuration. True means shared action bars are
      enabled, False means individual action bars are used.
  - name: isLastSelectedSavedConfig
    description: A boolean flag indicating whether this configuration is the last
      selected saved trait configuration. This helps track which configuration was
      last used by the player for future reference or restoration.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->SetTraitConfigUseSharedActionBars(12345, true, false);'
    language: cpp
  notes: This method is typically used in conjunction with other trait-related methods
    to manage player character customization. It may affect how action bar abilities
    are displayed and can influence gameplay mechanics related to spell usage and
    cooldowns.
  warnings: Improper use of this method could lead to incorrect display of action
    bars, potentially causing confusion during gameplay or affecting ability usage.
    Care should be taken when setting trait configurations to ensure proper synchronization
    with other player traits.
  related:
  - GetTraitConfigUseSharedActionBars
  - SetTraitConfigId
  - Player::SetTraitConfig
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:37:38.413289'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
