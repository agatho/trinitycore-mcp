api:
  class: BotThreatManager
  method: SetTargetPriority
  signature: void BotThreatManager::SetTargetPriority(Unit * target, ThreatPriority
    priority)
documentation:
  brief: Sets the threat priority for a specified target unit within the bot's threat
    management system.
  description: The SetTargetPriority method assigns a specific threat priority level
    to a given target unit, which influences how the bot prioritizes targeting and
    engaging that unit in combat. This functionality is crucial for managing AI behavior
    in complex encounters where certain enemies may require immediate attention or
    be less of a priority. The method updates internal tracking structures to reflect
    the new priority, affecting decision-making processes such as target selection,
    threat distribution, and overall combat strategy. It is typically used during
    bot initialization or dynamic adjustment of combat tactics based on encounter
    conditions.
  parameters:
  - name: target
    description: Pointer to the Unit object representing the target for which the
      threat priority is being set. Must not be null.
  - name: priority
    description: ThreatPriority enum value indicating the relative importance of targeting
      this unit. Valid values typically include LOW, MEDIUM, HIGH, and possibly others
      depending on implementation.
  returns: null
  examples:
  - title: Basic Usage Example
    code: "Unit* target = bot->GetVictim();\nif (target)\n{\n    bot->GetThreatManager()->SetTargetPriority(target,\
      \ ThreatPriority::HIGH);\n}"
    language: cpp
  - title: Dynamic Priority Adjustment
    code: "Unit* enemy = GetClosestEnemy();\nif (enemy && enemy->GetHealthPct() <\
      \ 20)\n{\n    bot->GetThreatManager()->SetTargetPriority(enemy, ThreatPriority::CRITICAL);\n\
      }\nelse\n{\n    bot->GetThreatManager()->SetTargetPriority(enemy, ThreatPriority::MEDIUM);\n\
      }"
    language: cpp
  notes: This method modifies internal threat tracking data structures and should
    be called carefully to avoid performance issues during high-frequency updates.
    The priority levels are usually interpreted by the bot's AI decision engine to
    influence target selection logic, so setting priorities appropriately is essential
    for desired combat behavior.
  warnings: Passing a null pointer for 'target' may lead to undefined behavior or
    crashes. Ensure that the target unit is valid and exists before calling this method.
    Also, frequent changes in priority might cause performance overhead due to internal
    recalculations.
  related:
  - GetTargetPriority
  - AddThreat
  - RemoveThreat
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T16:38:51.374476'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
