api:
  class: Unit
  method: IsInCombatWith
  signature: bool Unit::IsInCombatWith(const Unit * who) const
documentation:
  brief: Determines whether the unit is currently in combat with a specified target.
  description: This method checks if the current unit has active combat state with
    the provided unit. It returns true if the unit is engaged in combat with the specified
    target, false otherwise. The method is commonly used in game mechanics to determine
    if a unit is actively fighting another unit, such as when checking if a player
    or NPC is in combat with another player or NPC. This functionality is essential
    for implementing combat-related logic and behavior in World of Warcraft's TrinityCore
    framework.
  parameters: []
  returns: Returns true if the unit is in combat with the specified target, false
    otherwise. The method will return false if either unit is not in combat or if
    the combat state has been cleared.
  examples:
  - title: Basic Combat Check
    code: "if (player->IsInCombatWith(target)) {\n    // Do something\n}\n"
    language: cpp
  - title: Combat State Checking
    code: "Unit* target = player->GetVictim();\nif (target && player->IsInCombatWith(target))\
      \ {\n    // Handle combat state\n}\n"
    language: cpp
  notes: This method is thread-safe and can be used in both single-threaded and multi-threaded
    environments. Performance considerations are minimal as the method only performs
    simple checks on combat state flags.
  warnings: The method may return false if the unit has been cleared from combat or
    if the target is null. Be sure to check for valid targets before calling this
    method.
  related:
  - IsInCombat
  - GetVictim
  - CombatState
  - SetInCombat
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:02:35.920532'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
