api:
  class: AuraEffect
  method: HandleModInvisibility
  signature: void AuraEffect::HandleModInvisibility(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes invisibility effects from a unit based on aura application
    state.
  description: The HandleModInvisibility method manages the application and removal
    of invisibility effects for a unit. It is invoked during aura application or removal
    events, adjusting the unit's visibility state according to the specified mode
    and apply flag. This method ensures that units affected by invisibility auras
    are properly hidden or revealed in the game world. The implementation handles
    different invisibility types (such as stealth, invisibility, or specific aura-based
    invisibility) and updates the unit's visibility flags accordingly. It is part
    of the aura effect handling system and integrates with the broader aura application
    framework to maintain consistent game state.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about which unit is affected,
      the aura type, and other relevant context.
  - name: mode
    description: The mode of operation for the invisibility effect. This typically
      indicates how the invisibility should be handled (e.g., whether it's a stealth
      or general invisibility effect). Values may vary based on specific aura implementation
      but usually define visibility behavior.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the invisibility effect. When true, the unit becomes invisible; when false,
      it becomes visible again.
  returns: null
  examples:
  - title: Applying Invisibility Aura
    code: "void ApplyInvisibilityAura(Unit* target)\n{\n    AuraApplication* app =\
      \ new AuraApplication(target, target, SpellInfo);\n    auraEffect->HandleModInvisibility(app,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing Invisibility Aura
    code: "void RemoveInvisibilityAura(Unit* target)\n{\n    AuraApplication* app\
      \ = new AuraApplication(target, target, SpellInfo);\n    auraEffect->HandleModInvisibility(app,\
      \ 1, false);\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    and should not be invoked directly unless implementing custom aura effects. The
    mode parameter may vary depending on the specific type of invisibility being handled
    (e.g., stealth vs. general invisibility). Ensure that all visibility-related flags
    are properly updated when modifying unit visibility states.
  warnings: Incorrect usage of the apply flag can lead to inconsistent visibility
    states for units, potentially causing visual glitches or gameplay issues. Always
    ensure that aura applications are correctly managed and that related visibility
    updates are synchronized with the game state.
  related:
  - AuraEffect::HandleModInvisibilityDetect
  - AuraEffect::HandleModStealth
  - AuraApplication::GetTarget
  - AuraEffect::ApplyAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:36:31.661980'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
