api:
  class: Player
  method: AddWeaponProficiency
  signature: void Player::AddWeaponProficiency(uint32 newflag)
documentation:
  brief: Adds a weapon proficiency flag to the player's character.
  description: This method adds a specified weapon proficiency flag to the player's
    character, allowing them to use weapons of that type. The method is typically
    used during character creation or when granting new weapon proficiencies through
    game mechanics such as quest rewards or skill increases. It affects the player's
    ability to wield weapons correctly and influences combat performance. The parameter
    represents a bitmask indicating which weapon type to add proficiency for.
  parameters:
  - name: newflag
    description: A uint32 value representing the weapon proficiency flag to be added.
      This typically corresponds to a specific weapon type such as swords, axes, bows,
      etc., and is usually defined by constants like WEAPON_PROFICIENCY_1H_SWORD,
      WEAPON_PROFICIENCY_2H_SWORD, etc.
  returns: null
  examples:
  - title: Adding a weapon proficiency
    code: 'Player* player = GetPlayer();

      player->AddWeaponProficiency(WEAPON_PROFICIENCY_1H_SWORD);

      '
    language: cpp
  notes: This method should be used carefully during character creation or when modifying
    existing proficiencies, as it directly affects the player's combat abilities.
    It is typically called internally by TrinityCore during game events or when applying
    skill bonuses.
  warnings: Improper use of this method can lead to incorrect weapon usage or combat
    issues. It should not be used with invalid flag values that don't correspond to
    valid weapon types.
  related:
  - AddArmorProficiency
  - AddShieldProficiency
  - AddRangedWeaponProficiency
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:24:34.794184'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
