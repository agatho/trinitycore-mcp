api:
  class: WorldObject
  method: GetOrCreateSmoothPhasing
  signature: SmoothPhasing * WorldObject::GetOrCreateSmoothPhasing()
documentation:
  brief: Retrieves or creates a SmoothPhasing object for the WorldObject, ensuring
    phasing behavior is initialized.
  description: The GetOrCreateSmoothPhasing method ensures that a SmoothPhasing object
    exists for the given WorldObject. If one already exists, it returns the existing
    instance; otherwise, it creates and initializes a new SmoothPhasing object. This
    mechanism is used to manage smooth phasing transitions in World of Warcraft, particularly
    for handling phased visibility and interaction between players and objects across
    different phases. The method is essential for maintaining proper phasing state
    during dynamic phase changes or when objects need to be phased in/out of visibility.
  parameters: []
  returns: A pointer to the SmoothPhasing object associated with this WorldObject.
    Returns nullptr if allocation fails or if the object cannot be initialized properly.
  examples:
  - title: Basic Usage
    code: "SmoothPhasing* phasing = worldObject->GetOrCreateSmoothPhasing();\nif (phasing)\n\
      {\n    // Use the phasing object for phase management\n    phasing->SetPhase(5);\n\
      }"
    language: cpp
  - title: Checking Phase State
    code: "WorldObject* player = ...;\nSmoothPhasing* phasing = player->GetOrCreateSmoothPhasing();\n\
      if (phasing && phasing->IsInPhase(3))\n{\n    // Player is in phase 3\n    player->SetVisible(true);\n\
      }"
    language: cpp
  notes: This method is typically used internally by TrinityCore's phasing system.
    The returned SmoothPhasing object should not be deleted manually, as it's managed
    by the WorldObject lifecycle. It's safe to call multiple times on the same object;
    subsequent calls will return the same instance.
  warnings: Avoid calling this method in performance-critical sections without checking
    if the object already has a phasing instance. Repeated calls may lead to unnecessary
    overhead if not properly cached.
  related:
  - GetSmoothPhasing
  - SetSmoothPhasing
  - RemoveSmoothPhasing
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:11:14.135007'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
