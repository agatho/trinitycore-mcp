api:
  class: CombatManager
  method: GetOwner
  signature: Unit * CombatManager::GetOwner() const
documentation:
  brief: Returns the Unit owner associated with this CombatManager instance.
  description: The GetOwner method retrieves the Unit object that owns or controls
    this CombatManager. In the context of TrinityCore's combat system, a CombatManager
    typically manages combat-related state for a specific unit, such as a player,
    creature, or pet. This method provides access to the underlying Unit instance,
    allowing other systems to query properties, perform actions, or interact with
    the owner in combat scenarios. The returned pointer is valid for the lifetime
    of the CombatManager and its associated Unit.
  parameters: []
  returns: A pointer to the Unit object that owns this CombatManager. Returns nullptr
    if no owner is assigned or if the owner has been destroyed.
  examples:
  - title: Basic Usage
    code: "Unit* owner = combatManager->GetOwner();\nif (owner)\n{\n    // Perform\
      \ actions with the owner\n    owner->Say(\"I'm in combat!\", LANG_UNIVERSAL);\n\
      }"
    language: cpp
  - title: Checking Owner Type
    code: "Unit* owner = combatManager->GetOwner();\nif (owner && owner->IsPlayer())\n\
      {\n    Player* player = owner->ToPlayer();\n    player->SendNotification(\"\
      You are in combat!\");\n}\nelse if (owner && owner->IsCreature())\n{\n    Creature*\
      \ creature = owner->ToCreature();\n    // Handle creature-specific combat logic\n\
      }"
    language: cpp
  notes: The CombatManager class is typically used internally by the game engine to
    manage combat state for units. The returned Unit pointer should not be deleted
    or modified directly, as it's managed by the owning system. This method is thread-safe
    in most contexts where the CombatManager and its owner are properly synchronized.
  warnings: Be cautious when storing the returned Unit pointer beyond the lifetime
    of the CombatManager or its owner, as this may lead to dangling pointers. Always
    verify that the returned pointer is not null before dereferencing it.
  related:
  - SetOwner
  - IsInCombat
  - GetOpponents
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:54:14.657417'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
