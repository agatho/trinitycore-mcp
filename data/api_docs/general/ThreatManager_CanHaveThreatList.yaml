api:
  class: ThreatManager
  method: CanHaveThreatList
  signature: bool ThreatManager::CanHaveThreatList() const
documentation:
  brief: Determines whether the current object can maintain a threat list.
  description: The CanHaveThreatList method checks if the current object is capable
    of maintaining a threat list, which is essential for determining whether an entity
    can be a target of threat. This method is typically used in the context of mob
    AI and player behavior to ensure that objects are properly configured for threat
    management. It returns true if the object can maintain a threat list, false otherwise,
    and is often used in conjunction with other threat-related methods to control
    how entities interact with the game world.
  parameters: []
  returns: Returns true if the object can maintain a threat list; otherwise returns
    false. This indicates whether the entity is capable of being a target for threat
    management.
  examples:
  - title: Basic Usage Example
    code: "if (threatManager.CanHaveThreatList()) {\n    // Object can maintain threat\
      \ list\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other threat management
    methods to determine if an entity should be able to receive or generate threat.
    It may be called during initialization or when determining object behavior in
    combat.
  warnings: This method does not directly affect gameplay mechanics but is crucial
    for proper threat management logic. Incorrect usage can lead to improper threat
    handling and potentially cause entities to ignore threat or fail to maintain it.
  related:
  - ThreatManager::AddThreat
  - ThreatManager::ClearThreat
  - ThreatManager::GetThreatList
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T03:13:20.707440'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
