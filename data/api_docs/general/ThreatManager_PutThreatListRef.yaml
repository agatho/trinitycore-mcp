api:
  class: ThreatManager
  method: PutThreatListRef
  signature: void ThreatManager::PutThreatListRef(const int & guid, ThreatReference
    * ref)
documentation:
  brief: Adds a threat reference to the threat list for the specified GUID.
  description: The PutThreatListRef method is used to insert or update a ThreatReference
    object within the ThreatManager's internal data structure, associating it with
    a specific GUID. This method is typically invoked when a creature or NPC needs
    to track threat values for a particular target, such as a player. The method ensures
    that the threat reference is properly linked to the entity identified by the GUID,
    enabling proper threat management during combat scenarios. It is an essential
    part of the AI and combat system in TrinityCore, allowing creatures to maintain
    accurate threat lists for aggro management.
  parameters:
  - name: guid
    description: A constant reference to an integer representing the unique identifier
      (GUID) of the target entity. This GUID is used to associate the threat reference
      with a specific creature or player in the threat list.
  - name: ref
    description: A pointer to a ThreatReference object that contains the threat data
      for the specified GUID. This reference holds information about the threat level
      and other relevant combat metrics for the target.
  returns: null
  examples:
  - title: Adding a Threat Reference for a Player
    code: 'ThreatReference* threatRef = new ThreatReference(playerGuid, 100.0f);

      ThreatManager* threatMgr = creature->GetThreatManager();

      threatMgr->PutThreatListRef(playerGuid, threatRef);'
    language: cpp
  - title: Updating Existing Threat Reference
    code: "ThreatReference* existingRef = threatMgr->GetThreatListRef(playerGuid);\n\
      if (existingRef)\n{\n    existingRef->SetThreat(newThreatValue);\n    threatMgr->PutThreatListRef(playerGuid,\
      \ existingRef);\n}"
    language: cpp
  notes: This method is part of the internal threat management system used by NPCs
    and creatures in TrinityCore. It's important to ensure that the ThreatReference
    object passed to this method remains valid for the duration of its use in the
    threat list, as no deep copy is performed. The method does not perform any validation
    on the GUID or reference values, so callers should ensure they are valid before
    invoking this function.
  warnings: Calling this method with a null ThreatReference pointer may lead to undefined
    behavior or crashes. Additionally, if multiple threads access the threat manager
    simultaneously, proper synchronization mechanisms must be implemented to avoid
    race conditions when modifying the threat list.
  related:
  - GetThreatListRef
  - RemoveThreatListRef
  - ClearThreatList
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:24:45.533135'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
