api:
  class: Quest
  method: operator=
  signature: Quest & Quest::operator=(Quest && param0)
documentation:
  brief: Moves a quest object to another quest object, transferring ownership of resources.
  description: The operator= method performs a move assignment on a Quest object,
    transferring all resources from the source quest to the target quest. This operation
    is typically used when assigning one quest instance to another, efficiently moving
    data rather than copying it. The move assignment operator is particularly useful
    in scenarios involving temporary objects or when reassigning quest instances within
    containers or lists. After the move, the source quest object will be left in a
    valid but unspecified state, typically with its resources moved to the target.
    This method is part of the standard C++ move semantics implementation for the
    Quest class.
  parameters: []
  returns: A reference to the assigned Quest object, allowing for chaining of assignments.
  examples:
  - title: Basic Move Assignment
    code: 'Quest quest1;

      Quest quest2 = std::move(quest1); // Move assignment

      // quest1 is now in a valid but unspecified state'
    language: cpp
  - title: Assignment in Container
    code: 'std::vector<Quest> quests;

      Quest newQuest;

      quests.push_back(std::move(newQuest)); // Move into vector

      // newQuest is now in a valid but unspecified state'
    language: cpp
  notes: This method implements move semantics, which is more efficient than copy
    semantics when transferring ownership of resources. The source object after move
    assignment should not be used in any way that might access its previous data.
    This is standard C++ behavior for move assignment operators.
  warnings: After calling this operator, the source quest object should not be used
    unless it's explicitly reassigned or reset. Using the moved-from object may lead
    to undefined behavior or accessing invalid memory.
  related:
  - Quest::Quest(Quest &&)
  - Quest::operator=
  - Quest::Quest(const Quest &)
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T10:04:33.907795'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
