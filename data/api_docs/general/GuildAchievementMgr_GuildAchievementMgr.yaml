api:
  class: GuildAchievementMgr
  method: GuildAchievementMgr
  signature: void GuildAchievementMgr::GuildAchievementMgr(Guild * owner)
documentation:
  brief: Initializes a new GuildAchievementMgr instance with the specified guild owner.
  description: The GuildAchievementMgr constructor initializes a new achievement manager
    for a guild, associating it with the provided guild object. This manager handles
    tracking and updating guild-specific achievements, including progress, rewards,
    and synchronization across guild members. The constructor sets up internal data
    structures to manage achievement-related data for the guild's lifetime. It is
    typically called during guild creation or when loading existing guild data from
    the database.
  parameters:
  - name: owner
    description: Pointer to the Guild object that this achievement manager will be
      associated with. Must not be null.
  returns: null
  examples:
  - title: Creating a new GuildAchievementMgr for a guild
    code: "Guild* myGuild = sGuildMgr->GetGuildById(guildId);\nif (myGuild)\n{\n \
      \   GuildAchievementMgr* achievementMgr = new GuildAchievementMgr(myGuild);\n\
      \    // Use the achievement manager to track guild achievements\n}"
    language: cpp
  notes: This constructor does not perform any database operations or load existing
    achievements. It simply initializes the internal state for managing achievements
    for the specified guild. The actual loading of achievement data should be handled
    separately by calling appropriate methods on the manager.
  warnings: null
  related:
  - GuildAchievementMgr::LoadFromDB
  - GuildAchievementMgr::SaveToDB
  - GuildAchievementMgr::UpdateAchievement
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T03:58:22.289220'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
