api:
  class: LazyManagerFactory
  method: GetTotalInitTime
  signature: std::chrono::milliseconds LazyManagerFactory::GetTotalInitTime() const
documentation:
  brief: Returns the total initialization time of all lazy managers managed by this
    factory.
  description: The GetTotalInitTime method calculates and returns the cumulative initialization
    time for all lazy managers that have been created and initialized through this
    LazyManagerFactory instance. This value represents the sum of individual initialization
    durations across all managed components, providing insight into overall system
    startup performance or resource allocation timing. The returned duration is expressed
    as a std::chrono::milliseconds object, making it easy to integrate with timing-based
    logic within the TrinityCore framework. This method is typically used for profiling,
    debugging, or monitoring the efficiency of lazy initialization processes in game
    systems such as AI behavior trees, data loaders, or subsystem initializations.
  parameters: []
  returns: A std::chrono::milliseconds object representing the total accumulated initialization
    time of all lazy managers managed by this factory. The value is non-negative and
    increases monotonically as more managers are initialized.
  examples:
  - title: Basic Usage to Measure Initialization Time
    code: '#include <chrono>


      auto factory = LazyManagerFactory::GetInstance();

      std::chrono::milliseconds totalInitTime = factory->GetTotalInitTime();


      printf("Total initialization time: %lld ms\n", totalInitTime.count());'
    language: cpp
  - title: Monitoring Performance During Server Startup
    code: '#include <chrono>


      auto startTime = std::chrono::high_resolution_clock::now();

      // ... initialize various subsystems using LazyManagerFactory ...

      auto endTime = std::chrono::high_resolution_clock::now();


      auto factory = LazyManagerFactory::GetInstance();

      std::chrono::milliseconds totalInitTime = factory->GetTotalInitTime();


      printf("Lazy manager initialization took: %lld ms\n", totalInitTime.count());'
    language: cpp
  notes: This method assumes that all lazy managers have completed their initialization
    process before returning the total time. If called during active initialization,
    it may return an incomplete or inaccurate value. The returned time includes only
    the initialization phase and excludes any runtime overhead or execution time of
    the managed components themselves.
  warnings: Calling this method on a factory that has not yet initialized any managers
    will return zero milliseconds. Ensure that all relevant lazy managers have been
    properly created and initialized before relying on this measurement for performance
    analysis.
  related:
  - GetNumManagedManagers
  - GetInitTimeForManager
  - InitializeAllManagers
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T11:33:17.755815'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
