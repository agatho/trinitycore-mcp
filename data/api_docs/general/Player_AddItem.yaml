api:
  class: Player
  method: AddItem
  signature: bool Player::AddItem(uint32 itemId, uint32 count)
documentation:
  brief: Adds an item to the player's inventory
  description: The AddItem method is used to add a specified item to a player's inventory.
    This method handles the item creation and insertion process, ensuring proper item
    stacking and inventory management. It returns true if the item was successfully
    added, false otherwise. The method automatically handles item stacking for items
    that can stack, and will create additional stacks if needed. This functionality
    is essential for game master commands and scripting operations where items need
    to be granted to players.
  parameters:
  - name: itemId
    description: The entry ID of the item to add. This must correspond to a valid
      item in the game database.
  - name: count
    description: The quantity of items to add. This can be any positive integer value,
      with 1 being the default for single items.
  returns: Returns true if the item was successfully added to the player's inventory,
    false otherwise. The method will return false if the item cannot be added due
    to inventory constraints or invalid item ID.
  examples:
  - title: Basic Item Addition
    code: 'Player* player = GetPlayer();

      bool success = player->AddItem(12345, 1);'
    language: cpp
  - title: Multiple Item Stacking
    code: 'Player* player = GetPlayer();

      bool success = player->AddItem(12345, 10);

      // Adds 10 of item 12345 to inventory'
    language: cpp
  notes: This method internally handles item stacking and inventory management. It
    should be used with caution as it bypasses normal game mechanics for item acquisition.
    The method will automatically handle item stacking for items that can stack, and
    will create additional stacks if needed.
  warnings: This method does not check for inventory space or item validity beyond
    the basic requirements. If the item ID is invalid, the method will return false
    without any error message. It should be used carefully in scripts where item creation
    needs to be controlled.
  related:
  - AddItem
  - GetItemCount
  - Item::AddItem
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:33:55.695753'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
