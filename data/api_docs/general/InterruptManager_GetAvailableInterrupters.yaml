api:
  class: InterruptManager
  method: GetAvailableInterrupters
  signature: int InterruptManager::GetAvailableInterrupters()
documentation:
  brief: Returns the count of available interrupters in the InterruptManager.
  description: The GetAvailableInterrupters method retrieves the number of interrupters
    currently registered or available within the InterruptManager instance. This method
    is typically used to determine how many entities (such as players, creatures,
    or spells) can potentially interrupt ongoing actions or casts. The count may be
    influenced by various game mechanics such as player availability, spell restrictions,
    or combat states. It serves as a utility for managing and querying interruptible
    events in the game's core systems.
  parameters: []
  returns: An integer representing the total number of available interrupters currently
    managed by the InterruptManager instance. A return value of zero indicates no
    interrupters are available, while positive values indicate the count of active
    interrupters.
  examples:
  - title: Basic Usage
    code: "InterruptManager* manager = sObjectAccessor->GetInterruptManager();\nint\
      \ interrupterCount = manager->GetAvailableInterrupters();\nif (interrupterCount\
      \ > 0)\n{\n    // Proceed with interrupt handling logic\n    sLog->outString(\"\
      Found %d available interrupters.\", interrupterCount);\n}"
    language: cpp
  notes: This method does not perform any state changes or side effects; it is purely
    a query operation. The returned value may vary dynamically based on the current
    game state and registered interrupters.
  warnings: null
  related:
  - InterruptManager::AddInterrupter
  - InterruptManager::RemoveInterrupter
  - InterruptManager::HasInterrupters
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:37:33.362012'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
