api:
  class: BotDatabasePool
  method: SetQueryTimeout
  signature: void BotDatabasePool::SetQueryTimeout(uint32 timeoutMs)
documentation:
  brief: Sets the query timeout value for database operations in the bot database
    pool.
  description: The SetQueryTimeout method configures the maximum time (in milliseconds)
    that a database query is allowed to execute before being terminated. This timeout
    applies to all subsequent database queries executed through this database pool
    instance. Setting an appropriate timeout helps prevent long-running queries from
    blocking other operations and ensures responsive bot behavior in World of Warcraft
    environments. The timeout value should be chosen carefully based on expected query
    performance and system constraints.
  parameters:
  - name: timeoutMs
    description: The maximum time in milliseconds that a database query can execute
      before being automatically terminated. Valid values are positive integers representing
      time durations. A value of 0 typically means no timeout, while larger values
      allow more time for complex queries.
  returns: null
  examples:
  - title: Setting a 5-second query timeout
    code: 'BotDatabasePool* pool = BotDatabasePool::Instance();

      pool->SetQueryTimeout(5000); // Set 5 second timeout'
    language: cpp
  - title: Disabling query timeout for long-running operations
    code: 'BotDatabasePool* pool = BotDatabasePool::Instance();

      pool->SetQueryTimeout(0); // Disable timeout for special cases'
    language: cpp
  notes: This method affects all database queries executed through the current BotDatabasePool
    instance. The timeout setting is typically applied at the connection level and
    may impact performance if set too low for complex queries. Changes to the timeout
    value take effect immediately for subsequent queries.
  warnings: Setting the timeout too low may cause legitimate long-running queries
    to fail prematurely, potentially leading to data inconsistency or incomplete bot
    operations. Setting it too high can result in resource starvation if queries become
    stuck or inefficient.
  related:
  - GetQueryTimeout
  - ExecuteQuery
  - AsyncExecuteQuery
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:17:02.776227'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
