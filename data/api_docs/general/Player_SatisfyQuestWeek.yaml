api:
  class: Player
  method: SatisfyQuestWeek
  signature: bool Player::SatisfyQuestWeek(const Quest * qInfo, bool msg) const
documentation:
  brief: Satisfies a weekly quest for the player, returning true if the quest was
    completed successfully.
  description: The SatisfyQuestWeek method is used to mark a weekly quest as completed
    for the player. This method handles the internal mechanics of quest completion,
    including updating quest tracking and potentially awarding quest rewards. It ensures
    that the player's quest log reflects the completion of the specified weekly quest,
    and returns true if the quest was successfully satisfied. The method may also
    send appropriate messages to the player depending on the msg parameter, which
    controls whether notification messages are displayed.
  parameters:
  - name: qInfo
    description: Pointer to the Quest object representing the weekly quest to be satisfied.
      This parameter must not be null and should point to a valid quest object with
      a valid quest ID.
  - name: msg
    description: Boolean flag indicating whether messages should be sent to the player
      upon quest completion. If true, notification messages will be displayed; if
      false, no messages are sent.
  returns: Returns true if the weekly quest was successfully satisfied and completed,
    false otherwise. The method may return false if the quest is not a weekly quest
    or if it fails to complete due to game mechanics constraints.
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      Quest* quest = sObjectMgr->GetQuestTemplate(12345);

      bool success = player->SatisfyQuestWeek(quest, true);'
    language: cpp
  - title: Advanced usage example
    code: "Player* player = GetPlayer();\nQuest* quest = sObjectMgr->GetQuestTemplate(12345);\n\
      if (player->SatisfyQuestWeek(quest, false)) {\n    // Quest completed without\
      \ message\n} else {\n    // Quest failed to complete\n}"
    language: cpp
  notes: This method is typically used internally by the game engine when quest completion
    occurs. It may involve updating player's quest log, checking quest requirements,
    and possibly awarding rewards. Performance considerations include the overhead
    of quest validation and potential message sending.
  warnings: The method requires that the Quest object passed in be valid and represent
    a weekly quest. Passing null or invalid quest objects can lead to undefined behavior
    or crashes. Also, this method does not handle quest reward distribution directly;
    it only marks the quest as completed.
  related:
  - SatisfyQuest
  - CompleteQuest
  - GetQuestStatus
  - GetQuestCount
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T23:51:58.662113'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
