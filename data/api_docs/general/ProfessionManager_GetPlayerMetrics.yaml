api:
  class: ProfessionManager
  method: GetPlayerMetrics
  signature: const ProfessionMetrics & ProfessionManager::GetPlayerMetrics(uint32
    playerGuid) const
documentation:
  brief: Retrieves the profession metrics associated with a specified player.
  description: The GetPlayerMetrics method fetches the profession-related statistics
    and data for a given player identified by their GUID. These metrics typically
    include information such as skill levels, progress, completed recipes, and other
    profession-specific data that tracks a player's advancement in various crafting
    disciplines within the game. This method is commonly used to retrieve detailed
    player progression data for display in UI elements or for backend processing of
    profession-related events. The returned reference is const, indicating that the
    data should not be modified through this interface.
  parameters: []
  returns: A constant reference to a ProfessionMetrics object containing all relevant
    profession data for the specified player. This structure holds cumulative statistics
    and current state information related to the player's professions.
  examples:
  - title: Basic Usage
    code: 'uint32 playerId = 12345;

      const ProfessionMetrics& metrics = sProfessionManager->GetPlayerMetrics(playerId);

      uint32 miningSkill = metrics.GetSkillLevel(PROFESSION_MINING);'
    language: cpp
  - title: Accessing Multiple Metrics
    code: "uint32 playerId = 12345;\nconst ProfessionMetrics& metrics = sProfessionManager->GetPlayerMetrics(playerId);\n\
      \nfor (uint8 i = 0; i < MAX_PROFESSIONS; ++i)\n{\n    uint32 skillLevel = metrics.GetSkillLevel(i);\n\
      \    uint32 skillRank = metrics.GetSkillRank(i);\n    // Process profession\
      \ data\n}"
    language: cpp
  notes: This method assumes that the player GUID corresponds to an existing character
    in the database. If called with an invalid or non-existent player GUID, behavior
    is undefined and may result in access violations or corrupted data. The returned
    reference remains valid only as long as the ProfessionManager instance and its
    internal data structures are intact.
  warnings: Do not modify the returned ProfessionMetrics object through this interface;
    changes will not persist. Ensure that the player GUID passed to this method is
    valid and corresponds to an actual logged-in or saved character to avoid undefined
    behavior.
  related:
  - SetPlayerMetrics
  - UpdatePlayerMetrics
  - GetPlayerProfessionData
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:03:44.253216'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
