api:
  class: Player
  method: IsAffectedBySpellmod
  signature: uint32 Player::IsAffectedBySpellmod(const int * spellInfo, const SpellModifier
    * mod, const Spell * spell)
documentation:
  brief: Checks if a player is affected by a specific spell modifier.
  description: This method determines whether a player is influenced by a particular
    spell modifier, which is used in various game mechanics such as spell modifications,
    buffs effects, and gameplay interactions. It evaluates the relationship between
    the player's current state and the specified spell modifier, returning a value
    indicating the degree of influence or effect. The method is commonly used in spell
    processing and game logic calculations to ensure proper application of modifiers.
  parameters:
  - name: spellInfo
    description: Pointer to the spell information structure that defines the spell
      being evaluated. This parameter typically contains details about the spell such
      as its ID, effects, and other relevant properties.
  - name: mod
    description: Pointer to the SpellModifier structure which defines the modifier
      being applied. This structure contains information about the type of modifier
      (e.g., effect, duration, value) and how it affects the spell.
  - name: spell
    description: Pointer to the Spell object representing the actual spell being processed.
      This parameter is used to determine if the spell is affected by the specified
      modifier.
  returns: Returns uint32 indicating whether the player is affected by the spell modifier.
    A value of 0 typically means no effect, while non-zero values indicate varying
    degrees of influence or modification.
  examples:
  - title: Basic usage example
    code: "uint32 result = player->IsAffectedBySpellmod(spellInfo, mod, spell);\n\
      if (result != 0)\n{\n    // Player is affected by the modifier\n}"
    language: cpp
  - title: Advanced usage example
    code: "uint32 result = player->IsAffectedBySpellmod(spellInfo, mod, spell);\n\
      if (result == 1)\n{\n    // Player is affected by the modifier with specific\
      \ effect\n}\nelse if (result > 1)\n{\n    // Player is affected by multiple\
      \ modifiers\n}"
    language: cpp
  notes: This method is part of the core spell processing system in TrinityCore and
    should be used carefully when evaluating spell effects. Performance considerations
    include checking for valid pointers before calling this method, as invalid pointers
    can cause crashes or unexpected behavior.
  warnings: Care must be taken when using this method with different spell modifiers,
    as incorrect usage may lead to incorrect spell effects or gameplay imbalance.
    The method requires proper initialization of spell structures and modifier objects
    to avoid undefined behavior.
  related:
  - IsAffectedBySpell
  - GetSpellMod
  - ApplySpellMod
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:56:56.964382'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
