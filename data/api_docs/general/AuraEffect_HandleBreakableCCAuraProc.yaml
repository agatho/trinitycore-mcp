api:
  class: AuraEffect
  method: HandleBreakableCCAuraProc
  signature: void AuraEffect::HandleBreakableCCAuraProc(AuraApplication * aurApp,
    ProcEventInfo & eventInfo)
documentation:
  brief: Handles the proc event for breakable crowd control auras, allowing them to
    be broken by specific triggers.
  description: The HandleBreakableCCAuraProc method is responsible for processing
    the logic when a breakable crowd control aura is triggered. This method typically
    executes when an aura application receives a proc event that can potentially break
    the effect of the aura. It evaluates whether the conditions for breaking the CC
    are met, such as damage taken or specific actions performed by the affected unit.
    The method interacts with the AuraApplication and ProcEventInfo objects to determine
    the appropriate response, including removing the aura if applicable. This functionality
    is essential in implementing mechanics where certain effects can be interrupted
    or removed under specific circumstances.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura instance
      that triggered the proc event.
  - name: eventInfo
    description: Reference to a ProcEventInfo structure containing detailed information
      about the proc event, including triggering conditions and affected units.
  returns: void
  examples:
  - title: Basic Usage in Aura Effect Handler
    code: "void MyAuraEffect::HandleBreakableCCAuraProc(AuraApplication* aurApp, ProcEventInfo&\
      \ eventInfo)\n{\n    if (eventInfo.GetDamage() > 0)\n    {\n        aurApp->Remove();\n\
      \    }\n}"
    language: cpp
  - title: Advanced Usage with Conditional Break Logic
    code: "void MyAuraEffect::HandleBreakableCCAuraProc(AuraApplication* aurApp, ProcEventInfo&\
      \ eventInfo)\n{\n    if (eventInfo.GetDamage() >= aurApp->GetTarget()->GetMaxHealth()\
      \ * 0.3f)\n    {\n        aurApp->Remove();\n        aurApp->GetTarget()->SendSpellLogMessage(SPELL_LOG_MESSAGE_BREAK_AURA);\n\
      \    }\n}"
    language: cpp
  notes: This method is typically invoked during the aura's proc handling phase. Developers
    should ensure that the aura's application state and event information are properly
    validated before performing any actions. The method may be called multiple times
    depending on how many events trigger the proc.
  warnings: Improper handling of the aura removal or event data can lead to unexpected
    behavior, such as lingering effects or incorrect break conditions. Ensure that
    all references to aurApp are valid and not already destroyed before calling methods
    on it.
  related:
  - AuraEffect::HandleProc
  - AuraApplication::Remove
  - ProcEventInfo::GetDamage
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:55:43.618010'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
