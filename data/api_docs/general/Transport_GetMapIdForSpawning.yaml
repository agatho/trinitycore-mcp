api:
  class: Transport
  method: GetMapIdForSpawning
  signature: int Transport::GetMapIdForSpawning() const
documentation:
  brief: Retrieves the map ID associated with the transport's spawning location.
  description: The GetMapIdForSpawning method returns the unique identifier of the
    map where the transport is set to spawn. This value determines the game world
    context in which the transport object will be initialized and managed. The returned
    map ID is used internally by the TrinityCore server to ensure that transports
    are correctly placed within their respective zones and to handle zone-specific
    logic such as player loading, visibility, and interaction. This method does not
    perform any dynamic calculations; it simply returns a cached or pre-defined value
    that was set during transport initialization.
  parameters: []
  returns: An integer representing the map ID where the transport is configured to
    spawn. A valid map ID corresponds to a known zone in the game world, typically
    matching entries from the DBC files or database tables related to map definitions.
  examples:
  - title: Basic Usage
    code: 'Transport* transport = ...; // Assume transport is initialized

      int mapId = transport->GetMapIdForSpawning();

      printf("Transport spawns on map ID: %d\n", mapId);'
    language: cpp
  - title: Using in Spawn Logic
    code: "void OnTransportSpawn(Transport* transport)\n{\n    int spawnMapId = transport->GetMapIdForSpawning();\n\
      \    if (spawnMapId == 0)\n    {\n        // Handle invalid map ID case\n  \
      \      sLog->outError(\"Invalid map ID for transport spawning\");\n        return;\n\
      \    }\n    // Proceed with spawn logic using the map ID\n}"
    language: cpp
  notes: This method is typically called during transport initialization or when determining
    the correct map context for a transport's behavior. It is important to note that
    the returned value may be zero if the transport has not been properly initialized
    with a valid map ID, which could lead to unexpected behavior in zone management.
  warnings: Do not rely on this method for runtime dynamic map changes; it returns
    a static value set at initialization time. If you require dynamic map information,
    consider using other methods like GetMap() or checking the transport's current
    position instead.
  related:
  - GetMap
  - GetEntry
  - GetGuid
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:37:51.131505'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
