api:
  class: ScriptMgr
  method: OnPlayerCreate
  signature: void ScriptMgr::OnPlayerCreate(Player * player)
documentation:
  brief: Called when a new player character is created in the world
  description: This method is invoked by the TrinityCore script manager whenever a
    new player character is successfully created. It provides an opportunity for scripts
    to perform initialization tasks, set default values, or modify the player's initial
    state before the character becomes active in the game world. The method is part
    of the global scripting system and allows custom code to hook into the player
    creation lifecycle event.
  parameters:
  - name: player
    description: Pointer to the Player object being created. This represents the new
      character instance with all its initial properties set.
  returns: null
  examples:
  - title: Basic Player Creation Hook
    code: "class MyPlayerScript : public PlayerScript\n{\npublic:\n    MyPlayerScript()\
      \ : PlayerScript(\"MyPlayerScript\") {}\n\n    void OnPlayerCreate(Player* player)\
      \ override\n    {\n        // Set default faction for new players\n        player->SetFaction(35);\n\
      \        // Add initial item to inventory\n        player->AddItem(12345, 1);\n\
      \    }\n};"
    language: cpp
  notes: This method is called during the character creation process, before the player
    enters the world. Scripts should avoid performing heavy operations here as it
    may impact character creation performance.
  warnings: null
  related:
  - OnPlayerLogin
  - OnPlayerDelete
  - OnPlayerEnterWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T18:10:11.129459'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
