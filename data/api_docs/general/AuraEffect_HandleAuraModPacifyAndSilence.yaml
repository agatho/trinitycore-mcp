api:
  class: AuraEffect
  method: HandleAuraModPacifyAndSilence
  signature: void AuraEffect::HandleAuraModPacifyAndSilence(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes the pacify and silence effect from a target.
  description: The HandleAuraModPacifyAndSilence method is responsible for managing
    the application and removal of the pacify and silence aura effect on a target
    unit. This aura prevents the target from moving, casting spells, and using abilities
    that require movement or vocal components. The method is invoked during aura application
    or removal phases, with the 'apply' parameter determining whether to activate
    or deactivate the effect. It modifies the target's state by setting appropriate
    flags and potentially interrupting ongoing actions such as spellcasting or movement.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura, its caster, and
      target.
  - name: mode
    description: The mode of operation for the aura effect. Typically indicates whether
      this is a passive application or an active effect trigger.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the pacify and silence effect from the target.
  returns: null
  examples:
  - title: Applying Pacify and Silence Aura
    code: 'AuraEffect* aura = new AuraEffect();

      AuraApplication* app = new AuraApplication();

      aura->HandleAuraModPacifyAndSilence(app, 0, true); // Apply pacify and silence'
    language: cpp
  - title: Removing Pacify and Silence Aura
    code: 'AuraEffect* aura = new AuraEffect();

      AuraApplication* app = new AuraApplication();

      aura->HandleAuraModPacifyAndSilence(app, 0, false); // Remove pacify and silence'
    language: cpp
  notes: This method is part of the TrinityCore's aura system and interacts with core
    game mechanics such as spell casting interruption and movement restrictions. It
    should only be called from within the aura application lifecycle context, typically
    during aura add/remove events.
  warnings: Incorrect usage of this method can lead to unexpected behavior in combat
    or movement systems. Ensure that the AuraApplication object passed is valid and
    properly initialized before calling this method.
  related:
  - AuraEffect::HandleAuraModPacify
  - AuraEffect::HandleAuraModSilence
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:13:21.285493'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
