api:
  class: EssenceManager
  method: GetEssence
  signature: int EssenceManager::GetEssence() const
documentation:
  brief: Retrieves the current essence value stored within the EssenceManager instance.
  description: The GetEssence method is a const accessor function that returns the
    integer value representing the current essence amount managed by the EssenceManager.
    This method does not modify any internal state and is typically used to query
    the player's or object's essence resource for gameplay mechanics such as spell
    casting, item enhancement, or character progression systems. The returned value
    usually corresponds to a specific in-game currency or resource type that may be
    consumed or modified through other methods within the same class.
  parameters: []
  returns: An integer representing the current essence value. This value typically
    indicates how much essence is available for use in various game systems, with
    negative values potentially indicating debt or invalid states depending on implementation.
  examples:
  - title: Basic Usage to Check Essence Amount
    code: "int currentEssence = player->GetSession()->GetEssenceManager()->GetEssence();\n\
      if (currentEssence > 0)\n{\n    // Player has essence available for use\n  \
      \  // Proceed with essence-based actions\n}"
    language: cpp
  - title: Using Essence Value in Conditional Logic
    code: "EssenceManager* essenceMgr = player->GetSession()->GetEssenceManager();\n\
      int requiredEssence = 100;\nint availableEssence = essenceMgr->GetEssence();\n\
      \nif (availableEssence >= requiredEssence)\n{\n    // Deduct essence and perform\
      \ action\n    essenceMgr->RemoveEssence(requiredEssence);\n    player->SendNotification(\"\
      Essence consumed successfully.\");\n}\nelse\n{\n    player->SendNotification(\"\
      Not enough essence to perform this action.\");\n}"
    language: cpp
  notes: This method is marked as const, meaning it does not alter the internal state
    of the EssenceManager object. It should be safe to call from any context where
    const correctness is required. Performance-wise, this is a simple getter operation
    and should have minimal overhead.
  warnings: Ensure that the EssenceManager instance being called upon is valid before
    invoking GetEssence(). Calling this method on a null pointer will result in undefined
    behavior. Also, be aware that essence values may be negative in certain edge cases
    such as debt systems or when used with specific game mechanics.
  related:
  - SetEssence
  - AddEssence
  - RemoveEssence
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T13:54:14.587408'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
