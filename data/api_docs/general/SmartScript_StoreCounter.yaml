api:
  class: SmartScript
  method: StoreCounter
  signature: void SmartScript::StoreCounter(uint32 id, uint32 value, uint32 reset)
documentation:
  brief: Stores a counter value with reset behavior for use in SmartScript AI events.
  description: The StoreCounter method allows SmartScript to save a numerical value
    associated with a specific identifier, which can later be retrieved or used in
    conditional checks. This functionality is commonly used within AI scripts to track
    state changes, event occurrences, or other dynamic values that need persistence
    across multiple script executions. The stored counter can optionally be configured
    to reset after a specified number of increments or time-based triggers, making
    it useful for implementing cooldowns, counters, or timed events in game AI logic.
  parameters:
  - name: id
    description: Unique identifier for the counter being stored. This ID is used to
      retrieve or reference the stored value later in SmartScript conditions or actions.
  - name: value
    description: The numerical value to store for the given identifier. This can represent
      any integer-based state, such as event counts, health thresholds, or time-based
      values.
  - name: reset
    description: Reset threshold for the counter. When the stored value reaches this
      number, the counter will be automatically reset to zero (or another specified
      value). A value of 0 indicates no automatic reset.
  returns: null
  examples:
  - title: Basic Counter Storage
    code: smart->StoreCounter(1234, 5, 0); // Store a counter with ID 1234, value
      5, no reset
    language: cpp
  - title: Counter with Reset Behavior
    code: smart->StoreCounter(5678, 10, 3); // Store a counter with ID 5678, value
      10, reset after reaching 3
    language: cpp
  notes: This method is typically used in conjunction with other SmartScript actions
    like 'SetCounter' or 'CompareCounter' to implement complex AI behaviors. The counter
    values are stored per creature and persist during the lifetime of the NPC, but
    are reset when the creature respawns or is destroyed.
  warnings: Ensure that counter IDs are unique within a given script context to prevent
    unintended overwrites. Also note that this method does not validate whether the
    reset value makes sense in relation to the stored value; it simply stores the
    values as provided.
  related:
  - GetCounter
  - SetCounter
  - CompareCounter
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:20:20.578772'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
