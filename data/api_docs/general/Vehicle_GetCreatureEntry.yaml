api:
  class: Vehicle
  method: GetCreatureEntry
  signature: uint32 Vehicle::GetCreatureEntry() const
documentation:
  brief: Returns the creature entry ID associated with the vehicle.
  description: The GetCreatureEntry method retrieves the unique identifier (entry)
    of the creature that serves as the base for this vehicle. In World of Warcraft's
    TrinityCore implementation, vehicles are often backed by specific creature entries
    that define their properties, behavior, and appearance. This method allows scripts
    and systems to determine which creature template is being used for the vehicle,
    enabling conditional logic based on vehicle type. The returned value corresponds
    to the entry field in the creature_template table and can be used to identify
    specific vehicle types such as war horses, zeppelins, or other mounted creatures.
  parameters: []
  returns: A uint32 value representing the creature entry ID of the vehicle's base
    creature template. This identifier corresponds to the 'entry' field in the creature_template
    database table and uniquely identifies the type of creature that serves as the
    vehicle.
  examples:
  - title: Basic Usage
    code: "Vehicle* vehicle = player->GetVehicle();\nif (vehicle)\n{\n    uint32 creatureEntry\
      \ = vehicle->GetCreatureEntry();\n    if (creatureEntry == 14776) // Example:\
      \ Ironforge Mount\n    {\n        // Handle specific vehicle type\n    }\n}"
    language: cpp
  - title: Vehicle Type Checking
    code: "Unit* vehicleUnit = player->GetVehicleBase();\nif (vehicleUnit && vehicleUnit->IsVehicle())\n\
      {\n    Vehicle* vehicle = vehicleUnit->GetVehicle();\n    uint32 entry = vehicle->GetCreatureEntry();\n\
      \    switch (entry)\n    {\n        case 14776: // Ironforge Mount\n       \
      \     // Special handling for Ironforge mount\n            break;\n        case\
      \ 14777: // Darnassus Mount\n            // Special handling for Darnassus mount\n\
      \            break;\n    }\n}"
    language: cpp
  notes: This method is typically used in vehicle-related systems where behavior or
    appearance needs to be customized based on the specific creature type. The returned
    entry ID can be used to query the creature_template table for additional information
    about the vehicle's properties, such as speed, display IDs, or other creature-specific
    attributes.
  warnings: Ensure that the vehicle pointer is valid before calling this method, as
    calling it on a null vehicle may lead to undefined behavior. Also note that this
    method returns the base creature entry, not necessarily the display ID or any
    modified version of the vehicle.
  related:
  - GetVehicleKit
  - GetCreatureTemplate
  - GetEntry
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:35:17.723662'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
