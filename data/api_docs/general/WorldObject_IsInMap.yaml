api:
  class: WorldObject
  method: IsInMap
  signature: bool WorldObject::IsInMap(const WorldObject * obj) const
documentation:
  brief: Determines whether the WorldObject is in the same map as another WorldObject.
  description: The IsInMap method checks if the calling WorldObject shares the same
    map instance as the provided WorldObject. This is a fundamental spatial relationship
    check used extensively in TrinityCore's object management and visibility systems.
    The method compares the internal map identifiers of both objects to determine
    if they exist within the same game world map. It returns true if both objects
    are on the same map, and false otherwise. This check is crucial for determining
    whether two objects can interact or be seen by each other in the same gameplay
    context.
  parameters: []
  returns: Returns true if the WorldObject is located on the same map as the specified
    object; returns false if they are on different maps or if the provided object
    is null.
  examples:
  - title: Basic usage to check map membership
    code: "if (player->IsInMap(npc)) {\n    // Player and NPC are on the same map\n\
      \    player->SendPacket(somePacket);\n}"
    language: cpp
  - title: Using in visibility determination for AI
    code: "if (creature->IsInMap(targetPlayer) && creature->IsInWorld()) {\n    //\
      \ Creature can potentially see the player\n    creature->SetInCombatWith(targetPlayer);\n\
      }"
    language: cpp
  notes: This method performs a simple map ID comparison and is therefore very fast.
    It does not account for different instances of the same map (such as dungeon instances)
    - it only checks if both objects are on the same base map. The method assumes
    that both objects have valid map references, though it handles null object pointers
    gracefully by returning false.
  warnings: This method should not be used to determine if two objects are in the
    same instance or zone; it only checks for map identity. For more complex spatial
    relationships involving instances or zones, additional checks using GetMapId()
    and other related methods should be performed.
  related:
  - GetMapId
  - IsInWorld
  - GetMap
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:25:31.133673'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
