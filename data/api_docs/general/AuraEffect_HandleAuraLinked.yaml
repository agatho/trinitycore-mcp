api:
  class: AuraEffect
  method: HandleAuraLinked
  signature: void AuraEffect::HandleAuraLinked(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes a linked aura effect based on the provided application
    and mode.
  description: The HandleAuraLinked method manages the application or removal of an
    aura effect that is linked to another aura. This typically occurs when one aura
    triggers or modifies the behavior of another aura, such as in chaining effects
    or conditional aura applications. The method uses the AuraApplication object to
    determine which specific aura is being modified and applies the appropriate logic
    based on the mode parameter (whether to apply or remove the effect). This method
    is commonly used in complex spell mechanics where auras have dependencies or interactions
    with other auras.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the aura being
      applied or removed. This object contains information about which aura is affected
      and its current state.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. Typically,
      this value determines whether the aura effect should be applied (1) or removed
      (0). The exact interpretation may depend on the specific implementation within
      TrinityCore's aura system.
  - name: apply
    description: A boolean flag that indicates whether to apply (true) or remove (false)
      the linked aura effect. This parameter works in conjunction with the mode parameter
      to determine the final behavior of the aura.
  returns: null
  examples:
  - title: Basic usage of HandleAuraLinked
    code: "void ApplyLinkedAura(AuraApplication* app, uint8 mode, bool apply)\n{\n\
      \    AuraEffect* effect = /* get aura effect */;\n    effect->HandleAuraLinked(app,\
      \ mode, apply);\n}"
    language: cpp
  - title: Triggering a linked aura on spell cast
    code: "void Spell::HandleLinkedAura()\n{\n    if (Unit* caster = GetCaster())\n\
      \    {\n        AuraApplication* app = /* get aura application */;\n       \
      \ if (app)\n        {\n            auraEffect->HandleAuraLinked(app, 1, true);\n\
      \        }\n    }\n}"
    language: cpp
  notes: This method is part of the internal aura handling system in TrinityCore and
    should not be called directly from outside the core aura logic. It is typically
    invoked by the aura application system when linked auras are processed. The mode
    parameter may have different meanings depending on the specific aura type or spell
    effect.
  warnings: Incorrect usage of this method can lead to unexpected behavior in aura
    interactions, including infinite loops or incorrect stacking of effects. Ensure
    that the AuraApplication object passed is valid and properly initialized before
    calling this method.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::ApplyAura
  - AuraApplication::RemoveAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:30:50.791769'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
