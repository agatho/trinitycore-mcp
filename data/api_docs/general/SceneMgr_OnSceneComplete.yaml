api:
  class: SceneMgr
  method: OnSceneComplete
  signature: void SceneMgr::OnSceneComplete(uint32 sceneInstanceID)
documentation:
  brief: Notifies the scene manager that a scene instance has completed its execution.
  description: The OnSceneComplete method is invoked by the TrinityCore framework
    when a scene instance, identified by the provided sceneInstanceID, finishes its
    execution. This method typically handles cleanup operations and may trigger subsequent
    actions or events dependent on the completion of the scene. It is part of the
    scene management system that controls scripted sequences in the game world, such
    as cutscenes or quest-related animations. The method ensures proper state transitions
    and resource deallocation for completed scenes.
  parameters:
  - name: sceneInstanceID
    description: A unique identifier for the scene instance that has completed execution.
      This ID is assigned when the scene begins and is used to track its lifecycle
      within the SceneMgr system.
  returns: null
  examples:
  - title: Basic usage in a custom scene handler
    code: "void MySceneHandler::OnSceneComplete(uint32 sceneInstanceID)\n{\n    //\
      \ Log completion\n    TC_LOG_INFO(\"scene\", \"Scene with instance ID %u has\
      \ completed.\", sceneInstanceID);\n    \n    // Perform cleanup or trigger next\
      \ step\n    if (auto* player = GetPlayerBySceneInstance(sceneInstanceID))\n\
      \    {\n        player->SendSceneComplete();\n    }\n}"
    language: cpp
  notes: This method is typically called internally by the core scene engine upon
    scene completion. Developers should not manually invoke this method unless implementing
    custom scene logic or extending the scene manager behavior.
  warnings: null
  related:
  - SceneMgr::StartScene
  - SceneMgr::CancelScene
  - SceneMgr::UpdateScene
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T23:16:33.075071'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
