api:
  class: AuraEffect
  method: HandleDisableInertia
  signature: void AuraEffect::HandleDisableInertia(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Disables inertia mechanics for the aura effect application.
  description: The HandleDisableInertia method manages the application or removal
    of inertia-related effects within an aura. This function is typically invoked
    during aura application or removal to modify how movement or physical interactions
    are handled for affected units. It adjusts internal state flags or applies specific
    game mechanics that prevent inertia-based behaviors such as momentum or sliding.
    The method operates based on the provided aura application context and the mode
    of operation (apply or remove).
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter defines the context in which the inertia
      disabling occurs.
  - name: mode
    description: The mode of operation for the aura effect, typically indicating whether
      the effect is being applied (1) or removed (0). This value influences how the
      inertia state is modified.
  - name: apply
    description: Boolean flag indicating if the effect should be applied (true) or
      removed (false). When true, inertia is disabled; when false, it may be re-enabled
      depending on other factors.
  returns: null
  examples:
  - title: Disabling Inertia on Aura Application
    code: "void MyAuraHandler::OnApply(AuraApplication const* aurApp, uint8 mode,\
      \ bool apply) const {\n    if (apply)\n        HandleDisableInertia(aurApp,\
      \ mode, true);\n}"
    language: cpp
  - title: Conditional Inertia Handling Based on Unit Type
    code: "void MyAuraHandler::OnApply(AuraApplication const* aurApp, uint8 mode,\
      \ bool apply) const {\n    if (aurApp->GetTarget()->IsPlayer() && apply)\n \
      \       HandleDisableInertia(aurApp, mode, true);\n}"
    language: cpp
  notes: This method is part of the core aura handling system and interacts with internal
    movement and physics systems. It should only be called from within aura application/removal
    logic to ensure proper synchronization with game state updates.
  warnings: Improper use of this method can lead to inconsistent movement behavior
    or unexpected inertia-related mechanics. Ensure that all calls are made in the
    correct context to avoid unintended side effects.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - AuraApplication::GetTarget
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:52:31.273321'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
