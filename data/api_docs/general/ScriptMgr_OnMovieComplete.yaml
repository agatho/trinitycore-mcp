api:
  class: ScriptMgr
  method: OnMovieComplete
  signature: void ScriptMgr::OnMovieComplete(Player * player, uint32 movieId)
documentation:
  brief: Invoked when a player completes a movie sequence in the game.
  description: The OnMovieComplete method is a callback function within the ScriptMgr
    class that gets triggered whenever a player finishes watching a movie, typically
    initiated through the use of the PlayMovie or related gameplay mechanics. This
    method allows script developers to execute custom logic or events upon movie completion,
    such as rewarding players, advancing quest progress, or triggering further cinematic
    sequences. It serves as an event handler for movie-related gameplay events and
    is part of TrinityCore's scripting system that enables dynamic content behavior.
  parameters:
  - name: player
    description: Pointer to the Player object representing the player who completed
      the movie. This parameter must not be null, as it represents the active player
      instance.
  - name: movieId
    description: The unique identifier of the movie that was completed. This ID corresponds
      to entries in the movie database and determines which cinematic sequence was
      played.
  returns: null
  examples:
  - title: Basic implementation to log movie completion
    code: "void ScriptMgr::OnMovieComplete(Player* player, uint32 movieId)\n{\n  \
      \  sLog->outString(\"Player %s completed movie ID %u\", player->GetName().c_str(),\
      \ movieId);\n}"
    language: cpp
  - title: Advancing quest progress after movie completion
    code: "void ScriptMgr::OnMovieComplete(Player* player, uint32 movieId)\n{\n  \
      \  if (movieId == 12345) // Example movie ID\n    {\n        player->KilledMonsterCredit(54321);\
      \ // Advance quest\n        player->SendNotification(\"Quest updated after cinematic\
      \ sequence.\");\n    }\n}"
    language: cpp
  notes: This method is called from the game's core execution flow when a movie finishes
    playing, so it should avoid heavy computations or blocking operations to prevent
    performance issues. It's recommended to use this method for lightweight event
    handling and not for complex logic that might delay gameplay.
  warnings: Ensure that the player pointer is valid before using it, as invalid pointers
    could lead to crashes. Also, be cautious when modifying player state within this
    callback, as it may interfere with other systems if not handled carefully.
  related:
  - OnMovieStart
  - OnPlayerCompleteMovie
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T22:31:19.294853'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
