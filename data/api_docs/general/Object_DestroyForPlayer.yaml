api:
  class: Object
  method: DestroyForPlayer
  signature: void Object::DestroyForPlayer(Player * target) const
documentation:
  brief: Removes the object from the specified player's client view
  description: The DestroyForPlayer method instructs the server to send a destroy
    packet to the specified player's client, making the object disappear from their
    game world. This method is typically used when an object should no longer be visible
    to a particular player, such as when they move out of range, when the object is
    being deleted, or when transitioning between different zones or instances. The
    operation is immediate and affects only the targeted player's client, not other
    players in the same area.
  parameters:
  - name: target
    description: A pointer to the Player object whose client will receive the destroy
      packet. This parameter must be a valid, non-null pointer to an active player
      character.
  returns: null
  examples:
  - title: Destroying an Item for a Specific Player
    code: 'Item* item = ...;

      Player* player = ...;

      item->DestroyForPlayer(player);'
    language: cpp
  - title: Removing Multiple Objects from a Player's View
    code: "for (auto& object : objectsToRemove)\n{\n    object->DestroyForPlayer(targetPlayer);\n\
      }"
    language: cpp
  notes: This method does not actually delete the object from memory; it only removes
    it from the specified player's client view. The object remains in the game world
    and can still be interacted with by other players or NPCs. It is commonly used
    in conjunction with Object::AddForPlayer to manage visibility of objects dynamically.
  warnings: Ensure that the target parameter is a valid, non-null pointer to an active
    player. Passing an invalid or null pointer may result in undefined behavior or
    crashes. This method should not be called on objects that are already destroyed
    or in the process of being destroyed.
  related:
  - Object::AddForPlayer
  - Object::SendForPlayers
  - Object::IsInWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T20:00:37.718199'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
