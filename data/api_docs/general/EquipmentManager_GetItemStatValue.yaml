api:
  class: EquipmentManager
  method: GetItemStatValue
  signature: int32 EquipmentManager::GetItemStatValue(int * item, StatType stat)
documentation:
  brief: Retrieves the stat value of a specified item from the equipment manager.
  description: The GetItemStatValue method retrieves the value of a specific stat
    type for a given item. This method is typically used in the context of character
    equipment management within TrinityCore, allowing developers to access detailed
    stat information for items such as attack power, resilience, or other attribute
    modifiers. The method requires an item reference and a stat type to determine
    which stat value should be returned. It's commonly used in gameplay mechanics
    that involve item evaluation, gear comparison, or stat calculation systems.
  parameters:
  - name: item
    description: Pointer to an integer representing the item identifier or internal
      item reference. This parameter is expected to point to a valid item in the equipment
      manager's context.
  - name: stat
    description: StatType enum value indicating which specific stat should be retrieved
      from the item. This defines the type of stat such as attack power, armor, or
      other attribute modifiers.
  returns: Returns an int32 value representing the stat value for the specified item
    and stat type. A negative value may indicate an invalid or unmodified stat, while
    zero typically means no modifier is applied for that particular stat.
  examples:
  - title: Retrieve Attack Power of an Item
    code: int32 attackPower = equipmentManager->GetItemStatValue(&itemGuid, STAT_ATTACK_POWER);
    language: cpp
  - title: Check Armor Value of Equipment
    code: "int32 armorValue = equipmentManager->GetItemStatValue(&helmetGuid, STAT_ARMOR);\n\
      if (armorValue > 0) {\n    // Apply additional logic for high-armor items\n}"
    language: cpp
  notes: This method assumes that the item reference is valid and properly initialized
    within the EquipmentManager's context. It does not perform any validation on the
    item pointer or stat type, so calling code should ensure these values are correct
    to avoid undefined behavior.
  warnings: Passing an invalid item pointer or an unsupported StatType enum value
    may result in undefined behavior or incorrect return values. Always validate item
    references before calling this method.
  related:
  - GetItem
  - SetItemStatValue
  - HasItem
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:00:52.586773'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
