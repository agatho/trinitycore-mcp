api:
  class: ChatHandler
  method: HasPermission
  signature: bool ChatHandler::HasPermission(int permission) const
documentation:
  brief: Checks if the current chat handler has the specified permission level.
  description: The HasPermission method evaluates whether the user associated with
    the ChatHandler instance possesses a specific permission level. This is commonly
    used in TrinityCore's command system to determine if a player can execute certain
    administrative or game commands. The method compares the permission level against
    the user's assigned permissions, which are typically derived from their account
    privileges or role within the game. It returns true if the user has at least the
    required permission level, and false otherwise. This check is essential for maintaining
    command access control and ensuring only authorized users can perform sensitive
    operations.
  parameters: []
  returns: Returns true if the current chat handler's user has the specified permission
    level or higher; otherwise returns false.
  examples:
  - title: Basic Permission Check
    code: "if (handler.HasPermission(3)) {\n    handler.PSendSysMessage(\"You have\
      \ admin permissions.\");\n} else {\n    handler.PSendSysMessage(\"You do not\
      \ have sufficient permissions.\");\n}"
    language: cpp
  - title: Using in Command Implementation
    code: "bool HandleTeleportCommand(ChatHandler* handler, char const* args) {\n\
      \    if (!handler->HasPermission(2)) {\n        handler->SendSysMessage(LANG_COMMAND_NO_PERMISSION);\n\
      \        return false;\n    }\n    // Proceed with teleport command logic\n\
      \    return true;\n}"
    language: cpp
  notes: This method relies on the underlying permission system of TrinityCore, which
    typically maps permission levels to account roles or GM levels. The exact numeric
    values for permissions may vary between different TrinityCore builds or configurations.
    It's important to note that this check is performed against the current session's
    user context and not against a global server permission system.
  warnings: null
  related:
  - ChatHandler::GetSession
  - ChatHandler::GetPlayer
  - ChatHandler::HasPermissionLevel
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T16:18:19.918974'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
