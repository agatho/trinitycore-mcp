api:
  class: SceneObject
  method: CreateSceneObject
  signature: SceneObject * SceneObject::CreateSceneObject(int sceneId, int * creator,
    const int & pos, int privateObjectOwner)
documentation:
  brief: Creates a new scene object with the specified scene ID and creator information.
  description: The CreateSceneObject method instantiates a new SceneObject within
    the TrinityCore framework, typically used for creating in-game visual effects
    or interactive scene elements. It requires a scene identifier, a pointer to the
    creator's identifier, positional data, and an optional private object owner parameter.
    This method is commonly utilized when implementing custom world events, cinematic
    sequences, or dynamic environment changes that require scene-based objects. The
    returned SceneObject pointer can be used to manipulate the created object's properties
    and lifecycle within the game world.
  parameters:
  - name: sceneId
    description: Unique identifier for the scene template to be instantiated. This
      ID maps to a predefined scene configuration in the database.
  - name: creator
    description: Pointer to an integer representing the creator's identifier (such
      as a player GUID or creature entry). May be NULL if no specific creator is assigned.
  - name: pos
    description: Reference to an integer containing positional data for the scene
      object. This typically represents coordinates or a position index in the world.
  - name: privateObjectOwner
    description: Integer value indicating the private owner of the scene object. Used
      for controlling visibility and access permissions within specific contexts.
  returns: A pointer to the newly created SceneObject instance, or NULL if creation
    fails due to invalid parameters or resource constraints.
  examples:
  - title: Basic Scene Object Creation
    code: "SceneObject* sceneObj = SceneObject::CreateSceneObject(12345, &playerGuid,\
      \ position, 0);\nif (sceneObj)\n{\n    // Use the created scene object\n   \
      \ sceneObj->SetPosition(x, y, z);\n}"
    language: cpp
  - title: Scene Object with Creator and Private Owner
    code: "uint64 creatorGuid = player->GetGUID();\nint positionData = 0;\nSceneObject*\
      \ sceneObj = SceneObject::CreateSceneObject(54321, &creatorGuid, positionData,\
      \ player->GetEntry());\nif (sceneObj)\n{\n    // Perform additional setup\n\
      \    sceneObj->SetVisibility(true);\n}"
    language: cpp
  notes: This method allocates memory for a new SceneObject and initializes it with
    the provided parameters. Developers should ensure that the sceneId corresponds
    to an existing scene definition in the database. The creator parameter may be
    used for tracking ownership or triggering specific event behaviors.
  warnings: Do not call this method without proper validation of input parameters,
    especially sceneId and position data. Failure to properly manage returned SceneObject
    pointers can lead to memory leaks or undefined behavior.
  related:
  - SceneObject::DestroySceneObject
  - SceneObject::SetPosition
  - SceneObject::SetVisibility
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:09:09.206438'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
