api:
  class: Item
  method: IsBroken
  signature: bool Item::IsBroken() const
documentation:
  brief: Returns whether the item is broken and cannot be used.
  description: The IsBroken method checks if an item has been damaged to the point
    where it can no longer be used by the player. This typically occurs when an item's
    durability reaches zero, making it unusable. The method returns true when the
    item is broken and false when it is still usable. In World of Warcraft, this is
    commonly associated with items that have reached their maximum damage or those
    that are no longer functional due to damage. This method is often used in conjunction
    with other durability-related functions to determine item status.
  parameters: []
  returns: Returns true if the item is broken (i.e., its durability has reached zero
    and it can no longer be used), false otherwise.
  examples:
  - title: Basic Usage Example
    code: "if (item->IsBroken()) {\n    // Do something when item is broken\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Item* item = player->GetItemByGuid(guid);\nif (item && item->IsBroken())\
      \ {\n    // Handle broken item case\n    // This might be used in inventory\
      \ management or crafting systems\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. It's important
    to note that the method only checks for the broken state, not necessarily whether
    an item has been damaged to zero durability. The implementation relies on internal
    item state tracking.
  warnings: Be cautious when using this method in conjunction with other durability-related
    functions as it may lead to unexpected behavior if items are not properly initialized
    or if the item's state is modified outside of normal gameplay mechanics.
  related:
  - Item::GetDurability
  - Item::IsUsable
  - Item::HasEnchantment
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:44:03.312312'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
