api:
  class: Unit
  method: ProcSkillsAndReactives
  signature: void Unit::ProcSkillsAndReactives(bool isVictim, Unit * procTarget, const
    int & typeMask, ProcFlagsHit hitMask, int attType)
documentation:
  brief: Processes skill-based and reactive spell procs for the unit.
  description: The ProcSkillsAndReactives method handles the execution of skill-based
    and reactive spell triggers associated with a unit's actions. It evaluates whether
    applicable procs should be triggered based on combat events, such as attacks or
    damage dealt. This method is typically called during combat processing to ensure
    that passive abilities, talents, and enchantments that have proc conditions are
    properly activated. The method takes into account the target of the proc, the
    type of attack or hit, and whether the unit is the victim or attacker in the action.
  parameters:
  - name: isVictim
    description: Indicates if the current unit is the victim of the action. If true,
      procs are evaluated from the perspective of the victim; otherwise, they are
      evaluated as the attacker.
  - name: procTarget
    description: The target unit that will be affected by the proc. Can be null if
      no specific target is involved in the proc trigger.
  - name: typeMask
    description: A bitmask indicating the type of attack or spell that triggered the
      proc (e.g., melee, ranged, spell). Used to filter which procs are eligible for
      activation.
  - name: hitMask
    description: A ProcFlagsHit mask specifying the hit result conditions (e.g., hit,
      crit, miss) that must be met for the proc to trigger.
  - name: attType
    description: The attack type (e.g., BASE_ATTACK, OFF_ATTACK, RANGED_ATTACK) used
      to determine which specific procs are relevant based on weapon or attack type.
  returns: null
  examples:
  - title: Basic Usage in Combat
    code: 'Unit* attacker = ...;

      Unit* victim = ...;

      attacker->ProcSkillsAndReactives(true, victim, PROC_SPELL_HIT, PROC_HIT_CRITICAL,
      BASE_ATTACK);'
    language: cpp
  - title: Triggering Procs for Ranged Attacks
    code: 'Unit* shooter = ...;

      Unit* target = ...;

      shooter->ProcSkillsAndReactives(false, target, PROC_RANGED_HIT, PROC_HIT_NORMAL,
      RANGED_ATTACK);'
    language: cpp
  notes: This method is usually invoked internally by the combat system during damage
    calculations or spell casts. It does not directly execute spells but rather determines
    whether to trigger procs that may lead to additional actions such as casting a
    spell, applying an aura, or modifying stats.
  warnings: Calling this method manually outside of combat context may result in incorrect
    proc triggering or unintended behavior. Ensure all parameters are valid and consistent
    with the current combat state to avoid undefined behavior.
  related:
  - Unit::ProcSpellOnHit
  - Unit::HandleProcTriggerSpell
  - Unit::GetVictim
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:37:01.794869'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
