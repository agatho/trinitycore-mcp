api:
  class: LootMethodChangedHandler
  method: GetSubscribedEvents
  signature: int LootMethodChangedHandler::GetSubscribedEvents() const
documentation:
  brief: Returns the bitmask of events this handler is subscribed to for loot method
    changes.
  description: The GetSubscribedEvents method returns an integer bitmask representing
    the event types that the LootMethodChangedHandler instance is configured to handle.
    In TrinityCore's World of Warcraft server architecture, this method is typically
    used by event-driven systems to determine which specific events a handler should
    process. The returned value is usually a combination of predefined event flags
    that indicate the types of loot-related events the handler is interested in. This
    method is essential for proper event routing within the game's internal systems
    and ensures that handlers only respond to relevant notifications.
  parameters: []
  returns: An integer bitmask where each bit represents a specific event type. The
    exact meaning of each bit depends on the predefined event constants used by TrinityCore's
    event system, typically indicating which loot-related events (such as loot method
    changes, loot distribution updates, etc.) this handler should process.
  examples:
  - title: Basic Usage Example
    code: "LootMethodChangedHandler handler;\nint subscribedEvents = handler.GetSubscribedEvents();\n\
      if (subscribedEvents & LOOT_METHOD_CHANGED_EVENT)\n{\n    // Handle loot method\
      \ change event\n}"
    language: cpp
  notes: This method is typically called during system initialization or event registration
    to determine which events a handler should process. The bitmask format allows
    for efficient event filtering and routing within the server's event system. Developers
    should be aware that the specific bit values are defined by TrinityCore's internal
    event system and may change between versions.
  warnings: Do not modify the return value directly as it represents a constant bitmask.
    If you need to change subscription behavior, use appropriate setter methods or
    registration functions rather than modifying the returned value.
  related:
  - LootMethodChangedHandler::HandleEvent
  - LootMethodChangedHandler::SetSubscribedEvents
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:57:55.166661'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
