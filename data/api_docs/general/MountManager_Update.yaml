api:
  class: MountManager
  method: Update
  signature: void MountManager::Update(int * player, uint32 diff)
documentation:
  brief: Updates the mount manager's internal state based on elapsed time and player
    data.
  description: The MountManager::Update method is responsible for processing and maintaining
    the state of mounted creatures or player mounts within the game world. It typically
    handles mount-related events such as updating mount cooldowns, checking if a player
    can still ride a mount, managing mount appearance changes, and synchronizing mount
    status with the client. This method is generally called during each game tick
    or update cycle to ensure that mount states are consistent with the current game
    conditions. The method takes a pointer to a player object and a time delta (diff)
    which represents the milliseconds elapsed since the last update.
  parameters:
  - name: player
    description: A pointer to the Player object whose mount state needs to be updated.
      This parameter may be null if no specific player is being processed.
  - name: diff
    description: The time difference in milliseconds since the last update call. Used
      to calculate elapsed time for mount-related cooldowns and effects.
  returns: void
  examples:
  - title: Basic Mount Update Call
    code: 'Player* player = ...;

      uint32 diff = 1000; // 1 second elapsed

      mountManager->Update(&player, diff);'
    language: cpp
  - title: Updating Multiple Players' Mounts
    code: "for (auto& pair : playerMap)\n{\n    Player* player = pair.second;\n  \
      \  mountManager->Update(&player, diff);\n}"
    language: cpp
  notes: This method is typically invoked from the main game loop or update handler.
    It's important to ensure that the player pointer passed in is valid and not null
    to avoid undefined behavior. The 'diff' parameter should accurately reflect the
    time passed since the last call for correct mount timing.
  warnings: Passing a null player pointer may lead to crashes or unexpected behavior.
    Ensure that all players being updated are properly initialized and valid before
    calling this method.
  related:
  - MountManager::AddMount
  - MountManager::RemoveMount
  - MountManager::IsMounted
  - MountManager::SetPlayerMount
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T23:42:03.248865'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
