api:
  class: SpellInfo
  method: IsDifferentRankOf
  signature: bool SpellInfo::IsDifferentRankOf(const SpellInfo * spellInfo) const
documentation:
  brief: Determines whether the current spell is a different rank of the provided
    spell information.
  description: This method checks if the current SpellInfo instance represents a different
    rank of the specified spell, meaning it evaluates whether two spells are related
    by rank but not identical. The method is commonly used in spell handling and validation
    logic within TrinityCore's spell system to ensure proper spell progression and
    avoid conflicts between similar spells of varying ranks. It typically returns
    true when the current spell has a higher rank than the provided spell, or false
    when they are equivalent or when the provided spell is null.
  parameters: []
  returns: Returns true if the current spell is a different rank of the provided spellInfo;
    otherwise false. This indicates that the two spells belong to the same spell family
    but have different ranks, which is important for determining spell progression
    and avoiding conflicts in spell mechanics.
  examples:
  - title: Basic Usage Example
    code: "if (spellInfo->IsDifferentRankOf(otherSpellInfo)) {\n    // Handle different\
      \ rank logic\n}"
    language: cpp
  notes: This method relies on internal spell ranking data and is typically used in
    conjunction with other spell-related methods to determine spell progression. It
    should be used carefully when comparing spells that are not from the same spell
    family.
  warnings: Be cautious when using this method with null spellInfo objects, as it
    may lead to undefined behavior or crashes if not properly handled. Also note that
    this method does not consider spell effects or other attributes beyond rank.
  related:
  - SpellInfo::IsRankOf
  - SpellInfo::IsSameRank
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:51:54.446660'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
