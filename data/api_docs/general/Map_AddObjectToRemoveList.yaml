api:
  class: Map
  method: AddObjectToRemoveList
  signature: void Map::AddObjectToRemoveList(WorldObject * obj)
documentation:
  brief: Schedules a WorldObject for removal from the map during the next update cycle.
  description: The AddObjectToRemoveList method marks a WorldObject to be removed
    from the map's object lists at the beginning of the next update cycle. This is
    an internal mechanism used by the TrinityCore server to safely handle object destruction
    and cleanup without causing issues during active gameplay loops or iteration over
    object lists. The object will be removed from all relevant containers and its
    memory may be freed in subsequent updates. This method is typically called internally
    when an object's removal is requested, such as when a player logs out or a creature
    dies.
  parameters:
  - name: obj
    description: Pointer to the WorldObject that should be scheduled for removal from
      the map. Must not be null.
  returns: null
  examples:
  - title: Removing a Creature from the Map
    code: 'Creature* creature = ...; // Some creature instance

      Map* map = creature->GetMap();

      map->AddObjectToRemoveList(creature);'
    language: cpp
  notes: This method does not immediately destroy the object. Instead, it adds the
    object to an internal removal list that is processed during the next map update
    cycle. This ensures thread safety and prevents issues with concurrent access during
    iteration over object lists.
  warnings: Do not call this method directly unless you are implementing or modifying
    core game mechanics. The typical usage is handled automatically by the server
    when objects are destroyed or removed from the world.
  related:
  - ObjectMgr::RemoveCreatureFromMap
  - Map::RemoveObjectFromMap
  - Map::Update
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T11:15:53.974568'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
