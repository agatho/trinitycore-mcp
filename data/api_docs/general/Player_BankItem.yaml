api:
  class: Player
  method: BankItem
  signature: Item * Player::BankItem(const ItemPosCountVec & dest, Item * pItem, bool
    update)
documentation:
  brief: Moves an item from player's inventory to bank slots
  description: The BankItem method transfers an item from the player's inventory to
    the bank storage, handling the necessary slot allocation and updating the item's
    position in the database. This method is typically used when players deposit items
    into their bank vault, ensuring proper placement and accounting for the item's
    location within the bank system. The method returns the item pointer after successful
    transfer, allowing for further processing or verification of the operation.
  parameters:
  - name: dest
    description: The destination bank slot positions where the item should be placed.
      This parameter specifies the exact bank slots to use for storing the item.
  - name: pItem
    description: The item to be moved from inventory to bank storage. This is the
      actual item object that will be transferred to the bank vault.
  - name: update
    description: Flag indicating whether to update the item in database. If true,
      the item's position and state will be updated in the database after transfer.
  returns: Returns a pointer to the item that was moved to bank storage. This pointer
    represents the item object after it has been successfully transferred from inventory
    to bank slots. If the operation fails, this may return nullptr.
  examples:
  - title: Basic BankItem Usage
    code: Item *item = player->BankItem({{0, 1}}, player->GetItemByPos(0, 1), true);
    language: cpp
  - title: Advanced BankItem with Multiple Items
    code: 'ItemPosCountVec dest = {{0, 1}, {1, 1}};

      Item *item1 = player->BankItem(dest, player->GetItemByPos(0, 1), true);

      Item *item2 = player->BankItem(dest, player->GetItemByPos(0, 2), true);'
    language: cpp
  notes: This method requires proper handling of bank slot positions and item data.
    It should be used carefully to avoid conflicts with existing items in bank slots.
    The method may require database updates depending on the update parameter value.
  warnings: This method can fail if bank slots are occupied or if item is not valid
    for bank storage. Be cautious when using multiple items as it may cause conflicts
    with existing items in bank slots.
  related:
  - GetItemByPos
  - BankItem
  - MoveItemToInventory
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:08:40.909290'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
