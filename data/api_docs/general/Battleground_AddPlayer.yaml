api:
  class: Battleground
  method: AddPlayer
  signature: void Battleground::AddPlayer(Player * player, int queueId)
documentation:
  brief: Adds a player to the battleground instance and initializes their participation
    in the game.
  description: The AddPlayer method is responsible for integrating a Player object
    into a Battleground instance. It handles the initial setup of the player's presence
    within the battleground, including assigning them to appropriate teams, initializing
    their battleground-specific data structures, and preparing them for gameplay.
    This method is typically invoked during the battleground queue processing when
    players are matched and ready to enter the arena. The method ensures that the
    player's state is correctly synchronized with the battleground's internal systems,
    such as score tracking, team assignments, and game progression mechanics. It also
    manages necessary player data updates like updating their battleground ID and
    ensuring proper positioning within the game world.
  parameters:
  - name: player
    description: Pointer to the Player object that is being added to the battleground.
      This parameter must be a valid, non-null pointer to an existing player instance.
  - name: queueId
    description: Identifier for the specific battleground queue from which the player
      was selected. This value determines which battleground template or instance
      the player will join and helps track queue-related information for the player's
      participation.
  returns: null
  examples:
  - title: Basic Player Addition to Battleground
    code: "Battleground* bg = sBattlegroundMgr->GetBattleground(1234);\nPlayer* player\
      \ = ObjectAccessor::FindPlayer(ObjectGuid::Create<HighGuid::Player>(123456));\n\
      if (bg && player)\n{\n    bg->AddPlayer(player, 0);\n}"
    language: cpp
  - title: Adding Player with Queue ID Validation
    code: "Battleground* bg = sBattlegroundMgr->GetBattleground(5678);\nPlayer* player\
      \ = ObjectAccessor::FindPlayer(ObjectGuid::Create<HighGuid::Player>(789012));\n\
      if (bg && player)\n{\n    uint32 queueId = player->GetBattlegroundQueueTypeId();\n\
      \    bg->AddPlayer(player, queueId);\n}"
    language: cpp
  notes: This method should only be called after verifying that the battleground instance
    is properly initialized and ready to accept players. The method internally handles
    team assignment logic based on battleground rules and player group status. It's
    important to note that this method does not directly teleport the player to the
    battleground; that typically happens through separate queue handling mechanisms.
  warnings: Calling AddPlayer with a null player pointer will result in undefined
    behavior or crashes. Ensure that the player object is valid and properly initialized
    before calling this method. Also, be aware that adding players to a battleground
    that has already started may cause synchronization issues with existing game state.
  related:
  - RemovePlayer
  - GetPlayerCountByTeam
  - GetBgTypeID
  - IsPlayerInBattleground
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:27:45.434730'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
