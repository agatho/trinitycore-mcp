api:
  class: GarrisonMgr
  method: Initialize
  signature: void GarrisonMgr::Initialize()
documentation:
  brief: Initializes the garrison manager system, setting up internal data structures
    and loading garrison-related information for all players.
  description: The Initialize method prepares the GarrisonMgr singleton for operation
    by loading and initializing all necessary garrison data, including player garrison
    information, building placements, and quest progress. This method is typically
    called during server startup or when a new player logs in to ensure that garrison
    systems are properly configured. It handles internal setup such as registering
    callbacks, initializing caches, and preparing the system for garrison-related
    operations like building placement, mission assignments, and resource management.
    The method ensures that all garrison data is synchronized with the database and
    ready for use by other subsystems.
  parameters: []
  returns: null
  examples:
  - title: Basic Initialization Call
    code: GarrisonMgr::instance()->Initialize();
    language: cpp
  notes: This method should only be called once during server initialization or when
    a new player logs in. It's not thread-safe and should be executed on the main
    thread. The method performs database operations that may impact performance during
    server startup.
  warnings: Calling this method multiple times without proper cleanup can lead to
    memory leaks or inconsistent data states. Ensure all existing garrison data is
    properly saved before calling Initialize if it's being invoked after initial setup.
  related:
  - GarrisonMgr::LoadGarrisons
  - GarrisonMgr::SaveGarrisons
  - GarrisonMgr::GetGarrison
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:03:31.584711'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
