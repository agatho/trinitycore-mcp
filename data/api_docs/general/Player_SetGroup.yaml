api:
  class: Player
  method: SetGroup
  signature: void Player::SetGroup(Group * group, int8 subgroup)
documentation:
  brief: Sets the player's group membership and subgroup assignment.
  description: This method assigns a player to a specific group and subgroup, allowing
    for proper group management within the game. It updates the player's group status
    and ensures that the player is correctly integrated into the group's structure.
    The method handles both the group membership and subgroup assignment, which is
    crucial for maintaining proper group functionality in World of Warcraft. This
    operation affects the player's group-related data and should be used carefully
    to maintain game balance and proper group mechanics.
  parameters:
  - name: group
    description: Pointer to the Group object that the player will be assigned to.
      This parameter can be nullptr if the player is being removed from a group, otherwise
      it must point to a valid group instance.
  - name: subgroup
    description: The subgroup number that the player will be assigned to within the
      group. Valid values are -1 (for no subgroup), 0-11 (for valid subgroups). A
      value of -1 indicates the player is not in any subgroup, while values 0-11 indicate
      specific subgroup assignments.
  returns: null
  examples:
  - title: Basic group assignment example
    code: 'Group* group = new Group();

      Player* player = new Player();

      player->SetGroup(group, 0);'
    language: cpp
  - title: Removing player from group
    code: 'Player* player = new Player();

      player->SetGroup(nullptr, -1);'
    language: cpp
  notes: This method is typically used internally by the game engine when managing
    group membership. It updates internal player data structures and ensures proper
    synchronization with group-related systems. The method should be called carefully
    as it affects player's group status and can influence gameplay mechanics like
    loot distribution, experience sharing, and group coordination.
  warnings: Improper use of this method can lead to incorrect group assignments or
    even crashes if the group pointer is invalid. Care must be taken when assigning
    subgroups to ensure that the subgroup number is valid and within range. The method
    should not be used directly in most cases as it's typically handled by internal
    game mechanics.
  related:
  - GetGroup
  - GetGroupID
  - SetGroupMember
  - RemoveFromGroup
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:08:11.374752'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
