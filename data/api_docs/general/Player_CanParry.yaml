api:
  class: Player
  method: CanParry
  signature: bool Player::CanParry() const
documentation:
  brief: Determines whether the player can parry an attack
  description: The CanParry method checks if the player is capable of performing a
    parry action against incoming melee attacks. This method evaluates the player's
    current combat stance, weapon equipped, and relevant attributes to determine if
    parrying is possible. It typically returns true when the player has the proper
    stance (e.g., Defensive Stance or Battle Stance) and is wielding a weapon that
    supports parrying, such as a shield or sword. The method is commonly used in combat
    calculations to determine whether an attack can be parried.
  parameters: []
  returns: Returns true if the player can parry an incoming melee attack, false otherwise.
    This indicates that the player has the necessary conditions (stance, weapon type,
    and attributes) to perform a parry action.
  examples:
  - title: Basic Parry Check
    code: "if (player->CanParry()) {\n    // Player can parry\n    // Perform parry\
      \ logic\n}"
    language: cpp
  notes: This method is typically used in conjunction with other combat-related methods
    such as CanBlock or Can Dodge to determine the outcome of an incoming attack.
    It may be affected by buffs, debuffs, and player state changes during combat.
  warnings: The method does not account for all possible conditions that might affect
    parrying, such as temporary effects or specific abilities like 'Parry' or 'Shield
    Block'. Developers should ensure that the player's current stance and weapon are
    properly evaluated before calling this method.
  related:
  - CanBlock
  - Can Dodge
  - CanInterrupt
  - IsInCombat
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T17:45:05.955623'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
