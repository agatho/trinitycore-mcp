api:
  class: GameObject
  method: HasStringId
  signature: bool GameObject::HasStringId(int id) const
documentation:
  brief: Checks whether the GameObject has a specific string ID assigned to it.
  description: The HasStringId method determines if a GameObject instance possesses
    a particular string identifier. This functionality is crucial for identifying
    and managing game objects within the TrinityCore framework, particularly when
    dealing with object data that requires string-based identification rather than
    traditional GUIDs. The method evaluates whether the specified ID exists in the
    object's internal string ID collection, allowing developers to verify object state
    or perform conditional operations based on string ID presence.
  parameters: []
  returns: Returns true if the GameObject contains the specified string ID; otherwise
    returns false if the ID is not found or does not exist within the object's string
    ID collection.
  examples:
  - title: Basic usage example
    code: "if (gameObject->HasStringId(12345)) {\n    // Do something\n}\n"
    language: cpp
  notes: This method likely operates on internal data structures that store string
    IDs for GameObjects, and should be used carefully during object initialization
    or modification phases. Performance may vary depending on how many string IDs
    are stored in the object.
  warnings: Be cautious when using this method with objects that might not have string
    IDs assigned yet, as it could lead to unexpected behavior if the object is still
    being initialized or if string IDs are not properly set.
  related:
  - GameObject::GetStringId
  - GameObject::SetStringId
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T18:14:57.628091'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
