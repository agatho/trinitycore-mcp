api:
  class: AuraEffect
  method: HandleAuraModIncreaseHealth
  signature: void AuraEffect::HandleAuraModIncreaseHealth(const AuraApplication *
    aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a health increase aura effect on the target.
  description: The HandleAuraModIncreaseHealth method is responsible for managing
    the application and removal of aura effects that modify a unit's maximum health.
    This method is typically invoked during aura application or removal events, adjusting
    the target's health pool based on the aura's properties. It handles both positive
    and negative health modifications, ensuring proper synchronization between the
    aura state and the affected unit's statistics. The method operates within the
    TrinityCore's aura system and interacts with the AuraApplication object to determine
    the context of the effect.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state, caster,
      and target.
  - name: mode
    description: The mode of operation indicating how the aura effect should be handled.
      Values typically represent different application states such as initial application,
      update, or removal.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect from the target unit.
  returns: null
  examples:
  - title: Basic Aura Application
    code: "void ApplyHealthAura(Unit* target, uint32 spellId)\n{\n    AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo::GetSpellInfo(spellId));\n\
      \    AuraEffect* auraEffect = aurApp->GetEffect(0);\n    auraEffect->HandleAuraModIncreaseHealth(aurApp,\
      \ 0, true);\n}"
    language: cpp
  - title: Removing Health Aura Effect
    code: "void RemoveHealthAura(Unit* target, uint32 spellId)\n{\n    AuraApplication*\
      \ aurApp = target->GetAuraApplication(spellId);\n    if (aurApp)\n    {\n  \
      \      AuraEffect* auraEffect = aurApp->GetEffect(0);\n        auraEffect->HandleAuraModIncreaseHealth(aurApp,\
      \ 0, false);\n    }\n}"
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore. It should
    only be called from within the aura application/removal logic to ensure proper
    state management. The method modifies the target's health statistics directly,
    so it must be used carefully to avoid conflicts with other systems.
  warnings: Improper usage of this method can lead to incorrect health calculations
    or memory corruption. Always verify that the AuraApplication object is valid before
    calling this method. Do not call this method outside of the aura system context
    as it may cause undefined behavior.
  related:
  - AuraEffect::HandleAuraModIncreaseMaxHealth
  - AuraEffect::HandleAuraModHealth
  - AuraApplication::GetEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:19:48.075405'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
