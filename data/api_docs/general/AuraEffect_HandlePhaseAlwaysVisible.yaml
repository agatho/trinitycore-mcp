api:
  class: AuraEffect
  method: HandlePhaseAlwaysVisible
  signature: void AuraEffect::HandlePhaseAlwaysVisible(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Sets or removes the phase visibility flag for an aura application.
  description: The HandlePhaseAlwaysVisible method manages the phase visibility state
    of an aura effect when applied or removed from a target. It ensures that the affected
    unit remains visible regardless of phase restrictions, which is commonly used
    for certain buffs, debuffs, or visual effects that should persist across all phases.
    This method interacts with the AuraApplication's internal phase handling system
    to enforce visibility rules during aura application events.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter specifies which aura effect is being processed
      and provides access to the target unit and aura properties.
  - name: mode
    description: The mode of operation for the phase handling, typically indicating
      whether the aura is being applied (1) or removed (0). This value controls how
      the visibility state is modified on the target.
  - name: apply
    description: Boolean flag indicating if the effect should be applied (true) or
      removed (false). When true, the aura's phase visibility flag is set; when false,
      it is cleared.
  returns: null
  examples:
  - title: Applying Phase Always Visible Aura
    code: "void ApplyPhaseAlwaysVisible(AuraApplication* aurApp)\n{\n    AuraEffect*\
      \ effect = aurApp->GetBase()->GetEffect(0);\n    if (effect)\n        effect->HandlePhaseAlwaysVisible(aurApp,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing Phase Always Visible Effect
    code: "void RemovePhaseAlwaysVisible(AuraApplication* aurApp)\n{\n    AuraEffect*\
      \ effect = aurApp->GetBase()->GetEffect(0);\n    if (effect)\n        effect->HandlePhaseAlwaysVisible(aurApp,\
      \ 0, false);\n}"
    language: cpp
  notes: This method directly manipulates the phase visibility flags of units affected
    by auras. It should only be called during aura application or removal events to
    maintain consistency with TrinityCore's phase system. The method does not perform
    any validation on input parameters beyond basic null checks.
  warnings: Improper use of this method can lead to unexpected visibility behavior
    for players or NPCs, especially when dealing with phased content or instances.
    Ensure that the aura application and mode values are correctly passed to avoid
    incorrect phase state changes.
  related:
  - AuraEffect::HandlePeriodic
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:06:03.937830'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
