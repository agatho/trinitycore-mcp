api:
  class: Player
  method: _SaveStats
  signature: void Player::_SaveStats(int trans) const
documentation:
  brief: Saves player statistics and attributes to the database
  description: This method saves all player statistics and attributes to the database,
    including character stats, spell points, talent points, and other relevant data.
    It is typically called during player logout or when saving character data to ensure
    that all changes are properly persisted in the database. The method handles transaction
    management internally, ensuring data consistency during the save operation.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      player->_SaveStats(0);

      // Saves player stats to database'
    language: cpp
  notes: The method uses a transaction parameter to manage database transactions.
    It is designed to be thread-safe and should not be called concurrently with other
    save operations on the same player instance. Performance considerations include
    database write operations which may impact server performance during high-volume
    saves.
  warnings: Calling this method without proper transaction handling can lead to data
    inconsistency. The method does not validate if the player is logged out or in
    a valid state for saving, so developers should ensure proper context before calling
    this method.
  related:
  - Player::SaveToDB
  - Player::UpdateStats
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T22:59:18.108055'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
