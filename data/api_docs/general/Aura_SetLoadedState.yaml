api:
  class: Aura
  method: SetLoadedState
  signature: void Aura::SetLoadedState(int32 maxDuration, int32 duration, int32 charges,
    uint32 recalculateMask, int32 * amount)
documentation:
  brief: Sets the loaded state of an aura with specified duration, charges, and recalculation
    mask.
  description: This method configures the internal state of an aura object, setting
    its maximum duration, current duration, charge count, and recalculation mask.
    It is typically used during aura initialization or when loading saved aura data
    from database. The method allows for precise control over how the aura behaves
    in terms of time-based effects and charge management. This functionality is essential
    for maintaining proper game mechanics and ensuring that auras behave correctly
    after loading from persistent storage.
  parameters:
  - name: maxDuration
    description: The maximum duration in milliseconds that the aura can last. This
      represents the total time the aura will be active before expiration.
  - name: duration
    description: The current duration in milliseconds remaining for the aura. This
      indicates how much time is left before the aura expires.
  - name: charges
    description: The number of charges remaining for the aura. This determines how
      many times the aura can be applied before it expires.
  - name: recalculateMask
    description: A bitmask that specifies which aspects of the aura should be recalculated
      or updated. This controls how the aura's behavior is handled during state changes.
  - name: amount
    description: Pointer to an array of integers representing the aura's effect values.
      This allows for precise control over the aura's numerical effects.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Aura* aura = new Aura();

      aura->SetLoadedState(30000, 15000, 3, 0x01, nullptr);'
    language: cpp
  - title: Advanced usage example with effect values
    code: 'Aura* aura = new Aura();

      int32 effectValues[2] = {100, 200};

      aura->SetLoadedState(60000, 30000, 5, 0x07, effectValues);

      // This sets up an aura with 60s max duration, 30s remaining, 5 charges, and
      recalculates effects'
    language: cpp
  notes: This method should only be called when initializing or loading auras from
    database. It is not intended for use during normal gameplay operations where the
    aura would normally be updated through game mechanics. The method does not trigger
    any automatic recalculations unless explicitly specified by the recalculateMask
    parameter.
  warnings: Improper use of this method can lead to incorrect aura behavior, including
    premature expiration or incorrect charge counts. Care must be taken when setting
    duration values to ensure they match the expected time-based effects.
  related:
  - Aura::GetDuration
  - Aura::SetDuration
  - Aura::GetMaxDuration
  - Aura::GetCharges
  - Aura::SetCharges
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:53:48.645571'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
