api:
  class: Unit
  method: haveOffhandWeapon
  signature: bool Unit::haveOffhandWeapon() const
documentation:
  brief: Determines whether the unit has an off-hand weapon equipped.
  description: This method checks if a Unit object has an off-hand weapon currently
    equipped. It returns true if the unit possesses an off-hand weapon, false otherwise.
    This functionality is commonly used in combat calculations and weapon handling
    logic within World of Warcraft's TrinityCore framework. The method considers both
    the presence of an off-hand weapon and its usability, making it essential for
    determining attack patterns and weapon-based abilities.
  parameters: []
  returns: Returns true if the unit has an off-hand weapon equipped, false otherwise.
    This indicates whether the unit can perform off-hand attacks or if the off-hand
    weapon is currently usable.
  examples:
  - title: Basic Usage Example
    code: "if (unit->haveOffhandWeapon()) {\n    // Unit has an off-hand weapon\n\
      }\nelse {\n    // Unit does not have an off-hand weapon\n}"
    language: cpp
  notes: Implementation relies on internal weapon slot checks and may be affected
    by various game mechanics such as weapon enchantments, item equipping states,
    or temporary effects. Performance considerations are minimal as this is a simple
    boolean check.
  warnings: This method does not account for weapon cooldowns or temporary unavailability;
    it only checks if the weapon is equipped. Be aware that units may have an off-hand
    weapon but still be unable to attack due to other conditions like being stunned
    or silenced.
  related:
  - Unit::haveMainHandWeapon
  - Unit::haveRangedWeapon
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:56:04.829021'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
