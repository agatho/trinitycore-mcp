api:
  class: Creature
  method: ~Creature
  signature: void Creature::~Creature()
documentation:
  brief: Destroys a Creature instance and releases all associated resources.
  description: The Creature destructor is automatically invoked when a Creature object
    goes out of scope or is explicitly deleted. It performs necessary cleanup operations
    such as removing the creature from the game world, releasing memory allocated
    for the creature's data structures, and ensuring that all references to the creature
    are properly invalidated. This method is part of the standard C++ object lifecycle
    management and should not be called directly in most cases. The destructor ensures
    that the creature is safely removed from the server's internal systems before
    the object is fully destroyed.
  parameters: []
  returns: null
  examples:
  - title: Automatic destruction of a Creature
    code: "void ExampleFunction() {\n    Creature* creature = new Creature();\n  \
      \  // ... use creature ...\n    delete creature; // Destructor is called here\n\
      }"
    language: cpp
  notes: The destructor is automatically invoked by the C++ runtime when an object
    is destroyed. Developers should not manually call this destructor unless implementing
    custom memory management or smart pointers. The destruction process includes notifying
    the server's world manager and cleaning up internal references.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:00:40.005738'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
