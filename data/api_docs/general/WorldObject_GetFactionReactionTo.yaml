api:
  class: WorldObject
  method: GetFactionReactionTo
  signature: int WorldObject::GetFactionReactionTo(const FactionTemplateEntry * factionTemplateEntry,
    const WorldObject * target)
documentation:
  brief: Retrieves the faction reaction level between this WorldObject and a specified
    faction template entry.
  description: The GetFactionReactionTo method determines the current faction reaction
    level that this WorldObject has toward a given faction template. It evaluates
    the relationship based on faction standings, reputation, and any applicable modifiers.
    This method is commonly used in AI logic, quest conditions, and interaction behaviors
    to determine how an object (such as a player or creature) should respond to another
    based on their faction affiliations. The returned value typically represents a
    numerical reaction level that can be interpreted as friendly, neutral, hostile,
    or other faction states depending on the game's internal faction system.
  parameters:
  - name: factionTemplateEntry
    description: A pointer to the FactionTemplateEntry that defines the faction to
      check against. This entry contains information about faction relationships and
      standings.
  - name: target
    description: A pointer to the WorldObject that represents the target whose faction
      reaction is being evaluated. This is used for context in determining the relationship.
  returns: An integer representing the faction reaction level between this object
    and the specified faction template. Values typically range from -100 (hostile)
    to 100 (friendly), with 0 indicating neutral stance. Negative values indicate
    hostility, positive values indicate friendliness, and zero indicates neutrality.
  examples:
  - title: Basic usage in AI behavior
    code: "if (creature->GetFactionReactionTo(factionTemplate, player) < 0)\n{\n \
      \   creature->AI()->AttackStart(player);\n}"
    language: cpp
  - title: Checking faction reaction for quest conditions
    code: "if (player->GetFactionReactionTo(factionTemplate, targetObject) >= 50)\n\
      {\n    // Player is friendly or neutral with the faction\n    CompleteQuest();\n\
      }"
    language: cpp
  notes: This method relies on internal faction data and may be affected by reputation
    changes, faction modifiers, and dynamic faction updates during runtime. Ensure
    that the factionTemplateEntry passed is valid to avoid undefined behavior.
  warnings: Passing a null pointer for either factionTemplateEntry or target can lead
    to crashes or undefined behavior. Always validate these parameters before calling
    this method in performance-critical code paths.
  related:
  - GetFaction
  - GetFactionTemplateEntry
  - SetFactionReactionTo
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T22:12:03.979634'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
