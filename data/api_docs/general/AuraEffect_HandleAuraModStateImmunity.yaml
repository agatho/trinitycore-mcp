api:
  class: AuraEffect
  method: HandleAuraModStateImmunity
  signature: void AuraEffect::HandleAuraModStateImmunity(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes immunity to a specific aura state for the target of the
    aura application.
  description: The HandleAuraModStateImmunity method manages the application and removal
    of immunity effects that prevent a unit from being affected by certain aura states.
    This method is typically invoked during aura application or removal events, where
    it modifies the target's state immunity flags based on the provided mode and apply
    flag. The method interacts with the AuraApplication object to determine which
    unit is affected and whether the immunity should be enabled or disabled. It plays
    a crucial role in implementing mechanics such as immunity to fear, charm, stun,
    or other debuff states in World of Warcraft-style gameplay.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter specifies which unit is affected
      and provides context for the immunity change.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. This
      value typically determines the specific type of aura state immunity being modified,
      such as immune to fear, charm, or stun effects.
  - name: apply
    description: Boolean flag that indicates whether to apply (true) or remove (false)
      the immunity effect. When true, the target gains immunity; when false, immunity
      is removed.
  returns: null
  examples:
  - title: Applying Fear Immunity
    code: "void ApplyFearImmunity(AuraApplication* app)\n{\n    HandleAuraModStateImmunity(app,\
      \ STATE_FEAR, true);\n}"
    language: cpp
  - title: Removing Stun Immunity
    code: "void RemoveStunImmunity(AuraApplication* app)\n{\n    HandleAuraModStateImmunity(app,\
      \ STATE_STUN, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system and is usually called internally
    by the TrinityCore framework during aura application or removal. Developers should
    not directly call this method unless implementing custom aura effects. The method
    modifies internal state flags on the target unit, which may affect combat behavior
    and spell interactions.
  warnings: Improper use of this method can lead to unexpected behavior in unit state
    management. Ensure that the mode parameter corresponds to valid aura state constants
    defined in the codebase. Incorrect application or removal of immunities might
    break gameplay mechanics or cause units to become permanently immune or vulnerable.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - Unit::AddAuraState
  - Unit::RemoveAuraState
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:04:36.941595'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
