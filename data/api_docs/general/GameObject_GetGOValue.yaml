api:
  class: GameObject
  method: GetGOValue
  signature: const GameObjectValue * GameObject::GetGOValue() const
documentation:
  brief: Retrieves the GameObjectValue structure associated with this game object.
  description: The GetGOValue method returns a pointer to the GameObjectValue structure
    that contains the data associated with this GameObject instance. This structure
    typically holds information about the game object's state, values, and configuration
    settings. The method is used primarily for accessing the internal data of game
    objects during gameplay mechanics such as quest objectives, spell effects, or
    interaction handling. It provides a way to retrieve the current value configuration
    of the GameObject without modifying it.
  parameters: []
  returns: Returns a pointer to the GameObjectValue structure which contains the game
    object's data values. The returned pointer may be null if the GameObject has not
    been initialized properly or if no value data exists for this specific game object
    instance.
  examples:
  - title: Basic Usage Example
    code: "GameObject* go = player->GetGameObject();\nconst GameObjectValue* goValue\
      \ = go->GetGOValue();\nif (goValue)\n{\n    // Use goValue\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. It does not
    perform any dynamic memory allocation or deallocation, making it efficient for
    frequent use during gameplay loops.
  warnings: Care should be taken when using this method as the returned pointer may
    point to invalid memory if the GameObject instance has been destroyed or if the
    object's value data has not yet been initialized. Always validate that the pointer
    is not null before accessing its contents.
  related:
  - GetGOData
  - GetGOValue
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:27:16.065838'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
