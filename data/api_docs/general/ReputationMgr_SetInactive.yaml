api:
  class: ReputationMgr
  method: SetInactive
  signature: void ReputationMgr::SetInactive(RepListID repListID, bool on)
documentation:
  brief: Sets the inactive state of a reputation entry for the player.
  description: The SetInactive method controls whether a specific reputation entry
    in the player's reputation list is marked as inactive. When an entry is set to
    inactive, it typically does not contribute to reputation gain or loss calculations
    and may be visually hidden in the UI. This method modifies the internal state
    of the ReputationMgr object associated with a player character. The repListID
    parameter identifies which specific reputation entry to modify, and the on parameter
    determines whether to activate (true) or deactivate (false) that entry.
  parameters:
  - name: repListID
    description: The identifier of the reputation entry to modify. This corresponds
      to a specific faction in the game's reputation system.
  - name: 'on'
    description: Boolean flag indicating whether to set the reputation entry as inactive
      (false) or active (true).
  returns: null
  examples:
  - title: Deactivate a Reputation Entry
    code: 'ReputationMgr* repMgr = player->GetReputationMgr();

      repMgr->SetInactive(1234, false); // Deactivates the faction with ID 1234'
    language: cpp
  - title: Activate a Reputation Entry
    code: 'ReputationMgr* repMgr = player->GetReputationMgr();

      repMgr->SetInactive(5678, true); // Activates the faction with ID 5678'
    language: cpp
  notes: This method directly affects the in-memory state of the player's reputation
    data. Changes made using this method are not persisted to the database unless
    explicitly saved by other systems within TrinityCore. The method does not trigger
    any UI updates or notifications; external code must handle visual representation
    changes if needed.
  warnings: Incorrect usage of repListID can result in modifying unintended faction
    entries. Ensure that the provided RepListID corresponds to a valid faction before
    calling this method. Modifying reputation states during combat or critical gameplay
    events may cause unexpected behavior or client desynchronization.
  related:
  - GetReputation
  - SetReputation
  - GetReputationRank
  - IsAtWar
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:24:18.492791'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
