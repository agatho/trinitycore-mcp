api:
  class: AuraEffect
  method: HandleAuraModCritPct
  signature: void AuraEffect::HandleAuraModCritPct(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the critical strike chance percentage of the target aura application.
  description: The HandleAuraModCritPct method is responsible for adjusting the critical
    strike percentage modifier applied to an aura effect. This method is typically
    invoked during aura application or removal to update the affected unit's critical
    strike chance. It takes into account the aura application state, the mode of operation
    (such as applying or removing the effect), and whether the effect should be applied
    or removed. The method directly influences combat mechanics by modifying how often
    attacks land as critical hits for the affected player or creature.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter determines which specific aura effect is
      modified and provides access to the target unit and aura properties.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation for the
      aura effect. Common values include 0 for application, 1 for removal, or other
      flags that define how the modifier should be applied or reverted.
  - name: apply
    description: A boolean flag indicating whether to apply (true) or remove (false)
      the critical strike percentage modifier from the target. This parameter controls
      the direction of the effect modification.
  returns: null
  examples:
  - title: Applying a Critical Strike Chance Aura
    code: 'AuraEffect* aura = ...;

      // Apply a 10% increase in critical strike chance

      aura->HandleAuraModCritPct(aurApp, 0, true);'
    language: cpp
  - title: Removing a Critical Strike Chance Aura
    code: 'AuraEffect* aura = ...;

      // Remove the critical strike chance modifier

      aura->HandleAuraModCritPct(aurApp, 1, false);'
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore. It directly
    modifies unit stats and should be called only during appropriate aura application/removal
    events to maintain game balance and prevent unexpected behavior. The method does
    not perform any validation on input parameters, so callers must ensure valid values
    are passed.
  warnings: Improper use of this method can lead to incorrect critical strike calculations,
    potentially affecting gameplay balance. Ensure that all aura applications are
    properly managed through the AuraApplication system and avoid calling this method
    directly without proper context or state management.
  related:
  - AuraEffect::HandleAuraModCritPct
  - AuraEffect::GetModifier
  - AuraEffect::ApplyModifier
  - AuraApplication::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:27:46.378422'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
