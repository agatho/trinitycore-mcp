api:
  class: Unit
  method: GetCreateHealth
  signature: uint32 Unit::GetCreateHealth() const
documentation:
  brief: Returns the base health value that the unit was created with.
  description: The GetCreateHealth method retrieves the initial maximum health value
    of a Unit as defined at its creation. This value represents the health pool the
    creature or player had when first spawned or created in the game world, and is
    typically used for calculations involving health scaling, restoration, or comparison
    against current health values. For creatures, this value often corresponds to
    their base stats from the database entries. For players, it reflects their starting
    health based on class, level, and other factors. This method does not account
    for any modifications to health that may have occurred during gameplay such as
    buffs, debuffs, or damage taken.
  parameters: []
  returns: A uint32 value representing the initial maximum health of the unit at creation
    time. This is typically a fixed value based on the unit's type and configuration,
    and does not change during runtime unless explicitly modified through game mechanics
    or scripts.
  examples:
  - title: Basic Usage to Check Initial Health
    code: 'Unit* target = ...; // some unit

      uint32 baseHealth = target->GetCreateHealth();

      TC_LOG_INFO("server.loading", "Base health of unit is: %u", baseHealth);'
    language: cpp
  - title: Comparing Current vs. Base Health
    code: 'Unit* player = ...; // a player unit

      uint32 createHealth = player->GetCreateHealth();

      uint32 currentHealth = player->GetHealth();

      float healthRatio = (float)currentHealth / (float)createHealth;

      TC_LOG_INFO("server.loading", "Current health ratio: %.2f", healthRatio);'
    language: cpp
  notes: This method returns the original health value without any modifications.
    It's important to note that this value is not affected by temporary stat changes,
    gear, or buffs applied during gameplay. The returned value is typically set during
    unit creation and remains constant throughout its lifetime unless overridden via
    custom code.
  warnings: Be cautious when using this method in combat calculations where current
    health may be more relevant. Also, ensure that the Unit pointer is valid before
    calling this method to prevent crashes or undefined behavior.
  related:
  - GetHealth
  - SetCreateHealth
  - GetMaxHealth
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T16:43:25.467805'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
