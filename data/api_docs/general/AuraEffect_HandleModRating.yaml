api:
  class: AuraEffect
  method: HandleModRating
  signature: void AuraEffect::HandleModRating(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes a rating modification aura effect on the target.
  description: The HandleModRating method is responsible for applying or removing
    a rating modification aura effect to a target unit. This method is typically invoked
    during aura application or removal events, where it adjusts the target's rating
    values based on the aura's properties. The method takes into account the aura
    application context, mode of operation (apply or remove), and whether the effect
    should be active. Rating modifications in World of Warcraft generally affect combat
    statistics such as critical strike chance, haste, mastery, and other performance
    metrics that scale with player progression.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state, target,
      and application context.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. Typically
      used to determine if the effect should be applied (1) or removed (0), though
      specific values may vary based on implementation details.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect from the target. This parameter is often used in conjunction
      with the mode parameter to control the behavior of the rating modification.
  returns: null
  examples:
  - title: Applying a Rating Modification Aura
    code: "void ApplyRatingAura(AuraEffect* auraEffect, Unit* target) {\n    AuraApplication*\
      \ app = new AuraApplication(target, target, auraEffect);\n    auraEffect->HandleModRating(app,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing a Rating Modification Aura
    code: "void RemoveRatingAura(AuraEffect* auraEffect, Unit* target) {\n    AuraApplication*\
      \ app = new AuraApplication(target, target, auraEffect);\n    auraEffect->HandleModRating(app,\
      \ 0, false);\n}"
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore and is
    usually called internally by the game engine during aura application or removal.
    It's important to ensure that the AuraApplication object passed is valid and properly
    initialized before calling this method. The mode parameter may have different
    meanings depending on the specific aura type, so developers should verify compatibility
    with their intended use case.
  warnings: Improper usage of this method can lead to incorrect rating calculations
    or unexpected behavior in combat statistics. Ensure that the AuraApplication context
    is correctly set up and that the target unit supports the rating modifications
    being applied. Avoid calling this method outside of proper aura application contexts
    as it may cause undefined behavior.
  related:
  - AuraEffect::HandleEffect
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:26:49.094220'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
