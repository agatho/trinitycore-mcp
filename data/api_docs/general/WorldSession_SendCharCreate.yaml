api:
  class: WorldSession
  method: SendCharCreate
  signature: void WorldSession::SendCharCreate(int result, const int & guid)
documentation:
  brief: Sends a character creation result message to the client
  description: The SendCharCreate method is used by the WorldSession class to communicate
    the outcome of a character creation attempt back to the connected client. This
    method sends a specific response packet that indicates whether the character creation
    was successful or if an error occurred. The result parameter determines the type
    of response sent, while the guid parameter typically contains the unique identifier
    of the newly created character or zero if creation failed. This method is part
    of the authentication and character management flow in TrinityCore's World of
    Warcraft server implementation.
  parameters:
  - name: result
    description: The result code indicating the outcome of character creation. Valid
      values typically include success (0), character already exists (1), invalid
      name (2), etc. The exact mapping depends on the client-side implementation and
      server configuration.
  - name: guid
    description: The unique identifier (GUID) of the newly created character. If character
      creation fails, this value is typically set to zero or a special error indicator.
  returns: null
  examples:
  - title: Successful Character Creation
    code: 'WorldSession* session = ...;

      uint32 newGuid = 123456789;

      int result = 0; // Success

      session->SendCharCreate(result, newGuid);'
    language: cpp
  - title: Character Creation Failure
    code: 'WorldSession* session = ...;

      uint32 newGuid = 0; // No character created

      int result = 2; // Invalid name

      session->SendCharCreate(result, newGuid);'
    language: cpp
  notes: This method is typically called during the character creation process after
    all validation checks have been completed. The method directly sends a network
    packet to the client without requiring additional processing. It's important to
    ensure that the GUID parameter is properly validated before sending to prevent
    potential client-side issues.
  warnings: Calling this method with an invalid GUID or incorrect result code may
    cause the client to display unexpected behavior or fail to properly handle the
    character creation response. Always validate parameters before invoking this method
    in production code.
  related:
  - SendCharDelete
  - SendCharEnum
  - SendAuthResponse
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:09:22.271292'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
