api:
  class: Spell
  method: GetSearcherTypeMask
  signature: uint32 Spell::GetSearcherTypeMask(const SpellInfo * spellInfo, const
    SpellEffectInfo & spellEffectInfo, SpellTargetObjectTypes objType, const int *
    condList)
documentation:
  brief: Determines the searcher type mask for spell effects based on target object
    types and conditions.
  description: This method calculates and returns the appropriate searcher type mask
    for a given spell effect, considering the target object types and conditional
    parameters. It is used in spell targeting mechanics to determine how spells should
    search for targets based on their effect properties and the type of objects they
    are targeting. The method plays a crucial role in determining which target selection
    methods are used during spell execution, particularly for complex spell effects
    involving multiple target types or conditional requirements.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing spell information and
      properties
  - name: spellEffectInfo
    description: Reference to the SpellEffectInfo structure defining the specific
      effect properties of the spell being evaluated
  - name: objType
    description: Enum value representing the target object type (e.g., TARGET_OBJECT_TYPE_UNIT,
      TARGET_OBJECT_TYPE_PLAYER) that determines how targets are searched
  - name: condList
    description: Pointer to array of integers representing conditional values that
      influence the searcher mask calculation
  returns: Returns a uint32 value representing the searcher type mask, which defines
    how spell targets should be selected based on object types and conditions. This
    mask typically includes bits for different target selection methods (e.g., single
    target, area of effect, etc.) and can be used to determine appropriate target
    selection algorithms during spell execution.
  examples:
  - title: Basic usage example
    code: 'uint32 mask = spell->GetSearcherTypeMask(spellInfo, spellEffectInfo, TARGET_OBJECT_TYPE_UNIT,
      nullptr);

      // Use mask in target selection logic'
    language: cpp
  - title: Advanced usage with conditional list
    code: 'int condList[] = {1, 2, 3};

      uint32 mask = spell->GetSearcherTypeMask(spellInfo, spellEffectInfo, TARGET_OBJECT_TYPE_PLAYER,
      condList);

      // Mask will be different based on condition values'
    language: cpp
  notes: This method is typically used in conjunction with other spell targeting methods
    to determine appropriate target selection algorithms. The returned mask value
    should be interpreted as a bitfield where each bit represents different target
    selection methods. Implementation details may vary based on specific spell effects
    and target types.
  warnings: Care must be taken when interpreting the returned mask value as it may
    include multiple bits representing different target selection methods. Incorrect
    interpretation of the mask can lead to improper target selection or spell execution
    failure.
  related:
  - GetSpellInfo
  - GetSpellEffectInfo
  - GetTargetType
  - GetSearcherTypeMask
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:24:03.550093'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
