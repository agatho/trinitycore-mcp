api:
  class: Creature
  method: HasFlag
  signature: bool Creature::HasFlag(CreatureStaticFlags8 flag) const
documentation:
  brief: Checks if a creature has a specific static flag
  description: This method determines whether a creature object possesses a particular
    static flag, which defines its behavior and characteristics within the game world.
    The method is commonly used to verify creature properties such as whether it's
    a boss, elite, or has special AI behaviors. It returns true if the specified flag
    is set in the creature's static flags, false otherwise. This functionality is
    essential for implementing conditional logic in creature AI scripts and determining
    creature behavior based on their static configuration.
  parameters: []
  returns: Returns true if the creature has the specified static flag, false otherwise
  examples:
  - title: Basic Usage Example
    code: "if (creature->HasFlag(CreatureStaticFlags8::Boss)) {\n    // Creature is\
      \ a boss\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "if (creature->HasFlag(CreatureStaticFlags8::Elite) && creature->HasFlag(CreatureStaticFlags8::Raid))\
      \ {\n    // Creature is both elite and raid boss\n}"
    language: cpp
  notes: The method performs a bitwise check on the creature's static flags, which
    are defined in the database. This operation is efficient but requires understanding
    of the flag system to avoid incorrect usage.
  warnings: Care must be taken when using this method as it only checks static flags,
    not dynamic flags that may change during runtime. Also, ensure that the flag being
    checked is valid and exists in the CreatureStaticFlags8 enum.
  related:
  - HasFlag
  - SetFlag
  - RemoveFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:05:22.997224'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
