api:
  class: Aura
  method: PrepareProcToTrigger
  signature: void Aura::PrepareProcToTrigger(AuraApplication * aurApp, ProcEventInfo
    & eventInfo, int now)
documentation:
  brief: Prepares an aura for triggering a proc event by setting up necessary data
    and conditions.
  description: The PrepareProcToTrigger method initializes the state of an aura application
    to be eligible for triggering a proc event. It processes the provided event information
    and current time to determine if the aura's proc conditions are met, updating
    internal state accordingly. This method is typically invoked during combat or
    spell execution when procs may occur. The method does not directly trigger the
    proc but prepares the necessary context for it to be processed later by the core
    proc system.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the aura instance
      being prepared for proc triggering. Must not be null.
  - name: eventInfo
    description: Reference to a ProcEventInfo structure containing details about the
      event that triggered this proc preparation, such as damage type, spell school,
      or target information.
  - name: now
    description: Integer representing the current game time in milliseconds. Used
      to evaluate time-based proc conditions and cooldowns.
  returns: null
  examples:
  - title: Basic usage in aura application context
    code: "void MyAura::OnApply(AuraApplication* aurApp, ProcEventInfo& eventInfo)\n\
      {\n    PrepareProcToTrigger(aurApp, eventInfo, GetAura()->GetTarget()->GetMap()->GetGameTime());\n\
      }"
    language: cpp
  - title: Advanced usage with custom proc condition checking
    code: "void CustomProcAura::HandleProcTrigger(AuraApplication* aurApp, ProcEventInfo&\
      \ eventInfo)\n{\n    if (eventInfo.GetDamageType() == SPELL_DAMAGE_FIRE)\n \
      \   {\n        PrepareProcToTrigger(aurApp, eventInfo, GetAura()->GetTarget()->GetMap()->GetGameTime());\n\
      \    }\n}"
    language: cpp
  notes: This method is part of the internal proc handling mechanism in TrinityCore.
    It should only be called when there's a valid reason to prepare for a potential
    proc, such as after damage is dealt or received. The method modifies internal
    aura state and must not be used outside of appropriate combat or spell execution
    contexts.
  warnings: Do not call this method without ensuring that the aura application and
    event info are properly initialized. Incorrect usage may lead to undefined behavior
    or failed proc triggers. Avoid calling this method in non-combat situations unless
    explicitly required by custom logic.
  related:
  - Aura::HandleProc
  - AuraApplication::GetAura
  - ProcEventInfo::GetDamageType
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:52:49.994543'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
