api:
  class: AuraEffect
  method: GetAmount
  signature: int32 AuraEffect::GetAmount() const
documentation:
  brief: Retrieves the current amount value of the aura effect.
  description: The GetAmount method returns the numerical value associated with the
    aura effect, which typically represents the magnitude or intensity of the effect's
    impact. This value can be used to determine how much a buff or debuff modifies
    a stat, applies damage, or influences gameplay mechanics. The returned amount
    is usually set during aura application and may be modified by various game systems
    such as spell modifiers, stacking rules, or dynamic adjustments. This method provides
    read-only access to the aura's internal amount state without altering it.
  parameters: []
  returns: An int32 value representing the current amount of the aura effect. This
    value can be positive (indicating beneficial effects), negative (indicating harmful
    effects), or zero (indicating no effect).
  examples:
  - title: Basic Usage to Check Aura Effect Strength
    code: "AuraEffect const* aura = unit->GetAuraEffect(SPELL_ID, EFFECT_INDEX);\n\
      if (aura)\n{\n    int32 amount = aura->GetAmount();\n    if (amount > 0)\n \
      \       // Handle positive effect\n    else if (amount < 0)\n        // Handle\
      \ negative effect\n    else\n        // Handle no effect\n}"
    language: cpp
  - title: Using Amount to Modify Damage Calculation
    code: "Unit* target = ...;\nAuraEffect const* aura = target->GetAuraEffect(SPELL_ID,\
      \ EFFECT_INDEX);\nif (aura)\n{\n    int32 amount = aura->GetAmount();\n    damage\
      \ += damage * amount / 100; // Apply percentage-based damage boost\n}"
    language: cpp
  notes: The returned value is typically initialized when the aura is applied and
    may be updated dynamically during the aura's lifetime through various game systems.
    This method does not perform any validation or recalculation of the amount; it
    simply returns the cached value stored within the aura effect object.
  warnings: Be aware that some auras might have their amount modified by external
    factors (e.g., spell modifiers, stacking rules) after initial application. If
    you require up-to-date calculations, ensure that any relevant updates are applied
    before calling this method. Also, do not assume that the amount value will remain
    constant throughout the aura's duration unless explicitly managed.
  related:
  - SetAmount
  - GetAura
  - GetEffectIndex
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:06:12.327385'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
