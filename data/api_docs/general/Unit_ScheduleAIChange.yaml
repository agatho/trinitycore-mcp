api:
  class: Unit
  method: ScheduleAIChange
  signature: void Unit::ScheduleAIChange()
documentation:
  brief: Schedules an AI change for the unit, allowing for dynamic behavior modification
    during gameplay
  description: This method triggers a scheduled AI change event for the Unit, enabling
    dynamic modification of AI behavior during runtime. It allows for the implementation
    of conditional AI changes that can be executed at specific moments during combat
    or other game events. The method is typically used in conjunction with AI state
    management systems to ensure proper execution of AI modifications without disrupting
    normal gameplay flow.
  parameters: []
  returns: null
  examples:
  - title: Basic AI Change Scheduling
    code: 'Unit* unit = new Unit();

      unit->ScheduleAIChange();'
    language: cpp
  notes: This method should be called carefully as it may affect the AI state of the
    unit. The actual implementation depends on how the AI system is structured within
    TrinityCore, and may require proper synchronization with other AI-related methods.
  warnings: Improper use of this method can lead to unexpected behavior in AI execution,
    potentially causing units to behave erratically or fail to execute their intended
    actions during combat.
  related:
  - Unit::AI
  - Unit::GetAI
  - Unit::SetAI
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:23:35.684660'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
