api:
  class: LFGMgr
  method: HasIgnore
  signature: bool LFGMgr::HasIgnore(int guid1, int guid2)
documentation:
  brief: Checks if two players are ignoring each other within the LFG system
  description: The HasIgnore method determines whether two players have added each
    other to their ignore list within the Looking for Group (LFG) subsystem. This
    functionality is used to prevent certain interactions between players who have
    chosen to block communication with one another. The method typically checks internal
    player state or LFG-related data structures to determine if an ignore relationship
    exists between the specified GUIDs. It's commonly used in LFG queue and group
    matching logic to ensure that ignored players are not paired together.
  parameters:
  - name: guid1
    description: The global unique identifier of the first player
  - name: guid2
    description: The global unique identifier of the second player
  returns: Returns true if both players have each other on their ignore list, false
    otherwise. The method may return false if either GUID is invalid or if no ignore
    relationship exists between the players.
  examples:
  - title: Check if two players are ignoring each other
    code: "if (sLFGMgr->HasIgnore(player1Guid, player2Guid)) {\n    // Players are\
      \ ignoring each other\n    sLog->outString(\"Players %u and %u are ignoring\
      \ each other.\", player1Guid, player2Guid);\n} else {\n    // Players are not\
      \ ignoring each other\n    sLog->outString(\"Players %u and %u are not ignoring\
      \ each other.\", player1Guid, player2Guid);\n}"
    language: cpp
  notes: This method likely operates on internal LFG data structures that track player
    relationships. It may be called frequently during LFG queue processing and group
    formation, so performance is important. The implementation probably uses efficient
    lookup mechanisms such as hash tables or maps for quick GUID-based lookups.
  warnings: The method assumes valid GUIDs are passed in; invalid GUIDs could lead
    to undefined behavior or incorrect results. Be cautious when using this method
    in high-frequency contexts as it may impact performance if not optimized properly.
  related:
  - AddIgnore
  - RemoveIgnore
  - IsPlayerIgnored
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:41:35.591275'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
