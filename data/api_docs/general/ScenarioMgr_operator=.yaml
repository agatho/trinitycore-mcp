api:
  class: ScenarioMgr
  method: operator=
  signature: ScenarioMgr & ScenarioMgr::operator=(ScenarioMgr && param0)
documentation:
  brief: Moves a ScenarioMgr object, transferring ownership of its resources to the
    target object.
  description: The operator= method performs a move assignment on the ScenarioMgr
    class, transferring all managed resources from the source ScenarioMgr object to
    the current object. This operation is typically used when moving ScenarioMgr instances
    between variables or containers, allowing efficient resource transfer without
    deep copying. The moved-from object will be left in a valid but unspecified state.
    In the context of TrinityCore's scenario system, this method supports efficient
    management of scenario data structures and their lifecycle during game operations
    such as scenario initialization, completion, or cleanup.
  parameters: []
  returns: A reference to the current ScenarioMgr object after the move assignment
    has been completed.
  examples:
  - title: Basic Move Assignment
    code: 'ScenarioMgr sourceScenario;

      // ... populate sourceScenario ...

      ScenarioMgr targetScenario = std::move(sourceScenario); // Uses operator=

      // sourceScenario is now in a valid but unspecified state'
    language: cpp
  - title: Move Assignment in Container
    code: 'std::vector<ScenarioMgr> scenarios;

      ScenarioMgr newScenario;

      scenarios.push_back(std::move(newScenario)); // Move-assigns to vector

      // newScenario is now in a valid but unspecified state'
    language: cpp
  notes: This method is part of the C++ move semantics implementation and should only
    be used with rvalue references. The moved-from object must not be accessed after
    the operation, as it will be left in a valid but unspecified state. This is particularly
    important for objects managing dynamic memory or system resources.
  warnings: Using this operator on an already moved-from object can lead to undefined
    behavior. Ensure that the source object is not used after being moved from. Also,
    be cautious when using this with objects that hold references to other systems,
    as those references may become invalid after the move operation.
  related:
  - ScenarioMgr::ScenarioMgr
  - ScenarioMgr::operator=
  - ScenarioMgr::Clone
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T23:17:54.969596'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
