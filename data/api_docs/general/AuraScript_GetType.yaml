api:
  class: AuraScript
  method: GetType
  signature: int AuraScript::GetType() const
documentation:
  brief: Retrieves the type identifier of the aura script instance.
  description: The GetType method returns an integer value that identifies the specific
    type or category of the aura script. This is commonly used in TrinityCore's aura
    system to distinguish between different kinds of aura effects, such as periodic
    heals, damage over time, or stat modifications. The returned value typically corresponds
    to predefined constants or enumerations within the AuraType system, allowing for
    conditional logic based on the aura's nature. This method is essential for implementing
    custom aura behaviors and ensuring proper handling of different aura types during
    their application, update, and removal phases.
  parameters: []
  returns: An integer representing the type identifier of the aura script. The value
    typically corresponds to predefined AuraType constants such as SPELL_AURA_PERIODIC_DAMAGE,
    SPELL_AURA_MOD_STAT, etc., which define how the aura behaves in the game mechanics.
  examples:
  - title: Checking Aura Type in Apply Handler
    code: "void OnApply(AuraEffect const* aurEff, AuraEffectHandleModes mode)\n{\n\
      \    if (GetType() == SPELL_AURA_PERIODIC_DAMAGE)\n    {\n        // Handle\
      \ periodic damage aura specially\n        SendScriptWarning(\"Periodic damage\
      \ aura applied\");\n    }\n}"
    language: cpp
  - title: Conditional Logic Based on Aura Type
    code: "void OnUpdate(uint32 diff)\n{\n    switch (GetType())\n    {\n        case\
      \ SPELL_AURA_PERIODIC_HEAL:\n            // Custom healing logic\n         \
      \   break;\n        case SPELL_AURA_MOD_STAT:\n            // Stat modification\
      \ logic\n            break;\n        default:\n            break;\n    }\n}"
    language: cpp
  notes: This method is typically called during aura lifecycle events such as application,
    update, or removal. The returned type value should be compared against predefined
    constants from the SpellAuraType enumeration for proper behavior handling. The
    method is const and safe to call from any aura script context.
  warnings: Do not modify the aura type through this method as it's read-only. Ensure
    that all comparisons with return values use the correct enum constants defined
    in the TrinityCore spell system to avoid unexpected behavior or bugs.
  related:
  - GetId
  - GetSpellInfo
  - GetCaster
  - GetTarget
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:13:26.999218'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
