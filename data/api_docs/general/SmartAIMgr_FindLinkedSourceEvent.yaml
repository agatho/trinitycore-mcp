api:
  class: SmartAIMgr
  method: FindLinkedSourceEvent
  signature: SmartScriptHolder & SmartAIMgr::FindLinkedSourceEvent(SmartAIEventList
    & list, uint32 eventId)
documentation:
  brief: Finds and returns the SmartScriptHolder associated with a linked source event
    for the given event ID.
  description: The FindLinkedSourceEvent method searches through a provided list of
    smart AI events to locate a specific event identified by the eventId parameter.
    It is used in the context of TrinityCore's SmartAI system, which allows NPCs and
    game objects to have complex scripted behaviors. This method specifically looks
    for events that are linked to a source, typically used when an event triggers
    another action or when chaining together multiple AI behaviors. The returned SmartScriptHolder
    contains all relevant data about the linked event, including its conditions, actions,
    and other properties. The method assumes that the input list is valid and properly
    initialized, and it returns a reference to the matching holder for direct manipulation
    or inspection.
  parameters:
  - name: list
    description: A reference to a SmartAIEventList containing the collection of smart
      AI events to search through.
  - name: eventId
    description: The unique identifier of the event for which to find the linked source.
      This must be a valid event ID present in the list.
  returns: A reference to the SmartScriptHolder that matches the specified eventId
    and has a linked source. If no matching event is found, behavior is undefined
    and may result in a crash or invalid memory access.
  examples:
  - title: Finding a Linked Source Event
    code: 'SmartAIEventList eventList;

      // Assume eventList is populated with events

      uint32 targetEventId = 12345;

      SmartScriptHolder& holder = sSmartAIMgr->FindLinkedSourceEvent(eventList, targetEventId);

      // Use the returned holder to inspect or modify the linked event'
    language: cpp
  notes: This method is part of TrinityCore's SmartAI implementation and should only
    be called when working with AI events that are expected to have linked sources.
    The method does not perform any validation on whether the list or eventId is valid,
    so callers must ensure these preconditions are met. It returns a direct reference
    to an internal data structure, so modifications to the returned holder directly
    affect the original event data.
  warnings: Calling this method with an invalid eventId or an uninitialized list may
    result in undefined behavior or crashes. The returned SmartScriptHolder reference
    should not be stored beyond the scope where the original list is valid, as it
    points to internal memory that may become invalid. This method assumes all events
    in the list are properly initialized and contain valid data.
  related:
  - GetEventList
  - AddSmartEvent
  - RemoveSmartEvent
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T21:35:10.381819'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
