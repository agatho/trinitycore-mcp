api:
  class: DungeonScriptMgr
  method: GetScriptForBoss
  signature: DungeonScript * DungeonScriptMgr::GetScriptForBoss(uint32 bossEntry)
    const
documentation:
  brief: Retrieves the dungeon script associated with a specific boss entry.
  description: The GetScriptForBoss method looks up and returns the DungeonScript
    instance that is registered for a given boss entry ID. This functionality is used
    within TrinityCore's dungeon and raid scripting system to associate specific behavior
    scripts with individual bosses in dungeon instances. The method performs a lookup
    in an internal registry of boss scripts, returning a pointer to the corresponding
    script if found, or nullptr if no script is registered for that particular boss
    entry. This allows for customized AI behaviors, event handling, and interaction
    logic per boss within dungeon environments.
  parameters: []
  returns: A pointer to the DungeonScript object associated with the specified boss
    entry, or nullptr if no script is registered for that boss.
  examples:
  - title: Retrieve and Use Boss Script
    code: "DungeonScript* script = sObjectMgr->GetScriptForBoss(12345);\nif (script)\n\
      {\n    script->OnBossEnterCombat();\n}"
    language: cpp
  notes: This method is typically used during dungeon instance initialization or boss
    encounter handling. The returned pointer should not be deleted by the caller as
    it's managed by the DungeonScriptMgr. Performance is optimized through internal
    hash map lookups.
  warnings: Ensure that the bossEntry parameter corresponds to a valid boss ID in
    the game database, otherwise the method will return nullptr. Accessing the returned
    script pointer without checking for null can lead to crashes.
  related:
  - GetScriptForCreature
  - GetScriptForGameObject
  - RegisterDungeonScript
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:08:27.839213'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
