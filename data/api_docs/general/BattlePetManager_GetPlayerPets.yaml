api:
  class: BattlePetManager
  method: GetPlayerPets
  signature: int BattlePetManager::GetPlayerPets(int * player) const
documentation:
  brief: Retrieves the list of battle pets owned by the player.
  description: The GetPlayerPets method fetches all battle pets currently associated
    with the player. It returns an integer representing the number of pets retrieved,
    and populates the provided array with pet identifiers. This method is typically
    used in the context of World of Warcraft's Battle Pet system within TrinityCore
    to manage and display a player's collection of companion pets. The method assumes
    that the internal state of the BattlePetManager has been properly initialized
    with player data.
  parameters:
  - name: player
    description: Pointer to an integer array where the pet identifiers will be stored.
      The size of this array should be sufficient to hold all pets for the given player.
  returns: Returns the total number of battle pets found for the player. A return
    value of zero indicates no pets were found, while a positive integer indicates
    the count of pets retrieved.
  examples:
  - title: Basic Usage Example
    code: "int petArray[10];\nint count = battlePetManager->GetPlayerPets(petArray);\n\
      for (int i = 0; i < count; ++i) {\n    std::cout << \"Pet ID: \" << petArray[i]\
      \ << std::endl;\n}"
    language: cpp
  notes: This method requires that the BattlePetManager instance is properly initialized
    with player context. The array passed to this method must be large enough to hold
    all pets for the player; otherwise, data may be overwritten or corrupted.
  warnings: Ensure that the 'player' parameter points to a valid memory location and
    has sufficient capacity to store the pet IDs. Failure to do so can result in undefined
    behavior or crashes.
  related:
  - GetPlayerPetCount
  - AddPlayerPet
  - RemovePlayerPet
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T18:02:49.940164'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
