api:
  class: Map
  method: RemoveDynamicObjectFromMoveList
  signature: void Map::RemoveDynamicObjectFromMoveList(int * go)
documentation:
  brief: Removes a dynamic object from the map's movement update list.
  description: The RemoveDynamicObjectFromMoveList method removes a specified dynamic
    object (such as a game object or unit) from the map's internal tracking list used
    for movement updates. This is typically called when an object is being removed
    from the world or when its movement state needs to be temporarily suspended. The
    method ensures that the object will no longer be processed during the map's update
    cycle for movement-related operations, which helps in managing memory and performance
    efficiently. It is important to note that this method does not destroy the object
    itself but only removes it from the movement tracking mechanism.
  parameters:
  - name: go
    description: Pointer to the dynamic object (GameObject or Unit) to be removed
      from the movement update list. This parameter must point to a valid object that
      has been previously added to the map's movement tracking system.
  returns: null
  examples:
  - title: Removing a GameObject from Movement List
    code: 'GameObject* go = ...; // Assume go is a valid GameObject pointer

      Map* map = go->GetMap();

      map->RemoveDynamicObjectFromMoveList(&go);'
    language: cpp
  - title: Removing a Unit from Movement List Before Despawn
    code: 'Unit* unit = ...; // Assume unit is a valid Unit pointer

      Map* map = unit->GetMap();

      map->RemoveDynamicObjectFromMoveList(&unit);

      // Proceed with unit despawn logic

      unit->RemoveFromWorld();'
    language: cpp
  notes: This method should only be called on objects that have already been added
    to the map's movement tracking system. Calling this method on an object not in
    the list may lead to undefined behavior. The method is typically used internally
    by the core engine during object removal or state changes, but can also be invoked
    directly when needed for specific game mechanics.
  warnings: Do not call this method with a null pointer; it will likely cause a crash
    or undefined behavior. Also, ensure that the object pointed to by 'go' is still
    valid and managed by the map before calling this function, as removing an already
    destroyed object may lead to memory corruption.
  related:
  - AddDynamicObjectToMoveList
  - UpdateDynamicObjects
  - HasDynamicObjectInMoveList
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T10:45:10.305731'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
