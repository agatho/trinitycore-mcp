api:
  class: Unit
  method: GetCombatRatingDamageReduction
  signature: uint32 Unit::GetCombatRatingDamageReduction(CombatRating cr, float rate,
    float cap, uint32 damage) const
documentation:
  brief: Calculates damage reduction based on combat rating, rate, cap, and incoming
    damage.
  description: The GetCombatRatingDamageReduction method computes the amount of damage
    that is reduced due to a specific combat rating. This function is typically used
    in damage calculation systems where certain stats or ratings (like Dodge, Parry,
    or Block) reduce incoming physical damage. The method takes into account a combat
    rating value, a rate modifier, a cap limit, and the total damage being applied.
    It returns the actual damage reduction amount as an integer. This method is part
    of the core combat system in TrinityCore and is used internally by the game engine
    to determine final damage outcomes.
  parameters:
  - name: cr
    description: The CombatRating enum value that specifies which type of combat rating
      is being evaluated (e.g., CR_DODGE, CR_PARRY, CR_BLOCK).
  - name: rate
    description: A floating-point rate modifier that scales the effect of the combat
      rating. This can be used to apply buffs, debuffs, or other modifiers.
  - name: cap
    description: The maximum damage reduction percentage that this combat rating can
      provide. This value caps the effectiveness of the rating.
  - name: damage
    description: The total amount of incoming physical damage that is being reduced
      by the combat rating.
  returns: Returns a uint32 representing the actual damage reduction amount after
    applying the combat rating, rate, and cap modifiers. If no reduction occurs, it
    returns 0.
  examples:
  - title: Basic usage of GetCombatRatingDamageReduction
    code: 'uint32 damage = 1000;

      uint32 reduced = unit->GetCombatRatingDamageReduction(CR_DODGE, 1.0f, 50.0f,
      damage);

      // Returns the damage reduction due to dodge rating with a maximum cap of 50%.'
    language: cpp
  - title: Using GetCombatRatingDamageReduction for block rating
    code: 'uint32 damage = 1500;

      float rate = 1.2f; // 20% bonus from a buff

      uint32 reduced = unit->GetCombatRatingDamageReduction(CR_BLOCK, rate, 75.0f,
      damage);

      // Calculates block damage reduction with a 20% increase and maximum cap of
      75%.'
    language: cpp
  notes: This method is typically used in combat calculations within the TrinityCore
    engine. It's important to note that the actual implementation may vary depending
    on how combat ratings are defined internally, and this function is usually called
    during damage processing logic. The method assumes valid input parameters and
    does not perform validation checks.
  warnings: Ensure that all parameters passed to this method are valid, especially
    the CombatRating enum value. Passing an invalid CombatRating value can lead to
    undefined behavior or incorrect results. Also, be cautious with large rate values
    as they may cause unexpected damage reduction percentages when combined with the
    cap.
  related:
  - GetCombatRating
  - CalculateDamageReduction
  - GetStat
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:34:07.129665'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
