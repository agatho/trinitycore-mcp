api:
  class: Unit
  method: MonsterMoveWithSpeed
  signature: void Unit::MonsterMoveWithSpeed(float x, float y, float z, float speed,
    bool generatePath, bool forceDestination)
documentation:
  brief: Moves a unit with specified speed to a given position with path generation
    capability.
  description: The MonsterMoveWithSpeed method facilitates movement of a Unit object
    to a specific coordinate in 3D space with defined speed. It allows for path generation
    and force destination behaviors, making it useful for AI-driven movement in World
    of Warcraft environments. This method is typically used for monster or NPC movement
    control where precise positioning and speed are required. The method supports
    both generated paths and direct destination movement, enabling flexible control
    over unit behavior during movement operations.
  parameters:
  - name: x
    description: X coordinate of the target position
  - name: y
    description: Y coordinate of the target position
  - name: z
    description: Z coordinate of the target position
  - name: speed
    description: Movement speed for the unit, typically in yards per second
  - name: generatePath
    description: Boolean flag indicating whether to generate a path or move directly
      to destination
  - name: forceDestination
    description: Boolean flag indicating whether to force destination even if path
      generation fails
  returns: null
  examples:
  - title: Basic Monster Movement Example
    code: 'Unit* unit = new Unit;

      unit->MonsterMoveWithSpeed(10.5f, 15.2f, 0.0f, 3.0f, true, false);

      '
    language: cpp
  - title: Advanced Movement with Path Generation
    code: 'Unit* unit = new Unit;

      unit->MonsterMoveWithSpeed(100.5f, 200.3f, 50.0f, 4.5f, true, true);

      '
    language: cpp
  notes: This method is typically used in AI scripts for monster movement control.
    The implementation may vary based on the unit type and game context. Performance
    considerations include path generation overhead when generatePath is set to true.
    Thread safety depends on the specific implementation of Unit class methods.
  warnings: Improper use of this method can result in incorrect positioning or movement
    behavior. Care should be taken when setting forceDestination to true, as it may
    cause unit to move without proper path generation. Avoid using negative speed
    values which may lead to unexpected behavior.
  related:
  - Unit::MonsterMove
  - Unit::MoveTo
  - Unit::Movement
  - Unit::SetSpeed
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:55:44.188999'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
