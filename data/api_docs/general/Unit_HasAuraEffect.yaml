api:
  class: Unit
  method: HasAuraEffect
  signature: bool Unit::HasAuraEffect(uint32 spellId, uint8 effIndex, int caster)
    const
documentation:
  brief: Checks if a unit has a specific aura effect from a spell at a given index.
  description: This method determines whether a Unit object possesses a particular
    aura effect from a specified spell, with the ability to filter by the effect index
    and caster. It is commonly used in game mechanics to verify active buffs, debuffs,
    or special effects on targets. The method returns true if the specified aura effect
    exists, false otherwise. This functionality is essential for implementing combat
    systems, spell effects, and status checks in World of Warcraft.
  parameters:
  - name: spellId
    description: The spell identifier to check for the aura effect. This represents
      the unique ID of a spell that may have multiple effects.
  - name: effIndex
    description: The index of the aura effect within the spell. This typically corresponds
      to the effect number (0-2) in a spell's effect list.
  - name: caster
    description: The caster identifier to filter by. This allows checking for effects
      from specific casters, such as player or NPC. If set to -1, all casters are
      considered.
  returns: Returns true if the specified aura effect exists on the unit, false otherwise.
  examples:
  - title: Basic usage example
    code: "if (unit->HasAuraEffect(12345, 0, -1)) {\n    // Do something\n}"
    language: cpp
  - title: Checking for specific caster
    code: "if (unit->HasAuraEffect(12345, 1, 123456)) {\n    // Check if the effect\
      \ is from a specific caster\n}"
    language: cpp
  notes: This method internally uses the aura system to check for active effects.
    Performance considerations include avoiding frequent calls in tight loops, as
    it involves searching through the unit's aura list. Thread safety depends on the
    context of use; typically safe when used within game logic threads.
  warnings: Be cautious when using this method with spell effects that may have multiple
    indices, as incorrect index usage can lead to false negatives or positives. Also,
    ensure that the caster parameter is correctly set to avoid unexpected results.
  related:
  - HasAura
  - GetAura
  - RemoveAura
  - AddAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:25:21.538353'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
