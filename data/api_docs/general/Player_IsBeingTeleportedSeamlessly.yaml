api:
  class: Player
  method: IsBeingTeleportedSeamlessly
  signature: bool Player::IsBeingTeleportedSeamlessly() const
documentation:
  brief: Determines whether the player is currently being teleported without any delay
    or interruption.
  description: This method checks if a player is in the process of being seamlessly
    teleported, meaning they are not experiencing any delays or interruptions during
    the teleportation process. It typically returns true when the player is in the
    middle of a teleportation that occurs without any visible delay, such as when
    using certain spells or abilities that allow for instant teleportation. The method
    is useful for determining the state of a player's teleportation and can be used
    to prevent certain actions during the teleportation process. This method is particularly
    relevant in scenarios involving instant teleportation mechanics, such as those
    found in battlegrounds or during specific quest events.
  parameters: []
  returns: Returns true if the player is currently being teleported seamlessly, false
    otherwise. The return value indicates whether the teleportation is occurring without
    any delay or interruption, which may be relevant for game mechanics involving
    instant teleportation.
  examples:
  - title: Checking teleportation status
    code: "if (player->IsBeingTeleportedSeamlessly()) {\n    // Player is currently\
      \ being teleported seamlessly\n    // Perform actions that require no interruption\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other teleportation-related
    methods to determine the current state of a player's teleportation. It may be
    particularly useful for developers working on game mechanics involving seamless
    teleportation or when implementing custom teleportation behavior.
  warnings: This method should not be used as the sole determining factor for preventing
    actions during teleportation, as it only indicates whether the player is being
    teleported seamlessly and not necessarily whether they are in a state where actions
    should be prevented. Developers should consider other factors such as player state
    or movement restrictions.
  related:
  - Player::IsBeingTeleported
  - Player::GetSession
  - Player::TeleportTo
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T15:53:09.913616'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
