api:
  class: WorldObject
  method: CalcSpellDuration
  signature: int32 WorldObject::CalcSpellDuration(const SpellInfo * spellInfo, const
    int * powerCosts) const
documentation:
  brief: Calculates the duration of a spell based on its information and power costs.
  description: This method computes the duration of a spell by analyzing the provided
    SpellInfo structure and power cost values. It is used primarily for determining
    how long a spell will last in game mechanics, taking into account various factors
    such as spell components, power requirements, and potential modifiers. The calculation
    involves examining the spell's properties and applying appropriate adjustments
    based on the power costs specified.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing detailed information
      about the spell being evaluated.
  - name: powerCosts
    description: Pointer to an array of integers representing the power costs associated
      with the spell, used for duration calculations.
  returns: Returns an integer value representing the calculated duration of the spell
    in milliseconds. This value can be zero or negative if the spell has no duration
    or if certain conditions are met, such as when power costs indicate a negative
    effect.
  examples:
  - title: Basic Usage Example
    code: int32 duration = worldObject->CalcSpellDuration(spellInfo, powerCosts);
    language: cpp
  notes: Implementation details include the use of spell information and power cost
    arrays to determine duration. Performance considerations involve avoiding unnecessary
    calculations when power costs are null or invalid. Thread safety is generally
    not an issue as this method is typically used within single-threaded contexts.
  warnings: Care should be taken when using null pointers for spellInfo or powerCosts,
    as this can lead to undefined behavior or crashes. Common mistakes include misinterpreting
    the returned duration value as a time unit rather than milliseconds.
  related:
  - SpellInfo::GetDuration
  - WorldObject::CalcSpellPowerCost
  - WorldObject::GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:49:19.811507'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
