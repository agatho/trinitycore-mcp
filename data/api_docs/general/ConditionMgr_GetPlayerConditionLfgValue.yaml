api:
  class: ConditionMgr
  method: GetPlayerConditionLfgValue
  signature: uint32 ConditionMgr::GetPlayerConditionLfgValue(const Player * player,
    PlayerConditionLfgStatus status)
documentation:
  brief: Retrieves the current LFG (Looking for Group) condition value for a specified
    player.
  description: The GetPlayerConditionLfgValue method fetches the current Looking for
    Group status value associated with a given player. This value typically represents
    the player's eligibility or state within the LFG system, such as whether they
    are in a group, waiting for a group, or have specific restrictions that affect
    their ability to join instances or dungeons. The method is used internally by
    TrinityCore to evaluate player conditions before allowing them to participate
    in LFG activities or instance queues. It ensures that players meet the required
    criteria before being matched with other players or allowed into certain content.
  parameters:
  - name: player
    description: A pointer to the Player object for which the LFG condition value
      is being retrieved. Must not be null.
  - name: status
    description: An enum value indicating the specific LFG status type to query. This
      determines what aspect of the player's LFG state is returned (e.g., group status,
      queue status, etc.).
  returns: Returns a uint32 value representing the current LFG condition for the specified
    player and status type. The exact meaning of this value depends on the PlayerConditionLfgStatus
    enum, typically indicating eligibility flags or state codes.
  examples:
  - title: Check if player is eligible to join an LFG group
    code: "uint32 lfgValue = sConditionMgr->GetPlayerConditionLfgValue(player, PLAYER_CONDITION_LFG_STATUS_IN_GROUP);\n\
      if (lfgValue == 0) {\n    // Player can join a group\n}"
    language: cpp
  notes: This method is part of the condition management system and relies on internal
    LFG state tracking. It should only be called with valid player objects that are
    currently in the world or being processed by the server. The returned value may
    change dynamically as players join/leave groups, queue for instances, or have
    their conditions updated through various game events.
  warnings: Do not call this method with a null player pointer; it will likely cause
    undefined behavior or crashes. Ensure that the PlayerConditionLfgStatus enum values
    passed are valid and supported by the current TrinityCore version to avoid incorrect
    results.
  related:
  - GetPlayerConditionValue
  - UpdatePlayerCondition
  - IsPlayerEligibleForLfg
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T16:02:00.009607'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
