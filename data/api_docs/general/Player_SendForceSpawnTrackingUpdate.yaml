api:
  class: Player
  method: SendForceSpawnTrackingUpdate
  signature: void Player::SendForceSpawnTrackingUpdate(uint32 questId) const
documentation:
  brief: Sends a force spawn tracking update for the specified quest to the player's
    client.
  description: The SendForceSpawnTrackingUpdate method is used to notify the player's
    client about changes in quest-related spawn tracking states. This typically occurs
    when a quest requires the player to track specific creatures or game objects that
    may be spawned or despawned dynamically. The method ensures that the client's
    UI and quest log are updated accordingly, reflecting the current state of tracked
    entities. It is commonly invoked during quest progression events where dynamic
    spawns are involved, such as tracking rare mobs or quest items that appear based
    on player actions.
  parameters:
  - name: questId
    description: The unique identifier of the quest for which to send the force spawn
      tracking update. This ID must correspond to a valid quest in the game's database.
  returns: null
  examples:
  - title: Basic Usage Example
    code: "void OnPlayerQuestComplete(Player* player, uint32 questId)\n{\n    // Send\
      \ force spawn tracking update after completing a quest\n    player->SendForceSpawnTrackingUpdate(questId);\n\
      }"
    language: cpp
  - title: Usage with Dynamic Spawn Logic
    code: "void HandleQuestSpawnEvent(Player* player, uint32 questId)\n{\n    // Update\
      \ tracking when a tracked spawn event occurs\n    if (player->GetQuestStatus(questId)\
      \ == QUEST_STATUS_INCOMPLETE)\n    {\n        player->SendForceSpawnTrackingUpdate(questId);\n\
      \    }\n}"
    language: cpp
  notes: This method directly communicates with the client's quest tracking system
    and should only be called when there are actual changes to tracked entities. It
    does not perform any validation on the quest ID itself, so calling it with an
    invalid quest ID may result in undefined behavior or client-side issues.
  warnings: Calling this method without proper quest state validation can cause client
    desynchronization or UI glitches. Ensure that the quest is actually active and
    has tracking elements before invoking this method.
  related:
  - GetQuestStatus
  - SendQuestUpdateAddKill
  - SendQuestUpdateComplete
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T19:24:47.588684'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
