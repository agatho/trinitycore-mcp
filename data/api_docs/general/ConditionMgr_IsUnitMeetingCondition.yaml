api:
  class: ConditionMgr
  method: IsUnitMeetingCondition
  signature: bool ConditionMgr::IsUnitMeetingCondition(const Unit * unit, const Unit
    * otherUnit, const UnitConditionEntry * condition)
documentation:
  brief: Evaluates whether a unit meets the specified condition criteria against another
    unit.
  description: The IsUnitMeetingCondition method determines if a given unit satisfies
    the conditions defined in a UnitConditionEntry when compared to another unit.
    This function is typically used within the TrinityCore framework to enforce conditional
    logic for various game mechanics such as quest requirements, spell effects, or
    AI behaviors. It evaluates the condition based on parameters like unit type, faction,
    health percentage, and other relevant attributes. The method performs a logical
    check between the subject unit and the target unit according to the rules defined
    in the condition entry.
  parameters:
  - name: unit
    description: The primary unit that is being evaluated against the condition. This
      represents the subject of the condition check.
  - name: otherUnit
    description: The secondary unit used for comparison in certain conditional evaluations.
      May be nullptr if not required by the condition.
  - name: condition
    description: A pointer to the UnitConditionEntry that defines the specific criteria
      to be checked. This structure contains all necessary information about how the
      condition should be evaluated.
  returns: Returns true if the unit meets all specified conditions defined in the
    UnitConditionEntry when compared against the otherUnit; otherwise returns false.
  examples:
  - title: Basic Condition Check
    code: "if (sConditionMgr->IsUnitMeetingCondition(player, target, conditionEntry))\
      \ {\n    // Player meets the required condition\n    DoSomething();\n}"
    language: cpp
  - title: Using with Null Other Unit
    code: "if (sConditionMgr->IsUnitMeetingCondition(mob, nullptr, mobCondition))\
      \ {\n    // Check if mob meets its own condition without comparing to another\
      \ unit\n    SpawnLoot();\n}"
    language: cpp
  notes: This method is commonly used in AI decision-making processes and quest systems.
    Ensure that the UnitConditionEntry passed is valid and properly initialized, as
    invalid entries may lead to undefined behavior. The function does not perform
    any side effects or modifications to the units involved.
  warnings: Passing null pointers for unit or condition parameters can cause crashes
    or unexpected behavior. Always validate input before calling this method. Be cautious
    when using this in performance-critical sections due to potential complexity of
    condition evaluation logic.
  related:
  - GetCondition
  - CheckUnitCondition
  - IsPlayerMeetingCondition
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:49:46.702023'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
