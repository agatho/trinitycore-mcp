api:
  class: WorldObject
  method: FindNearestCreature
  signature: Creature * WorldObject::FindNearestCreature(uint32 entry, float range,
    bool alive) const
documentation:
  brief: Finds and returns the nearest creature with specified entry ID within given
    range.
  description: The FindNearestCreature method searches for the closest creature with
    a specific entry ID within a defined range from the current WorldObject. It is
    commonly used in quest scripts, NPC AI behavior, or player interaction scenarios
    where proximity-based creature detection is required. The method returns a pointer
    to the Creature object if found, otherwise returns nullptr. The 'alive' parameter
    determines whether to consider only alive creatures (true) or all creatures regardless
    of their state (false). This functionality is essential for game mechanics involving
    NPC interaction, quest completion, or player-based targeting.
  parameters:
  - name: entry
    description: The creature entry ID to search for. This value corresponds to the
      creature template entry in the database and defines which type of creature to
      look for.
  - name: range
    description: The maximum distance within which to search for the creature. This
      parameter controls how far away from the current WorldObject the method will
      scan for matching creatures.
  - name: alive
    description: When set to true, only alive creatures are considered; when false,
      all creatures including dead ones are included in the search results.
  returns: Returns a pointer to the Creature object if found within the specified
    range and matching the entry ID. If no creature is found, or if the creature is
    not alive when alive=true is specified, returns nullptr.
  examples:
  - title: Basic usage example
    code: "Creature* target = pPlayer->FindNearestCreature(12345, 10.0f, true);\n\
      if (target != nullptr)\n{\n    // Do something with the creature\n}"
    language: cpp
  - title: Advanced usage example
    code: "Creature* target = pPlayer->FindNearestCreature(12345, 50.0f, false);\n\
      if (target != nullptr)\n{\n    // Use the creature for quest completion or interaction\n\
      }"
    language: cpp
  notes: This method performs a spatial search using the current WorldObject's coordinates
    and is optimized for performance by limiting the search area. It should be used
    carefully in loops or frequent calls to avoid performance impact. The method does
    not consider creature's faction or other complex conditions beyond entry ID and
    alive status.
  warnings: Be cautious when using this method with large ranges as it may cause performance
    issues if used frequently. Also, ensure that the entry ID is valid and exists
    in the database before calling this method to avoid unexpected behavior.
  related:
  - FindNearestObject
  - FindNearestPlayer
  - FindNearestGameObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:47:13.963706'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
