api:
  class: AoEDecisionManager
  method: GetBestCleaveAngle
  signature: float AoEDecisionManager::GetBestCleaveAngle(float coneAngle) const
documentation:
  brief: Calculates and returns the optimal angle for cleave attacks within a specified
    cone.
  description: The GetBestCleaveAngle method determines the most effective angle for
    performing a cleave attack, considering the target's positioning and the spell's
    cone angle. This method is typically used by AI decision-making systems to maximize
    damage output when executing area-of-effect abilities that cleave in a cone shape.
    It evaluates potential angles within the given cone to find the one that targets
    the maximum number of enemies or achieves optimal damage distribution. The result
    is returned as a float representing the angle in radians, which can be used directly
    by the AI for spell targeting or movement calculations.
  parameters: []
  returns: A float value representing the optimal cleave angle in radians. This angle
    indicates the direction from the caster that maximizes the effectiveness of the
    cleave attack within the specified cone angle.
  examples:
  - title: Basic usage for determining cleave angle
    code: 'float optimalAngle = decisionManager.GetBestCleaveAngle(1.5708f); // 90-degree
      cone

      // Use optimalAngle to orient the cleave attack direction'
    language: cpp
  notes: This method is part of the AoEDecisionManager class and assumes that enemy
    positioning data is already available within the AI context. The implementation
    likely considers factors such as enemy proximity, threat levels, and spatial distribution
    to determine the best cleave angle.
  warnings: null
  related:
  - GetBestCleaveTarget
  - CalculateConeDamage
  - EvaluateAoEPositioning
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T18:42:52.914439'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
