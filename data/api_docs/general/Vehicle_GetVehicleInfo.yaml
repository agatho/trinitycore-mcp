api:
  class: Vehicle
  method: GetVehicleInfo
  signature: const VehicleEntry * Vehicle::GetVehicleInfo() const
documentation:
  brief: Retrieves the vehicle entry data structure associated with this vehicle instance.
  description: The GetVehicleInfo method returns a constant pointer to the VehicleEntry
    object that defines the properties and behavior of the vehicle. This entry contains
    static data such as seat configurations, speed multipliers, and vehicle flags
    that are shared among all instances of the same vehicle type. The returned pointer
    is valid for the lifetime of the vehicle object and should not be modified. This
    method is commonly used in vehicle-related game mechanics to access vehicle-specific
    attributes during movement, passenger management, or UI display.
  parameters: []
  returns: A constant pointer to the VehicleEntry structure that contains the static
    configuration data for this vehicle type. Returns nullptr if the vehicle has no
    valid entry data or if the vehicle is not properly initialized.
  examples:
  - title: Basic Usage to Access Vehicle Speed Multiplier
    code: "Vehicle* vehicle = player->GetVehicle();\nif (vehicle)\n{\n    const VehicleEntry*\
      \ entry = vehicle->GetVehicleInfo();\n    if (entry)\n    {\n        float speedMultiplier\
      \ = entry->SpeedMultiplier;\n        // Use speedMultiplier for custom movement\
      \ logic\n    }\n}"
    language: cpp
  - title: Checking Vehicle Seat Configuration
    code: "if (Vehicle* vehicle = player->GetVehicle())\n{\n    const VehicleEntry*\
      \ entry = vehicle->GetVehicleInfo();\n    if (entry && entry->NumSeats > 0)\n\
      \    {\n        // Iterate through available seats\n        for (uint8 i = 0;\
      \ i < entry->NumSeats; ++i)\n        {\n            // Access seat data from\
      \ entry->Seats[i]\n        }\n    }\n}"
    language: cpp
  notes: This method performs a simple data lookup and is generally fast. The VehicleEntry
    object returned is shared across all instances of the same vehicle type, so modifications
    to its members should be avoided. The method assumes that the vehicle has been
    properly initialized with valid entry data.
  warnings: Do not modify the returned VehicleEntry pointer as it points to shared
    static data. Accessing this method on a null vehicle pointer will result in a
    null return value, so always check for validity before dereferencing.
  related:
  - GetVehicleId
  - GetVehicleSeat
  - HasVehicleEntry
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:31:09.593679'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
