api:
  class: PlayerbotGroupManager
  method: SetGroupCoordinationMode
  signature: void PlayerbotGroupManager::SetGroupCoordinationMode(uint32 groupId,
    GroupCoordinationMode mode)
documentation:
  brief: Sets the coordination mode for a specified group in the playerbot system.
  description: This method configures how a specific group operates within the TrinityCore
    playerbot framework. It determines the behavior and synchronization settings for
    group activities such as loot distribution, movement patterns, and combat strategies.
    The coordination mode affects how bots in the group interact with each other and
    respond to game events. This setting is typically used by bot controllers to customize
    group behavior based on player needs or encounter requirements.
  parameters:
  - name: groupId
    description: Unique identifier of the group for which to set the coordination
      mode. Must be a valid group ID that exists in the current playerbot context.
  - name: mode
    description: The GroupCoordinationMode enum value specifying the desired coordination
      behavior for the group. Valid values typically include modes like NORMAL, LOOT_ONLY,
      DEFENSIVE, OFFENSIVE, etc., depending on the implementation.
  returns: null
  examples:
  - title: Set Group to Defensive Coordination
    code: 'PlayerbotGroupManager* groupMgr = sPlayerbotAIConfig->GetGroupManager();

      uint32 groupId = 12345;

      GroupCoordinationMode mode = GROUP_COORDINATION_DEFENSIVE;

      groupMgr->SetGroupCoordinationMode(groupId, mode);'
    language: cpp
  - title: Configure Multiple Groups with Different Modes
    code: 'PlayerbotGroupManager* groupMgr = sPlayerbotAIConfig->GetGroupManager();

      uint32 mainGroup = 1001;

      uint32 raidGroup = 1002;


      // Set main group to offensive mode for PvP content

      groupMgr->SetGroupCoordinationMode(mainGroup, GROUP_COORDINATION_OFFENSIVE);


      // Set raid group to defensive mode for PvE content

      groupMgr->SetGroupCoordinationMode(raidGroup, GROUP_COORDINATION_DEFENSIVE);'
    language: cpp
  notes: This method modifies internal state within the playerbot system and may affect
    bot behavior immediately upon execution. The group ID must be valid and correspond
    to an existing group managed by the current playerbot instance. Changes made via
    this method are typically persistent during the session but may reset when the
    group is disbanded or reorganized.
  warnings: Incorrect group IDs can lead to undefined behavior or crashes. Ensure
    that the groupId corresponds to a valid, active group before calling this method.
    Improper use of coordination modes might cause bots to behave unexpectedly in
    combat or loot scenarios.
  related:
  - GetGroupCoordinationMode
  - AddPlayerToGroup
  - RemovePlayerFromGroup
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:23:52.432788'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
