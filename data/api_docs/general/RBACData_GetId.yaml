api:
  class: RBACData
  method: GetId
  signature: uint32 RBACData::GetId() const
documentation:
  brief: Returns the unique identifier of the RBAC data object.
  description: The GetId method retrieves the internal unique identifier associated
    with an RBAC (Role-Based Access Control) data entry. This identifier is used internally
    by TrinityCore to distinguish between different RBAC permissions and roles within
    the authentication and authorization system. The returned value typically corresponds
    to a primary key in the database table storing RBAC-related information, ensuring
    each permission or role can be uniquely identified and referenced throughout the
    game's access control mechanisms.
  parameters: []
  returns: A 32-bit unsigned integer representing the unique identifier of the RBAC
    data object. This value is typically used as a primary key in database tables
    related to permissions and roles.
  examples:
  - title: Retrieve RBAC ID for Permission Check
    code: "RBACData* rbacData = sAccountMgr->GetRBACData(12345);\nuint32 id = rbacData->GetId();\n\
      if (id != 0)\n{\n    // Use the ID to perform further RBAC operations\n    sLog->outString(\"\
      RBAC Data ID: %u\", id);\n}"
    language: cpp
  notes: This method is a simple getter that returns cached data. It does not perform
    any database queries or modifications. The ID returned should be treated as immutable
    once the RBACData object is initialized.
  warnings: null
  related:
  - RBACData::GetPermissions
  - RBACData::GetRoles
  - RBACData::SetId
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:41:57.535442'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
