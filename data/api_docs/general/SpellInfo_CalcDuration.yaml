api:
  class: SpellInfo
  method: CalcDuration
  signature: int32 SpellInfo::CalcDuration(const WorldObject * caster) const
documentation:
  brief: Calculates the duration of a spell based on the caster object
  description: This method computes the duration of a spell in milliseconds, taking
    into account various factors such as spell modifiers, caster's level, and other
    game mechanics. It is used internally by the TrinityCore system to determine how
    long a spell will last when cast. The calculation considers the caster's properties
    and applies appropriate scaling rules based on the spell's configuration. This
    method is essential for proper spell handling and timing in World of Warcraft
    gameplay.
  parameters:
  - name: caster
    description: A pointer to the WorldObject that is casting the spell. This can
      be a player, creature, or any other game object that has the ability to cast
      spells. The caster's properties affect how the duration is calculated.
  returns: Returns an integer value representing the spell duration in milliseconds.
    A value of 0 indicates that the spell has no duration or is instantaneous. Negative
    values may indicate special cases where the spell duration is calculated differently,
    such as when using certain spell modifiers or effects.
  examples:
  - title: Basic usage example
    code: "int32 duration = spellInfo->CalcDuration(player);\nif (duration > 0)\n\
      {\n    // Spell has a valid duration\n    // Do something with the duration\n\
      }"
    language: cpp
  notes: This method is typically called during spell casting and execution. It should
    be used carefully as it may involve complex calculations based on multiple factors
    including caster's level, spell modifiers, and other game mechanics. Performance
    considerations are minimal since this method is usually called infrequently per
    spell.
  warnings: The method may return unexpected values if the caster object is null or
    invalid. Always ensure that the caster parameter is valid before calling this
    method. Also, be aware that some spells may have special duration calculations
    that could result in negative values.
  related:
  - SpellInfo::GetDuration
  - SpellInfo::CalcCastTime
  - SpellInfo::IsInstant
  - SpellInfo::IsChanneled
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:41:40.984149'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
