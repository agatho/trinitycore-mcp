api:
  class: Creature
  method: CanSwim
  signature: bool Creature::CanSwim() const
documentation:
  brief: Determines whether the creature can swim in water.
  description: The CanSwim method checks if a creature is capable of swimming, which
    is essential for creatures that are designed to move through water environments.
    This method returns true if the creature has the swimming capability enabled,
    typically based on its creature template or AI behavior. It's commonly used in
    pathfinding and movement logic to determine if a creature can navigate water areas
    without being restricted by its movement type.
  parameters: []
  returns: Returns true if the creature can swim, false otherwise. This indicates
    whether the creature's movement type allows swimming or not.
  examples:
  - title: Basic usage example
    code: "if (creature->CanSwim()) {\n    // Creature can swim\n    // Perform swimming-specific\
      \ actions\n}"
    language: cpp
  notes: Implementation relies on creature's movement type and template flags, typically
    involving checking if the creature has the 'swimming' flag enabled in its creature
    template. Performance considerations include avoiding unnecessary calls during
    pathfinding calculations.
  warnings: This method should not be used as a direct replacement for movement type
    checks; it's more of a specialized check for swimming capability rather than general
    movement behavior.
  related:
  - Creature::CanWalk
  - Creature::CanFly
  - Creature::HasMovementInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:25:20.217201'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
