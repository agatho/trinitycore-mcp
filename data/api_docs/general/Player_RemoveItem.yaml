api:
  class: Player
  method: RemoveItem
  signature: void Player::RemoveItem(uint8 bag, uint8 slot, bool update)
documentation:
  brief: Removes an item from a player's inventory by bag and slot.
  description: The RemoveItem method removes an item from a player's inventory at
    the specified bag and slot position. It is used to delete items from the player's
    inventory, typically when items are consumed or destroyed through gameplay mechanics
    such as spell effects, quest rewards, or item usage. The method updates the player's
    inventory state and may trigger visual changes in the UI if the update parameter
    is set to true. This function is commonly used in conjunction with other inventory
    management methods to maintain proper item tracking and game balance.
  parameters:
  - name: bag
    description: The bag number where the item is located, ranging from 0 to 11 (0
      = backpack, 1-11 = equipped bags).
  - name: slot
    description: The slot position within the bag, ranging from 0 to 36 (0 = first
      slot, 36 = last slot).
  - name: update
    description: When true, triggers inventory update and UI refresh; when false,
      only removes item without updating the UI.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      player->RemoveItem(0, 0, true); // Remove item from backpack slot 0'
    language: cpp
  - title: Advanced usage example
    code: 'Player* player = GetPlayer();

      uint8 bag = 1;

      uint8 slot = 5;

      player->RemoveItem(bag, slot, false); // Remove item without updating UI

      // This is useful for removing items during quest completion or spell effects'
    language: cpp
  notes: This method directly modifies the player's inventory state and should be
    used carefully to avoid unintended consequences. It may trigger inventory updates
    depending on the update parameter, which could affect performance if called frequently
    in loops. The method is thread-safe as long as no concurrent modifications are
    made to the same inventory.
  warnings: Improper use of this method can lead to item loss or incorrect inventory
    states. Always ensure that bag and slot values are valid before calling this method.
    Avoid calling this method on items that are already removed or not present in
    the inventory.
  related:
  - Player::AddItem
  - Player::ItemChanged
  - Player::GetItemByPos
  - Player::HasItemWithIdInInventory
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:22:17.638593'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
