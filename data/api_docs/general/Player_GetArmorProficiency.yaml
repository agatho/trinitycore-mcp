api:
  class: Player
  method: GetArmorProficiency
  signature: uint32 Player::GetArmorProficiency() const
documentation:
  brief: Returns the armor proficiency bitmask for the player, indicating which armor
    types they can wear.
  description: This method retrieves the armor proficiency information for the player
    character, returning a uint32 value that represents the armor types the player
    is proficient in. The bitmask corresponds to different armor categories including
    Cloth, Leather, Mail, and Plate armor types. This information is crucial for determining
    whether a player can wear specific armor types without penalty, and is used primarily
    in game mechanics related to armor requirements and class-based armor restrictions.
    The method returns a value that reflects the player's current armor proficiency
    status, which may change during gameplay as the player gains levels or learns
    new professions.
  parameters: []
  returns: Returns a uint32 value representing the armor proficiency bitmask. Each
    bit in the value corresponds to a specific armor type (cloth, leather, mail, plate)
    and indicates whether the player is proficient in that type. The value can be
    interpreted as a combination of armor type flags, where each flag represents a
    different armor category.
  examples:
  - title: Basic usage example
    code: "uint32 armorProf = player->GetArmorProficiency();\nif (armorProf & 0x01)\n\
      {\n    // Player is proficient in Cloth armor\n}"
    language: cpp
  - title: Advanced usage example
    code: "uint32 armorProf = player->GetArmorProficiency();\nuint32 plate = 0x08;\n\
      if (armorProf & plate)\n{\n    // Player is proficient in Plate armor\n}\nelse\n\
      {\n    // Player cannot wear Plate armor\n}"
    language: cpp
  notes: This method is typically used in conjunction with other armor-related functions
    to determine whether a player can wear specific armor types. The bitmask values
    are defined by the game's armor proficiency system and may vary based on class,
    race, and level. Implementation details include that this method does not directly
    return the armor type but rather the bitmask representing all armor types the
    player is proficient in.
  warnings: This method should not be used to determine if a player can wear specific
    armor types without checking against the bitmask values. It's important to note
    that armor proficiency may change during gameplay, particularly when players learn
    new professions or gain levels, so this value may not reflect current armor requirements.
  related:
  - GetArmorProficiency
  - GetClass
  - GetLevel
  - IsInGroup
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:26:04.458279'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
