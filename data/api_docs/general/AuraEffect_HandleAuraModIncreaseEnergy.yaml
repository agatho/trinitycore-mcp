api:
  class: AuraEffect
  method: HandleAuraModIncreaseEnergy
  signature: void AuraEffect::HandleAuraModIncreaseEnergy(const AuraApplication *
    aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the energy regeneration rate of the affected unit.
  description: The HandleAuraModIncreaseEnergy method is responsible for adjusting
    the energy regeneration rate of a unit when an aura that modifies energy is applied
    or removed. This method is typically invoked during aura application or removal
    events, and it directly influences how quickly a unit's energy (such as rage for
    warriors or energy for rogues) replenishes over time. The effect can either increase
    or decrease energy regeneration depending on the aura's properties and whether
    the aura is being applied or removed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter specifies which aura is affecting
      the unit and provides context for the modification.
  - name: mode
    description: The mode of operation, typically indicating whether the aura is being
      applied (1) or removed (0). This value determines how the energy regeneration
      rate should be adjusted in response to the aura state change.
  - name: apply
    description: Boolean flag that indicates whether the aura is being applied (true)
      or removed (false). This parameter controls the direction of the energy modification,
      either increasing or decreasing the regeneration rate accordingly.
  returns: null
  examples:
  - title: Applying an Energy Increase Aura
    code: "void ApplyEnergyAura(Unit* target)\n{\n    AuraApplication* app = new AuraApplication(target,\
      \ target, SpellInfo);\n    AuraEffect* effect = new AuraEffect(SpellInfo, 0,\
      \ nullptr);\n    effect->HandleAuraModIncreaseEnergy(app, 1, true);\n}"
    language: cpp
  - title: Removing an Energy Increase Aura
    code: "void RemoveEnergyAura(Unit* target)\n{\n    AuraApplication* app = new\
      \ AuraApplication(target, target, SpellInfo);\n    AuraEffect* effect = new\
      \ AuraEffect(SpellInfo, 0, nullptr);\n    effect->HandleAuraModIncreaseEnergy(app,\
      \ 1, false);\n}"
    language: cpp
  notes: This method directly modifies the energy regeneration rate of a unit, and
    should only be called when an aura that affects energy is applied or removed.
    It is part of the core aura handling system in TrinityCore and interacts with
    the unit's energy regeneration logic to ensure proper gameplay balance.
  warnings: Improper use of this method can lead to incorrect energy regeneration
    behavior, which may affect gameplay balance. Ensure that the aura application
    context is valid before calling this method, as invalid parameters could cause
    unexpected behavior or crashes.
  related:
  - AuraEffect::HandleAuraModIncreaseMana
  - AuraEffect::HandleAuraModIncreaseHealth
  - AuraEffect::HandleAuraModRegen
  - AuraApplication::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:21:30.293183'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
