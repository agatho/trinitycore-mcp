api:
  class: Player
  method: CanEquipChildItem
  signature: int Player::CanEquipChildItem(Item * parentItem) const
documentation:
  brief: Checks if a child item can be equipped by the player.
  description: This method determines whether a child item can be equipped by the
    player, taking into account various game mechanics such as item requirements,
    class restrictions, and equipment slots. It evaluates the parent item's properties
    to ensure that the child item meets all necessary conditions for successful equipping.
    The method returns an integer value indicating the success or failure of the equip
    check.
  parameters: []
  returns: Returns 0 if the child item can be equipped successfully, or a non-zero
    value indicating the specific reason why it cannot be equipped. Common return
    values include 1 for item requirements not met, 2 for class restrictions, and
    3 for equipment slot conflicts.
  examples:
  - title: Basic usage example
    code: "int result = player->CanEquipChildItem(parentItem);\nif (result == 0)\n\
      {\n    // Item can be equipped\n}"
    language: cpp
  notes: This method is typically used in conjunction with other item-related functions
    to validate equipment decisions. It may involve multiple checks including item
    level requirements, class restrictions, and equipment slot compatibility.
  warnings: This method should not be used for direct item equipping; it only provides
    a validation check. The actual equip process requires additional steps such as
    item removal from inventory and slot assignment.
  related:
  - Player::CanEquipItem
  - Player::CanUseItem
  - Player::CanEquipItem
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:49:30.469075'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
