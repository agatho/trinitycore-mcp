api:
  class: Aura
  method: ToDynObjAura
  signature: const DynObjAura * Aura::ToDynObjAura() const
documentation:
  brief: Converts an Aura object to a DynObjAura pointer if the aura is associated
    with a dynamic object.
  description: The ToDynObjAura method attempts to cast the current Aura instance
    to a DynObjAura pointer. This conversion is only successful if the aura was originally
    created as part of a dynamic object, such as those generated by area-of-effect
    spells or traps. The method performs a type check internally and returns a valid
    DynObjAura pointer if the cast succeeds, otherwise it returns nullptr. This functionality
    is primarily used in the TrinityCore framework for managing auras that are linked
    to dynamic objects rather than direct unit targets.
  parameters: []
  returns: A const pointer to a DynObjAura object if the aura is associated with a
    dynamic object; otherwise, returns nullptr.
  examples:
  - title: Basic usage to check if aura is from a dynamic object
    code: "Aura* aura = player->GetAura(12345);\nif (DynObjAura* dynAura = aura->ToDynObjAura())\
      \ {\n    // The aura is associated with a dynamic object\n    // Perform operations\
      \ specific to dynamic object auras\n}"
    language: cpp
  - title: Using the result in conditional logic
    code: "const Aura* aura = unit->GetAura(67890);\nconst DynObjAura* dynAura = aura->ToDynObjAura();\n\
      if (dynAura != nullptr) {\n    // Access dynamic object specific properties\n\
      \    WorldObject* obj = dynAura->GetDynObj();\n    // Process the dynamic object\
      \ aura\n}"
    language: cpp
  notes: This method is part of the TrinityCore's aura system and relies on proper
    type identification. It should be used carefully in performance-critical code
    paths as it involves a type check operation. The returned pointer is const, meaning
    modifications to the underlying DynObjAura object are not allowed through this
    interface.
  warnings: Do not assume that all Aura objects can be cast to DynObjAura. Only use
    this method when you specifically need access to dynamic object-specific functionality.
    Using this method on non-dynamic object auras will return nullptr, which should
    be checked before dereferencing.
  related:
  - Aura::ToUnitAura
  - Aura::ToItemAura
  - Aura::GetDynObj
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T13:50:13.742699'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
