api:
  class: Item
  method: GetBuyPrice
  signature: uint32 Item::GetBuyPrice(const ItemTemplate * proto, uint32 quality,
    uint32 itemLevel, bool & standardPrice)
documentation:
  brief: Calculates and returns the buy price of an item based on its template, quality,
    and item level.
  description: The GetBuyPrice method determines the purchase price for an item by
    analyzing its ItemTemplate, quality, and item level parameters. This function
    is crucial for determining how much a vendor will charge for an item, particularly
    in the context of auction house mechanics or vendor pricing. The method returns
    a uint32 value representing the gold amount required to purchase the item, with
    standardPrice indicating whether the price is standard or adjusted based on specific
    game mechanics.
  parameters:
  - name: proto
    description: Pointer to the ItemTemplate structure that defines the item's properties
      and characteristics. This includes data such as item type, class, subclass,
      and other relevant attributes.
  - name: quality
    description: The quality level of the item (0-7), where 0 represents poor quality
      and 7 represents artifact quality. Higher quality items generally have higher
      buy prices.
  - name: itemLevel
    description: The item level of the item, which affects its value and determines
      how much it costs to purchase. This is typically used in conjunction with quality
      to calculate final price.
  - name: standardPrice
    description: Reference parameter indicating whether the calculated price is standard
      or adjusted. If true, the price represents a standard value; if false, it may
      be modified based on game mechanics like vendor markup or auction house fees.
  returns: Returns a uint32 representing the gold amount needed to purchase the item.
    The value can vary significantly depending on quality and item level, with higher
    values for items of higher quality and level.
  examples:
  - title: Basic usage example
    code: uint32 buyPrice = item->GetBuyPrice(itemTemplate, quality, itemLevel, standardPrice);
    language: cpp
  - title: Advanced usage example with vendor pricing
    code: "ItemTemplate* template = sObjectMgr->GetItemTemplate(12345);\nuint32 buyPrice\
      \ = item->GetBuyPrice(template, 4, 60, standardPrice);\nif (standardPrice)\n\
      {\n    // Standard price applies\n}\nelse\n{\n    // Adjusted price due to vendor\
      \ markup\n}"
    language: cpp
  notes: This method is typically used in conjunction with other pricing functions
    within TrinityCore. Performance considerations include the need to properly handle
    ItemTemplate pointers and ensure quality values are valid. Thread safety depends
    on proper synchronization of item data structures.
  warnings: The method may return zero if item level or quality parameters are invalid,
    which could lead to incorrect pricing calculations. Be cautious when using this
    function in scenarios involving multiple item levels or qualities.
  related:
  - GetSellPrice
  - GetItemTemplate
  - GetItemLevel
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T05:07:31.918109'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
