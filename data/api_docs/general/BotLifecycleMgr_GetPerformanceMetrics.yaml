api:
  class: BotLifecycleMgr
  method: GetPerformanceMetrics
  signature: const PerformanceMetrics & BotLifecycleMgr::GetPerformanceMetrics() const
documentation:
  brief: Retrieves the performance metrics of the bot lifecycle management system
  description: The GetPerformanceMetrics method returns a constant reference to the
    current performance metrics structure that tracks various statistics and measurements
    related to the bot lifecycle management system. These metrics typically include
    data such as creation rates, destruction rates, memory usage, processing times,
    and other operational indicators that help monitor the efficiency and health of
    the bot management subsystem. The returned metrics object is read-only and provides
    insights into how well the bot lifecycle manager is performing under current conditions.
  parameters: []
  returns: A constant reference to a PerformanceMetrics object containing detailed
    statistics about bot lifecycle operations including creation/destruction rates,
    processing times, memory usage, and other operational metrics.
  examples:
  - title: Basic Usage
    code: 'const PerformanceMetrics& metrics = botLifecycleMgr.GetPerformanceMetrics();

      std::cout << "Bot creations per second: " << metrics.creationsPerSecond << std::endl;'
    language: cpp
  - title: Monitoring System Performance
    code: "const PerformanceMetrics& metrics = botLifecycleMgr.GetPerformanceMetrics();\n\
      if (metrics.averageProcessingTime > 100.0) {\n    // Log performance warning\n\
      \    sLog->outString(\"Warning: High bot processing time detected (%.2f ms)\"\
      , metrics.averageProcessingTime);\n}"
    language: cpp
  notes: The returned PerformanceMetrics reference is valid only until the next call
    to GetPerformanceMetrics or until the BotLifecycleMgr instance is modified. This
    method is typically called frequently for monitoring purposes, so performance
    considerations should be taken into account when using it in tight loops.
  warnings: Do not modify the returned PerformanceMetrics object as it's a constant
    reference. Modifications would result in undefined behavior. The metrics are updated
    asynchronously and may not reflect real-time values immediately after changes
    to bot lifecycle operations.
  related:
  - SetPerformanceMetrics
  - ResetPerformanceMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:11:32.338412'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
