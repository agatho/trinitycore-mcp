api:
  class: Unit
  method: Mount
  signature: void Unit::Mount(uint32 mount, uint32 vehicleId, uint32 creatureEntry)
documentation:
  brief: Mounts the unit on the specified mount with optional vehicle ID and creature
    entry.
  description: The Mount method allows a Unit (such as a player or creature) to mount
    onto a specific mount using the provided parameters. It supports both regular
    mounts and vehicle mounts, where the vehicleId parameter can be used to specify
    a vehicle ID for mounting on a vehicle. The creatureEntry parameter allows specifying
    a particular creature entry for mounting purposes. This method is typically used
    in game mechanics to enable players or NPCs to ride mounts or vehicles, and can
    be triggered by various events such as spell effects or quest completion.
  parameters:
  - name: mount
    description: The mount ID to use for mounting. This should correspond to a valid
      mount entry in the database, typically from the creature or player's mount list.
  - name: vehicleId
    description: Optional vehicle ID that specifies which vehicle to mount on. If
      set to 0, no vehicle is used; otherwise, this should be a valid vehicle ID from
      the database.
  - name: creatureEntry
    description: Optional creature entry that specifies which creature to mount on.
      This parameter is typically used for creature-specific mounting behavior and
      must match a valid creature entry in the database.
  returns: null
  examples:
  - title: Basic Mount Usage Example
    code: 'Unit* unit = player;

      unit->Mount(12345, 0, 0);

      // Mounts player on mount ID 12345 without vehicle or creature entry'
    language: cpp
  - title: Advanced Mount with Vehicle Example
    code: 'Unit* unit = npc;

      unit->Mount(67890, 54321, 12345);

      // Mounts NPC on mount ID 67890 using vehicle ID 54321 and creature entry 12345'
    language: cpp
  notes: Implementation details include that this method likely triggers visual effects
    and updates the unit's movement state. Performance considerations involve checking
    if the mount ID is valid before attempting to mount, as invalid IDs may cause
    errors or unexpected behavior. Thread safety depends on whether the method is
    called from a single-threaded context or requires synchronization.
  warnings: The method may fail silently if the mount ID or vehicle ID is invalid,
    leading to no visual effect or movement updates. Be cautious when using creatureEntry
    parameter as it may not be supported in all contexts and could lead to unexpected
    behavior if used incorrectly.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:55:19.108354'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
