api:
  class: Unit
  method: RemoveAurasDueToSpellBySteal
  signature: void Unit::RemoveAurasDueToSpellBySteal(uint32 spellId, int casterGUID,
    int * stealer, int32 stolenCharges)
documentation:
  brief: Removes auras caused by a specific spell due to steal mechanism
  description: This method removes auras from a unit that were originally applied
    by a specified spell, but are now removed due to a steal mechanism. The removal
    occurs when the caster's GUID matches the original caster of the aura, and the
    aura is removed based on the steal process. This method is typically used in game
    mechanics involving aura stealing or dispelling where a spell's effect is removed
    from a target by another unit's ability to steal it.
  parameters:
  - name: spellId
    description: The identifier of the spell whose aura is being removed. This must
      be a valid spell ID in the game database.
  - name: casterGUID
    description: The GUID of the original caster who applied the aura. This is used
      to match against the actual caster of the aura to determine if it should be
      removed.
  - name: stealer
    description: Pointer to the GUID of the unit that is performing the steal action.
      If null, the removal is based on the original caster matching the specified
      casterGUID.
  - name: stolenCharges
    description: The number of charges that were stolen from the aura. This determines
      how many times the aura should be removed if it has multiple charges.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetUnit();

      uint32 spellId = 12345;

      int casterGUID = 67890;

      int stealer = 54321;

      int32 stolenCharges = 1;


      target->RemoveAurasDueToSpellBySteal(spellId, casterGUID, &stealer, stolenCharges);'
    language: cpp
  - title: Advanced usage example with multiple charges
    code: 'Unit* target = GetUnit();

      uint32 spellId = 12345;

      int casterGUID = 67890;

      int stealer = 54321;

      int32 stolenCharges = 3;


      target->RemoveAurasDueToSpellBySteal(spellId, casterGUID, &stealer, stolenCharges);'
    language: cpp
  notes: The method is typically used in scenarios where a unit steals an aura from
    another unit. The implementation involves checking if the original caster matches
    the specified caster GUID and then removing the aura accordingly. This method
    may be used for both single and multiple charges depending on how many times the
    aura should be removed.
  warnings: This method should only be called when the spell ID is valid and the unit
    has auras that match the specified conditions. Improper usage can lead to unexpected
    behavior or removal of incorrect auras.
  related:
  - RemoveAurasDueToSpell
  - RemoveAura
  - RemoveAuraFromCaster
  - RemoveAuraBySteal
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:40:32.096492'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
