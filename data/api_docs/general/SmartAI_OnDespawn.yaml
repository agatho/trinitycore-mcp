api:
  class: SmartAI
  method: OnDespawn
  signature: void SmartAI::OnDespawn()
documentation:
  brief: Handles cleanup and finalization tasks when a SmartAI-controlled creature
    despawns from the world.
  description: The OnDespawn method is invoked when a creature using SmartAI is removed
    from the game world, typically during destruction, despawn, or zone unload. This
    method allows developers to perform necessary cleanup operations such as releasing
    resources, resetting flags, or triggering related events. It serves as a lifecycle
    callback that ensures proper handling of AI state transitions and prevents memory
    leaks or dangling references. The method does not accept any parameters and is
    automatically called by the TrinityCore framework during creature despawn events.
  parameters: []
  returns: null
  examples:
  - title: Basic Override Implementation
    code: "void CustomCreatureAI::OnDespawn()\n{\n    // Perform cleanup tasks\n \
      \   if (m_mySpecialTimer)\n        m_mySpecialTimer->Cancel();\n    \n    //\
      \ Reset any custom flags\n    m_isActive = false;\n    \n    // Call base implementation\
      \ if needed\n    SmartAI::OnDespawn();\n}"
    language: cpp
  notes: This method is called during the creature's destruction process, so it's
    important not to perform operations that might access invalid memory or reference
    other objects that may have already been destroyed. The method should be lightweight
    and avoid complex logic to prevent performance issues.
  warnings: Avoid performing heavy computations or accessing external systems within
    this method as it may be called during critical shutdown phases. Be cautious about
    calling virtual methods from within OnDespawn, as object state might be partially
    destroyed.
  related:
  - OnSpawn
  - OnUpdate
  - OnEnterCombat
  - OnLeaveCombat
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T21:37:30.930481'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
