api:
  class: DB2Manager
  method: GetAzeritePowers
  signature: const int * DB2Manager::GetAzeritePowers(uint32 itemId) const
documentation:
  brief: Retrieves the Azerite powers associated with a specified item ID.
  description: The GetAzeritePowers method fetches an array of Azerite power identifiers
    linked to a given item. This functionality is essential for determining which
    Azerite traits and abilities are available on a specific item in the game. The
    returned pointer points to an array of integers representing the Azerite power
    IDs, and the caller must not attempt to free or modify this memory. The method
    relies on internal DB2 data structures that store Azerite-related information
    for items.
  parameters: []
  returns: A constant pointer to an array of integers representing Azerite power identifiers.
    Returns nullptr if no Azerite powers are found for the item, or if the item ID
    is invalid.
  examples:
  - title: Retrieve Azerite Powers for an Item
    code: "const int* azeritePowers = sDB2Manager->GetAzeritePowers(12345);\nif (azeritePowers\
      \ != nullptr)\n{\n    for (int i = 0; i < 5; ++i) // Assuming max 5 powers\n\
      \    {\n        if (azeritePowers[i] == 0) break;\n        printf(\"Azerite\
      \ Power ID: %d\\n\", azeritePowers[i]);\n    }\n}"
    language: cpp
  notes: This method accesses internal DB2 storage, so performance may be impacted
    if called frequently in tight loops. The returned array is managed internally
    and should not be modified or freed by the caller.
  warnings: Ensure that the item ID passed to this function corresponds to a valid
    Azerite-equipped item; otherwise, the result will be nullptr. Do not assume a
    fixed size for the returned array; always check for zero values or use a known
    maximum limit when iterating.
  related:
  - GetAzeriteEssence
  - GetItemAzeritePower
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:20:05.302133'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
