api:
  class: GameObject
  method: GetDebugInfo
  signature: std::string GameObject::GetDebugInfo() const
documentation:
  brief: Returns debug information about the GameObject, including its GUID, entry
    ID, and current state.
  description: The GetDebugInfo method provides detailed debugging information about
    a GameObject instance, including its unique identifier (GUID), entry ID, and current
    state. This method is primarily used for debugging purposes during development
    and testing phases to help developers understand the object's properties and behavior
    in the game world. The returned string contains formatted information that can
    be useful for tracking GameObjects across different zones or instances.
  parameters: []
  returns: Returns a formatted string containing debug information about the GameObject,
    including GUID, entry ID, and current state. The string format typically includes
    the object's type, GUID, entry ID, and various state information.
  examples:
  - title: Basic Debug Information Retrieval
    code: 'GameObject* go = new GameObject();

      std::string debugInfo = go->GetDebugInfo();

      // Output: "GameObject GUID: 12345, Entry: 67890, State: 1"'
    language: cpp
  notes: This method is intended for debugging purposes only and should not be used
    in production code. The returned string format may vary depending on the game
    version and implementation details. Performance impact is minimal as it's a simple
    string formatting operation.
  warnings: The debug information returned by this method should not be used for gameplay
    logic or decision-making. It's purely for debugging purposes and may change between
    different TrinityCore versions.
  related:
  - GameObject::GetGUID
  - GameObject::GetEntry
  - GameObject::GetState
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:30:23.532162'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
