api:
  class: WorldObject
  method: ModSpellDuration
  signature: int32 WorldObject::ModSpellDuration(const SpellInfo * spellInfo, const
    WorldObject * target, int32 duration, bool positive, uint32 effectMask) const
documentation:
  brief: Modifies spell duration for a target object
  description: This method adjusts the duration of a spell based on the target object's
    properties and the specified effect mask. It is commonly used in spell mechanics
    to modify how long effects last, particularly when dealing with aura modifications
    or spell duration changes. The method operates on the principle that spell durations
    can be modified by various factors including buffs, debuffs, and other game mechanics.
    This function typically affects the duration of a spell's effect rather than the
    entire spell itself, making it useful for implementing complex spell interactions.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure that defines the spell being modified.
      This contains information about the spell such as its ID, duration, and effects.
  - name: target
    description: Pointer to the WorldObject that is the target of the spell. This
      object determines how the duration modification is applied based on its properties.
  - name: duration
    description: The base duration value to be modified. This represents the original
      duration before any modifications are applied.
  - name: positive
    description: Boolean flag indicating whether the spell effect is positive or negative.
      This affects how the modification is applied, with positive effects typically
      increasing duration and negative effects decreasing it.
  - name: effectMask
    description: Bitmask representing which effects of the spell are being modified.
      This allows for selective modification of specific effects within a spell rather
      than modifying all effects at once.
  returns: Returns an integer value representing the modified duration after applying
    the adjustments. The returned value may be positive or negative depending on whether
    the duration was increased or decreased by the operation.
  examples:
  - title: Basic usage example
    code: int32 duration = obj->ModSpellDuration(spellInfo, target, baseDuration,
      true, effectMask);
    language: cpp
  - title: Advanced usage example with multiple effects
    code: int32 duration = obj->ModSpellDuration(spellInfo, target, baseDuration,
      false, 0x1F);
    language: cpp
  notes: The method is typically used in conjunction with spell effect handlers and
    can be called during spell application or modification phases. Performance considerations
    include the use of bitmask operations and potential for multiple calls per tick.
  warnings: This method should not be used directly without proper understanding of
    spell mechanics and effects. Incorrect usage may lead to unexpected behavior in
    spell duration calculations and could affect gameplay balance.
  related:
  - ModSpellDuration
  - SpellInfo::GetDuration
  - WorldObject::GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:41:45.550209'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
