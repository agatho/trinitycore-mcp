api:
  class: Aura
  method: HandleAuraSpecificMods
  signature: void Aura::HandleAuraSpecificMods(const AuraApplication * aurApp, Unit
    * caster, bool apply, bool onReapply)
documentation:
  brief: Applies or removes specific mods associated with an aura application to a
    unit.
  description: The HandleAuraSpecificMods method is responsible for applying or removing
    specific modifications (mods) that are tied to a particular aura application.
    It is typically invoked during the application or removal of an aura on a unit,
    and it ensures that any special effects or stat modifications defined by the aura
    are properly handled. This method interacts with the aura's application context
    and the caster unit to determine how mods should be applied or reverted. The behavior
    depends on whether the aura is being applied or removed, as well as if it's a
    reapplication. It plays a critical role in maintaining the integrity of aura effects
    within the TrinityCore framework.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the specific
      application of an aura on a unit. This parameter defines which aura and target
      are affected.
  - name: caster
    description: Pointer to the Unit object that cast the aura. This is used to determine
      the source of the aura for any calculations or effects that depend on the caster's
      state.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura mods. This determines the direction of the operation.
  - name: onReapply
    description: Boolean flag indicating whether this is a reapplication of an existing
      aura. Used internally to handle special logic for reapplying auras, such as
      refreshing durations or resetting certain states.
  returns: null
  examples:
  - title: Applying Aura Mods
    code: 'Aura* aura = ...;

      AuraApplication* app = aura->GetApplicationOfTarget(target);

      HandleAuraSpecificMods(app, caster, true, false);'
    language: cpp
  - title: Reapplying Aura Mods with Reset
    code: 'Aura* aura = ...;

      AuraApplication* app = aura->GetApplicationOfTarget(target);

      HandleAuraSpecificMods(app, caster, true, true); // Reapply with reset logic'
    language: cpp
  notes: This method is part of the internal aura handling system and is usually called
    by the core aura application/removal logic. It should not be invoked directly
    unless implementing custom aura behavior. The method may perform calculations
    or adjustments based on the caster's state, so ensure that the caster object remains
    valid during execution.
  warnings: Improper use of this method can lead to incorrect stat modifications or
    visual effects. Ensure that all parameters are valid and consistent with the aura's
    intended behavior. Avoid calling this method outside of the proper aura application
    lifecycle to prevent unintended side effects.
  related:
  - Aura::ApplyAura
  - Aura::RemoveAura
  - AuraApplication::GetAura
  - Unit::AddAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:55:40.140760'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
