api:
  class: LineOfSightManager
  method: GetAoETargetsInLoS
  signature: int LineOfSightManager::GetAoETargetsInLoS(const int & centerPos, float
    radius)
documentation:
  brief: Calculates and returns the number of targets within line-of-sight in an area
    of effect around a given position.
  description: The GetAoETargetsInLoS method determines how many valid targets are
    located within a specified radius from a central point, ensuring that each target
    is within the line-of-sight of the caster. This method is typically used for area-of-effect
    spells or abilities where only targets that can be directly seen by the caster
    should be affected. The method performs raycasting checks to verify visibility
    and returns a count of such valid targets. It does not modify any game state,
    but rather evaluates existing conditions to determine target eligibility based
    on line-of-sight constraints.
  parameters:
  - name: centerPos
    description: The central position from which the area-of-effect is calculated.
      This parameter represents a point in 3D space defined by a coordinate structure
      or similar identifier, typically used as the origin for checking targets within
      range.
  - name: radius
    description: The radius of the area-of-effect around the center position. All
      targets within this distance will be evaluated for line-of-sight visibility.
  returns: An integer representing the number of valid targets found within the specified
    radius and line-of-sight from the center position. Returns zero if no valid targets
    are found.
  examples:
  - title: Basic usage to find AoE targets in LoS
    code: "Position center;\ncenter.x = 100.0f;\ncenter.y = 200.0f;\ncenter.z = 50.0f;\n\
      int numTargets = lineOfSightManager.GetAoETargetsInLoS(center, 30.0f);\nif (numTargets\
      \ > 0)\n{\n    // Process targets\n}"
    language: cpp
  - title: Using result to apply spell effect
    code: "Position center;\ncenter.x = 150.0f;\ncenter.y = 250.0f;\ncenter.z = 75.0f;\n\
      int numTargets = lineOfSightManager.GetAoETargetsInLoS(center, 40.0f);\nif (numTargets\
      \ > 0)\n{\n    // Apply damage or effect to all found targets\n    for (int\
      \ i = 0; i < numTargets; ++i)\n    {\n        // Apply spell effect to target[i]\n\
      \    }\n}"
    language: cpp
  notes: This method is computationally intensive due to the raycasting involved in
    checking line-of-sight for each potential target. It should be used judiciously
    in performance-critical code paths. The method assumes that the center position
    and radius are valid and within reasonable bounds.
  warnings: Ensure that the provided center position and radius values are valid before
    calling this method to avoid unexpected behavior or crashes. This function does
    not account for terrain height differences beyond basic visibility checks, so
    it may return inaccurate results in complex environments with many obstacles.
  related:
  - GetLineOfSight
  - IsInLoS
  - GetTargetsInRadius
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:14:08.889473'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
