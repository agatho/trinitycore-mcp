api:
  class: UnitScript
  method: ModifyPeriodicDamageAurasTick
  signature: void UnitScript::ModifyPeriodicDamageAurasTick(Unit * target, Unit *
    attacker, uint32 & damage)
documentation:
  brief: Modifies the damage value of periodic damage auras applied to a target by
    an attacker.
  description: The ModifyPeriodicDamageAurasTick method is invoked during the execution
    of periodic damage auras, allowing scripts to adjust the damage amount that will
    be applied to a target. This method provides a hook for custom logic to modify
    aura tick damage, such as applying resistances, buffs, or debuffs. It is called
    for each tick of a periodic damage aura and allows modification of the damage
    value in-place. The method operates on the Unit class and is part of the UnitScript
    system used for extending core game behavior through scripting.
  parameters:
  - name: target
    description: The Unit object that is receiving the periodic damage aura tick.
  - name: attacker
    description: The Unit object that is the source of the periodic damage aura.
  - name: damage
    description: A reference to the uint32 damage value that will be applied during
      this tick. This value can be modified by the script to change the final damage
      dealt.
  returns: null
  examples:
  - title: Basic Damage Reduction Example
    code: "void MyUnitScript::ModifyPeriodicDamageAurasTick(Unit* target, Unit* attacker,\
      \ uint32& damage)\n{\n    // Reduce damage by 25% if the target is a player\n\
      \    if (target->IsPlayer())\n        damage = damage * 0.75f;\n}"
    language: cpp
  - title: Conditional Damage Modification Based on Aura Type
    code: "void MyUnitScript::ModifyPeriodicDamageAurasTick(Unit* target, Unit* attacker,\
      \ uint32& damage)\n{\n    // If the attacker has a specific buff, increase damage\
      \ by 10%\n    if (attacker->HasAura(12345))\n        damage = damage * 1.1f;\n\
      \    \n    // If target is under a debuff, reduce damage by 15%\n    if (target->HasAura(67890))\n\
      \        damage = damage * 0.85f;\n}"
    language: cpp
  notes: This method is called during the aura tick processing, so modifying the damage
    value affects only that specific tick. The modification happens before any resistance
    calculations or mitigation effects are applied. This hook should be used carefully
    to avoid performance bottlenecks or unexpected behavior in combat systems.
  warnings: Modifying the damage value directly can lead to inconsistencies in combat
    logs and UI displays if not handled properly. Be cautious when applying percentage-based
    modifications as they may cause rounding errors over multiple ticks. Avoid modifying
    values that could result in negative damage or overflow conditions.
  related:
  - OnAuraTick
  - ModifySpellDamage
  - ModifyHealAmount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:03:46.045587'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
