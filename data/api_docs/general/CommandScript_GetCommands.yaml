api:
  class: CommandScript
  method: GetCommands
  signature: int CommandScript::GetCommands() const
documentation:
  brief: Retrieves the total count of registered commands within the CommandScript
    instance
  description: The GetCommands method returns an integer value representing the number
    of commands currently registered in the CommandScript. This method is typically
    used by the TrinityCore server to enumerate all available commands for administrative
    purposes, such as displaying command lists to players or validating command availability.
    The method does not modify any internal state and is read-only in nature. It serves
    as a utility function for command management systems within the game's scripting
    framework.
  parameters: []
  returns: An integer value representing the total number of commands registered in
    this CommandScript instance. Returns zero if no commands are registered.
  examples:
  - title: Basic usage to check command count
    code: 'CommandScript* script = sCommandMgr->GetCommandScript("admin");

      int commandCount = script->GetCommands();

      TC_LOG_INFO(LOG_FILTER_SERVER, "Registered commands: %d", commandCount);'
    language: cpp
  notes: This method is part of the TrinityCore's command system architecture and
    is expected to be called during server initialization or runtime command enumeration.
    The returned count may vary depending on the specific CommandScript implementation
    and loaded modules.
  warnings: null
  related:
  - GetCommandTable
  - HasCommand
  - ExecuteCommand
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:04:07.108477'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
