api:
  class: AuraEffect
  method: HandleAuraCloneCaster
  signature: void AuraEffect::HandleAuraCloneCaster(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes an aura effect that clones the caster's properties onto
    the target.
  description: The HandleAuraCloneCaster method is responsible for managing the application
    and removal of auras that clone the caster's attributes or abilities onto the
    affected target. This method is typically invoked during aura application or removal
    events, where it processes the specific behavior associated with cloning the caster's
    state. It interacts with the AuraApplication object to determine the context of
    the aura effect and applies appropriate modifications based on whether the aura
    is being applied or removed. The method operates within the TrinityCore framework's
    aura system and is used for effects such as mirror images, illusions, or other
    clone-based mechanics.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura application
      context. This parameter provides information about the aura's state, target,
      and application mode.
  - name: mode
    description: The mode of operation for the aura effect. Typically indicates whether
      the aura is being applied (1) or removed (0).
  - name: apply
    description: Boolean flag indicating if the aura should be applied (true) or removed
      (false). This parameter determines the direction of the effect handling.
  returns: null
  examples:
  - title: Basic Usage in Aura Application
    code: "void MyAuraEffect::HandleAuraCloneCaster(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const {\n    if (apply) {\n        // Apply clone\
      \ effect\n        Unit* target = aurApp->GetTarget();\n        Unit* caster\
      \ = aurApp->GetCaster();\n        // Clone properties from caster to target\n\
      \    } else {\n        // Remove clone effect\n    }\n}"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    directly called by external code. It relies on proper initialization of the AuraApplication
    context and assumes valid pointers to both caster and target units.
  warnings: Incorrect usage of this method can lead to undefined behavior or crashes
    if the provided AuraApplication object is invalid or improperly initialized. Always
    verify that aurApp, caster, and target are valid before applying logic.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - AuraApplication::GetTarget
  - AuraApplication::GetCaster
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:35:49.810561'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
