api:
  class: Player
  method: HasTalent
  signature: bool Player::HasTalent(uint32 spell_id, uint8 spec) const
documentation:
  brief: Checks if a player has a specific talent in a given spec.
  description: The HasTalent method determines whether a player possesses a particular
    talent spell within a specified talent specialization. This function is commonly
    used in gameplay logic to verify talent requirements, validate character progression,
    or implement class-specific abilities. The method accepts a spell ID and a spec
    number as parameters, returning true if the talent exists in that spec, false
    otherwise. It's important to note that this method only checks for the presence
    of a specific talent, not its level or activation status.
  parameters:
  - name: spell_id
    description: The unique identifier of the talent spell being checked. This corresponds
      to the spell ID in the game database.
  - name: spec
    description: The talent specialization number (0-2) to check against. Spec 0 represents
      the first spec, Spec 1 represents the second spec, and Spec 2 represents the
      third spec.
  returns: Returns true if the player has the specified talent in the given spec,
    false otherwise.
  examples:
  - title: Basic Talent Check
    code: "if (player->HasTalent(12345, 0)) {\n    // Do something\n}\nelse {\n  \
      \  // Do something else\n}"
    language: cpp
  - title: Advanced Talent Check with Multiple Specs
    code: "uint8 spec = player->GetTalentSpec();\nif (player->HasTalent(12345, spec))\
      \ {\n    // Player has this talent in their current spec\n}"
    language: cpp
  notes: This method is typically used for validating talent requirements in class-specific
    abilities or checking if a player has acquired certain talents. It does not account
    for talent points or level of the talent itself, only its existence.
  warnings: This method should be used carefully when checking for specific talent
    spells, as incorrect spell IDs can lead to false negatives or positives. Also
    note that this method may not work correctly if the player's spec has not been
    properly initialized.
  related:
  - GetTalentSpec
  - HasSpell
  - HasTalentPoints
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T15:59:34.570820'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
