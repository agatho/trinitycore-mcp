api:
  class: InventoryManager
  method: GetBagCapacity
  signature: uint32 InventoryManager::GetBagCapacity() const
documentation:
  brief: Returns the maximum number of slots available in the player's inventory bags
  description: The GetBagCapacity method retrieves the total capacity of all currently
    equipped bags in the player's inventory. This value represents the sum of all
    bag slot capacities and does not include the main backpack slots. The method is
    commonly used to determine how many items can be stored in the player's bag inventory
    before reaching capacity limits. It accounts for any bag upgrades or enhancements
    that may have been applied through enchantments, glyphs, or other game mechanics.
    This information is crucial for inventory management systems and UI elements that
    display bag space usage.
  parameters: []
  returns: A uint32 value representing the total number of slots available across
    all equipped bags in the player's inventory. This includes all bag types (satchels,
    backpacks, etc.) but excludes the main backpack's main inventory slots.
  examples:
  - title: Basic Usage to Check Bag Capacity
    code: "uint32 capacity = player->GetBagCapacity();\nif (capacity > 0)\n{\n   \
      \ // Player has bags with capacity\n    printf(\"Total bag capacity: %u\\n\"\
      , capacity);\n}"
    language: cpp
  - title: Using Bag Capacity in Inventory Management
    code: "uint32 totalCapacity = player->GetBagCapacity();\nuint32 usedSlots = player->GetUsedBagSlots();\n\
      uint32 freeSlots = totalCapacity - usedSlots;\n\nif (freeSlots < 5)\n{\n   \
      \ // Notify player about low bag space\n    player->SendNotification(\"Warning:\
      \ Low bag space remaining!\");\n}"
    language: cpp
  notes: This method only considers equipped bags and does not include the main backpack's
    inventory slots. The returned value may change dynamically if the player equips
    or unequips bags during gameplay. The implementation caches the result for performance
    reasons, so multiple calls within a short time frame will return the same value
    until inventory state changes.
  warnings: This method should not be used to determine if an item can be added to
    the inventory without checking specific bag slot availability. The returned capacity
    may not reflect temporary bag upgrades or items that provide additional bag space
    through effects or enchantments.
  related:
  - GetUsedBagSlots
  - GetBagSlotCount
  - CanStoreItem
  - AddItem
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:17:22.089708'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
