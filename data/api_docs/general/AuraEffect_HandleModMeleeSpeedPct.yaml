api:
  class: AuraEffect
  method: HandleModMeleeSpeedPct
  signature: void AuraEffect::HandleModMeleeSpeedPct(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the melee attack speed percentage of a unit affected by an aura.
  description: The HandleModMeleeSpeedPct method is responsible for adjusting the
    melee attack speed of a unit when a specific aura effect is applied or removed.
    This method is typically invoked during aura application or removal events to
    modify the target's melee speed, which affects how frequently the unit can perform
    melee attacks. The adjustment is expressed as a percentage change from the base
    melee speed. This functionality is commonly used in spells and abilities that
    either increase or decrease attack speed, such as haste effects or slow effects.
    The method operates on the aura application context and applies changes based
    on whether the aura is being applied or removed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state, target,
      and other contextual data needed for applying the speed modification.
  - name: mode
    description: The mode of operation indicating how the aura effect should be handled.
      This parameter typically determines whether to apply or remove the effect, and
      may influence how the percentage modifier is interpreted or applied.
  - name: apply
    description: Boolean flag indicating whether the aura effect is being applied
      (true) or removed (false). When true, the speed modifier is added; when false,
      it's removed from the unit's current melee speed.
  returns: null
  examples:
  - title: Applying a Melee Speed Modifier
    code: "void ApplyHasteAura(Unit* target) {\n    AuraApplication* auraApp = new\
      \ AuraApplication(target, target, SpellInfo::GetSpellInfo(12345));\n    AuraEffect*\
      \ effect = new AuraEffect(SPELL_AURA_MOD_MELEE_SPEED_PCT);\n    effect->HandleModMeleeSpeedPct(auraApp,\
      \ 0, true);\n}"
    language: cpp
  - title: Removing a Melee Speed Modifier
    code: "void RemoveHasteAura(Unit* target) {\n    AuraApplication* auraApp = new\
      \ AuraApplication(target, target, SpellInfo::GetSpellInfo(12345));\n    AuraEffect*\
      \ effect = new AuraEffect(SPELL_AURA_MOD_MELEE_SPEED_PCT);\n    effect->HandleModMeleeSpeedPct(auraApp,\
      \ 0, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and integrates
    with the core combat mechanics. It modifies the unit's attack speed directly by
    adjusting the base attack time, which impacts both auto-attacks and any other
    melee-based abilities that depend on attack speed. The percentage modifier is
    typically calculated based on the aura's spell effect value.
  warnings: Improper handling of the apply flag can lead to incorrect attack speed
    modifications, potentially causing gameplay imbalance or client-server synchronization
    issues. Ensure that the aura application context is valid before calling this
    method.
  related:
  - AuraEffect::HandleModMeleeSpeedPct
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:32:56.953203'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
