api:
  class: Aura
  method: GetMaxDuration
  signature: int32 Aura::GetMaxDuration() const
documentation:
  brief: Retrieves the maximum duration of the aura in milliseconds.
  description: The GetMaxDuration method returns the maximum duration that an aura
    can remain active, measured in milliseconds. This value represents the base duration
    set when the aura was applied and is unaffected by time modifications or haste
    effects. The returned value indicates how long the aura will persist before automatically
    expiring if not refreshed or removed earlier. In World of Warcraft's TrinityCore
    implementation, this method provides access to the raw maximum duration without
    any modifiers, making it useful for calculating remaining time or determining
    if an aura is about to expire.
  parameters: []
  returns: An int32 value representing the maximum duration of the aura in milliseconds.
    A value of 0 typically indicates that the aura has no time limit or is permanent.
  examples:
  - title: Check if aura is about to expire
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    int32 maxDuration\
      \ = aura->GetMaxDuration();\n    int32 remainingTime = aura->GetDuration();\n\
      \    if (remainingTime < maxDuration / 4) // Less than 25% remaining\n    {\n\
      \        // Handle aura expiration warning\n    }\n}"
    language: cpp
  - title: Calculate time-based effects
    code: "Aura* aura = unit->GetAura(67890);\nif (aura)\n{\n    int32 maxDuration\
      \ = aura->GetMaxDuration();\n    float durationMultiplier = 1.5f; // Example\
      \ haste effect\n    int32 adjustedDuration = static_cast<int32>(maxDuration\
      \ * durationMultiplier);\n    // Use adjustedDuration for calculations\n}"
    language: cpp
  notes: This method returns the base maximum duration and does not account for any
    time modifications or haste effects that might affect the actual remaining time.
    The value returned is typically set when the aura is initially applied and remains
    constant unless modified by specific game mechanics or spells.
  warnings: Be aware that this method returns the maximum possible duration, not the
    current remaining time. For checking how much time is left before expiration,
    use GetDuration() instead. Also note that some auras may have special behavior
    when their duration reaches zero, which might trigger additional effects or events.
  related:
  - GetDuration
  - GetAuraDuration
  - SetMaxDuration
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:17:57.180833'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
