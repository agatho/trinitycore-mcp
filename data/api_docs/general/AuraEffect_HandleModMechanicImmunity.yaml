api:
  class: AuraEffect
  method: HandleModMechanicImmunity
  signature: void AuraEffect::HandleModMechanicImmunity(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies immunity to specified mechanics for a target based on aura application
    and mode.
  description: The HandleModMechanicImmunity method is responsible for applying or
    removing immunity to specific game mechanics (such as root, silence, or fear)
    for a target affected by an aura. It operates based on the provided AuraApplication
    context, the mode of operation (apply or remove), and the type of mechanic being
    modified. This method is typically invoked during aura application or removal
    events to adjust the target's resistance to certain debuffs or effects. The method
    directly manipulates the target's mechanic immunity state, which affects how the
    game engine processes incoming effects that would normally apply those mechanics.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the specific aura instance
      and its target.
  - name: mode
    description: 'Specifies the operation mode: 0 for applying immunity, 1 for removing
      immunity. Controls whether the mechanic immunity is enabled or disabled.'
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the mechanic immunity effect. This parameter controls the actual behavior of
      the method.
  returns: null
  examples:
  - title: Applying Mechanic Immunity
    code: 'AuraEffect* auraEffect = ...;

      const AuraApplication* app = ...;

      auraEffect->HandleModMechanicImmunity(app, 0, true); // Apply immunity'
    language: cpp
  - title: Removing Mechanic Immunity
    code: 'AuraEffect* auraEffect = ...;

      const AuraApplication* app = ...;

      auraEffect->HandleModMechanicImmunity(app, 1, false); // Remove immunity'
    language: cpp
  notes: This method is part of the core aura handling system in TrinityCore and directly
    interacts with the target's mechanic immunity state. The mode parameter controls
    whether to enable or disable the immunity, while the apply flag determines if
    the change should be applied or reverted. This method is typically called internally
    by the aura application system.
  warnings: Improper usage of this method can lead to incorrect mechanic immunity
    states for players or creatures. Ensure that the AuraApplication pointer is valid
    and that the mode parameter is correctly set to avoid unintended behavior in combat
    mechanics.
  related:
  - AuraEffect::HandleMechanicImmunity
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:34:31.984176'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
