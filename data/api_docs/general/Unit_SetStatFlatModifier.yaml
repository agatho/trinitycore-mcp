api:
  class: Unit
  method: SetStatFlatModifier
  signature: void Unit::SetStatFlatModifier(UnitMods unitMod, UnitModifierFlatType
    modifierType, float val)
documentation:
  brief: Sets a flat modifier value for a specified unit mod.
  description: This method allows setting a flat modifier value for a specific unit
    modifier type, such as strength, agility, or stamina. It is used to modify the
    base stat values of a unit, typically in the context of applying buffs or debuffs.
    The method operates on unit mods that represent different stat types and modifier
    types, enabling precise control over stat modifications. This functionality is
    essential for implementing game mechanics involving stat changes, such as temporary
    buff effects or character attribute adjustments.
  parameters:
  - name: unitMod
    description: The unit mod type being modified, representing different stat categories
      like strength, agility, stamina, etc.
  - name: modifierType
    description: The flat modifier type being applied, indicating whether the modification
      is positive or negative (e.g., bonus or penalty).
  - name: val
    description: The flat value to be set for the modifier, which can be positive
      or negative depending on the modifier type.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* unit = new Unit();

      unit->SetStatFlatModifier(UnitMods::UNIT_MOD_STAT_STRENGTH, UnitModifierFlatType::MODIFIER_FLAT_POSITIVE,
      5.0f);'
    language: cpp
  - title: Advanced Usage Example
    code: 'Unit* unit = new Unit();

      unit->SetStatFlatModifier(UnitMods::UNIT_MOD_STAT_AGILITY, UnitModifierFlatType::MODIFIER_FLAT_NEGATIVE,
      -10.0f);

      // This would apply a negative modifier to agility, reducing it by 10 points'
    language: cpp
  notes: This method should be used carefully as it directly affects the unit's stat
    calculations and may impact gameplay balance if not handled properly. It is typically
    used in conjunction with other stat-related methods for comprehensive stat management.
  warnings: Improper use of this method can lead to incorrect stat calculations, potentially
    affecting character balance or game mechanics. Ensure that modifier values are
    correctly applied based on the intended effect.
  related:
  - GetStatFlatModifier
  - SetStatPercentModifier
  - GetStatPercentModifier
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T00:47:07.708398'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
