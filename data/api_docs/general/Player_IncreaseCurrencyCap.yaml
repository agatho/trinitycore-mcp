api:
  class: Player
  method: IncreaseCurrencyCap
  signature: void Player::IncreaseCurrencyCap(uint32 id, uint32 amount)
documentation:
  brief: Increases the currency cap for a specified currency ID by the given amount.
  description: This method allows players to increase their currency cap for a specific
    currency type, enabling them to accumulate more currency than the default maximum.
    It is commonly used in custom scripts or game mechanics where players need to
    be granted additional currency beyond normal gameplay limits. The method modifies
    the player's currency data directly without requiring any external triggers or
    events. This function typically affects the player's currency cap values rather
    than their current currency amount, which means it can be used to increase the
    maximum allowed value for a currency type.
  parameters:
  - name: id
    description: The currency ID that represents the specific currency type to modify.
      This is typically a unique identifier used in the game's currency system.
  - name: amount
    description: The amount by which to increase the currency cap. This value determines
      how much the maximum allowed currency amount will be increased for the specified
      currency ID.
  returns: null
  examples:
  - title: Basic Currency Increase Example
    code: 'Player* player = GetPlayer();

      player->IncreaseCurrencyCap(390, 1000);

      // Increases currency cap for currency ID 390 by 1000 units'
    language: cpp
  notes: This method directly modifies the player's currency data and may affect the
    player's current currency cap values. It should be used carefully as it can potentially
    alter game balance or cause unexpected behavior if not properly handled. The method
    is typically used in custom scripts or event-driven code where players need to
    be granted additional currency beyond normal gameplay limits.
  warnings: This method should only be used when the player's currency cap needs to
    be increased, not when the player's current currency amount needs to be modified.
    Using this method incorrectly can lead to game balance issues or unexpected behavior
    in the currency system.
  related:
  - Player::GetCurrency
  - Player::AddCurrency
  - Player::SetCurrency
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:43:38.738727'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
