api:
  class: VMapManager2
  method: getDirFileName
  signature: std::string VMapManager2::getDirFileName(unsigned int mapId, int param1,
    int param2) const
documentation:
  brief: Generates a directory file name for the specified map ID and parameters used
    in VMap (Virtual Map) system.
  description: The getDirFileName method constructs a standardized directory path
    name used by TrinityCore's VMap (Virtual Map) system to locate and manage map
    data files. This method is typically invoked when building paths for loading or
    referencing map geometry data, such as height maps, area triggers, or other spatial
    data structures. The generated file name incorporates the map ID along with optional
    parameters that may affect the specific directory structure or file naming convention
    within the VMap system. The method ensures consistent and predictable path generation
    for map-related resources in the game's virtual environment.
  parameters:
  - name: mapId
    description: The unique identifier of the map for which to generate the directory
      file name. This corresponds to the Map.dbc entry ID used throughout TrinityCore's
      map management system.
  - name: param1
    description: An optional parameter that may modify the directory structure or
      naming convention. The exact meaning and usage depends on internal VMap implementation
      details, but typically represents additional context such as instance ID or
      tile coordinates.
  - name: param2
    description: Another optional parameter that further customizes the directory
      path generation. Often used in conjunction with param1 to represent secondary
      identifiers like sub-tile coordinates or versioning information.
  returns: A std::string containing the constructed directory file name for the specified
    map and parameters. The returned string follows the VMap system's naming conventions
    and can be directly used to construct full file paths for map data files.
  examples:
  - title: Basic usage to generate a VMap directory path
    code: 'VMapManager2 vmapManager;

      uint32 mapId = 0; // Eastern Kingdoms

      int param1 = 0;

      int param2 = 0;

      std::string dirName = vmapManager.getDirFileName(mapId, param1, param2);

      // Result might be something like "vmaps/000/"

      '
    language: cpp
  - title: Using with instance-specific parameters for dynamic map paths
    code: 'VMapManager2 vmapManager;

      uint32 mapId = 530; // Outland

      int instanceId = 1234;

      int tileX = 10;

      int tileY = 15;

      std::string dirName = vmapManager.getDirFileName(mapId, instanceId, (tileX <<
      16) | tileY);

      // Generates a path specific to an instance and tile coordinates

      '
    language: cpp
  notes: This method is part of TrinityCore's VMap system which handles dynamic collision
    detection and line-of-sight calculations for the game world. The generated paths
    are used internally by the VMapManager2 class to locate and load map geometry
    data files. The method does not perform any file I/O operations itself, but rather
    constructs the appropriate path string for subsequent use in file access operations.
  warnings: The parameters param1 and param2 should be carefully chosen based on the
    intended usage context. Incorrect parameter values may result in invalid paths
    that cannot be resolved to actual map data files, potentially causing loading
    failures or missing collision detection for areas of the game world.
  related:
  - VMapManager2::loadMap
  - VMapManager2::getMapData
  - VMapManager2::existsMap
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:57:54.938246'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
