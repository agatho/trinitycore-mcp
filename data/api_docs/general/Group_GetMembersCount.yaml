api:
  class: Group
  method: GetMembersCount
  signature: int Group::GetMembersCount() const
documentation:
  brief: Returns the total number of members currently in the group
  description: The GetMembersCount method retrieves the current count of players or
    creatures that are members of the group. This includes all online players and
    any summoned creatures that belong to the group, such as pets or guardians. The
    value returned is an integer representing the total membership count, which can
    be used for various game logic decisions like determining if a group has reached
    maximum capacity, checking if a group is full, or calculating loot distribution.
    This method does not distinguish between different types of group members (player
    vs. creature) and simply counts all entities that are part of the group structure.
  parameters: []
  returns: An integer value representing the total number of members currently in
    the group. Returns 0 if the group is empty or invalid.
  examples:
  - title: Basic usage to check group size
    code: "Group* group = player->GetGroup();\nif (group)\n{\n    int memberCount\
      \ = group->GetMembersCount();\n    if (memberCount < 5)\n    {\n        // Group\
      \ is not full, allow more players to join\n        player->SendSystemMessage(\"\
      Group has less than 5 members.\");\n    }\n}"
    language: cpp
  - title: Using member count for loot distribution logic
    code: "Group* group = player->GetGroup();\nif (group)\n{\n    int members = group->GetMembersCount();\n\
      \    if (members > 0)\n    {\n        // Distribute loot based on group size\n\
      \        uint32 lootThreshold = 100 / members;\n        // Apply loot logic\
      \ here\n    }\n}"
    language: cpp
  notes: This method provides a real-time count of group members and reflects any
    changes immediately. It's safe to call from any thread context, but the returned
    value may change between the time it's retrieved and when it's used if other players
    join or leave the group. The method performs a simple member count operation and
    has minimal performance impact.
  warnings: The returned count includes all group members including summoned creatures,
    not just player characters. If you need to distinguish between player and creature
    members, additional logic must be implemented using GetMemberSlots(). Also, be
    aware that calling this method on a null group pointer will result in undefined
    behavior, so always verify the group exists before calling.
  related:
  - GetMembers
  - GetMemberSlots
  - IsFull
  - AddMember
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T16:42:53.733160'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
