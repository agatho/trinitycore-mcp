api:
  class: Spell
  method: _cast
  signature: void Spell::_cast(bool skipCheck)
documentation:
  brief: Executes the spell cast process, handling all associated logic including
    validation, effects, and cooldowns.
  description: The _cast method is an internal implementation function responsible
    for executing a spell's casting sequence. It performs core spell logic such as
    checking if the spell can be cast, applying effects to targets, managing cooldowns,
    and updating the caster's state. This method typically handles the main execution
    flow of a spell after initial validation has been performed. The skipCheck parameter
    allows bypassing certain validation steps for special cases like forced casts
    or internal system calls. It is generally not called directly by external code
    but rather invoked through higher-level spell handling mechanisms within TrinityCore's
    spell system.
  parameters:
  - name: skipCheck
    description: When true, skips certain validation checks during spell execution.
      This parameter is typically used for internal system calls or forced casts where
      normal validation should be bypassed.
  returns: null
  examples:
  - title: Basic spell casting usage
    code: 'Spell* spell = new Spell(caster, spellInfo, true);

      spell->_cast(false); // Normal cast with validation'
    language: cpp
  - title: Internal forced cast
    code: 'Spell* spell = new Spell(caster, spellInfo, false);

      spell->_cast(true); // Cast without validation checks'
    language: cpp
  notes: This method is part of TrinityCore's internal spell system and should not
    be called directly from outside the core spell handling classes. The spell must
    already be properly initialized with valid caster and spell information before
    calling this method. It handles both successful and failed cast scenarios internally.
  warnings: Direct usage of _cast may bypass important game mechanics such as cooldowns,
    mana requirements, or target validation. Improper use can lead to game state inconsistencies
    or exploits. Always ensure proper spell initialization before calling this method.
  related:
  - Spell::prepare
  - Spell::cast
  - Spell::cancel
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T09:48:52.893901'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
