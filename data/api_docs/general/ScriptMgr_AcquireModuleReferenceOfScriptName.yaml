api:
  class: ScriptMgr
  method: AcquireModuleReferenceOfScriptName
  signature: std::shared_ptr<ModuleReference> ScriptMgr::AcquireModuleReferenceOfScriptName(const
    std::string & scriptname) const
documentation:
  brief: Acquires a shared pointer to a ModuleReference object for the specified script
    name.
  description: The AcquireModuleReferenceOfScriptName method retrieves a module reference
    associated with a given script name. This function is typically used within the
    TrinityCore framework to manage and access loaded modules or scripts by their
    identifying names. It returns a std::shared_ptr<ModuleReference> which allows
    for safe handling of the reference with automatic memory management. The method
    ensures thread safety when accessing module references, making it suitable for
    use in multi-threaded environments such as those found in World of Warcraft server
    implementations. This function is essential for dynamic script loading and execution
    within the TrinityCore architecture.
  parameters: []
  returns: A std::shared_ptr<ModuleReference> pointing to the module reference associated
    with the provided script name. Returns a null pointer if no matching module reference
    is found or if an error occurs during lookup.
  examples:
  - title: Basic Usage
    code: "std::shared_ptr<ModuleReference> ref = sScriptMgr->AcquireModuleReferenceOfScriptName(\"\
      MyCustomScript\");\nif (ref)\n{\n    // Use the module reference\n    LOG_INFO(\"\
      server\", \"Successfully acquired reference for MyCustomScript\");\n}"
    language: cpp
  notes: This method assumes that module references are registered and managed by
    the ScriptMgr singleton instance. The returned shared_ptr automatically handles
    reference counting, ensuring proper cleanup when no longer needed. This function
    may involve internal locking mechanisms to ensure thread safety during concurrent
    access.
  warnings: Ensure that the script name passed to this method exactly matches the
    registered name of the module. Case sensitivity and spelling errors will result
    in a null return value. Avoid holding onto shared_ptr references for extended
    periods as it might prevent garbage collection of unused modules.
  related:
  - GetModuleReference
  - RegisterScript
  - UnregisterScript
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T23:04:33.809089'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
