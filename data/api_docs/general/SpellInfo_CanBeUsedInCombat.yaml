api:
  class: SpellInfo
  method: CanBeUsedInCombat
  signature: bool SpellInfo::CanBeUsedInCombat(const Unit * caster) const
documentation:
  brief: Determines whether a spell can be used during combat.
  description: This method checks if a spell is allowed to be cast while in combat,
    evaluating various conditions such as whether the spell requires a target, if
    it's a harmful or beneficial spell, and if it can be cast on self or others. It
    ensures that spells are properly validated for combat usage before being executed.
    The method returns true only if the spell meets all necessary criteria for use
    during combat, otherwise false.
  parameters: []
  returns: Returns true if the spell can be used in combat, false otherwise. A return
    value of false indicates that the spell cannot be cast while in combat due to
    various restrictions or requirements.
  examples:
  - title: Basic usage example
    code: "if (spellInfo->CanBeUsedInCombat(caster)) {\n    // Spell can be used in\
      \ combat\n    // Proceed with casting\n}"
    language: cpp
  notes: This method is typically used by the game engine to validate spell usage
    during combat situations. It may involve checking for specific spell flags, target
    requirements, and other conditions that prevent spell execution during combat.
  warnings: This method should not be used directly in most cases as it's usually
    called internally by the game engine when validating spell usage. Using this method
    outside of proper context can lead to incorrect behavior or errors in spell execution.
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T14:15:11.267495'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
