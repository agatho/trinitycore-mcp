api:
  class: TerrainInfo
  method: LoadMMapInstance
  signature: void TerrainInfo::LoadMMapInstance(uint32 mapId, uint32 instanceId)
documentation:
  brief: Loads the NavMesh data for a specific map instance.
  description: The LoadMMapInstance method initializes and loads the navigation mesh
    (NavMesh) data for a given map and instance ID. This is essential for pathfinding
    and movement calculations in World of Warcraft's TrinityCore server. The method
    typically handles loading pre-generated mesh data from memory or disk, preparing
    it for use by AI and player movement systems. It ensures that creatures and players
    can navigate the terrain correctly within the specified instance.
  parameters:
  - name: mapId
    description: The unique identifier of the map for which to load NavMesh data.
      This corresponds to the Map.dbc entry ID.
  - name: instanceId
    description: The instance identifier for the specific instance of the map. Used
      to differentiate between multiple instances of the same map (e.g., raid encounters).
  returns: null
  examples:
  - title: Basic usage for loading a dungeon NavMesh
    code: "TerrainInfo* terrain = sTerrainMgr->GetTerrainInfo(0, 1234);\nif (terrain)\n\
      {\n    terrain->LoadMMapInstance(1, 5678);\n}"
    language: cpp
  - title: Loading NavMesh for a raid instance
    code: "uint32 mapId = 720; // Blackwing Lair\nuint32 instanceId = player->GetInstanceId();\n\
      TerrainInfo* terrain = sTerrainMgr->GetTerrainInfo(mapId, instanceId);\nif (terrain)\n\
      {\n    terrain->LoadMMapInstance(mapId, instanceId);\n}\n// Now pathfinding\
      \ is enabled for this instance"
    language: cpp
  notes: This method is typically called during instance creation or when a player
    enters an instance. It may block briefly while loading mesh data from disk if
    not already cached in memory. The NavMesh data should be generated using the official
    tools provided with TrinityCore (mmap-tools).
  warnings: Calling this method without proper map/instance validation can lead to
    crashes or undefined behavior. Ensure that the mapId and instanceId are valid
    before calling, especially for dynamic instances.
  related:
  - TerrainInfo::UnloadMMapInstance
  - TerrainInfo::HasMMapData
  - TerrainInfo::GetMMapData
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:35:48.417744'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
