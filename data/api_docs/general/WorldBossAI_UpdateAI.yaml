api:
  class: WorldBossAI
  method: UpdateAI
  signature: void WorldBossAI::UpdateAI(int diff)
documentation:
  brief: Updates the AI behavior of a world boss entity based on elapsed time.
  description: The UpdateAI method is responsible for executing the core artificial
    intelligence logic of a WorldBossAI instance. It processes the boss's current
    state, handles combat behaviors, manages cooldowns, and updates the AI state machine
    based on the time difference (diff) passed since the last update. This method
    is typically called every tick by the game loop to ensure real-time responsiveness
    of the world boss's actions. The implementation may include logic for spell casting,
    movement patterns, health-based triggers, and interaction with players within
    the boss's aggro range.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last AI update call. This
      value is used to determine how much time has passed for timing-based actions
      such as spell cooldowns, movement delays, and behavior transitions.
  returns: null
  examples:
  - title: Basic UpdateAI Call
    code: "void Boss::UpdateAI(int diff)\n{\n    if (!UpdateAI(diff))\n        return;\n\
      \    // Additional custom AI logic\n}"
    language: cpp
  - title: Custom AI Logic with Time-based Actions
    code: "void WorldBossAI::UpdateAI(int diff)\n{\n    if (me->HasUnitState(UNIT_STATE_CASTING))\n\
      \        return;\n\n    _updateTimer += diff;\n    if (_updateTimer >= 1000)\n\
      \    {\n        DoCastVictim(SPELL_ENRAGE);\n        _updateTimer = 0;\n   \
      \ }\n\n    // Call parent class update logic\n    BossAI::UpdateAI(diff);\n}"
    language: cpp
  notes: This method is typically invoked from the creature's Update function in the
    game loop. Developers should ensure that time-based logic within this method does
    not block or cause long delays, as it runs on the main thread and affects gameplay
    responsiveness. The diff parameter represents actual game time, not CPU time,
    so timing-sensitive behaviors will be consistent across different server loads.
  warnings: Avoid performing heavy computations or blocking operations inside UpdateAI
    as it directly impacts performance. Do not call this method manually unless you
    understand its internal dependencies and state management requirements. Incorrect
    handling of the diff parameter can lead to inconsistent AI behavior such as premature
    spell casting or delayed responses.
  related:
  - BossAI::UpdateAI
  - CreatureAI::UpdateAI
  - DoCastVictim
  - DoCast
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:28:14.378613'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
