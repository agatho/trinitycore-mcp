api:
  class: BotWorldSessionMgr
  method: GetBotCountByAccount
  signature: uint32 BotWorldSessionMgr::GetBotCountByAccount(uint32 accountId) const
documentation:
  brief: Retrieves the total number of bots associated with a specific account identifier.
  description: The GetBotCountByAccount method is used to determine how many bot characters
    are currently registered under a given account ID. This functionality is essential
    for managing bot populations per user, enforcing limits, or performing administrative
    checks within the TrinityCore-based World of Warcraft server environment. The
    method performs a lookup in the internal session manager data structures to count
    active or registered bots tied to the specified account. It does not differentiate
    between online and offline bots; instead, it counts all bots associated with the
    account regardless of their current state. This method is typically invoked during
    account-related operations such as bot creation validation, account status checks,
    or administrative reporting.
  parameters: []
  returns: Returns a uint32 value representing the total number of bots registered
    under the specified account ID. If no bots are found for the given account, it
    returns zero (0).
  examples:
  - title: Basic Usage to Check Bot Count
    code: "uint32 accountId = 12345;\nuint32 botCount = sBotWorldSessionMgr->GetBotCountByAccount(accountId);\n\
      if (botCount > 0)\n{\n    printf(\"Account %u has %u bots\\n\", accountId, botCount);\n\
      }\nelse\n{\n    printf(\"Account %u has no bots\\n\", accountId);\n}"
    language: cpp
  notes: This method assumes that the internal session manager (sBotWorldSessionMgr)
    is properly initialized and accessible. The performance of this method depends
    on the efficiency of the underlying data structure used to store bot-account mappings,
    which should ideally be optimized for fast lookups. This function may not reflect
    real-time changes if caching mechanisms are involved.
  warnings: Ensure that the accountId parameter is valid and corresponds to an existing
    account in the database; passing invalid or non-existent IDs may lead to unexpected
    behavior or errors depending on implementation details of the session manager.
    Avoid calling this method excessively in performance-critical code paths due to
    potential database or memory access overhead.
  related:
  - GetBotByAccount
  - GetAllBotsByAccount
  - AddBotToAccount
  - RemoveBotFromAccount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:37:11.577620'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
