api:
  class: WorldObject
  method: InSamePhase
  signature: bool WorldObject::InSamePhase(const WorldObject * a, const WorldObject
    * b)
documentation:
  brief: Determines whether two WorldObjects are in the same phase.
  description: This method checks if two WorldObject instances share the same phase,
    which is crucial for determining visibility and interaction between objects in
    the game world. It evaluates the phase information of both objects to establish
    if they are within the same phase context, allowing for proper game mechanics
    handling such as combat, quest progression, and interaction. The method considers
    phase masks and phase groups to determine compatibility.
  parameters: []
  returns: Returns true if both WorldObjects are in the same phase, false otherwise.
    This indicates that the objects can interact with each other based on phase restrictions.
  examples:
  - title: Basic Phase Check
    code: "if (WorldObject::InSamePhase(player, mob)) {\n    // Player and mob are\
      \ in same phase\n    // Can attack or interact\n}"
    language: cpp
  notes: Implementation relies on phase information stored in WorldObject's phase
    data. Performance impact is minimal as it only involves comparing phase masks.
    Thread safety is ensured since phase data is typically thread-safe.
  warnings: This method should not be used for determining visibility in complex scenarios
    involving multiple phase groups or dynamic phase changes. Always consider other
    phase-related methods for comprehensive phase checking.
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:44:31.919088'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
