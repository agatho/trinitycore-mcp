api:
  class: Unit
  method: GetVictim
  signature: Unit * Unit::GetVictim() const
documentation:
  brief: Returns the Unit that is currently targeting this Unit.
  description: The GetVictim method retrieves the Unit object that is currently being
    targeted by this Unit. This method is commonly used in combat situations to determine
    which target a unit is attacking or following. In World of Warcraft's TrinityCore,
    this method is essential for understanding the current combat state of a creature
    or player, as it provides access to the victim of the unit's attack. The returned
    Unit may be null if no target exists, and typically represents the most recent
    target that was set by the unit's AI or behavior system.
  parameters: []
  returns: Returns a pointer to the Unit object that is currently being targeted by
    this Unit. If no victim exists, it returns nullptr. This indicates that the unit
    is not currently engaged in combat with any other unit.
  examples:
  - title: Basic Usage Example
    code: "Unit *victim = unit->GetVictim();\nif (victim != nullptr)\n{\n    // Do\
      \ something with victim\n}"
    language: cpp
  notes: This method is typically used in conjunction with other combat-related methods
    such as GetThreatManager or GetTarget. It is thread-safe and should be used carefully
    in multi-threaded environments where the unit's target may change frequently during
    combat.
  warnings: Be cautious when using this method in combat situations, as it can return
    nullptr if no target exists. Also, ensure that the returned pointer is valid before
    dereferencing it to avoid memory access violations.
  related:
  - GetThreatManager
  - GetTarget
  - SetVictim
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:28:32.624403'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
