api:
  class: AchievementGlobalMgr
  method: GetAchievementReward
  signature: const AchievementReward * AchievementGlobalMgr::GetAchievementReward(const
    AchievementEntry * achievement) const
documentation:
  brief: Retrieves the reward data associated with a specific achievement entry.
  description: The GetAchievementReward method fetches the reward information linked
    to a given achievement entry. This function is used internally by the TrinityCore
    framework to determine what rewards (such as items, titles, or currency) should
    be granted to players upon completing an achievement. The method performs a lookup
    in the global achievement reward database using the provided achievement entry's
    identifier. It returns a pointer to the reward data structure if found, or nullptr
    if no reward is defined for that achievement.
  parameters: []
  returns: A constant pointer to an AchievementReward object containing the reward
    details for the specified achievement. Returns nullptr if no reward is associated
    with the achievement.
  examples:
  - title: Retrieve and Check Achievement Reward
    code: "const AchievementEntry* entry = sAchievementMgr->GetAchievement(1234);\n\
      if (entry)\n{\n    const AchievementReward* reward = sAchievementGlobalMgr->GetAchievementReward(entry);\n\
      \    if (reward)\n    {\n        // Process the reward\n        printf(\"Reward\
      \ Item ID: %u\\n\", reward->itemID);\n    }\n    else\n    {\n        printf(\"\
      No reward defined for this achievement.\\n\");\n    }\n}"
    language: cpp
  notes: This method is typically used during achievement completion processing and
    reward distribution. It assumes that the AchievementEntry parameter is valid and
    has been properly loaded from the database. The returned pointer is managed by
    the global manager and should not be deleted by the caller.
  warnings: Do not assume that a non-null return value means the player will receive
    a reward; additional checks for player eligibility, completion status, and reward
    availability may still be required before granting rewards.
  related:
  - GetAchievement
  - IsAchievementCompleted
  - RewardPlayerForAchievement
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T18:46:39.450526'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
