api:
  class: SpellScript
  method: GetEffectVariance
  signature: float SpellScript::GetEffectVariance() const
documentation:
  brief: Calculates and returns the variance of a spell's effect value.
  description: The GetEffectVariance method retrieves the calculated variance associated
    with a spell's effect. This value represents how much the actual effect outcome
    can deviate from the base value due to randomness or other game mechanics such
    as critical strikes, spell power modifiers, or randomization factors. The returned
    float value typically indicates a percentage or normalized deviation that affects
    the final spell damage or healing output. This method is commonly used within
    spell script implementations to dynamically adjust spell outcomes based on various
    in-game conditions and modifiers.
  parameters: []
  returns: A float value representing the variance of the spell's effect. This value
    typically ranges between 0.0 and 1.0, where 0.0 indicates no variance (fixed outcome)
    and values closer to 1.0 indicate higher randomness or deviation from base effects.
  examples:
  - title: Basic Usage in Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleEffectExecute()\
      \ override\n    {\n        float variance = GetEffectVariance();\n        //\
      \ Apply variance to spell effect calculation\n        float finalDamage = baseDamage\
      \ * (1.0f + variance);\n    }\n};"
    language: cpp
  - title: Using Variance for Damage Calculation
    code: "class FireballSpellScript : public SpellScript\n{\npublic:\n    void OnEffectExecute(SpellEffIndex\
      \ effIndex) override\n    {\n        if (effIndex == EFFECT_0)\n        {\n\
      \            float variance = GetEffectVariance();\n            int32 baseDamage\
      \ = 100;\n            int32 finalDamage = baseDamage + (int32)(baseDamage *\
      \ variance);\n            // Apply final damage to target\n            GetHitUnit()->DealDamage(GetCaster(),\
      \ finalDamage, NULL);\n        }\n    }\n};"
    language: cpp
  notes: This method should only be called within the context of a spell script execution.
    The variance value is typically calculated based on spell properties and may vary
    depending on the spell's effect type, caster state, and game mechanics. It's important
    to note that this method does not modify the actual variance but retrieves the
    pre-calculated value for use in custom logic.
  warnings: Do not call this method outside of a spell script context as it may lead
    to undefined behavior. The returned variance value should be used carefully when
    performing mathematical operations to avoid unexpected results due to floating-point
    precision issues.
  related:
  - GetEffectRadius
  - GetEffectBasePoints
  - GetEffectValue
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:03:02.792120'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
