api:
  class: Pet
  method: ~Pet
  signature: void Pet::~Pet()
documentation:
  brief: Destroys a Pet object and performs cleanup operations.
  description: The Pet destructor is automatically invoked when a Pet object goes
    out of scope or is explicitly deleted. This method ensures proper cleanup of all
    resources associated with the pet, including removing it from the game world,
    releasing memory, and notifying the server's object management system. The destructor
    handles the removal of the pet from its owner's pet list and ensures that any
    summoned creatures are properly dismissed. It also performs necessary cleanup
    for AI behavior, combat state, and other subsystems related to the pet.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of a Pet object
    code: "void SomeFunction()\n{\n    Pet* myPet = new Pet();\n    // ... use the\
      \ pet ...\n    delete myPet; // Pet destructor is called here\n}"
    language: cpp
  - title: Pet destruction when going out of scope
    code: "void AnotherFunction()\n{\n    Pet localPet;\n    // ... use localPet ...\n\
      \    // Destructor automatically called when localPet goes out of scope\n}"
    language: cpp
  notes: The Pet destructor is virtual and part of the inheritance hierarchy, ensuring
    that derived pet types' destructors are properly called. It's important to note
    that this destructor should not be called directly unless you're explicitly managing
    object lifetime. The destruction process includes notifying the owner, cleaning
    up AI systems, and removing the pet from all relevant game systems.
  warnings: Never manually call the destructor unless you're implementing custom memory
    management. The destructor handles critical cleanup operations, so improper handling
    can lead to memory leaks or invalid object states. Avoid calling this destructor
    on objects that are still referenced elsewhere in the system.
  related:
  - Pet::Pet()
  - Pet::Initialize()
  - Pet::RemoveFromWorld()
  - Pet::SaveToDB()
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:24:58.525084'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
