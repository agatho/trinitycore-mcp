api:
  class: Map
  method: GetCreatureBySpawnIdStore
  signature: const CreatureBySpawnIdContainer & Map::GetCreatureBySpawnIdStore() const
documentation:
  brief: Returns the creature spawn ID container for all creatures on this map
  description: This method provides access to the internal container storing all creatures
    spawned on the map, organized by their unique spawn ID. It allows developers to
    retrieve and iterate through all creatures currently present in the map's instance,
    enabling efficient lookup and management of creature instances. The returned container
    is const, meaning it cannot be modified directly, ensuring thread safety when
    accessing creature data during runtime. This method is essential for implementing
    creature spawning logic, event handling, and map-specific operations.
  parameters: []
  returns: Returns a constant reference to the CreatureBySpawnIdContainer which holds
    all creatures currently spawned on this map, organized by their spawn ID. The
    container allows for efficient lookup of creatures based on their spawn ID, making
    it useful for debugging, event handling, and map-specific operations.
  examples:
  - title: Accessing creature spawn IDs
    code: "Map* map = player->GetMap();\nconst CreatureBySpawnIdContainer& container\
      \ = map->GetCreatureBySpawnIdStore();\nfor (auto itr = container.begin(); itr\
      \ != container.end(); ++itr)\n{\n    uint32 spawnId = itr->first;\n    Creature*\
      \ creature = itr->second;\n    // Process creature by spawn ID\n}"
    language: cpp
  notes: This method is thread-safe and returns a const reference to prevent modification
    of the container. The container stores all creatures in a map-based manner, allowing
    for efficient lookup by spawn ID. Performance considerations include iterating
    through the container which may be costly if many creatures exist.
  warnings: This method should not be used for modifying creature data directly as
    it returns a const reference. Modifications should be done through proper game
    mechanics or event systems rather than direct container manipulation.
  related:
  - GetCreatureBySpawnId
  - GetCreatureByGuid
  - GetCreatureByEntry
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:08:54.137550'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
