api:
  class: Map
  method: CannotEnter
  signature: TransferAbortParams Map::CannotEnter(Player * param0)
documentation:
  brief: Returns transfer abort parameters when a player cannot enter a map
  description: This method is used to determine the transfer abort parameters when
    a player attempts to enter a map but is prevented from doing so due to various
    conditions such as level requirements, instance restrictions, or other game mechanics.
    The method typically returns a TransferAbortParams structure that indicates why
    the transfer was aborted and what the player should do next. It is commonly used
    in conjunction with player movement systems to handle map entry restrictions.
  parameters:
  - name: param0
    description: A pointer to the Player object attempting to enter the map. This
      parameter is required and must not be null for the method to function properly.
  returns: Returns a TransferAbortParams structure that contains information about
    why the transfer was aborted, including specific error codes and potential actions
    the player should take next. The return value may be null if no abort conditions
    are met, or it may contain detailed abort information depending on the circumstances
    of the map entry attempt.
  examples:
  - title: Basic usage example
    code: "Player* player = new Player();\nTransferAbortParams params = map->CannotEnter(player);\n\
      if (params != nullptr) {\n    // Handle abort condition\n    switch (params->GetAbortReason())\
      \ {\n        case TRANSFER_ABORT_MAP_NOT_FOUND:\n            // Handle missing\
      \ map\n            break;\n        default:\n            // Handle other abort\
      \ conditions\n            break;\n    }\n}"
    language: cpp
  notes: This method is typically called during player movement operations when a
    player attempts to enter a map. It should be used in conjunction with other map-related
    methods to ensure proper handling of transfer abort conditions. The method may
    return different abort parameters based on the specific conditions encountered.
  warnings: This method should not be called directly without proper context, as it's
    typically part of internal player movement logic. Care should be taken when using
    this method in conjunction with other map-related methods to avoid potential issues
    with player state handling.
  related:
  - Map::CanEnter
  - Map::GetPlayer
  - Player::GetMap
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T04:26:56.852820'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
