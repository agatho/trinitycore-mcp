api:
  class: AuraEffect
  method: AuraEffect
  signature: void AuraEffect::AuraEffect(Aura * base, const int & spellEfffectInfo,
    const int32 * baseAmount, Unit * caster)
documentation:
  brief: Initializes a new AuraEffect instance with the specified base aura, spell
    effect info, base amount, and caster.
  description: The AuraEffect constructor initializes a new aura effect instance by
    setting up internal state based on the provided parameters. This method is typically
    called during aura application or creation to establish the effect's properties
    such as its base amount, spell effect information, and the unit that applied it.
    The base aura parameter represents the parent aura object that this effect belongs
    to, while spellEfffectInfo contains data about which spell effect this instance
    corresponds to. The baseAmount parameter specifies the initial strength or value
    of the effect, and caster identifies the unit responsible for applying the aura.
    This constructor is part of TrinityCore's aura system implementation and is used
    internally by the core engine during spell casting and aura application processes.
  parameters:
  - name: base
    description: Pointer to the parent Aura object that this effect belongs to. Must
      not be null for valid initialization.
  - name: spellEfffectInfo
    description: Integer reference representing the spell effect information index.
      Used to identify which specific effect within a spell is being applied.
  - name: baseAmount
    description: Pointer to an array of int32 values representing base amounts for
      this aura effect. Can be null if no base amount is provided.
  - name: caster
    description: Pointer to the Unit object that applied this aura effect. Must not
      be null for valid initialization.
  returns: null
  examples:
  - title: Basic AuraEffect Initialization
    code: 'Aura* aura = new Aura(player, spellInfo, EFFECT_0);

      int32 baseAmount[3] = {100, 0, 0};

      AuraEffect* effect = new AuraEffect(aura, 0, baseAmount, player);'
    language: cpp
  - title: Creating AuraEffect with Null Base Amount
    code: 'Aura* aura = new Aura(target, spellInfo, EFFECT_1);

      AuraEffect* effect = new AuraEffect(aura, 1, nullptr, caster);'
    language: cpp
  notes: This constructor is typically not called directly by developers but rather
    through internal TrinityCore systems when auras are applied. The baseAmount parameter
    should be properly allocated and managed to avoid memory issues. The spellEfffectInfo
    parameter must correspond to valid effect indices in the spell template.
  warnings: Do not call this constructor with null base or caster parameters as it
    will likely cause crashes or undefined behavior. Ensure that the base aura object
    is properly initialized before passing it to this constructor.
  related:
  - AuraEffect::GetAura
  - AuraEffect::GetSpellInfo
  - AuraEffect::GetBaseAmount
  - AuraEffect::GetCaster
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T17:25:53.821674'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
