api:
  class: Player
  method: SatisfyQuestDependentPreviousQuests
  signature: bool Player::SatisfyQuestDependentPreviousQuests(const Quest * qInfo,
    bool msg) const
documentation:
  brief: Satisfies quest dependencies for previous quests in the chain
  description: This method checks and satisfies any quest dependencies that are required
    before the specified quest can be completed. It ensures that all prerequisite
    quests have been properly fulfilled, allowing the player to progress through the
    quest chain. The method operates on the concept of dependency satisfaction, where
    dependent quests must be completed before a quest can be accepted or completed.
    This is particularly important for maintaining proper quest progression and avoiding
    quest completion issues.
  parameters:
  - name: qInfo
    description: Pointer to the Quest object that requires dependency satisfaction.
      This parameter defines which quest's dependencies need to be checked and satisfied.
  - name: msg
    description: Boolean flag indicating whether to display messages to the player
      during dependency satisfaction. If true, relevant messages will be shown to
      inform the player about quest completion status.
  returns: Returns true if all dependencies are satisfied successfully, false otherwise.
    The method may return false when dependencies cannot be satisfied or when the
    quest is not properly configured for dependency checking.
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      Quest* quest = sQuestTemplate->GetQuestTemplate(12345);

      bool result = player->SatisfyQuestDependentPreviousQuests(quest, true);'
    language: cpp
  - title: Advanced usage example
    code: "Player* player = GetPlayer();\nQuest* quest = sQuestTemplate->GetQuestTemplate(12345);\n\
      bool result = player->SatisfyQuestDependentPreviousQuests(quest, false);\nif\
      \ (result) {\n    // Proceed with quest completion logic\n    player->CompleteQuest(quest);\n\
      }"
    language: cpp
  notes: This method is typically called during quest completion processing to ensure
    proper dependency satisfaction. It may involve checking multiple dependencies
    and could potentially trigger multiple messages if msg parameter is true. Performance
    considerations include avoiding unnecessary calls when dependencies are already
    satisfied.
  warnings: The method should only be called when the player has sufficient quest
    progress to satisfy dependencies. Calling this method without proper quest progression
    can lead to incorrect dependency satisfaction and potential quest completion issues.
    Also, ensure that the quest pointer is valid before calling this method.
  related:
  - Quest::GetQuestDependencies
  - Player::CompleteQuest
  - Player::QuestStatus
  - Player::AddQuest
  - Player::RemoveQuest
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T23:58:32.404228'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
