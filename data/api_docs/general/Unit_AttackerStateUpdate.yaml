api:
  class: Unit
  method: AttackerStateUpdate
  signature: void Unit::AttackerStateUpdate(Unit * victim, int attType, bool extra)
documentation:
  brief: Updates the attack state of a unit when it attacks a target.
  description: The AttackerStateUpdate method is responsible for managing the combat
    state and actions of a Unit when it initiates an attack against another Unit.
    This method handles various aspects of the attack, including calculating damage,
    applying combat mechanics, and updating the attacker's state. It is typically
    called internally by the game engine during combat events, but can also be invoked
    manually in specific circumstances such as custom AI or spell effects that require
    direct control over attack behavior. The method considers factors like attack
    type, extra parameters for special attacks, and the victim's current state to
    determine how the attack should proceed.
  parameters:
  - name: victim
    description: Pointer to the Unit that is being attacked. Must be a valid Unit
      object; passing nullptr may result in undefined behavior or crashes.
  - name: attType
    description: Integer representing the type of attack being performed. Values typically
      correspond to melee, ranged, or spell attacks (e.g., 0 for melee, 1 for ranged).
      The exact meaning depends on internal game definitions and can affect damage
      calculation and combat animations.
  - name: extra
    description: Boolean flag that indicates whether this is an extra attack or not.
      Used to determine if additional combat mechanics should be applied, such as
      double attacks or special combo effects.
  returns: null
  examples:
  - title: Basic Attack Execution
    code: 'Unit* attacker = ...;

      Unit* target = ...;

      attacker->AttackerStateUpdate(target, 0, false);'
    language: cpp
  - title: Ranged Attack with Extra Flag
    code: 'Unit* rangedUnit = ...;

      Unit* enemy = ...;

      rangedUnit->AttackerStateUpdate(enemy, 1, true);'
    language: cpp
  notes: This method is part of the core combat system and should not be called directly
    from outside combat logic unless you are implementing custom AI or game mechanics.
    The method modifies internal unit states and may trigger additional callbacks
    or events. It assumes that both attacker and victim units are valid and in a combat-ready
    state.
  warnings: Calling this method with invalid parameters (such as nullptr for victim)
    can cause crashes or undefined behavior. Ensure that the target unit is valid
    and alive before invoking this function. Additionally, calling it during certain
    game states (like loading or shutdown) may result in unexpected results.
  related:
  - Unit::DealDamage
  - Unit::Attack
  - Unit::CalculateDamage
  - Unit::SendAttackStateUpdate
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:47:31.074325'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
