api:
  class: UnitAI
  method: OnDespawn
  signature: void UnitAI::OnDespawn()
documentation:
  brief: Called when a unit is despawned from the world, allowing cleanup of AI resources
    and state.
  description: The OnDespawn method is invoked when a Unit (such as a creature or
    player) is removed from the game world, typically during destruction or removal.
    This method provides an opportunity for AI implementations to perform necessary
    cleanup operations, such as releasing allocated memory, canceling ongoing actions,
    or resetting internal state variables. It's part of the AI lifecycle management
    and ensures proper resource deallocation when units are no longer active in the
    game environment. The method is automatically called by the TrinityCore framework
    during unit despawn events.
  parameters: []
  returns: null
  examples:
  - title: Basic Override Example
    code: "class MyAI : public UnitAI {\npublic:\n    void OnDespawn() override {\n\
      \        // Perform cleanup operations\n        CleanupAIResources();\n    \
      \    // Call base implementation if needed\n        UnitAI::OnDespawn();\n \
      \   }\n};"
    language: cpp
  notes: This method is called during the destruction phase of a unit's lifecycle.
    It should not be used for operations that require the unit to still be in the
    world or have valid references. Implementations should avoid performing heavy
    computations or blocking operations within this method to prevent performance
    degradation.
  warnings: Do not attempt to access unit properties or perform actions that assume
    the unit is still active in the world, as these may result in undefined behavior
    or crashes. Avoid calling methods that modify the unit's state or interact with
    the game world from within OnDespawn unless explicitly documented as safe.
  related:
  - OnSpawn
  - UpdateAI
  - Initialize
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:05:10.181007'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
