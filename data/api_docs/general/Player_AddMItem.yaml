api:
  class: Player
  method: AddMItem
  signature: void Player::AddMItem(Item * it)
documentation:
  brief: Adds an item to the player's inventory and updates the client with the new
    item.
  description: The AddMItem method is used to add a specified Item object to the player's
    inventory. This method handles the internal logic of updating the player's inventory,
    including checking for space availability, managing item stacks, and notifying
    the client about the new item. It also ensures that the item is properly initialized
    and stored in the correct inventory slot. The method is typically used during
    gameplay when items are dropped or created by game mechanics such as quest rewards,
    loot, or NPC interactions.
  parameters:
  - name: it
    description: A pointer to an Item object that represents the item to be added
      to the player's inventory. This item must already be initialized and contain
      valid data about its properties, including stack count, slot, and other relevant
      information.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Item* item = Item::CreateItem(12345, player);

      player->AddMItem(item);'
    language: cpp
  - title: Advanced usage with item initialization
    code: 'Item* item = Item::CreateItem(12345, player);

      item->SetUInt32Value(ITEM_FIELD_STACK_COUNT, 10);

      player->AddMItem(item);'
    language: cpp
  notes: This method is typically used in conjunction with other inventory management
    methods like AddItem or Item::CreateItem. It should be called only after the item
    has been properly initialized and before it's added to the player's inventory.
    The method may trigger a client update if the item is successfully added, ensuring
    that the player sees the new item in their inventory.
  warnings: This method should not be used with items that are already part of the
    player's inventory or items that have not been properly initialized. Using this
    method on invalid items can lead to memory corruption or incorrect behavior in
    the game client.
  related:
  - AddItem
  - Item::CreateItem
  - Player::GetItemByPos
  - Player::SetItem
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:32:40.042101'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
