api:
  class: BotAccountMgr
  method: CanCreateCharacter
  signature: bool BotAccountMgr::CanCreateCharacter(uint32 bnetAccountId) const
documentation:
  brief: Determines whether a Battle.net account is allowed to create a new bot character.
  description: The CanCreateCharacter method checks if a given Battle.net account
    ID has the necessary permissions and limitations to create a new bot character
    within the TrinityCore framework. This method typically evaluates account restrictions,
    bot character limits, and game rules to ensure compliance with server policies.
    It is commonly used during character creation flow to validate that the account
    can proceed with creating another bot character. The check may consider factors
    such as maximum bot character limits per account, account status, or server-specific
    configurations.
  parameters:
  - name: bnetAccountId
    description: The unique Battle.net account identifier for which the character
      creation permission is being checked. This value typically corresponds to the
      account's internal ID used by the Battle.net authentication system.
  returns: Returns true if the specified Battle.net account is permitted to create
    a new bot character; otherwise, returns false. A return value of false may indicate
    that the account has reached its maximum bot character limit, is restricted, or
    violates other server rules.
  examples:
  - title: Basic Usage
    code: "uint32 accountId = 123456;\nif (sBotAccountMgr->CanCreateCharacter(accountId))\n\
      {\n    // Proceed with bot character creation\n    sObjectAccessor->CreateBotCharacter(accountId);\n\
      }\nelse\n{\n    // Handle the case where character creation is not allowed\n\
      \    sLog->outError(\"Account %u cannot create more bot characters.\", accountId);\n\
      }"
    language: cpp
  notes: This method is typically called before attempting to create a new bot character
    to prevent invalid operations. The implementation may involve database lookups
    or cached account data, so performance should be considered in high-frequency
    scenarios.
  warnings: Ensure that the provided Battle.net account ID is valid and corresponds
    to an actual registered account. Passing invalid or uninitialized IDs may lead
    to undefined behavior or incorrect results.
  related:
  - BotAccountMgr::GetMaxBotsPerAccount
  - BotAccountMgr::IsAccountRestricted
  - BotAccountMgr::IncrementBotCount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:57:48.359312'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
