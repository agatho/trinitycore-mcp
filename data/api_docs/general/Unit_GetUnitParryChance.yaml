api:
  class: Unit
  method: GetUnitParryChance
  signature: float Unit::GetUnitParryChance(int attType, const Unit * victim) const
documentation:
  brief: Calculates the chance for a unit to parry an attack based on attack type
    and victim.
  description: This method computes the probability that a unit will successfully
    parry an incoming attack, taking into account the attack type and the victim's
    defensive attributes. It is commonly used in combat calculations to determine
    parry outcomes during melee attacks. The method considers various factors including
    weapon type, victim's defense, and relevant skill levels to determine the parry
    chance. This function is essential for calculating combat mechanics and determining
    whether a unit can successfully parry an attack.
  parameters:
  - name: attType
    description: The type of attack being parried (e.g., melee, ranged, spell). This
      parameter determines how the parry chance is calculated based on the attack
      type.
  - name: victim
    description: Pointer to the unit that is attacking. This represents the attacker's
      characteristics and determines how the parry chance is calculated based on the
      victim's defensive attributes.
  returns: Returns a float value representing the chance (in percent) that the unit
    will successfully parry an attack. The value typically ranges from 0.0 to 100.0,
    where 0.0 means no chance of parrying and 100.0 means guaranteed parry.
  examples:
  - title: Basic Parry Chance Calculation
    code: "float parryChance = unit->GetUnitParryChance(ATTACK_MELEE, victim);\nif\
      \ (parryChance > 0.0f) {\n    // Unit can parry\n    std::cout << \"Parry chance:\
      \ \" << parryChance << \"%\" << std::endl;\n}"
    language: cpp
  - title: Advanced Parry Chance with Attack Type
    code: "float parryChance = unit->GetUnitParryChance(ATTACK_RANGED, victim);\n\
      // Calculate parry chance for ranged attacks\nif (parryChance > 0.0f) {\n  \
      \  // Unit can parry ranged attack\n    std::cout << \"Ranged parry chance:\
      \ \" << parryChance << \"%\" << std::endl;\n}"
    language: cpp
  notes: This method is part of the combat system and relies on various defensive
    attributes such as defense, weapon skill, and relevant skills. It may be affected
    by buffs/debuffs and is used in conjunction with other combat calculations like
    dodge and block. Performance considerations include checking for valid pointers
    and ensuring that the victim is not null.
  warnings: This method should not be called on null pointers or units without proper
    defensive attributes. The method might return 0.0 if the unit has no parry chance
    or if the victim is invalid, which could lead to incorrect combat calculations.
  related:
  - GetUnitDodgeChance
  - GetUnitBlockChance
  - GetUnitMissChance
  - GetUnitHitChance
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:30:47.679590'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
