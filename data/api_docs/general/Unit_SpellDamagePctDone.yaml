api:
  class: Unit
  method: SpellDamagePctDone
  signature: float Unit::SpellDamagePctDone(Unit * victim, const SpellInfo * spellProto,
    DamageEffectType damagetype, const SpellEffectInfo & spellEffectInfo) const
documentation:
  brief: Calculates percentage-based spell damage done to a target
  description: This method computes the percentage of spell damage that is applied
    to a target based on the specified spell information and damage type. It takes
    into account various factors such as spell modifiers, target resistance, and damage
    type to determine the final percentage value. The method is commonly used in spell
    calculations where damage is expressed as a percentage of base damage rather than
    fixed values.
  parameters:
  - name: victim
    description: The target unit that receives the damage. This parameter must be
      valid and cannot be nullptr.
  - name: spellProto
    description: Pointer to the SpellInfo structure containing spell data. This parameter
      must be valid and cannot be nullptr.
  - name: damagetype
    description: The type of damage being calculated (e.g., Fire, Frost, Shadow).
      This parameter determines how the percentage is applied based on damage type.
  - name: spellEffectInfo
    description: The spell effect information that defines how the damage is calculated.
      This parameter contains specific details about the effect being applied.
  returns: Returns a float value representing the percentage of damage done to the
    target, typically ranging from 0.0 to 100.0. The value may be negative if modifiers
    reduce the damage output.
  examples:
  - title: Basic usage example
    code: float damagePercentage = unit->SpellDamagePctDone(target, spellInfo, SPELL_DAMAGE_TYPE_FIRE,
      spellEffectInfo);
    language: cpp
  - title: Advanced usage example with multiple effects
    code: float damagePercentage = unit->SpellDamagePctDone(target, spellInfo, SPELL_DAMAGE_TYPE_FROST,
      spellEffectInfo); if (damagePercentage > 0) { // Apply damage to target } else
      { // Handle negative damage }
    language: cpp
  notes: This method is part of the core spell calculation system in TrinityCore.
    It's used primarily for calculating percentage-based damage effects, such as those
    found in spells like Shadow Word Pain or Frostbolt. The method may be called multiple
    times during a spell's execution depending on how many effects are present.
  warnings: The method requires valid pointers to both victim and spellProto; invalid
    pointers will cause crashes. Care must be taken when using this method with different
    damage types as it may affect the final damage calculation differently based on
    resistance values.
  related:
  - SpellDamageDone
  - SpellDamagePctDone
  - SpellEffectInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:13:26.508186'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
