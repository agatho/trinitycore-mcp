api:
  class: WorldObject
  method: GetRandomNearPosition
  signature: Position WorldObject::GetRandomNearPosition(float radius)
documentation:
  brief: Generates a random position near the WorldObject within the specified radius.
  description: The GetRandomNearPosition method calculates and returns a random Position
    located within a circular area centered on the WorldObject's current location.
    The radius parameter defines the maximum distance from the object's center that
    the returned position can be. This method is commonly used for spawning creatures,
    items, or effects in proximity to an existing object without requiring exact positioning.
    The generated position maintains the same Z-coordinate (height) as the original
    object, ensuring it remains at the same elevation level. The method performs basic
    geometric calculations to ensure the resulting position falls within the specified
    radius while maintaining valid world coordinates.
  parameters: []
  returns: A Position object representing a random location within the specified radius
    of the WorldObject's current position. The returned position retains the original
    object's Z-coordinate (height) and is guaranteed to be within the defined circular
    boundary.
  examples:
  - title: Basic usage for spawning a creature near an NPC
    code: 'Creature* npc = ...;

      Position randomPos = npc->GetRandomNearPosition(5.0f);

      WorldObject::SummonCreature(12345, randomPos);'
    language: cpp
  - title: Generating random loot spawn positions for multiple items
    code: "GameObject* chest = ...;\nfor (int i = 0; i < 3; ++i)\n{\n    Position\
      \ lootPos = chest->GetRandomNearPosition(2.0f);\n    chest->SummonGameObject(12345,\
      \ lootPos, 0, 0);\n}"
    language: cpp
  notes: This method is primarily used for procedural world generation and AI behavior.
    It's optimized for performance by using fast random number generation and simple
    geometric calculations. The method does not validate if the resulting position
    is walkable or valid for spawning objects - that responsibility lies with the
    calling code or subsequent validation systems.
  warnings: The returned Position may not be a valid spawn location in all cases,
    especially in complex terrain or areas with collision boundaries. Always validate
    the generated position before using it for spawning creatures or placing objects
    in the world to prevent issues such as spawning inside walls or invalid locations.
  related:
  - GetPosition
  - GetPositionX
  - GetPositionY
  - GetPositionZ
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:47:27.228933'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
