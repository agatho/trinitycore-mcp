api:
  class: BotChatCommandHandler
  method: GetAllCommands
  signature: int BotChatCommandHandler::GetAllCommands()
documentation:
  brief: Retrieves and processes all available bot chat commands for the current session.
  description: The GetAllCommands method enumerates and prepares a list of all supported
    bot chat commands that can be executed within the TrinityCore environment. This
    method is typically used by the bot command handler to maintain an up-to-date
    registry of available commands, ensuring that user inputs are correctly interpreted
    and executed. It may involve parsing command definitions from internal data structures
    or configuration files, and it returns a count of successfully processed commands.
    The method does not require any input parameters and operates on the instance's
    internal state to gather command information.
  parameters: []
  returns: An integer representing the total number of bot chat commands that were
    successfully retrieved and processed by this method. A return value of zero indicates
    no commands were found or processed, while a positive integer reflects the count
    of valid commands in the system.
  examples:
  - title: Basic Usage
    code: "int commandCount = botChatHandler.GetAllCommands();\nif (commandCount >\
      \ 0)\n{\n    std::cout << \"Loaded \" << commandCount << \" bot commands.\"\
      \ << std::endl;\n}"
    language: cpp
  notes: This method is likely invoked during initialization or refresh operations
    of the bot command system. It may cache results internally to avoid repeated processing
    overhead, especially if called frequently. The exact internal implementation details
    depend on how commands are stored and managed within the TrinityCore framework.
  warnings: null
  related:
  - GetCommandByName
  - ExecuteCommand
  - RegisterCommand
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T17:28:19.609019'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
