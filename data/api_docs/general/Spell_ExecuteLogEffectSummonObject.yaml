api:
  class: Spell
  method: ExecuteLogEffectSummonObject
  signature: void Spell::ExecuteLogEffectSummonObject(int effect, WorldObject * obj)
documentation:
  brief: Executes log effect for summoning game objects during spell casting.
  description: This method handles the logging and execution of summon object effects
    when a spell is cast. It processes the specified effect index and WorldObject
    parameter to determine how to handle the summoning behavior. The method ensures
    proper logging of summoning events and may trigger additional game mechanics based
    on the effect type and object parameters. This function is typically called during
    spell execution to manage summoning behavior in the game world.
  parameters:
  - name: effect
    description: The effect index that specifies which summoning effect to execute.
      Valid values are typically integers representing different summoning types,
      such as summoning a creature, item, or object.
  - name: obj
    description: The WorldObject parameter that represents the object being summoned.
      This can be a GameObject, Creature, or other WorldObject type. The parameter
      must not be null and should represent valid game objects.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Spell* spell = new Spell();

      WorldObject* obj = new GameObject();

      spell->ExecuteLogEffectSummonObject(0, obj);'
    language: cpp
  - title: Advanced usage example
    code: 'Spell* spell = new Spell();

      WorldObject* obj = new Creature();

      spell->ExecuteLogEffectSummonObject(1, obj);

      // This would handle summoning a creature based on effect index 1'
    language: cpp
  notes: This method likely involves internal game mechanics handling for summoning
    effects. It may be part of the spell execution process and should be called during
    spell casting to ensure proper logging. Implementation details may involve checking
    effect types and object parameters before processing.
  warnings: This method requires that the WorldObject parameter is valid and not null.
    Calling this method without proper object validation can cause crashes or undefined
    behavior. The effect parameter must be within valid range for summoning effects.
  related:
  - Spell::ExecuteLogEffect
  - Spell::SummonObject
  - Spell::HandleEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T22:02:23.647239'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
