api:
  class: Item
  method: CreateItem
  signature: Item * Item::CreateItem(uint32 itemEntry, uint32 count, int context,
    const Player * player, bool addDefaultBonuses)
documentation:
  brief: Creates a new item instance with specified entry and count, optionally adding
    default bonuses.
  description: The CreateItem method generates a new Item object based on the provided
    item entry ID and count. It allows for context-based creation where the item's
    properties are determined by the context parameter, typically used to specify
    whether the item should be created as a loot item or as a quest item. The method
    also supports adding default bonuses when specified, which is particularly useful
    for items that require specific enchantments or bonuses to function properly within
    the game mechanics. This method is commonly used in scripting and game development
    scenarios where items need to be generated programmatically.
  parameters:
  - name: itemEntry
    description: The entry ID of the item to create, which corresponds to an entry
      in the ItemTemplate database table. Valid values are integers representing item
      IDs.
  - name: count
    description: The quantity of items to create. This value determines how many copies
      of the item will be generated. Valid values are positive integers.
  - name: context
    description: The context in which the item is created, typically used to determine
      if the item should be treated as a loot item or quest item. Valid values are
      integers representing context types.
  - name: player
    description: A pointer to the player who will receive the item. This parameter
      is used to determine the item's owner and can influence how bonuses are applied.
      Valid values are pointers to Player objects.
  - name: addDefaultBonuses
    description: A boolean flag indicating whether default bonuses should be added
      to the item. If true, the item will have default bonuses applied based on its
      type and level. Valid values are boolean true/false values.
  returns: Returns a pointer to the newly created Item object. If the creation fails
    or the item cannot be properly initialized, it returns nullptr.
  examples:
  - title: Basic Item Creation
    code: Item *item = Item::CreateItem(12345, 1, 0, player, true);
    language: cpp
  - title: Advanced Item Creation with Context
    code: Item *item = Item::CreateItem(12345, 10, 1, player, false);
    language: cpp
  notes: The method is designed to be thread-safe and can be used in both single-threaded
    and multi-threaded environments. Performance considerations include the fact that
    this method may trigger database operations when creating items with default bonuses,
    so it should be used judiciously in high-frequency scenarios.
  warnings: The method does not validate if the item entry exists in the database,
    which can lead to null pointer dereferences if invalid item IDs are passed. Care
    must be taken to ensure that item entries are valid before calling this method.
  related:
  - Item::CreateItem
  - Item::GetTemplate
  - Item::GetOwner
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:15:20.701465'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
