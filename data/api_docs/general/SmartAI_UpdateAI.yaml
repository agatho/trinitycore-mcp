api:
  class: SmartAI
  method: UpdateAI
  signature: void SmartAI::UpdateAI(uint32 diff)
documentation:
  brief: Updates the SmartAI behavior based on elapsed time and triggers AI events
  description: The UpdateAI method is the primary update loop for SmartAI, called
    every game tick to process AI logic. It handles event timing, condition checks,
    and execution of AI actions based on the provided time delta. This method is essential
    for all SmartAI-based creature behaviors, ensuring that AI responses are timely
    and contextually appropriate. The method processes queued events, manages cooldowns,
    and evaluates triggers based on the elapsed time since last update.
  parameters:
  - name: diff
    description: Time delta in milliseconds since last UpdateAI call. Used to determine
      when to trigger timed events or actions.
  returns: null
  examples:
  - title: Basic UpdateAI Usage
    code: "void CreatureAI::UpdateAI(uint32 diff)\n{\n    if (!UpdateVictim())\n \
      \       return;\n\n    // Process SmartAI logic\n    m_creature->GetAI()->UpdateAI(diff);\n\
      }"
    language: cpp
  - title: Custom AI Update with Event Handling
    code: "void MySmartAI::UpdateAI(uint32 diff)\n{\n    // Handle timed events\n\
      \    if (m_eventTimer <= diff)\n    {\n        m_eventTimer = 0;\n        //\
      \ Trigger custom event logic\n        DoEventAction();\n    }\n    else\n  \
      \  {\n        m_eventTimer -= diff;\n    }\n\n    // Call base SmartAI update\n\
      \    SmartAI::UpdateAI(diff);\n}"
    language: cpp
  notes: This method is automatically called by the core game loop and should not
    be invoked manually unless implementing custom AI logic. The diff parameter represents
    actual game time, not CPU time, making it suitable for timing-based AI behaviors.
    Performance considerations include avoiding heavy operations within this method
    as it's called frequently.
  warnings: Do not call this method directly from custom AI implementations without
    understanding the implications. Modifying internal state during UpdateAI calls
    can cause unpredictable behavior. Be careful with long-running operations as they
    will block other AI updates.
  related:
  - SmartAI::OnCombatStart
  - SmartAI::OnCombatStop
  - SmartAI::OnSpellCasted
  - SmartAI::OnMoveInLineOfSight
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T21:36:02.491276'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
