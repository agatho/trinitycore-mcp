api:
  class: InventoryManager
  method: GetItemsByQuality
  signature: int InventoryManager::GetItemsByQuality(uint32 quality) const
documentation:
  brief: Counts and returns the total number of items in the inventory that match
    the specified quality level.
  description: The GetItemsByQuality method iterates through all items currently present
    in the inventory managed by the InventoryManager instance and tallies up the count
    of items matching the provided quality parameter. This method is commonly used
    in game logic to determine how many items of a specific rarity (e.g., common,
    uncommon, rare) a player possesses. The quality parameter corresponds to standard
    World of Warcraft item quality values such as 0 for Poor, 1 for Common, 2 for
    Uncommon, 3 for Rare, 4 for Epic, and 5 for Legendary. This method does not modify
    the inventory state but provides a read-only count of qualifying items.
  parameters: []
  returns: An integer representing the total number of items in the inventory that
    match the specified quality level. Returns zero if no items of the given quality
    are found or if the inventory is empty.
  examples:
  - title: Count Rare Items
    code: 'InventoryManager* inv = player->GetSession()->GetPlayer()->GetInventory();

      int rareItemCount = inv->GetItemsByQuality(3); // Quality 3 = Rare

      printf("Player has %d rare items\n", rareItemCount);'
    language: cpp
  - title: Check for Legendary Items
    code: "InventoryManager* inv = player->GetSession()->GetPlayer()->GetInventory();\n\
      int legendaryCount = inv->GetItemsByQuality(4); // Quality 4 = Epic\nif (legendaryCount\
      \ > 0) {\n    // Player has at least one epic item\n    printf(\"Player has\
      \ %d epic items\\n\", legendaryCount);\n}"
    language: cpp
  notes: This method performs a full iteration over the inventory's item list, which
    may have performance implications for players with very large inventories. It
    is recommended to cache results if this method is called frequently in performance-critical
    code paths.
  warnings: The method assumes that the quality parameter is within valid range (0-5).
    Invalid quality values may lead to unexpected behavior or incorrect counts. Ensure
    that the InventoryManager instance is properly initialized and not null before
    calling this method.
  related:
  - GetItemsByType
  - GetItemCount
  - GetItemByEntry
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T12:13:47.480949'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
