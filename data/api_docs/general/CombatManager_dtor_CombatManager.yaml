api:
  class: CombatManager
  method: ~CombatManager
  signature: void CombatManager::~CombatManager()
documentation:
  brief: Destroys the combat manager instance and cleans up associated resources.
  description: The CombatManager destructor is responsible for properly cleaning up
    all combat-related data structures and resources when the object is destroyed.
    This includes releasing any allocated memory, clearing combat state information,
    and ensuring that no dangling references remain. The method ensures proper cleanup
    of combatant data and maintains game stability by preventing memory leaks during
    object destruction.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'CombatManager* manager = new CombatManager();

      // ... perform combat operations

      delete manager;'
    language: cpp
  notes: The destructor is automatically called when the object goes out of scope
    or is deleted. It's important to note that this method should not be called directly
    unless explicitly needed, as it's part of the standard C++ object lifecycle.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:59:16.768567'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
