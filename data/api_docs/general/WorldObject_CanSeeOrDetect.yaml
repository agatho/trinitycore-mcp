api:
  class: WorldObject
  method: CanSeeOrDetect
  signature: bool WorldObject::CanSeeOrDetect(const WorldObject * obj, const CanSeeOrDetectExtraArgs
    & args) const
documentation:
  brief: Determines whether a WorldObject can see or detect another WorldObject based
    on visibility and detection mechanics.
  description: The CanSeeOrDetect method evaluates whether a given WorldObject can
    visually perceive or detect another WorldObject, taking into account various game
    mechanics such as visibility, stealth, invisibility, and detection abilities.
    This method is crucial for determining if objects are within visual range or can
    be detected by other objects, particularly in combat scenarios where visibility
    matters. It considers factors like distance, line of sight, and object state (such
    as stealth or invisibility) to determine detection capability. The method returns
    true when the target object can be seen or detected by the calling object, false
    otherwise.
  parameters:
  - name: obj
    description: The WorldObject that is being checked for visibility or detection.
      This represents the target object that may be visible or detectable by the calling
      object.
  - name: args
    description: Additional arguments that define extra conditions for detection,
      such as whether the object is in stealth, invisibility, or other special states
      that affect visibility.
  returns: Returns true if the WorldObject can see or detect the target object, false
    otherwise. The result depends on factors like distance, line of sight, and object
    state (e.g., stealth, invisibility).
  examples:
  - title: Basic usage example
    code: "if (player->CanSeeOrDetect(targetNPC)) {\n    // Do something\n}\n"
    language: cpp
  - title: Advanced usage with detection args
    code: "CanSeeOrDetectExtraArgs args;\nargs.isStealth = true;\nif (player->CanSeeOrDetect(targetNPC,\
      \ args)) {\n    // Handle stealth detection\n}\n"
    language: cpp
  notes: This method is typically used in combat situations where visibility and detection
    are important. It may involve complex calculations involving distance, line of
    sight, and object states. Performance considerations include checking for line-of-sight
    and distance between objects.
  warnings: Care must be taken when using this method with stealthed or invisible
    objects, as incorrect handling can lead to false negatives in detection. The method
    should not be used as a sole determinant for combat decisions without considering
    other factors like visibility and distance.
  related:
  - CanSee
  - Detect
  - IsInvisible
  - IsStealth
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T00:39:49.437835'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
