api:
  class: Unit
  method: HasAuraType
  signature: bool Unit::HasAuraType(int auraType) const
documentation:
  brief: Determines whether the unit has a specific aura type applied.
  description: This method checks if the unit possesses a particular aura type, which
    is a fundamental aspect of World of Warcraft's spell mechanics. It evaluates the
    presence of a specified aura type within the unit's aura list, returning true
    if found and false otherwise. This functionality is crucial for determining spell
    effects, status conditions, and gameplay mechanics related to specific aura types
    such as periodic effects, buffs/debuffs, or magical effects. The method operates
    on the unit's current aura state and does not consider future or pending auras.
  parameters: []
  returns: Returns true if the unit has the specified aura type applied; otherwise
    returns false. This indicates whether the unit currently possesses the given aura
    type in its aura list.
  examples:
  - title: Basic usage example
    code: "if (unit->HasAuraType(SPELL_AURA_PERIODIC_DAMAGE)) {\n    // Unit has periodic\
      \ damage aura\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other aura-related methods
    to determine the presence of specific spell effects. Performance considerations
    are minimal as it only checks against existing aura list entries, but should be
    used judiciously in performance-critical code sections.
  warnings: The method does not distinguish between active and inactive auras; it
    simply checks if the specified aura type exists within the unit's current aura
    list. Be cautious when using this method with aura types that may have multiple
    instances or when dealing with complex spell effects.
  related:
  - Unit::HasAura
  - Unit::GetAura
  - Unit::GetAuraType
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:24:34.270113'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
