api:
  class: AuraEffect
  method: HandleModRecoveryRate
  signature: void AuraEffect::HandleModRecoveryRate(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the recovery rate of an aura effect based on application state and
    mode.
  description: The HandleModRecoveryRate method is responsible for adjusting the recovery
    rate of a specific aura effect applied to a unit. This method is typically invoked
    during aura application or removal events, where it modifies how quickly certain
    effects recover or decay. The behavior depends on the provided AuraApplication
    context, the mode of operation (such as apply or remove), and whether the effect
    is being activated or deactivated. It plays a key role in managing dynamic stat
    changes and cooldown adjustments related to auras.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      how the aura is applied to a unit. This includes details like the target, caster,
      and application state.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. Common
      values may include 0 for apply, 1 for remove, or other flags that define specific
      recovery behavior.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the effect. This determines if the recovery rate modification is being activated
      or deactivated.
  returns: null
  examples:
  - title: Applying a Recovery Rate Modification
    code: "void MyAuraEffect::HandleModRecoveryRate(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const {\n    if (apply) {\n        // Apply recovery\
      \ rate boost\n        aurApp->GetTarget()->ModifyFloatValue(UNIT_FIELD_MOD_CASTING_SPEED,\
      \ 0.1f);\n    } else {\n        // Remove recovery rate boost\n        aurApp->GetTarget()->ModifyFloatValue(UNIT_FIELD_MOD_CASTING_SPEED,\
      \ -0.1f);\n    }\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and should
    only be called from within the context of an aura application or removal sequence.
    It does not directly modify the aura's duration or stack count but instead affects
    how recovery rates are calculated during active effects.
  warnings: Incorrect usage of the mode parameter may lead to unexpected behavior
    in recovery rate calculations. Ensure that apply and mode values align with expected
    aura states to prevent unintended stat modifications.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetTarget
  - AuraEffect::GetAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:25:43.007940'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
