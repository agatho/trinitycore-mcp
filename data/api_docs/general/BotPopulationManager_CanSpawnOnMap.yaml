api:
  class: BotPopulationManager
  method: CanSpawnOnMap
  signature: bool BotPopulationManager::CanSpawnOnMap(uint32 mapId, uint32 maxBotsPerMap)
    const
documentation:
  brief: Determines whether bots can be spawned on a specified map based on current
    population limits
  description: The CanSpawnOnMap method evaluates if it is permissible to spawn additional
    bot characters on a given map, considering the maximum allowed bots per map. This
    check ensures that server resources and gameplay balance are maintained by preventing
    excessive bot population in any single area. The method typically consults internal
    tracking mechanisms to compare current bot count against configured limits for
    each map.
  parameters:
  - name: mapId
    description: The unique identifier of the map where bot spawning is being evaluated.
      Must correspond to a valid map in the game world.
  - name: maxBotsPerMap
    description: The maximum number of bots allowed on the specified map. This value
      determines the threshold for the spawn check.
  returns: Returns true if the bot can be spawned on the given map without exceeding
    the maximum limit; otherwise returns false.
  examples:
  - title: Basic usage to determine if a bot can spawn
    code: "if (botPopulationManager->CanSpawnOnMap(1, 50)) {\n    // Proceed with\
      \ spawning logic\n    botSpawner->SpawnBot(1);\n} else {\n    // Handle case\
      \ where spawning is not allowed\n    sLog->outString(\"Cannot spawn more bots\
      \ on map 1\");\n}"
    language: cpp
  notes: This method may involve checking internal counters or configuration settings
    that are updated dynamically during server runtime. It's recommended to call this
    method before attempting to spawn a bot to avoid exceeding limits.
  warnings: null
  related:
  - GetBotCountOnMap
  - SetMaxBotsPerMap
  - SpawnBot
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:44:53.833261'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
