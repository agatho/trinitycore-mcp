api:
  class: Spell
  method: HasPowerTypeCost
  signature: bool Spell::HasPowerTypeCost(int power) const
documentation:
  brief: Checks if the spell has a specific power type cost.
  description: This method determines whether a given spell requires a specific type
    of power (such as mana, rage, focus, or energy) to be cast. It is commonly used
    in spell validation and cost checking operations within the TrinityCore framework.
    The method returns true if the spell has the specified power type cost, false
    otherwise. This functionality is essential for implementing game mechanics related
    to spell casting requirements and resource management.
  parameters: []
  returns: Returns true if the spell has the specified power type cost, false otherwise.
    The method checks against common power types like mana, rage, focus, and energy,
    with the specific power type being passed as an integer parameter.
  examples:
  - title: Basic usage example
    code: "if (spell->HasPowerTypeCost(PowerType::POWER_MANA)) {\n    // Spell requires\
      \ mana to cast\n}"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related functions
    to validate casting requirements. It should be noted that the power type parameter
    must be a valid integer representing one of the standard power types defined in
    the game. Performance considerations are minimal as this is a simple lookup operation.
  warnings: Care must be taken when using this method with spells that may have multiple
    power types or no power type cost at all, as it only checks for a single power
    type. Also, ensure that the power type integer passed matches valid power type
    constants to avoid unexpected behavior.
  related:
  - Spell::GetPowerTypeCost
  - Spell::HasPowerType
  - Spell::IsSpellWithNoPowerCost
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T14:22:17.254607'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
