api:
  class: Item
  method: HasItemFlag
  signature: bool Item::HasItemFlag(ItemFieldFlags flag) const
documentation:
  brief: Checks if the item has a specific flag set in its item fields.
  description: The HasItemFlag method determines whether a particular ItemFieldFlags
    flag is set within the item's data structure. This method is commonly used to
    verify item properties such as whether an item is bound, has a soulbound flag,
    or is a container. It serves as a crucial check for item behavior in World of
    Warcraft's TrinityCore framework, particularly when evaluating item attributes
    during gameplay mechanics like auction house interactions, item binding, or container
    operations.
  parameters: []
  returns: Returns true if the specified ItemFieldFlags flag is set on the item; otherwise
    returns false. The method does not return null as it is a boolean check.
  examples:
  - title: Basic usage example
    code: "if (item->HasItemFlag(ITEM_FIELD_FLAG_SOULBOUND)) {\n    // Item is soulbound\n\
      }\n"
    language: cpp
  - title: Advanced usage with multiple flags
    code: "ItemFieldFlags flags = ITEM_FIELD_FLAG_BIND_ON_PICK;\nif (item->HasItemFlag(flags))\
      \ {\n    // Item is bind-on-pick\n}\n"
    language: cpp
  notes: This method is thread-safe and performs efficiently as it directly checks
    the item's data flags without requiring additional database calls or complex operations.
    Developers should be aware that this method only checks for specific flag values,
    not the entire item field structure.
  warnings: Be cautious when using this method with different item types, as incorrect
    flag usage may lead to incorrect behavior in item binding or auction house interactions.
    Ensure proper flag validation before using.
  related:
  - Item::GetItemField
  - Item::SetItemField
  - Item::HasFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:47:17.154645'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
