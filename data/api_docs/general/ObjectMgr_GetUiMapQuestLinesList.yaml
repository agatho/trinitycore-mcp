api:
  class: ObjectMgr
  method: GetUiMapQuestLinesList
  signature: const int * ObjectMgr::GetUiMapQuestLinesList(uint32 uiMapId) const
documentation:
  brief: Retrieves the list of quest lines associated with a specified map ID for
    UI display purposes.
  description: The GetUiMapQuestLinesList method returns a constant integer pointer
    representing an array of quest line identifiers linked to the given map ID. This
    function is primarily used by the user interface system to determine which quests
    should be displayed on a specific map's quest log or minimap. The returned array
    is typically null-terminated and contains indices that correspond to predefined
    quest line data structures within the game's internal quest management system.
    It is important to note that this method does not validate the input map ID, so
    calling it with an invalid map ID may result in undefined behavior or return a
    null pointer.
  parameters: []
  returns: A constant integer pointer to an array of quest line IDs associated with
    the specified map. The array is null-terminated and contains identifiers that
    reference quest lines defined in the game's database. Returns nullptr if no quest
    lines are found for the given map ID or if the map ID is invalid.
  examples:
  - title: Retrieve Quest Lines for a Map
    code: "const int* questLines = sObjectMgr->GetUiMapQuestLinesList(1234);\nif (questLines\
      \ != nullptr)\n{\n    for (int i = 0; questLines[i] != 0; ++i)\n    {\n    \
      \    printf(\"Quest Line ID: %d\\n\", questLines[i]);\n    }\n}"
    language: cpp
  notes: This method accesses internal quest line data structures and should only
    be called from within the game's core systems or during initialization phases.
    The returned array must not be modified as it points to static data. Performance
    may vary depending on how many quest lines are associated with a map, though caching
    mechanisms are typically implemented internally.
  warnings: Calling this method with an invalid map ID can lead to memory access violations
    or undefined behavior. Always verify that the map ID exists before calling this
    function, especially when dealing with dynamic map IDs from external sources.
    The returned pointer is only valid until the next call to this method or until
    the ObjectMgr instance is destroyed.
  related:
  - GetQuestForMap
  - GetMapQuestLines
  - GetUiMapIdForQuest
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:04:30.317378'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
