api:
  class: SoloCombatStrategy
  method: UpdateBehavior
  signature: void SoloCombatStrategy::UpdateBehavior(BotAI * ai, uint32 diff)
documentation:
  brief: Updates the behavior of a bot during solo combat based on the provided AI
    context and time delta.
  description: The UpdateBehavior method is responsible for managing and adjusting
    the tactical actions of a bot when it is engaged in solo combat. It evaluates
    the current state of the bot, including its health, mana, target status, and available
    abilities, to determine appropriate combat behavior. This method is typically
    called repeatedly during combat to ensure that the bot's actions remain adaptive
    and effective against its opponent. The method uses the provided BotAI context
    to access the bot's state and the diff parameter to understand how much time has
    passed since the last update, allowing for timing-sensitive behaviors such as
    cooldown management or spell casting delays.
  parameters:
  - name: ai
    description: Pointer to the BotAI instance that controls the behavior of the bot
      during combat. This provides access to the bot's current state, target information,
      and available actions.
  - name: diff
    description: The time elapsed (in milliseconds) since the last call to this method.
      Used for timing-based decisions such as spell cooldowns, movement delays, or
      behavior transitions.
  returns: null
  examples:
  - title: Basic usage in combat loop
    code: "void CombatUpdate(BotAI* ai, uint32 diff) {\n    SoloCombatStrategy strategy;\n\
      \    strategy.UpdateBehavior(ai, diff);\n}"
    language: cpp
  - title: Integration with AI update loop
    code: "void BotAI::UpdateAI(uint32 diff) {\n    if (IsInCombat()) {\n        soloCombatStrategy.UpdateBehavior(this,\
      \ diff);\n    }\n}"
    language: cpp
  notes: This method is expected to be called frequently during combat, ideally every
    tick or at regular intervals. The implementation should avoid heavy computations
    or blocking operations to maintain responsiveness. It's important to ensure that
    ai is not null before calling this method.
  warnings: Calling UpdateBehavior with a null ai pointer will likely result in a
    crash or undefined behavior. Also, passing an incorrect diff value (e.g., negative
    or extremely large) may lead to unexpected timing-based behaviors.
  related:
  - SoloCombatStrategy::GetNextAction
  - SoloCombatStrategy::IsInCombat
  - BotAI::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:16:56.060405'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
