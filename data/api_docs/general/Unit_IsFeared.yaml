api:
  class: Unit
  method: IsFeared
  signature: bool Unit::IsFeared() const
documentation:
  brief: Determines whether the unit is under the effect of a fear spell.
  description: The IsFeared method checks if a Unit object is currently affected by
    a fear spell, which prevents it from moving and attacking. This method is commonly
    used in AI scripts to determine if an enemy is immobilized or controlled by fear
    mechanics. The method returns true when the unit has a fear effect applied to
    it, typically through a spell that causes the unit to be unable to move or attack.
    It's important to note that this method does not distinguish between different
    types of fear effects, such as fear, charm, or other mind control effects.
  parameters: []
  returns: Returns true if the unit is currently under the effect of a fear spell,
    false otherwise. This indicates that the unit cannot move or attack due to being
    controlled by fear mechanics.
  examples:
  - title: Basic usage in AI script
    code: "if (unit->IsFeared())\n{\n    // Perform actions when unit is feared\n\
      \    // Example: stop attacking, run away\n}"
    language: cpp
  notes: This method relies on the internal state of the unit's aura system. It may
    be affected by the presence of multiple fear effects or other control mechanisms
    that prevent movement. Performance considerations include checking for active
    auras and ensuring proper handling of different fear types.
  warnings: The method does not differentiate between various fear types (e.g., fear
    vs. charm), so developers should be aware that other mind control effects may
    also trigger this method. Also, the method will return false if the unit is not
    currently under any fear effect, even if it has been previously affected by fear.
  related:
  - IsFleeing
  - IsCharmed
  - HasAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T12:09:17.083070'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
