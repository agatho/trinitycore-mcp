api:
  class: SpellInfo
  method: CalcPowerCost
  signature: int SpellInfo::CalcPowerCost(const int * power, bool optionalCost, const
    WorldObject * caster, int schoolMask, Spell * spell) const
documentation:
  brief: Calculates the power cost for a spell based on caster's attributes and spell
    properties
  description: This method computes the actual power cost required to cast a spell,
    taking into account various factors such as caster's level, spell school, power
    type, and optional cost settings. It is used internally by the TrinityCore engine
    to determine how much mana, rage, focus, or other resources are needed for spell
    execution. The method considers both mandatory and optional costs, with optionalCost
    indicating whether the cost should be calculated as if the spell were cast without
    any additional cost modifiers.
  parameters:
  - name: power
    description: Pointer to the power value that will be used in calculations; typically
      represents the amount of power needed for the spell. This parameter is usually
      set to nullptr when dealing with optional costs.
  - name: optionalCost
    description: Boolean flag indicating whether the cost should be calculated as
      if the spell were cast without any additional cost modifiers. If true, the method
      may return a different value than normal.
  - name: caster
    description: Pointer to the WorldObject acting as the caster of the spell. This
      object determines the caster's attributes such as level and power type which
      affect the calculation.
  - name: schoolMask
    description: Integer representing the spell school mask, used to determine which
      power type is relevant for calculating the cost. This affects how much mana
      or other resources are required.
  - name: spell
    description: Pointer to the Spell object being calculated. This provides context
      about the spell's properties and effects that influence the power cost calculation.
  returns: Returns an integer representing the calculated power cost for the spell,
    which can be zero or negative if optionalCost is set to true and no additional
    cost is applied.
  examples:
  - title: Basic usage example
    code: int cost = spellInfo->CalcPowerCost(&power, false, caster, schoolMask, spell);
    language: cpp
  - title: Optional cost calculation example
    code: int cost = spellInfo->CalcPowerCost(nullptr, true, caster, schoolMask, spell);
    language: cpp
  notes: This method is part of the internal spell handling system and should not
    be called directly from outside the engine. It uses the caster's level and power
    type to determine the correct cost calculation, making it crucial for accurate
    spell execution in World of Warcraft.
  warnings: Care must be taken when using this method with optionalCost set to true,
    as it may return unexpected values if the spell is not properly configured for
    optional costs. Also, ensure that the caster object is valid and not null before
    calling this method.
  related:
  - SpellInfo::GetPowerType
  - SpellInfo::GetSchoolMask
  - SpellInfo::CalcManaCost
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:41:02.575386'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
