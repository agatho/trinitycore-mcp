api:
  class: Unit
  method: GetUnitBlockChance
  signature: float Unit::GetUnitBlockChance(int attType, const Unit * victim) const
documentation:
  brief: Calculates the chance for a unit to block an attack based on attack type
    and victim characteristics
  description: The GetUnitBlockChance method determines the probability that a unit
    will successfully block an incoming attack. This method takes into account the
    attack type (melee, ranged, or spell) and the victim's defensive attributes such
    as level difference and armor. The calculation involves complex game mechanics
    including base block chance, level difference penalties, and armor reduction effects.
    It is used primarily in combat system calculations to determine whether an attack
    will be blocked or not.
  parameters:
  - name: attType
    description: The type of attack being performed (melee, ranged, or spell). This
      parameter determines which block chance calculation applies and affects the
      base chance value.
  - name: victim
    description: The target unit that is being attacked. This parameter influences
      the calculation through defensive attributes like level difference and armor
      values.
  returns: Returns a float value representing the block chance percentage. The value
    can range from 0.0 to 100.0, where 0.0 indicates no chance of blocking and 100.0
    indicates full chance of blocking an attack.
  examples:
  - title: Basic usage example
    code: "float blockChance = attacker->GetUnitBlockChance(ATTACK_MELEE, target);\n\
      if (blockChance > 0.0f) {\n    // Attack will be blocked\n}"
    language: cpp
  - title: Advanced usage example
    code: "float blockChance = attacker->GetUnitBlockChance(ATTACK_RANGED, target);\n\
      float baseBlockChance = 10.0f;\nfloat levelDiffPenalty = 5.0f;\nfloat armorReduction\
      \ = 2.5f;\nfloat finalBlockChance = baseBlockChance - levelDiffPenalty - armorReduction;\n\
      if (finalBlockChance > 0.0f) {\n    // Attack will be blocked\n}"
    language: cpp
  notes: This method is part of the combat system and should only be called during
    actual attack processing. The calculation considers both attacker and victim's
    attributes, making it important to understand that this method returns a dynamic
    value based on current game state rather than static values.
  warnings: This method should not be used outside of combat calculations as it may
    lead to incorrect results if used with non-combat contexts. Also, the method requires
    valid victim parameters to function correctly and will return 0.0 if the victim
    is nullptr or invalid.
  related:
  - GetUnitMeleeAttackRating
  - GetUnitRangedAttackRating
  - GetUnitSpellAttackRating
  - GetUnitBlockChance
  - GetUnitParryChance
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:33:22.241260'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
