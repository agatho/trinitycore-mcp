api:
  class: Unit
  method: SpellCriticalDamageBonus
  signature: uint32 Unit::SpellCriticalDamageBonus(const Unit * caster, const SpellInfo
    * spellProto, uint32 damage, Unit * victim)
documentation:
  brief: Calculates critical damage bonus for spell attacks based on caster and spell
    information
  description: This method computes the additional damage that occurs when a spell
    lands a critical hit, taking into account the caster's attributes, the specific
    spell being cast, and the target's resistance. It is used in the calculation of
    critical strike effects for spells, particularly those with critical damage bonuses.
    The method considers both the caster's level and the spell's critical chance,
    returning a uint32 value representing the bonus damage added to the base damage
    calculation.
  parameters:
  - name: caster
    description: Pointer to the Unit that is casting the spell; can be null for certain
      scenarios like direct damage spells. This parameter affects how critical strike
      calculations are performed.
  - name: spellProto
    description: Pointer to the SpellInfo structure defining the spell being cast;
      contains information about spell mechanics, effects, and critical chance properties.
      This is essential for determining the critical bonus calculation.
  - name: damage
    description: Base damage value being calculated; represents the original damage
      amount before any critical strike modifications are applied.
  - name: victim
    description: Pointer to the Unit receiving the spell attack; used to determine
      target resistance and other defensive factors that may affect critical strike
      calculations.
  returns: Represents the additional damage added due to a critical strike, which
    is calculated based on the caster's attributes, the spell's properties, and the
    victim's resistance. Returns zero if no critical bonus applies or if the calculation
    fails.
  examples:
  - title: Basic usage example
    code: 'uint32 damage = pUnit->SpellCriticalDamageBonus(pCaster, pSpellInfo, baseDamage,
      pVictim);

      // This returns the critical damage bonus for a spell attack'
    language: cpp
  - title: Advanced usage example
    code: "uint32 bonus = unit->SpellCriticalDamageBonus(caster, spellProto, damage,\
      \ victim);\nif (bonus > 0)\n{\n    uint32 finalDamage = damage + bonus;\n}\n\
      else\n{\n    // Handle non-critical strike case\n}"
    language: cpp
  notes: This method is part of the core spell handling system in TrinityCore and
    should be used carefully during spell calculations. Performance considerations
    include checking for null pointers and ensuring proper casting context. Thread
    safety depends on the implementation details of the calling code, but generally
    this method does not require special thread synchronization.
  warnings: The method may return zero if no critical bonus exists or if the spell
    does not have a critical strike effect defined. Care must be taken when using
    this method with different spell types as it only applies to spells that support
    critical damage bonuses. Also, incorrect usage of parameters can lead to invalid
    calculations.
  related:
  - SpellCriticalStrikeChance
  - SpellCriticalHit
  - SpellDamageBonus
  - SpellCriticalDamage
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:15:12.836644'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
