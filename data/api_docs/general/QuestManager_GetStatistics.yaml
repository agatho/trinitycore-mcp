api:
  class: QuestManager
  method: GetStatistics
  signature: const Statistics & QuestManager::GetStatistics() const
documentation:
  brief: Returns a constant reference to the quest statistics structure for this QuestManager
    instance.
  description: The GetStatistics method provides access to the internal statistics
    tracking structure that holds various metrics and data related to quest completion,
    player progress, and other quest-related activities within the TrinityCore framework.
    This method is typically used by subsystems or modules that need to analyze or
    report on quest-related data without modifying the underlying statistics. The
    returned Statistics object is const, ensuring that external code cannot modify
    the internal state through this interface. This method does not perform any computation
    or I/O operations; it simply returns a reference to pre-computed data stored within
    the QuestManager.
  parameters: []
  returns: A constant reference to the Statistics structure containing quest-related
    metrics and data. The structure typically includes information such as total quests
    completed, active quests, quest completion times, and other aggregate statistics
    relevant to player quest engagement.
  examples:
  - title: Accessing Quest Statistics
    code: 'const auto& stats = questManager.GetStatistics();

      uint32 completedQuests = stats.totalCompleted;

      uint32 activeQuests = stats.activeQuestCount;

      printf("Player has completed %u quests and has %u active quests\n", completedQuests,
      activeQuests);'
    language: cpp
  - title: Reporting Quest Progress
    code: "void ReportPlayerProgress(QuestManager& questMgr) {\n    const auto& stats\
      \ = questMgr.GetStatistics();\n    std::cout << \"Total quests: \" << stats.totalQuests\
      \ << std::endl;\n    std::cout << \"Completed: \" << stats.totalCompleted <<\
      \ std::endl;\n    std::cout << \"Completion rate: \" << (stats.totalQuests >\
      \ 0 ? \n        (stats.totalCompleted * 100.0f / stats.totalQuests) : 0.0f)\
      \ << \"%\" << std::endl;\n}"
    language: cpp
  notes: The Statistics object returned by this method is maintained internally by
    the QuestManager and updated as quests are accepted, completed, or abandoned.
    The reference remains valid for the lifetime of the QuestManager instance. This
    method is thread-safe if the underlying QuestManager implementation supports concurrent
    access to its statistics.
  warnings: While the returned reference is const, be aware that the Statistics structure
    itself may contain mutable fields if not properly encapsulated. Accessing this
    data should be done carefully in multi-threaded environments where the QuestManager
    might be modified concurrently. Also note that the internal statistics may not
    reflect real-time changes until the next update cycle.
  related:
  - SetStatistics
  - UpdateStatistics
  - ResetStatistics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:45:50.299830'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
