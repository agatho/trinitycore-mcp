api:
  class: Spell
  method: CheckRuneCost
  signature: SpellCastResult Spell::CheckRuneCost() const
documentation:
  brief: Checks if the spell has sufficient rune costs to be cast.
  description: This method evaluates whether the current spell has the required rune
    costs to be cast successfully. It checks for the presence and validity of runes
    needed for the spell, including any additional requirements such as energy or
    mana. The method returns a SpellCastResult indicating whether the spell can proceed
    with casting or if there are insufficient resources. This is commonly used in
    conjunction with other spell-related methods to validate spell execution conditions.
  parameters: []
  returns: Returns SpellCastResult indicating whether the spell can be cast successfully
    or if there are insufficient rune costs. Possible values include SPELL_CAST_OK,
    SPELL_FAILED_NO_Runes, SPELL_FAILED_Runes_INCOMPLETE, and others depending on
    the specific requirements and conditions.
  examples:
  - title: Basic usage example
    code: "SpellCastResult result = spell->CheckRuneCost();\nif (result == SPELL_CAST_OK)\n\
      {\n    // Spell can be cast\n}\nelse\n{\n    // Handle the error\n}"
    language: cpp
  notes: This method is typically used during spell validation phase and should be
    called before attempting to cast a spell. It's important to note that this method
    only checks rune costs, not other resources like mana or energy. Implementation
    details include checking for specific rune types and their quantities required
    by the spell.
  warnings: This method does not check for other resource requirements such as mana
    or energy. Developers should ensure that additional validation is performed if
    these resources are also needed. Also, this method may not account for temporary
    rune modifications or effects from buffs.
  related:
  - Spell::CheckCast
  - Spell::CheckManaCost
  - Spell::CheckRuneCost
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T22:43:03.355820'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
