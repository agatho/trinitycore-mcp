api:
  class: Player
  method: IsBagPos
  signature: bool Player::IsBagPos(uint16 pos)
documentation:
  brief: Determines whether a given slot position represents a bag slot in the player's
    inventory.
  description: The IsBagPos method checks if a specified slot position corresponds
    to a bag slot within the player's inventory system. This method is essential for
    identifying valid bag positions and distinguishing them from regular inventory
    slots. It helps determine whether a particular slot can hold container items such
    as bags, which are typically located in specific bag slots rather than general
    inventory slots. The method returns true when the position refers to a bag slot,
    and false otherwise.
  parameters:
  - name: pos
    description: The slot position to check. This is typically a uint16 value representing
      an inventory slot number, where bag slots are usually in the range of 19-23
      for the player's main bag slots.
  returns: Returns true if the specified position corresponds to a bag slot; otherwise
    returns false.
  examples:
  - title: Checking if a slot is a bag position
    code: "if (player->IsBagPos(19)) {\n    // This slot is a bag slot\n}\nelse {\n\
      \    // This slot is not a bag slot\n}"
    language: cpp
  notes: This method is commonly used in conjunction with other inventory-related
    methods to validate bag slot positions. It's important to note that the method
    does not check if the slot is occupied or empty, only whether it represents a
    valid bag slot.
  warnings: Be cautious when using this method with invalid slot positions as it may
    lead to undefined behavior or crashes if the slot position is outside the valid
    range of inventory slots. Always ensure that the slot position being checked is
    within the bounds of the player's inventory.
  related:
  - IsInventoryPos
  - IsEquippedSlot
  - GetBagSlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:55:12.997202'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
