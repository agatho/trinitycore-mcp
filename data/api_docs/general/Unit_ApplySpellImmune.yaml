api:
  class: Unit
  method: ApplySpellImmune
  signature: void Unit::ApplySpellImmune(uint32 spellId, int op, uint32 type, bool
    apply)
documentation:
  brief: Applies or removes spell immunity for a specific spell ID and type
  description: The ApplySpellImmune method allows a Unit to set or remove spell immunity
    for a given spell ID, operation type, and immunity type. This method is commonly
    used in World of Warcraft to control how units respond to certain spells, particularly
    in relation to debuffs, buffs, and magical effects. It enables developers to modify
    the behavior of spells on units by applying or removing specific immunity types,
    which can affect the outcome of spell interactions. The method is typically used
    during spell processing or when modifying unit states during combat or other gameplay
    events.
  parameters:
  - name: spellId
    description: The unique identifier of the spell to apply or remove immunity for.
      This is typically a spell ID from the Spell.dbc file.
  - name: op
    description: The operation type, which determines whether the immunity is applied
      or removed. Valid values include 0 (apply) and 1 (remove).
  - name: type
    description: The immunity type to apply or remove. This specifies the type of
      immunity being modified, such as magic, physical, or specific spell types.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the immunity for the specified spell and type.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      Unit::ApplySpellImmune(12345, 0, 1, true);

      // Applies immunity for spell ID 12345 with type 1 (magic immunity) for the
      target'
    language: cpp
  - title: Advanced usage example
    code: 'Unit* target = GetTarget();

      Unit::ApplySpellImmune(12345, 1, 2, false);

      // Removes immunity for spell ID 12345 with type 2 (physical immunity) for the
      target

      // This may be used in a custom spell effect or during combat'
    language: cpp
  notes: This method is typically used in conjunction with other spell-related methods
    to control unit behavior during spell processing. It's important to note that
    the operation type (op) and immunity type (type) are critical for correct implementation,
    as incorrect values can lead to unintended spell interactions or immunity effects.
  warnings: Improper use of this method can lead to unexpected behavior in spell mechanics,
    especially if the parameters are not correctly set. It's essential to ensure that
    the spell ID is valid and that the operation type and immunity type align with
    expected values for correct functionality.
  related:
  - SpellImmune
  - GetSpellImmune
  - ApplySpellMod
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T21:27:04.519321'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
