api:
  class: Player
  method: CastItemCombatSpell
  signature: void Player::CastItemCombatSpell(const int & damageInfo, Item * item,
    const ItemTemplate * proto)
documentation:
  brief: Player casts an item-based combat spell with specified damage info and item.
  description: This method facilitates the execution of item combat spells within
    the World of Warcraft TrinityCore framework. It handles the casting process of
    a spell that originates from an item, using provided damage information and item
    template data. The method ensures proper handling of item-based combat mechanics,
    including damage calculation and spell application, while maintaining game balance
    and player interaction integrity.
  parameters:
  - name: damageInfo
    description: Reference to the damage information structure that contains details
      about the damage dealt by the item-based spell. This typically includes damage
      values, type, and other relevant parameters.
  - name: item
    description: Pointer to the Item object that is being used in the combat spell
      execution. This represents the actual item being cast from, containing properties
      like item ID, quality, and other attributes.
  - name: proto
    description: Pointer to the ItemTemplate structure which defines the template
      of the item being used. This contains information about item type, slot, and
      other template-specific details required for spell execution.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Player* player = new Player();

      Item* item = new Item();

      ItemTemplate* proto = new ItemTemplate();

      player->CastItemCombatSpell(damageInfo, item, proto);'
    language: cpp
  notes: This method should be called only when the player is in combat state and
    has an active item that can perform combat spells. It requires proper handling
    of damage information and item template to ensure correct spell execution.
  warnings: Improper handling of damageInfo or item parameters may lead to incorrect
    damage calculation, invalid spell casting, or even game crashes. Ensure all parameters
    are properly initialized before calling this method.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T01:04:50.057650'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
