api:
  class: Player
  method: SplitItem
  signature: void Player::SplitItem(uint16 src, uint16 dst, uint32 count)
documentation:
  brief: Splits an item from one slot to another, reducing the source stack and creating
    a new stack in the destination slot.
  description: The SplitItem method allows a player to divide an item from one inventory
    slot into two separate stacks, with the specified count being moved from the source
    slot to the destination slot. This operation is commonly used when players need
    to transfer items between their inventory or when splitting stackable items such
    as currency, potions, or other consumables. The method handles both the movement
    of item stacks and updates the player's inventory accordingly. It is typically
    invoked during gameplay when a player interacts with an item in their inventory,
    such as when using a potion or transferring items to another player.
  parameters:
  - name: src
    description: The source slot from which the item will be split. This is typically
      an inventory slot number where the item currently resides.
  - name: dst
    description: The destination slot where the item will be moved to. This can be
      any valid inventory slot, including bags or non-bag slots.
  - name: count
    description: The number of items to split from the source stack to the destination
      stack. This value must be greater than zero and less than or equal to the total
      quantity in the source slot.
  returns: null
  examples:
  - title: Basic Item Splitting Example
    code: 'Player* player = GetPlayer();

      uint16 srcSlot = 10;

      uint16 dstSlot = 15;

      uint32 count = 5;

      player->SplitItem(srcSlot, dstSlot, count);'
    language: cpp
  - title: Advanced Item Splitting with Inventory Validation
    code: "Player* player = GetPlayer();\nuint16 srcSlot = 20;\nuint16 dstSlot = 25;\n\
      uint32 count = 10;\nif (player->GetItemByPos(InventoryType::BAG, srcSlot) !=\
      \ nullptr)\n{\n    player->SplitItem(srcSlot, dstSlot, count);\n}\nelse\n{\n\
      \    // Handle error case\n}"
    language: cpp
  notes: The method internally handles the logic of updating item stacks and ensuring
    that the split operation does not exceed the maximum stack size for the item type.
    It is important to note that this method does not perform any validation checks
    on the source or destination slots, so developers must ensure that the slots are
    valid before calling SplitItem.
  warnings: This method may result in invalidating the player's inventory if used
    incorrectly. For example, if a player attempts to split an item from a slot that
    doesn't contain an item, or if the count exceeds the total quantity of the item
    in the source slot, it can lead to unexpected behavior or errors. Also, this method
    should not be called during critical game events or when the player is in combat,
    as it may cause synchronization issues.
  related:
  - Player::GetItemByPos
  - Player::AddItem
  - Player::MoveItemToInventory
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T23:29:28.987838'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
