api:
  class: LineOfSightManager
  method: CanAttackTarget
  signature: bool LineOfSightManager::CanAttackTarget(Unit * target)
documentation:
  brief: Determines whether a unit can attack a target based on line of sight and
    combat rules.
  description: The CanAttackTarget method evaluates if a given unit is able to initiate
    an attack against a specified target. This evaluation considers both the line-of-sight
    between the attacker and target, as well as any applicable combat restrictions
    or game mechanics such as PvP flags, faction relations, or target immunity states.
    The method returns true if the attack can proceed under current conditions, and
    false otherwise. It is commonly used in AI logic to determine valid attack targets
    for creatures or players.
  parameters: []
  returns: Returns true if the unit can attack the target (i.e., line of sight is
    clear and no combat restrictions prevent the attack), false otherwise.
  examples:
  - title: Basic usage in AI behavior
    code: "if (lineOfSightManager->CanAttackTarget(targetUnit)) {\n    attacker->Attack(targetUnit,\
      \ true);\n}"
    language: cpp
  - title: Checking attack eligibility before casting spell
    code: "if (lineOfSightManager->CanAttackTarget(target) && target->IsInWorld())\
      \ {\n    caster->CastSpell(target, SPELL_SHOOT, true);\n}"
    language: cpp
  notes: This method performs a comprehensive check including line-of-sight calculation
    and combat state validation. It may involve expensive operations like ray tracing
    or faction checks depending on implementation details. The result is cached internally
    for performance in repeated calls during the same frame.
  warnings: Do not assume that a unit can attack just because CanAttackTarget returns
    true; additional checks such as spell range, weapon availability, and target state
    should be performed before initiating combat actions.
  related:
  - IsInFront
  - IsWithinLOS
  - CanSee
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:18:06.674028'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
