api:
  class: GarrisonMgr
  method: GarrisonMgr
  signature: void GarrisonMgr::GarrisonMgr(GarrisonMgr && param0)
documentation:
  brief: Moves a GarrisonMgr object to another GarrisonMgr instance using move semantics.
  description: The GarrisonMgr constructor with move semantics transfers ownership
    of resources from one GarrisonMgr instance to another. This operation is typically
    used in scenarios where a temporary or intermediate GarrisonMgr object needs to
    be efficiently transferred to a target object without performing expensive deep
    copies. The method enables efficient resource management and is commonly utilized
    in container operations, function returns, or when implementing move-based algorithms
    within the garrison system of TrinityCore. It's important to note that after this
    operation, the source object should not be used as its state becomes undefined.
  parameters: []
  returns: null
  examples:
  - title: Move Constructing a GarrisonMgr
    code: 'GarrisonMgr&& tempGarrison = std::move(otherGarrison);

      GarrisonMgr newGarrison(std::move(tempGarrison));'
    language: cpp
  notes: This constructor is part of the move semantics implementation and should
    only be called with rvalue references. The source object after a move operation
    enters a valid but unspecified state, and any further operations on it are undefined
    behavior unless reinitialized.
  warnings: Do not use the source object after moving it. Using the moved-from object
    can lead to crashes or undefined behavior. This constructor is typically used
    internally by the compiler during container operations or function returns.
  related:
  - GarrisonMgr::operator=
  - GarrisonMgr::~GarrisonMgr
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:03:28.785315'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
