api:
  class: ObjectMgr
  method: GetGameObjectOverride
  signature: const int * ObjectMgr::GetGameObjectOverride(int spawnId) const
documentation:
  brief: Retrieves the override value for a game object by its spawn ID
  description: The GetGameObjectOverride method retrieves the override value associated
    with a specific game object identified by its spawn ID. This functionality is
    typically used in TrinityCore to manage custom modifications or overrides applied
    to game objects during runtime, such as altering their visual appearance, behavior,
    or properties based on server-side configurations or dynamic conditions. The method
    returns a pointer to an integer representing the override value, which may be
    NULL if no override is defined for the given spawn ID.
  parameters: []
  returns: A const pointer to an integer representing the override value for the specified
    game object spawn ID. Returns NULL if no override exists for the given spawn ID.
  examples:
  - title: Basic Usage
    code: "const int* overrideValue = sObjectMgr->GetGameObjectOverride(12345);\n\
      if (overrideValue != nullptr) {\n    std::cout << \"Override value: \" << *overrideValue\
      \ << std::endl;\n} else {\n    std::cout << \"No override defined for spawn\
      \ ID 12345\" << std::endl;\n}"
    language: cpp
  notes: This method is typically used in conjunction with game object management
    systems to dynamically modify object properties without requiring database updates.
    The returned pointer should not be modified directly as it points to internal
    data structures.
  warnings: The returned pointer may be NULL, so always check for null before dereferencing.
    Modifying the value pointed to by this method can have unintended consequences
    on game object behavior.
  related:
  - GetGameObjectTemplate
  - GetObjectOverride
  - SetGameObjectOverride
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:43:09.089153'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
