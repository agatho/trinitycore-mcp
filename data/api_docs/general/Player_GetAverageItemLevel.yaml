api:
  class: Player
  method: GetAverageItemLevel
  signature: float Player::GetAverageItemLevel() const
documentation:
  brief: Calculates and returns the average item level of all equipped items on the
    player's character.
  description: The GetAverageItemLevel method computes the average item level of all
    items currently equipped on the player's character, including weapons, armor,
    and other gear. This value is used in various game mechanics such as determining
    the player's overall strength, calculating damage output, and assessing equipment
    quality. The method considers all equipped items, including those in the main
    hand, off-hand, and ranged weapon slots, as well as armor pieces like head, shoulder,
    chest, legs, and feet. It excludes items that are not equipped or items that are
    currently being used for crafting or other purposes. This calculation is performed
    using the item level values of each equipped item, which are typically derived
    from the item's quality, enchantment, gem, and other factors.
  parameters: []
  returns: Returns a float value representing the average item level across all equipped
    items on the player's character. The value may be fractional if the average includes
    items with non-integer item levels, such as those from enchantments or gems. The
    method returns 0.0f if no items are equipped or if the player has no items in
    their inventory.
  examples:
  - title: Basic Usage Example
    code: 'float averageItemLevel = player->GetAverageItemLevel();

      std::cout << "Average Item Level: " << averageItemLevel << std::endl;'
    language: cpp
  - title: Usage in Combat Calculations
    code: 'Player* player = ObjectAccessor::GetPlayer("player_name");

      float avgItemLevel = player->GetAverageItemLevel();

      // Used for calculating damage based on item level

      float damage = avgItemLevel * 0.5f;

      std::cout << "Damage based on item level: " << damage << std::endl;'
    language: cpp
  notes: This method is typically used in conjunction with other player statistics
    calculations to determine overall character strength or performance. The calculation
    is performed by iterating through all equipped items and summing their item levels,
    then dividing by the total number of equipped items. This method is thread-safe
    and does not require any special locking mechanisms as it only reads from existing
    data structures.
  warnings: This method may return 0.0f if no items are equipped or if the player's
    inventory is empty. Be cautious when using this value in calculations, as it may
    not reflect actual game mechanics if players have items that are not equipped
    but still contribute to overall item level calculation. Also, this method does
    not account for items that are currently being used for crafting or other purposes.
  related:
  - GetItemByPos
  - GetEquippedItems
  - GetAverageItemLevel
  - GetItemBySlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:24:56.927759'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
