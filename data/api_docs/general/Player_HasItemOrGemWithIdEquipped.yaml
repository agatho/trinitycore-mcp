api:
  class: Player
  method: HasItemOrGemWithIdEquipped
  signature: bool Player::HasItemOrGemWithIdEquipped(uint32 item, uint32 count, uint8
    except_slot) const
documentation:
  brief: Checks if a player has an item or gem with specific ID equipped, considering
    optional slot exclusion.
  description: This method determines whether a player has an item or gem with a specified
    ID equipped in any inventory slot, excluding a potential specified slot. It is
    commonly used for checking quest requirements, item validation, or in-game logic
    where the presence of specific items needs to be verified. The method accounts
    for both regular items and gems, and supports optional slot exclusion to prevent
    checking certain slots. This function is particularly useful in scenarios involving
    item requirements, quest completion checks, or when verifying player inventory
    state during gameplay.
  parameters:
  - name: item
    description: The item ID to check for in the player's equipment. This can be a
      regular item ID or a gem ID.
  - name: count
    description: The number of items to check for (typically 1). If count is greater
      than 1, it checks for multiple instances of the same item.
  - name: except_slot
    description: Optional slot to exclude from the check. If set to 0, no slot exclusion
      occurs; otherwise, the specified slot will be excluded from the search.
  returns: Returns true if the player has the item or gem with the specified ID equipped
    in any slot except the one specified by except_slot, false otherwise.
  examples:
  - title: Basic usage example
    code: "if (player->HasItemOrGemWithIdEquipped(12345, 1)) {\n    // Player has\
      \ item ID 12345 equipped\n}"
    language: cpp
  - title: Advanced usage example with slot exclusion
    code: "if (player->HasItemOrGemWithIdEquipped(12345, 1, EQUIPMENT_SLOT_HEAD))\
      \ {\n    // Player has item ID 12345 equipped except in head slot\n}"
    language: cpp
  notes: This method internally checks all equipment slots including bags and the
    player's inventory. It is optimized for performance but can be slow if used frequently
    in tight loops. The method does not distinguish between item and gem IDs, so both
    are treated similarly. Implementation details include checking all possible slots
    and handling of slot exclusions.
  warnings: Be cautious when using this method with high frequency as it may impact
    performance. Also note that the method will return false if the player is not
    in possession of the specified item or gem, even if the item ID exists in database.
  related:
  - HasItemWithIdEquipped
  - HasGemWithIdEquipped
  - GetItemCount
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:04:56.065471'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
