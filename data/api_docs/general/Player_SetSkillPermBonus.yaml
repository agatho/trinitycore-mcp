api:
  class: Player
  method: SetSkillPermBonus
  signature: void Player::SetSkillPermBonus(uint32 pos, uint16 bonus)
documentation:
  brief: Sets a permanent bonus for a specific skill in the player's skill list.
  description: This method allows developers to assign a permanent bonus value to
    a particular skill position within the player's skill list. The skill is identified
    by its position index, and the bonus value represents the amount of additional
    skill points that will be added permanently to that skill. This functionality
    is commonly used for modifying player skill levels or adding special abilities
    during development or testing phases. The method affects the player's skill data
    directly without requiring any additional actions or updates.
  parameters:
  - name: pos
    description: The position index of the skill in the player's skill list, where
      0 represents the first skill entry.
  - name: bonus
    description: The permanent bonus value to be added to the specified skill position.
      This value is typically a uint16 representing additional skill points that will
      be applied permanently.
  returns: null
  examples:
  - title: Setting a skill bonus
    code: 'Player* player = GetPlayer();

      player->SetSkillPermBonus(0, 100);

      // Sets the first skill to have a permanent bonus of 100 points'
    language: cpp
  - title: Modifying multiple skills
    code: 'Player* player = GetPlayer();

      player->SetSkillPermBonus(5, 50);

      player->SetSkillPermBonus(10, 200);

      // Sets skill at position 5 to have a bonus of 50 points and skill at position
      10 to have a bonus of 200 points'
    language: cpp
  notes: This method directly modifies the player's skill data structure. It should
    be used carefully as it affects permanent skill bonuses, which may influence gameplay
    mechanics such as character progression or ability scores. The method does not
    trigger any automatic updates or notifications to the game system, so developers
    must ensure that any changes are properly handled within the context of the game
    logic.
  warnings: Improper use of this method can lead to incorrect skill values and potentially
    affect player character progression. It is recommended to validate skill positions
    before calling this method to avoid unexpected behavior or errors in skill data.
  related:
  - SetSkill
  - GetSkillValue
  - GetSkillBonus
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:42:26.532885'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
