api:
  class: SpellInfo
  method: HasTargetType
  signature: bool SpellInfo::HasTargetType(int target) const
documentation:
  brief: Checks whether the spell has a specific target type.
  description: This method determines if a spell's information contains a particular
    target type by examining the spell's target type configuration. It is commonly
    used in spell validation and targeting logic within TrinityCore's spell system.
    The method returns true if the specified target type is found in the spell's target
    type list, false otherwise. This functionality is essential for validating spell
    targets during spell processing and ensuring correct targeting behavior.
  parameters:
  - name: target
    description: The target type to check for within the spell's target type configuration.
      Valid values are typically integers representing different target types such
      as 'TARGET_UNIT_ENEMY' or 'TARGET_UNIT_FRIEND'. The exact range of valid target
      types depends on the specific spell being evaluated.
  returns: Returns true if the specified target type is present in the spell's target
    type list, false otherwise. This indicates whether the spell supports the given
    target type during execution.
  examples:
  - title: Basic usage example
    code: "SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);\nif (spellInfo->HasTargetType(TARGET_UNIT_ENEMY))\
      \ {\n    // Spell supports enemy target\n}"
    language: cpp
  - title: Advanced usage example
    code: "SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);\nif (spellInfo->HasTargetType(TARGET_UNIT_FRIEND))\
      \ {\n    // Spell supports friend target\n    // This can be used to validate\
      \ targeting during spell cast\n}"
    language: cpp
  notes: This method is part of the SpellInfo class and operates on spell data loaded
    from the database. It's important to note that this method only checks for target
    type presence, not whether the spell actually targets the specified type during
    execution. Performance considerations include checking against a potentially large
    set of target types.
  warnings: The method may return false even if the spell has multiple target types.
    Care must be taken when using this method to ensure proper validation of target
    types in spell processing logic. This method should not be used as the sole validation
    mechanism for targeting.
  related:
  - SpellInfo::GetTargetType
  - SpellInfo::HasEffect
  - SpellInfo::HasTarget
  - SpellInfo::GetTargets
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:55:59.613131'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
