api:
  class: InterruptManager
  method: ShouldInterruptDamage
  signature: bool InterruptManager::ShouldInterruptDamage(const SpellInfo * spellInfo,
    Unit * caster)
documentation:
  brief: Determines whether a spell should interrupt damage calculations based on
    its properties and caster.
  description: The ShouldInterruptDamage method evaluates if a given spell, as defined
    by its SpellInfo structure and cast by the specified caster unit, is capable of
    interrupting ongoing damage calculations. This functionality is typically used
    in combat systems to determine when damage-dealing spells should be interrupted
    or modified during execution. The method checks various spell attributes such
    as interrupt flags, damage type, and caster state to make this determination.
    It's commonly invoked during spell casting and damage application phases within
    the TrinityCore engine's combat mechanics.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing detailed information
      about the spell being evaluated. This includes spell flags, damage properties,
      and interrupt behavior definitions.
  - name: caster
    description: Pointer to the Unit object representing the caster of the spell.
      This unit's state, buffs, debuffs, and other properties are considered when
      evaluating interruption potential.
  returns: Returns true if the spell should interrupt damage calculations, false otherwise.
    The decision is based on spell flags indicating interruption capability and the
    caster's current state.
  examples:
  - title: Basic Usage in Combat Handler
    code: "if (interruptManager->ShouldInterruptDamage(spellInfo, caster)) {\n   \
      \ // Apply interruption logic\n    caster->InterruptSpell(CURRENT_GENERIC_SPELL);\n\
      }"
    language: cpp
  - title: Integration with Spell Casting System
    code: "void CombatHandler::HandleSpellDamage(Spell* spell) {\n    if (interruptManager->ShouldInterruptDamage(spell->m_spellInfo,\
      \ spell->m_caster)) {\n        // Modify damage calculation or cancel ongoing\
      \ effects\n        spell->Cancel();\n    }\n}"
    language: cpp
  notes: This method relies on the SpellInfo structure's interrupt flags and may be
    called frequently during combat processing. Performance is optimized through early
    returns and cached spell properties where applicable.
  warnings: Ensure that both spellInfo and caster parameters are valid pointers before
    calling this method, as null pointer dereferences will cause crashes. The method
    assumes proper initialization of spell data structures.
  related:
  - InterruptManager::ShouldInterruptSpell
  - InterruptManager::ShouldInterruptCast
  - Unit::InterruptSpell
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:24:34.339560'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
