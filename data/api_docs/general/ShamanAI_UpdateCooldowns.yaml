api:
  class: ShamanAI
  method: UpdateCooldowns
  signature: void ShamanAI::UpdateCooldowns(int diff)
documentation:
  brief: Updates the cooldown tracking for Shaman abilities.
  description: The UpdateCooldowns method manages the internal cooldown state of a
    Shaman's abilities within the AI system. It processes the time elapsed since the
    last update (passed via the 'diff' parameter) to decrement active cooldowns and
    determine when new abilities can be used. This method is typically called during
    the AI update cycle to ensure proper timing and availability of spells, abilities,
    and talents for shaman characters in combat situations. The implementation handles
    various cooldown types including global cooldowns, spell-specific cooldowns, and
    ability-based cooldowns relevant to shaman gameplay mechanics.
  parameters:
  - name: diff
    description: The time difference (in milliseconds) since the last update cycle.
      This value is used to calculate how much time has passed and thus how much cooldown
      time should be reduced.
  returns: null
  examples:
  - title: Basic Usage in AI Update Loop
    code: "void ShamanAI::Update(const uint32 diff)\n{\n    // ... other AI logic\
      \ ...\n    UpdateCooldowns(diff);\n    // ... rest of AI logic ...\n}"
    language: cpp
  - title: Integration with Combat State Management
    code: "void ShamanAI::UpdateCombatState(const uint32 diff)\n{\n    if (me->IsInCombat())\n\
      \    {\n        UpdateCooldowns(diff);\n        // Handle spell casting logic\
      \ based on updated cooldowns\n    }\n}"
    language: cpp
  notes: This method is part of the core AI update loop and should be called regularly
    to maintain accurate cooldown tracking. The 'diff' parameter must accurately reflect
    the elapsed time since the last call, otherwise cooldown calculations will be
    incorrect. This method does not directly cast spells but prepares the internal
    state for spell casting decisions.
  warnings: Do not call this method outside of the AI update context as it relies
    on consistent timing and state management. Passing incorrect or zero 'diff' values
    can cause cooldowns to behave unexpectedly, potentially leading to unbalanced
    gameplay or ability usage issues.
  related:
  - ShamanAI::Update
  - ShamanAI::CastSpell
  - ShamanAI::CanCastSpell
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:39:48.459701'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
