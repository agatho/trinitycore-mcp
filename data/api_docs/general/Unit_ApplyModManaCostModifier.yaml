api:
  class: Unit
  method: ApplyModManaCostModifier
  signature: void Unit::ApplyModManaCostModifier(int school, int32 mod, bool apply)
documentation:
  brief: Applies a modifier to the mana cost of spells for a specific school of magic.
  description: This method modifies the mana cost of spells by applying a percentage-based
    or flat value modifier to a specific magic school. It is commonly used in spell
    effects that alter mana cost, such as those found in talent trees, buffs/debuff
    effects, or special abilities. The method allows for precise control over how
    much mana a spell consumes, making it essential for implementing game mechanics
    like mana reduction, increased mana cost, or other magical modifications. The
    modifier can be either positive (increasing mana cost) or negative (decreasing
    mana cost), and applies to all spells of the specified school.
  parameters:
  - name: school
    description: The magic school type (0-6) to which the modifier applies, where
      0=Physical, 1=Holy, 2=Fire, 3=Nature, 4=Shadow, 5=Arcane, 6= Holy. This determines
      which spells are affected by the modifier.
  - name: mod
    description: The modifier value to apply, either as a percentage or flat amount.
      Negative values reduce mana cost, positive values increase it. The value is
      typically expressed in percentage points (e.g., -10 means 10% less mana) or
      flat mana points.
  - name: apply
    description: Boolean indicating whether to apply (true) or remove (false) the
      modifier from the spell's mana cost. This controls the direction of the modification.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      int32 mod = -10;

      bool apply = true;

      target->ApplyModManaCostModifier(2, mod, apply); // Apply 10% reduction to Fire
      spells'
    language: cpp
  - title: Advanced usage example
    code: 'Unit* target = GetTarget();

      int32 mod = 5;

      bool apply = false;

      target->ApplyModManaCostModifier(4, mod, apply); // Remove 5% increase from
      Shadow spells'
    language: cpp
  notes: The method is typically used in conjunction with spell effects or aura applications.
    It may be called multiple times for different schools to affect various spell
    types. Performance-wise, this method should not be called frequently unless necessary
    as it involves modifying spell data structures.
  warnings: Improper use of this method can lead to incorrect mana cost calculations
    for spells, potentially causing gameplay imbalance or unexpected behavior in spell
    casting. Always ensure that the school type and modifier values are correct before
    applying.
  related:
  - ApplyModSpellPowerModifier
  - ApplyModSpellCostModifier
  - ApplyModManaCostPercentageModifier
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:28:32.310777'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
