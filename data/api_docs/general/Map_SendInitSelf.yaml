api:
  class: Map
  method: SendInitSelf
  signature: void Map::SendInitSelf(Player * player)
documentation:
  brief: Initializes and sends map-related data to a player's client upon entry into
    the world.
  description: The SendInitSelf method is responsible for sending all necessary map
    initialization packets to a specific player's client when they first enter a map.
    This includes sending terrain data, object information, and other map-specific
    details required for the client to properly render and interact with the game
    world. The method ensures that the player's client has all the information needed
    to display the current map correctly, including any dynamic objects or environmental
    features present in that area. It is typically called during the player login
    process or when a player teleports to a new map.
  parameters:
  - name: player
    description: Pointer to the Player object for which initialization data should
      be sent. Must not be null and must represent an active player in the game world.
  returns: null
  examples:
  - title: Basic usage during player login
    code: "void HandlePlayerLogin(Player* player)\n{\n    Map* map = player->GetMap();\n\
      \    if (map)\n    {\n        map->SendInitSelf(player);\n    }\n}"
    language: cpp
  - title: Usage after teleporting to a new map
    code: "void TeleportPlayerToNewMap(Player* player, uint32 newMapId)\n{\n    //\
      \ ... perform teleport logic ...\n    Map* newMap = sMapMgr->FindMap(newMapId,\
      \ player->GetInstanceId());\n    if (newMap)\n    {\n        newMap->SendInitSelf(player);\n\
      \    }\n}"
    language: cpp
  notes: This method is typically invoked automatically by the core during player
    login and map transitions. Developers should not normally need to call this directly
    unless implementing custom map loading logic. The method may perform network operations
    that could impact performance if called excessively.
  warnings: Calling this method with a null player pointer will result in undefined
    behavior. Ensure that the player object is valid and properly initialized before
    calling this method. This method should not be called from within a packet processing
    context as it may cause recursion issues.
  related:
  - Map::SendInitPack
  - Map::SendRemoveSelf
  - Player::SendMapChange
  - Map::Update
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T10:43:56.598946'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
