api:
  class: DB2Manager
  method: GetRewardPackCurrencyTypesByRewardID
  signature: const int * DB2Manager::GetRewardPackCurrencyTypesByRewardID(uint32 rewardPackID)
    const
documentation:
  brief: Retrieves an array of currency type IDs associated with a specified reward
    pack ID.
  description: This method fetches the list of currency types that are granted as
    rewards within a specific reward pack. It is used in the context of World of Warcraft's
    reward systems, particularly when handling reward packs from achievements, quests,
    or other game mechanics. The returned pointer points to an internal array managed
    by the DB2Manager, and the caller must not free or modify this memory. The method
    assumes that the rewardPackID exists in the loaded DB2 data and returns a null-terminated
    array of integers representing currency IDs.
  parameters: []
  returns: A const pointer to an array of integers (int) representing the currency
    type IDs associated with the given reward pack ID. The array is null-terminated,
    and the caller must not free or modify the memory. Returns nullptr if no data
    is found for the specified rewardPackID.
  examples:
  - title: Retrieve Currency Types for a Reward Pack
    code: "const int* currencies = sDB2Manager->GetRewardPackCurrencyTypesByRewardID(12345);\n\
      if (currencies != nullptr)\n{\n    for (int i = 0; currencies[i] != 0; ++i)\n\
      \    {\n        printf(\"Currency ID: %d\\n\", currencies[i]);\n    }\n}"
    language: cpp
  notes: The method relies on internal DB2 data structures and assumes that the reward
    pack data has been properly loaded. The returned array is managed internally by
    DB2Manager and should not be freed or modified by the caller. Performance may
    vary depending on how many reward packs are cached in memory.
  warnings: Do not assume the returned array is a standard C++ container; it's a raw
    pointer to an internal data structure. Modifying or freeing this memory can cause
    undefined behavior. Also, ensure that the rewardPackID passed is valid and exists
    in the DB2 files.
  related:
  - GetRewardPackItemTypesByRewardID
  - GetRewardPackSpellsByRewardID
  - GetRewardPackItemsByRewardID
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:43:38.744815'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
