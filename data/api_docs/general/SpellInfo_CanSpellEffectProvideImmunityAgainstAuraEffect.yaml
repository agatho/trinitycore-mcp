api:
  class: SpellInfo
  method: CanSpellEffectProvideImmunityAgainstAuraEffect
  signature: bool SpellInfo::CanSpellEffectProvideImmunityAgainstAuraEffect(const
    SpellEffectInfo & immunityEffectInfo, const SpellInfo * auraSpellInfo, const SpellEffectInfo
    & auraEffectInfo) const
documentation:
  brief: Determines whether a spell effect can provide immunity against a specific
    aura effect.
  description: This method evaluates whether a given spell effect can offer protection
    against a particular aura effect, typically used in the context of spell mechanics
    and anti-aura systems. It checks if the immunity effect provided by one spell
    can counteract or neutralize another aura effect, considering factors such as
    spell effects, target types, and specific conditions. The method is crucial for
    determining whether certain spells can prevent or mitigate harmful effects from
    other spells, particularly in PvP scenarios or when dealing with specific aura
    types like magic, disease, or curse effects.
  parameters:
  - name: immunityEffectInfo
    description: The spell effect that provides immunity. This represents the effect
      of a spell which is intended to provide protection against another aura.
  - name: auraSpellInfo
    description: The SpellInfo of the spell that applies the aura being countered.
      This parameter specifies the spell whose aura effect is being evaluated for
      immunity.
  - name: auraEffectInfo
    description: The spell effect that is being countered. This represents the specific
      aura effect which is being evaluated for potential immunity.
  returns: Returns true if the immunity effect can successfully counter or neutralize
    the specified aura effect; otherwise, returns false.
  examples:
  - title: Basic Usage Example
    code: "bool result = spellInfo->CanSpellEffectProvideImmunityAgainstAuraEffect(immunityEffect,\
      \ auraSpellInfo, auraEffect);\nif (result)\n{\n    // The spell effect provides\
      \ immunity against the aura\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "// Example involving multiple effects and conditions\nbool result = spellInfo->CanSpellEffectProvideImmunityAgainstAuraEffect(immunityEffect,\
      \ auraSpellInfo, auraEffect);\nif (result && auraEffect.Type == SpellEffectType::SPELL_EFFECT_SCHOOL_IMMUNITY)\n\
      {\n    // Handle immunity for specific school types\n}"
    language: cpp
  notes: The method is typically used in conjunction with spell mechanics and aura
    application logic. It requires careful evaluation of effect types, spell properties,
    and target conditions to determine if immunity can be provided. Performance considerations
    include checking the effect type and ensuring proper spell data validation.
  warnings: This method should not be used directly without understanding the underlying
    spell effects and their interactions. Incorrect use may lead to improper immunity
    handling or unexpected behavior in spell mechanics.
  related:
  - SpellInfo::GetEffect
  - SpellInfo::HasEffect
  - SpellInfo::IsAura
  - SpellInfo::CanApplyAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:14:12.492755'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
