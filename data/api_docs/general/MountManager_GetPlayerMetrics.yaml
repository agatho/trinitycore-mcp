api:
  class: MountManager
  method: GetPlayerMetrics
  signature: const MountMetrics & MountManager::GetPlayerMetrics(uint32 playerGuid)
    const
documentation:
  brief: Retrieves the mount metrics associated with a specified player.
  description: The GetPlayerMetrics method retrieves a constant reference to the MountMetrics
    structure for a given player identified by their GUID. This structure typically
    contains data related to the player's mount-related statistics, such as collected
    mounts, riding skill levels, or other mount-specific gameplay metrics. The method
    is designed to provide read-only access to these metrics without modifying them.
    It is commonly used in game logic where mount-related data needs to be accessed
    for display, progression tracking, or gameplay mechanics that depend on a player's
    mount collection or proficiency.
  parameters: []
  returns: A constant reference to the MountMetrics structure associated with the
    specified player. This reference provides access to the player's mount statistics
    and progress without allowing modification of the data directly through this interface.
  examples:
  - title: Retrieve Player Mount Metrics
    code: 'uint32 playerId = 12345;

      const MountMetrics& metrics = mountManager.GetPlayerMetrics(playerId);

      // Access mount-related data

      uint32 totalMounts = metrics.TotalMounts;

      uint32 ridingSkill = metrics.RidingSkill;'
    language: cpp
  notes: This method is likely implemented using an internal map or cache that stores
    MountMetrics per player GUID for performance reasons. The returned reference is
    guaranteed to be valid only as long as the MountManager instance exists and the
    player's data has not been invalidated or removed.
  warnings: Ensure that the player GUID passed to this method corresponds to a valid,
    logged-in player. Accessing metrics for non-existent players may lead to undefined
    behavior or exceptions depending on implementation details. The returned reference
    should not be stored beyond the scope where it is valid.
  related:
  - SetPlayerMetrics
  - UpdatePlayerMetrics
  - HasPlayerMount
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:16:14.143664'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
