api:
  class: SpawnCircuitBreaker
  method: Update
  signature: void SpawnCircuitBreaker::Update(uint32 diff)
documentation:
  brief: Updates the spawn circuit breaker state based on elapsed time.
  description: The Update method is responsible for managing the internal state of
    the SpawnCircuitBreaker class, typically used to control spawning behavior in
    World of Warcraft instances. It processes time-based logic to determine when spawns
    should be allowed or blocked, preventing excessive or unintended creature/GameObject
    spawning. The method accepts a time delta (diff) parameter that represents milliseconds
    since the last update call and uses this to advance internal timers or counters.
    This functionality is essential for maintaining game balance and preventing server
    performance issues caused by rapid or uncontrolled spawning.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last Update call. Used
      to advance internal timers and determine spawn conditions.
  returns: null
  examples:
  - title: Basic Update Call
    code: "void Update(uint32 diff) override\n{\n    SpawnCircuitBreaker::Update(diff);\n\
      }"
    language: cpp
  - title: Integration with AI Behavior
    code: "class MyCreatureAI : public CreatureAI\n{\npublic:\n    void UpdateAI(uint32\
      \ diff) override\n    {\n        if (m_circuitBreaker)\n            m_circuitBreaker->Update(diff);\n\
      \        \n        // Additional AI logic here\n    }\n};"
    language: cpp
  notes: This method should be called regularly from the main game loop or AI update
    system. The diff parameter must be accurately measured to ensure proper timing
    behavior. Internal state management may involve cooldown timers, spawn counters,
    or other time-based conditions that affect spawning mechanics.
  warnings: Improper handling of the diff parameter can cause incorrect timing behavior.
    Ensure this method is called consistently from a reliable update source to maintain
    accurate spawn control logic.
  related:
  - SpawnCircuitBreaker::Reset
  - SpawnCircuitBreaker::IsBlocked
  - SpawnCircuitBreaker::SetCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:12:10.712919'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
