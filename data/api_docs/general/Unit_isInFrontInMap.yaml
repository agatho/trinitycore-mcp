api:
  class: Unit
  method: isInFrontInMap
  signature: bool Unit::isInFrontInMap(const Unit * target, float distance, float
    arc) const
documentation:
  brief: Determines whether a unit is within the front arc of another unit on the
    same map.
  description: This method checks if the calling unit is positioned in front of the
    target unit within a specified distance and arc angle. It is commonly used in
    game mechanics to determine line-of-sight or positioning for combat actions, such
    as determining if an enemy is within the front of a player's attack range. The
    method evaluates whether the unit is within the front cone of the target unit,
    which is essential for determining valid targeting and attack conditions in World
    of Warcraft. This function is particularly useful when checking if a unit is positioned
    in front of another unit during combat or movement.
  parameters:
  - name: target
    description: The unit against which the front position is being checked. This
      must be a valid Unit pointer, typically representing an enemy or target unit.
  - name: distance
    description: The maximum distance within which the unit must be to be considered
      in front of the target. This value defines the range for the check and should
      be a positive float.
  - name: arc
    description: "The angle (in radians) defining the front cone of the target unit.\
      \ This determines how wide the front arc is, with values typically between 0\
      \ and \u03C0 (or 0 and 180 degrees). Values outside this range may produce unexpected\
      \ results."
  returns: Returns true if the unit is positioned in front of the target within the
    specified distance and arc; otherwise returns false. This indicates whether the
    unit is within the front cone of the target.
  examples:
  - title: Basic usage example
    code: "if (player->isInFrontInMap(target, 5.0f, 1.57f)) {\n    // Do something\n\
      }"
    language: cpp
  - title: Advanced usage example
    code: "bool result = player->isInFrontInMap(target, distance, arc);\nif (result)\
      \ {\n    // Perform action if target is in front\n} else {\n    // Handle case\
      \ where target is not in front\n}"
    language: cpp
  notes: This method performs checks based on the unit's orientation and position
    relative to the target unit. It is important to note that this function does not
    consider height differences or z-axis positioning, only horizontal (x/y) coordinates.
    Performance considerations include checking distance and angle values carefully,
    as invalid parameters may lead to incorrect results or performance issues.
  warnings: This method assumes both units are on the same map and does not account
    for different map levels or z-axis differences. Care should be taken when using
    this function in combat situations where precise positioning matters. Also, ensure
    that the target unit is valid before calling this method to avoid potential crashes.
  related:
  - Unit::isInFront
  - Unit::isInBack
  - Unit::isInFrontInMap
  - Unit::isInArc
  - Unit::isInFrontOf
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:54:01.271566'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
