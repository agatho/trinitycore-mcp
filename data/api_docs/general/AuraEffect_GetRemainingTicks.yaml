api:
  class: AuraEffect
  method: GetRemainingTicks
  signature: uint32 AuraEffect::GetRemainingTicks() const
documentation:
  brief: Returns the number of remaining ticks for the aura effect.
  description: The GetRemainingTicks method retrieves the count of ticks that remain
    before an aura effect expires. This is particularly relevant for periodic auras
    such as damage over time (DoT) or healing over time (HoT) effects. The returned
    value indicates how many more times the aura's periodic effect will trigger. For
    non-periodic auras, this method typically returns zero or a meaningful value based
    on internal tick tracking logic.
  parameters: []
  returns: A uint32 value representing the number of remaining ticks for the aura
    effect. A value of 0 indicates that the aura has no more ticks remaining or is
    not a periodic effect.
  examples:
  - title: Check Remaining Ticks for a DoT Aura
    code: "AuraEffect* auraEffect = player->GetAuraEffect(12345, 0);\nif (auraEffect)\n\
      {\n    uint32 remainingTicks = auraEffect->GetRemainingTicks();\n    if (remainingTicks\
      \ > 0)\n    {\n        // Log or handle the remaining ticks\n        sLog->outString(\"\
      Aura has %u remaining ticks.\", remainingTicks);\n    }\n}"
    language: cpp
  - title: Determine Aura Duration Based on Remaining Ticks
    code: "Unit* target = player->GetSelectedUnit();\nif (target && target->HasAura(67890))\n\
      {\n    Aura* aura = target->GetAura(67890);\n    if (aura)\n    {\n        AuraEffect*\
      \ effect = aura->GetEffect(0);\n        if (effect)\n        {\n           \
      \ uint32 remainingTicks = effect->GetRemainingTicks();\n            uint32 tickPeriod\
      \ = effect->GetTickPeriod(); // Assuming method exists\n            uint32 durationLeft\
      \ = remainingTicks * tickPeriod;\n            sLog->outString(\"Aura will expire\
      \ in %u ms.\", durationLeft);\n        }\n    }\n}"
    language: cpp
  notes: This method relies on internal tracking of aura ticks and should only be
    called when the aura effect is active. It may not behave as expected for auras
    that do not have a defined tick cycle or are modified by external factors such
    as haste effects.
  warnings: Do not assume that remaining ticks directly correlate to time left unless
    the tick period is constant. Also, calling this method on inactive or invalid
    aura effects can lead to undefined behavior.
  related:
  - GetAura
  - GetEffect
  - GetTickPeriod
  - GetMaxTicks
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:02:04.693849'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
