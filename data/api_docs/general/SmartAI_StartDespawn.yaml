api:
  class: SmartAI
  method: StartDespawn
  signature: void SmartAI::StartDespawn()
documentation:
  brief: Initiates the despawn process for the SmartAI-controlled creature or game
    object
  description: The StartDespawn method begins the process of removing a creature or
    game object from the world using SmartAI's internal despawn logic. This method
    is typically invoked when an AI script determines that the entity should be removed,
    such as after completing a quest objective, reaching a certain condition, or when
    the AI sequence has finished executing. The method does not immediately destroy
    the object but schedules it for removal according to the SmartAI's configured
    despawn behavior, which may include a delay or conditional checks before actual
    removal occurs. This ensures proper cleanup of AI-related resources and prevents
    dangling references in the game world.
  parameters: []
  returns: null
  examples:
  - title: Basic usage in an AI event handler
    code: "void OnQuestComplete(Player* player)\n{\n    // Perform quest completion\
      \ logic\n    // ...\n    \n    // Start despawn process for the AI-controlled\
      \ NPC\n    StartDespawn();\n}"
    language: cpp
  - title: Using within a conditional SmartAI event
    code: "void UpdateAI(uint32 diff)\n{\n    if (m_conditionMet)\n    {\n       \
      \ // Trigger despawn after completing a task\n        StartDespawn();\n    \
      \    return;\n    }\n    \n    // Continue normal AI behavior\n    SmartAI::UpdateAI(diff);\n\
      }"
    language: cpp
  notes: This method should only be called from within SmartAI context where the object
    is properly initialized. The actual despawn may be delayed or conditional based
    on SmartAI configuration settings. Ensure that no other systems are actively referencing
    this AI object before calling StartDespawn to avoid potential crashes or undefined
    behavior.
  warnings: Calling StartDespawn on an already despawned or destroyed object can result
    in undefined behavior. Always verify the object's state before invoking this method,
    especially if it's called from multiple event handlers or conditions.
  related:
  - Despawn
  - ForcedDespawn
  - IsDespawning
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:36:47.135962'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
