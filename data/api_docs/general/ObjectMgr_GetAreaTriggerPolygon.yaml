api:
  class: ObjectMgr
  method: GetAreaTriggerPolygon
  signature: const AreaTriggerPolygon * ObjectMgr::GetAreaTriggerPolygon(uint32 areaTriggerId)
    const
documentation:
  brief: Retrieves the polygon data for a specified area trigger ID.
  description: The GetAreaTriggerPolygon method fetches the geometric polygon definition
    associated with a given area trigger identifier. This is used internally by the
    TrinityCore server to manage and validate area trigger shapes, which are commonly
    used for effects like spell auras, quest triggers, or interactive zones. The returned
    pointer provides access to the polygon's vertices and shape data that defines
    the spatial boundaries of the area trigger. The method performs a lookup in an
    internal cache or database structure and returns a const pointer to avoid modification
    of the polygon data.
  parameters: []
  returns: A constant pointer to an AreaTriggerPolygon object if the area trigger
    ID exists, otherwise nullptr. The returned object contains vertex coordinates
    and shape information defining the area trigger's boundaries.
  examples:
  - title: Basic Usage
    code: "const AreaTriggerPolygon* polygon = sObjectMgr->GetAreaTriggerPolygon(12345);\n\
      if (polygon)\n{\n    // Use polygon data for validation or processing\n    uint32\
      \ vertexCount = polygon->GetVertexCount();\n    // Process vertices...\n}"
    language: cpp
  - title: Validation Check
    code: "uint32 triggerId = 54321;\nconst AreaTriggerPolygon* poly = sObjectMgr->GetAreaTriggerPolygon(triggerId);\n\
      if (!poly)\n{\n    sLog->outError(\"Area trigger %u not found in database\"\
      , triggerId);\n    return false;\n}\n// Proceed with polygon-based logic\nreturn\
      \ true;"
    language: cpp
  notes: This method is typically used during area trigger processing and spell effect
    validation. The returned AreaTriggerPolygon object should be treated as read-only,
    as modifications could affect all users of that polygon definition. Performance-wise,
    this lookup is generally fast due to internal caching mechanisms.
  warnings: Do not modify the returned AreaTriggerPolygon object directly, as it may
    be shared across multiple triggers or threads. Always treat the result as const
    and avoid storing references beyond their intended scope.
  related:
  - GetAreaTrigger
  - GetAreaTriggerTemplate
  - GetAreaTriggerData
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T10:07:47.856092'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
