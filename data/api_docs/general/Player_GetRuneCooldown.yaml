api:
  class: Player
  method: GetRuneCooldown
  signature: uint32 Player::GetRuneCooldown(uint8 index) const
documentation:
  brief: Returns the cooldown time in milliseconds for a specific rune.
  description: The GetRuneCooldown method retrieves the current cooldown duration
    for a specified rune index, returning the remaining time in milliseconds. This
    method is used to determine when a rune will be available for use again after
    being activated. The method returns 0 if the rune is not on cooldown or if the
    player has no active runes of that type. This functionality is essential for managing
    rune-based abilities and ensuring proper game mechanics in class-specific abilities
    like Death Knight's rune system.
  parameters: []
  returns: Returns the cooldown time in milliseconds for the specified rune index,
    or 0 if the rune is not on cooldown.
  examples:
  - title: Basic Usage Example
    code: "uint32 cooldown = player->GetRuneCooldown(0);\nif (cooldown > 0)\n{\n \
      \   // Rune is on cooldown\n    printf(\"Rune cooldown: %u ms\\n\", cooldown);\n\
      }\nelse\n{\n    // Rune is available\n    printf(\"Rune is available\\n\");\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other rune-related methods
    to manage player rune cooldowns. It's important to note that the index parameter
    refers to the specific rune type (0-3), not a general index.
  warnings: This method should only be called when the player has active runes, otherwise
    it may return unexpected values or zero.
  related:
  - GetRuneCooldown
  - SetRuneCooldown
  - GetRuneCooldownTime
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:25:19.510813'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
