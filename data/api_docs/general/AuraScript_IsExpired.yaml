api:
  class: AuraScript
  method: IsExpired
  signature: bool AuraScript::IsExpired() const
documentation:
  brief: Checks whether the aura has expired and is no longer active.
  description: The IsExpired method determines if an aura effect has reached its duration
    limit and is no longer applied to the target. This function is commonly used within
    AuraScript implementations to control behavior when an aura's time has elapsed,
    such as triggering cleanup routines or modifying the target state. The method
    returns true if the aura's expiration time has passed or if it has been removed
    manually, and false otherwise. It is particularly useful in custom spell effects
    where specific actions need to occur upon aura removal or expiration.
  parameters: []
  returns: Returns true if the aura has expired or been removed from the target; otherwise
    returns false.
  examples:
  - title: Basic Usage in AuraScript
    code: "class MyAuraScript : public AuraScript\n{\npublic:\n    void OnUpdate(int32\
      \ diff) override\n    {\n        if (IsExpired())\n        {\n            //\
      \ Perform cleanup or final effects when aura expires\n            GetTarget()->RemoveAura(12345);\n\
      \        }\n    }\n};"
    language: cpp
  - title: Conditional Logic Based on Expiration
    code: "class HealingAuraScript : public AuraScript\n{\npublic:\n    void OnPeriodicTick()\
      \ override\n    {\n        if (IsExpired())\n        {\n            // Stop\
      \ periodic healing if aura is no longer active\n            return;\n      \
      \  }\n        \n        // Apply healing effect\n        GetTarget()->Heal(GetCaster(),\
      \ 100);\n    }\n};"
    language: cpp
  notes: This method relies on the internal aura timer and expiration tracking mechanism.
    It should be called carefully within update loops or event handlers to avoid performance
    issues. The result may change between calls if the aura is removed or modified
    externally.
  warnings: Do not assume that an expired aura will immediately stop all effects;
    some auras might have delayed removal or cleanup logic. Also, calling IsExpired()
    in contexts where the aura object itself might be destroyed can lead to undefined
    behavior.
  related:
  - GetAura
  - IsRemoved
  - GetDuration
  - GetMaxDuration
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:11:08.679457'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
