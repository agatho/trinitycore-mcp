api:
  class: SmartScript
  method: FindCreatureNear
  signature: Creature * SmartScript::FindCreatureNear(WorldObject * searchObject,
    int guid) const
documentation:
  brief: Finds a creature near the specified object by GUID.
  description: The FindCreatureNear method searches for a Creature object within the
    same map as the provided WorldObject, using the specified GUID to locate the creature.
    This method is typically used in SmartAI scripts to retrieve specific creatures
    in proximity to an event source. The search is performed only within the same
    map instance, and the method will return NULL if no matching creature is found
    or if the GUID does not correspond to a valid creature. This functionality is
    essential for AI behavior scripting where interactions need to be triggered based
    on nearby creature presence.
  parameters:
  - name: searchObject
    description: The WorldObject from which to begin the search. This object defines
      the location and map context for finding nearby creatures.
  - name: guid
    description: The unique identifier (GUID) of the creature to find. This GUID must
      correspond to a valid Creature object in the same map as the searchObject.
  returns: A pointer to the found Creature object if a creature with the specified
    GUID exists and is within the same map as searchObject; otherwise, returns NULL.
  examples:
  - title: Basic usage to find a nearby creature by GUID
    code: "Creature* target = script->FindCreatureNear(eventSource, 12345);\nif (target)\n\
      {\n    // Creature found, perform action\n    target->AI()->Talk(0);\n}"
    language: cpp
  - title: Using FindCreatureNear in a SmartAI context
    code: "void OnQuestAccept(Player* player, Quest const* quest) override\n{\n  \
      \  Creature* nearby = FindCreatureNear(player, 98765);\n    if (nearby && nearby->IsAlive())\n\
      \    {\n        // Trigger event on found creature\n        nearby->AI()->DoAction(1);\n\
      \    }\n}"
    language: cpp
  notes: This method only searches within the same map instance and will not find
    creatures in different maps or instances. It relies on the internal object management
    system of TrinityCore, so performance may vary depending on the number of active
    objects in the map. The GUID parameter must be a valid creature identifier; otherwise,
    the result is undefined.
  warnings: Ensure that the searchObject is valid and not NULL before calling this
    method to avoid unexpected behavior. Also, note that if multiple creatures share
    the same GUID (which shouldn't happen under normal circumstances), the first found
    will be returned. The method does not perform any checks for creature validity
    beyond existence in the map.
  related:
  - FindGameObjectNear
  - FindPlayerNear
  - GetCreature
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:26:17.616070'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
