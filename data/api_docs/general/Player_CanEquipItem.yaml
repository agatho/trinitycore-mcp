api:
  class: Player
  method: CanEquipItem
  signature: int Player::CanEquipItem(uint8 slot, uint16 & dest, Item * pItem, bool
    swap, bool not_loading) const
documentation:
  brief: Determines whether a player can equip an item at a specified slot.
  description: The CanEquipItem method checks if a player is capable of equipping
    a given item at a specific slot, taking into account various game mechanics such
    as item requirements, slot type restrictions, and inventory space availability.
    It returns an integer value indicating the success or failure of the equip attempt.
    This method is commonly used in conjunction with other inventory management functions
    to validate item placement before actually performing the equip operation.
  parameters:
  - name: slot
    description: The slot where the item should be equipped, typically representing
      a specific inventory slot (e.g., 13 for head, 15 for chest).
  - name: dest
    description: Reference to a uint16 variable that will store the destination slot
      number if the item can be equipped successfully.
  - name: pItem
    description: Pointer to the Item object that is being checked for equipability.
  - name: swap
    description: Boolean flag indicating whether swapping of items should occur when
      equipping (e.g., if a slot is occupied, swap with existing item).
  - name: not_loading
    description: Boolean flag indicating whether the method should skip loading checks
      (useful for internal operations where loading isn't required).
  returns: Returns 0 if the item can be equipped successfully, non-zero values otherwise.
    The specific return value indicates different types of failure or success conditions
    depending on the context.
  examples:
  - title: Basic usage example
    code: "int result = player->CanEquipItem(13, dest, item, false, false);\nif (result\
      \ == 0)\n{\n    // Item can be equipped\n}"
    language: cpp
  - title: Advanced usage example
    code: "int result = player->CanEquipItem(15, dest, item, true, false);\nif (result\
      \ == 0)\n{\n    // Item can be equipped with swap\n}"
    language: cpp
  notes: This method performs checks based on the player's current inventory state
    and item requirements. It is often used in conjunction with other methods like
    GetItemByPos or EquipItem to ensure proper handling of items during gameplay.
  warnings: The method does not perform actual equip operations; it only validates
    whether an item can be equipped. The destination variable must be initialized
    before calling this method, and the swap parameter should be carefully considered
    for proper game balance.
  related:
  - GetItemByPos
  - EquipItem
  - CanUnequipItem
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:49:09.661355'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
