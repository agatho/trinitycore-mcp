api:
  class: QuestManager
  method: GetMemoryUsage
  signature: size_t QuestManager::GetMemoryUsage() const
documentation:
  brief: Calculates and returns the total memory usage of all active quests managed
    by the QuestManager instance.
  description: The GetMemoryUsage method provides a snapshot of the memory footprint
    consumed by the quest system within the QuestManager. This includes memory allocated
    for active quest states, player progress tracking, and associated data structures.
    The method is typically used for debugging, performance monitoring, or identifying
    potential memory leaks in the quest subsystem. It aggregates memory usage across
    all currently loaded quests and returns a cumulative size in bytes. The result
    can be useful for server administrators and developers to monitor resource consumption
    and optimize quest-related operations.
  parameters: []
  returns: Returns a size_t value representing the total memory usage in bytes of
    all active quests managed by this QuestManager instance. A value of zero indicates
    no active quests or an empty quest manager.
  examples:
  - title: Basic Memory Usage Check
    code: 'size_t memoryUsed = sQuestMgr->GetMemoryUsage();

      TC_LOG_INFO("quest", "Current quest memory usage: %zu bytes", memoryUsed);'
    language: cpp
  - title: Monitoring Memory Growth Over Time
    code: "void CheckQuestMemory() {\n    static size_t lastMemory = 0;\n    size_t\
      \ currentMemory = sQuestMgr->GetMemoryUsage();\n    if (currentMemory > lastMemory\
      \ + 1024) { // 1KB threshold\n        TC_LOG_WARN(\"quest\", \"Quest memory\
      \ increased by %zu bytes\", currentMemory - lastMemory);\n    }\n    lastMemory\
      \ = currentMemory;\n}"
    language: cpp
  notes: This method performs a full enumeration of all active quests to calculate
    memory usage, which may have performance implications during high-traffic periods.
    The returned value includes overhead from quest data structures but excludes memory
    allocated for quest templates or static data. The QuestManager should be properly
    initialized before calling this method.
  warnings: Calling this method frequently in a tight loop may impact server performance
    due to the enumeration of all active quests. Do not rely on this value for real-time
    resource management decisions without considering its potential performance cost.
  related:
  - GetQuestCount
  - GetActiveQuests
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:47:14.578194'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
