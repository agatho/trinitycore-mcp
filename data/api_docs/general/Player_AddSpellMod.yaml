api:
  class: Player
  method: AddSpellMod
  signature: void Player::AddSpellMod(SpellModifier * mod, bool apply)
documentation:
  brief: Adds a spell modifier to the player's spell list, applying or removing the
    modifier based on the apply parameter.
  description: The AddSpellMod method allows players to add or remove spell modifiers
    from their spell list. This method is used primarily for modifying spell effects,
    such as increasing or decreasing spell damage, duration, or other attributes.
    The spell modifier is applied to a specific spell and can be either positive or
    negative depending on the modifier type. It is commonly used in conjunction with
    other methods like AddSpellMod and RemoveSpellMod to manage spell effects during
    gameplay.
  parameters:
  - name: mod
    description: A pointer to a SpellModifier structure that defines the type of modification
      to be applied. This includes information about which spell is affected, the
      modifier type (e.g., flat or percentage), and the value of the modification.
  - name: apply
    description: A boolean flag indicating whether to apply (true) or remove (false)
      the spell modifier from the player's spell list. If true, the modifier is added;
      if false, it is removed.
  returns: null
  examples:
  - title: Basic Spell Modifier Application
    code: 'SpellModifier* mod = new SpellModifier(SpellModType::SPELLMOD_DAMAGE, SpellModType::SPELLMOD_PERCENTAGE);

      mod->value = 10;

      mod->spellId = 12345;

      Player->AddSpellMod(mod, true);'
    language: cpp
  - title: Advanced Spell Modifier Removal
    code: 'SpellModifier* mod = new SpellModifier(SpellModType::SPELLMOD_DURATION,
      SpellModType::SPELLMOD_FLAT);

      mod->value = -5;

      mod->spellId = 67890;

      Player->AddSpellMod(mod, false);'
    language: cpp
  notes: This method is typically used in conjunction with other spell-related methods
    to manage spell effects during gameplay. It should be used carefully as it can
    affect spell behavior and performance. The method is not thread-safe and requires
    proper synchronization if used in multi-threaded environments.
  warnings: Improper use of this method can lead to incorrect spell behavior or game
    balance issues. Care must be taken when applying modifiers to ensure they are
    correctly defined and applied. Also, failure to properly delete the SpellModifier
    pointer can cause memory leaks.
  related:
  - RemoveSpellMod
  - AddSpell
  - SpellMod
  - ApplySpellMod
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:28:33.192453'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
