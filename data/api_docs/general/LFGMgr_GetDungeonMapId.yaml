api:
  class: LFGMgr
  method: GetDungeonMapId
  signature: uint32 LFGMgr::GetDungeonMapId(int guid)
documentation:
  brief: Retrieves the map identifier associated with a specific dungeon GUID.
  description: The GetDungeonMapId method is used to obtain the map ID corresponding
    to a given dungeon GUID within the LFG (Looking for Group) system. This function
    plays a crucial role in identifying which instance or zone a particular dungeon
    belongs to, enabling proper group matching and instance management. The method
    typically operates on internal LFG data structures that maintain mappings between
    dungeon identifiers and their respective map IDs. It is commonly used during group
    creation, dungeon selection, and instance assignment processes within the TrinityCore
    framework.
  parameters:
  - name: guid
    description: The global unique identifier of the dungeon entry to look up. This
      value typically represents a specific dungeon or instance type within the LFG
      system.
  returns: Returns the map ID associated with the specified dungeon GUID. If no valid
    mapping exists for the provided GUID, the method may return zero or an invalid
    map identifier depending on implementation.
  examples:
  - title: Basic Usage Example
    code: "uint32 mapId = sLFGMgr->GetDungeonMapId(12345);\nif (mapId != 0)\n{\n \
      \   // Process valid map ID\n    printf(\"Dungeon map ID: %u\\n\", mapId);\n\
      }"
    language: cpp
  - title: Integration with LFG Group Management
    code: "void HandleLFGDungeonJoin(Player* player, uint32 dungeonGuid)\n{\n    uint32\
      \ mapId = sLFGMgr->GetDungeonMapId(dungeonGuid);\n    if (mapId != 0)\n    {\n\
      \        // Proceed with instance creation or group assignment\n        player->TeleportTo(mapId,\
      \ 0.0f, 0.0f, 0.0f, 0.0f);\n    }\n    else\n    {\n        // Handle invalid\
      \ dungeon GUID\n        player->SendLFGJoinError(LFG_JOIN_ERROR_INVALID_GUID);\n\
      \    }\n}"
    language: cpp
  notes: This method is part of the internal LFG system and relies on pre-populated
    dungeon data structures. It should only be called with valid dungeon GUIDs that
    exist in the LFG database. The returned map ID can be used directly for teleportation
    or instance creation operations.
  warnings: Ensure that the input GUID corresponds to an actual dungeon entry; otherwise,
    the method may return invalid or zero values. This function does not perform validation
    on the GUID itself and assumes valid input from higher-level LFG management code.
  related:
  - GetDungeonEntry
  - GetDungeonType
  - GetLFGDungeonByGUID
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:53:02.595176'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
