api:
  class: Player
  method: GetQuestObjectiveData
  signature: int32 Player::GetQuestObjectiveData(uint32 questId, uint32 objectiveId)
    const
documentation:
  brief: Retrieves the current progress data for a specific quest objective.
  description: This method returns the current progress value for a specified quest
    objective, allowing players to track their advancement in completing quest objectives.
    The method is commonly used in conjunction with quest tracking systems to determine
    how much progress has been made toward completing a particular objective within
    a quest. It provides a way to access the internal state of quest objectives without
    requiring direct manipulation of the player's quest log or data structures.
  parameters:
  - name: questId
    description: The unique identifier of the quest for which the objective progress
      is being retrieved. This must be a valid quest ID that exists in the game database.
  - name: objectiveId
    description: The unique identifier of the specific quest objective being queried.
      This represents the index of the objective within the quest, typically starting
      from 0.
  returns: Returns an integer value representing the current progress towards completing
    the specified quest objective. If the quest or objective does not exist or is
    not tracked by the player, this method returns 0. The return value can be used
    to determine if a quest objective has been completed or to calculate how much
    progress remains.
  examples:
  - title: Basic Usage Example
    code: "int32 progress = player->GetQuestObjectiveData(12345, 0);\nif (progress\
      \ >= 100) {\n    // Quest objective completed\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "uint32 questId = 12345;\nuint32 objectiveId = 2;\nint32 progress = player->GetQuestObjectiveData(questId,\
      \ objectiveId);\nif (progress < 100) {\n    // Progress is less than target\
      \ value\n    // Continue tracking progress\n}"
    language: cpp
  notes: This method requires that the quest and objective exist in the player's quest
    log. It does not perform any validation checks on the parameters beyond ensuring
    they are valid quest identifiers. The method is intended to be used primarily
    for internal game mechanics handling rather than direct player interaction.
  warnings: The method may return 0 if the quest or objective is not active or tracked
    by the player, which could lead to misinterpretation of progress if not properly
    handled in code. Also, this method does not handle multiple objectives within
    a single quest - it only retrieves data for one specific objective at a time.
  related:
  - GetQuestObjectiveProgress
  - GetQuestStatus
  - GetQuestLog
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T16:36:39.948419'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
