api:
  class: AuraEffect
  method: HandleModCombatSpeedPct
  signature: void AuraEffect::HandleModCombatSpeedPct(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the combat speed percentage of the target based on aura application.
  description: The HandleModCombatSpeedPct method is responsible for adjusting the
    combat speed of a unit affected by an aura that modifies combat speed percentage.
    This method is typically invoked during aura application or removal to update
    the target's attack speed. It takes into account the aura application state, mode
    of operation, and whether the effect is being applied or removed. The method ensures
    that combat speed changes are properly propagated to the affected unit's attack
    timer calculations.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura and its target.
  - name: mode
    description: The mode of operation indicating how the aura effect should be handled.
      Typically used to determine if the effect is being applied (true) or removed
      (false).
  - name: apply
    description: Boolean flag indicating whether the aura effect is being applied
      (true) or removed (false). This determines the direction of the combat speed
      modification.
  returns: null
  examples:
  - title: Basic usage in aura application
    code: "void MyAuraEffect::HandleModCombatSpeedPct(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const {\n    if (!aurApp || !aurApp->GetTarget())\n\
      \        return;\n    \n    Unit* target = aurApp->GetTarget();\n    float speedMod\
      \ = GetAmount(); // Assume GetAmount() returns the percentage modifier\n   \
      \ \n    if (apply) {\n        target->AddExtraAttackSpeed(speedMod);\n    }\
      \ else {\n        target->RemoveExtraAttackSpeed(speedMod);\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore. It's
    important to note that combat speed modifications can affect multiple aspects
    of gameplay including attack timing, global cooldowns, and overall combat flow.
    The method should be called only when necessary as it may trigger recalculations
    of unit stats.
  warnings: Improper handling of this method can lead to incorrect combat speed calculations,
    which may result in unexpected behavior such as attacks happening too fast or
    too slow. Ensure that the aura amount is properly validated before applying modifications.
  related:
  - AuraEffect::HandleModDamagePercent
  - AuraEffect::HandleModSpeed
  - AuraApplication::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:40:52.738673'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
