api:
  class: Unit
  method: TriggerOnPowerChangeAuras
  signature: void Unit::TriggerOnPowerChangeAuras(int power, int32 oldVal, int32 newVal)
documentation:
  brief: Triggers aura effects when power changes for a unit
  description: This method activates all aura effects that are triggered by power
    changes, allowing the system to properly handle power modifications such as mana,
    rage, energy, or focus. It is used internally by TrinityCore to manage the interaction
    between a unit's power and its active auras, ensuring proper application of effects
    when power values change. The method typically occurs during power updates and
    handles both positive and negative power changes.
  parameters:
  - name: power
    description: The power type being changed (e.g., mana, rage, energy, focus). This
      parameter determines which aura effects are triggered.
  - name: oldVal
    description: The previous power value before the change. Used to determine if
      a power change occurred and to calculate the difference for aura effects.
  - name: newVal
    description: The new power value after the change. This value is compared with
      oldVal to determine if an effect should be applied or removed.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->TriggerOnPowerChangeAuras(POWER_MANA, oldMana, newMana);

      '
    language: cpp
  - title: Advanced usage example
    code: 'Unit* unit = new Unit;

      int32 oldVal = unit->GetPower(POWER_MANA);

      unit->SetPower(POWER_MANA, 100);

      int32 newVal = unit->GetPower(POWER_MANA);

      unit->TriggerOnPowerChangeAuras(POWER_MANA, oldVal, newVal);

      '
    language: cpp
  notes: This method is typically called during power updates and should be used carefully
    to avoid infinite loops or incorrect aura applications. It may trigger multiple
    aura effects depending on the unit's active auras and power type.
  warnings: Improper use of this method can lead to incorrect aura application or
    removal, potentially causing game balance issues or unexpected behavior in player
    characters.
  related:
  - Unit::GetPower
  - Unit::SetPower
  - Unit::GetMaxPower
  - Unit::GetPowerType
  - Unit::HasAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:05:21.886119'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
