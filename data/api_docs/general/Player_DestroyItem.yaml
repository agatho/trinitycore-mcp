api:
  class: Player
  method: DestroyItem
  signature: void Player::DestroyItem(uint8 bag, uint8 slot, bool update)
documentation:
  brief: Destroys an item in the player's inventory by removing it from the bag and
    slot specified.
  description: The DestroyItem method removes an item from a specified bag and slot
    in the player's inventory. It handles the removal of the item from the player's
    inventory system, updates the item's state to indicate it has been destroyed,
    and optionally sends updates to the client. This method is typically used when
    items are consumed, destroyed, or lost through gameplay mechanics such as enchanting
    failures, item degradation, or quest completion rewards that require item destruction.
    The update parameter controls whether the client UI should be refreshed to reflect
    the change.
  parameters:
  - name: bag
    description: The bag identifier where the item is located. Valid values are 0-11
      for standard bags, with 255 indicating the player's main inventory (backpack).
  - name: slot
    description: The slot index within the specified bag where the item resides. Valid
      values range from 0-63 depending on bag type.
  - name: update
    description: Boolean flag indicating whether to send updates to the client. If
      true, the client UI will be refreshed to reflect the item removal.
  returns: null
  examples:
  - title: Destroy an item in backpack slot 0
    code: 'Player* player = ...;

      player->DestroyItem(255, 0, true);'
    language: cpp
  - title: Destroy an item in a specific bag and slot without updating client
    code: 'Player* player = ...;

      player->DestroyItem(1, 5, false);'
    language: cpp
  notes: This method does not directly delete the item object from memory; instead,
    it removes it from the player's inventory container and marks it as destroyed.
    The actual destruction of the item object may occur later during garbage collection
    or when the item is removed from the database. When update is set to true, this
    method will trigger a packet send to the client which can impact performance if
    called frequently.
  warnings: Calling DestroyItem with invalid bag/slot combinations may result in undefined
    behavior or crashes. Always validate that the item exists before calling this
    method. Avoid frequent calls with update=true as it can cause performance issues
    due to network traffic.
  related:
  - Player::AddItem
  - Player::GetItemByPos
  - Player::HasItemCount
  - Player::DestroyItemCount
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T19:45:53.668457'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
