api:
  class: GroupInvitationHandler
  method: CanJoinGroup
  signature: bool GroupInvitationHandler::CanJoinGroup(Group * group) const
documentation:
  brief: Determines whether a player can join a specified group based on current group
    membership rules and restrictions.
  description: The CanJoinGroup method evaluates if a player is eligible to join a
    given group by checking various conditions such as group size limits, raid vs.
    party status, and existing group memberships. This method ensures that players
    cannot join groups in violation of World of Warcraft's grouping mechanics, including
    preventing players from joining full groups or joining groups they are already
    part of. It also respects the game's restriction that players cannot be in multiple
    groups simultaneously unless they are in a raid and a party at the same time.
    The method returns true if the player can join the group, false otherwise.
  parameters: []
  returns: Returns true if the player can join the specified group according to current
    game rules and restrictions; returns false if joining would violate any grouping
    constraints or if the group is already full.
  examples:
  - title: Check if Player Can Join Group
    code: "if (groupInvitationHandler.CanJoinGroup(targetGroup)) {\n    // Proceed\
      \ with group invitation logic\n    targetGroup->AddMember(player);\n} else {\n\
      \    // Inform player they cannot join the group\n    player->SendNotification(\"\
      Cannot join group: invalid membership rules\");\n}"
    language: cpp
  notes: This method does not perform any actual group modification or invitation
    sending. It only checks eligibility. The implementation may consider factors like
    player level differences, loot settings, and guild membership when determining
    eligibility.
  warnings: Do not use this method to directly add players to groups without verifying
    the return value first. Always check the result before attempting to modify group
    membership to avoid breaking game rules or causing unexpected behavior.
  related:
  - Group::AddMember
  - Group::RemoveMember
  - Group::IsFull
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:20:14.160237'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
