api:
  class: DB2Manager
  method: GetAzeriteEssencePower
  signature: const AzeriteEssencePowerEntry * DB2Manager::GetAzeriteEssencePower(uint32
    azeriteEssenceId, uint32 rank) const
documentation:
  brief: Retrieves the Azerite Essence Power entry for a given Azerite essence ID
    and rank.
  description: The GetAzeriteEssencePower method fetches the AzeriteEssencePowerEntry
    data structure associated with a specific Azerite essence identifier and its rank.
    This method is used within the TrinityCore framework to access static game data
    related to Azerite powers, which are core components of the Azerite system in
    World of Warcraft. The returned entry contains information such as power effects,
    stat modifications, and other properties tied to a specific Azerite essence at
    a given rank. This function is typically used during gameplay logic when determining
    the effects of equipped Azerite items or calculating stat bonuses.
  parameters:
  - name: azeriteEssenceId
    description: The unique identifier for the Azerite essence type. This corresponds
      to entries in the AzeriteEssence.db2 file and identifies a specific type of
      Azerite power.
  - name: rank
    description: The rank level of the Azerite essence. Ranks typically correspond
      to different levels of progression or upgrades for Azerite abilities, with higher
      ranks providing stronger effects.
  returns: A pointer to an AzeriteEssencePowerEntry structure containing the data
    for the specified Azerite essence and rank. Returns nullptr if no matching entry
    is found in the database.
  examples:
  - title: Retrieve Azerite Essence Power for Rank 1
    code: "const AzeriteEssencePowerEntry* entry = sDB2Manager->GetAzeriteEssencePower(1234,\
      \ 1);\nif (entry)\n{\n    // Process the essence power data\n    printf(\"Power\
      \ ID: %u, Effect: %f\\n\", entry->ID, entry->Effect);\n}"
    language: cpp
  - title: Check for Valid Azerite Essence Power Entry
    code: "uint32 essenceId = 5678;\nuint32 rank = 5;\nconst AzeriteEssencePowerEntry*\
      \ powerEntry = sDB2Manager->GetAzeriteEssencePower(essenceId, rank);\nif (powerEntry\
      \ != nullptr)\n{\n    // Use the power entry for calculations or UI display\n\
      \    std::cout << \"Found Azerite Power: \" << powerEntry->ID << std::endl;\n\
      }\nelse\n{\n    // Handle missing data gracefully\n    std::cerr << \"No Azerite\
      \ power found for ID \" << essenceId << \" at rank \" << rank << std::endl;\n\
      }"
    language: cpp
  notes: This method accesses pre-loaded DB2 data tables, so it's efficient for repeated
    calls. The underlying database must be properly initialized before this function
    can return valid results. Ensure that the azeriteEssenceId and rank values are
    within expected ranges to avoid invalid lookups.
  warnings: Calling this method with invalid or out-of-range IDs may result in returning
    nullptr, which should always be checked for before dereferencing the returned
    pointer. The Azerite system is highly dependent on correct DB2 data loading; incorrect
    entries can lead to unexpected behavior in gameplay mechanics.
  related:
  - GetAzeriteEssence
  - GetAzeriteItem
  - GetAzeritePower
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:21:53.930607'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
