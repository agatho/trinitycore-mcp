api:
  class: AuraEffect
  method: HandleShieldBlockValuePercent
  signature: void AuraEffect::HandleShieldBlockValuePercent(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a percentage-based shield block value modifier from the
    target.
  description: The HandleShieldBlockValuePercent method is responsible for modifying
    the shield block value of a target based on a percentage aura effect. When applied,
    it increases or decreases the amount of damage that can be blocked by a shield.
    This method is typically invoked during aura application or removal events and
    adjusts the target's shield block mechanics accordingly. The effect operates on
    a percentage basis, meaning the modifier is calculated as a percentage of the
    base shield block value.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state and target.
  - name: mode
    description: The mode of operation, typically indicating whether the effect is
      being applied (1) or removed (0). This parameter controls how the shield block
      value modifier is processed.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect. When true, the percentage modifier is added to the target's
      shield block value; when false, it is removed.
  returns: null
  examples:
  - title: Applying Shield Block Value Percent Aura
    code: "void ApplyShieldBlockAura(Unit* target)\n{\n    if (Aura* aura = target->GetAura(12345))\
      \ // Assuming aura ID 12345 is a shield block percent modifier\n    {\n    \
      \    aura->ApplyEffect(0, AURA_EFFECT_HANDLE_REAL); // Apply the effect\n  \
      \  }\n}"
    language: cpp
  - title: Handling Shield Block Value Percent in Custom Aura
    code: "void HandleShieldBlockValuePercent(const AuraApplication* aurApp, uint8\
      \ mode, bool apply) const override\n{\n    if (!aurApp || !aurApp->GetTarget())\n\
      \        return;\n\n    Unit* target = aurApp->GetTarget();\n    if (apply)\n\
      \    {\n        // Increase shield block by 10%\n        target->SetShieldBlockValue(target->GetShieldBlockValue()\
      \ * 1.1f);\n    }\n    else\n    {\n        // Restore original shield block\
      \ value\n        target->RestoreShieldBlockValue();\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore and
    is typically called internally by the core engine when an aura is applied or removed.
    The percentage modifier should be properly validated to prevent negative or excessive
    values that could break game balance.
  warnings: Improper implementation of this method can lead to incorrect shield block
    calculations, potentially affecting gameplay balance. Ensure that percentage modifiers
    are within reasonable bounds and that target validation is performed before modifying
    shield block values.
  related:
  - AuraEffect::HandleShieldBlockValue
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:00:13.019856'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
