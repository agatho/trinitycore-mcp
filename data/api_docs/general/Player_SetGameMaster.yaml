api:
  class: Player
  method: SetGameMaster
  signature: void Player::SetGameMaster(bool on)
documentation:
  brief: Sets the game master status of the player to enable or disable game master
    privileges.
  description: This method toggles the game master (GM) status of a player, allowing
    administrators to grant or revoke game master privileges. When enabled, the player
    gains access to GM commands and features that are typically restricted to Game
    Masters. The method affects the player's ability to use GM-only commands and modifies
    their visibility in the game world. This functionality is essential for managing
    player permissions and implementing administrative control within the TrinityCore
    framework.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Player* player = GetPlayer();

      player->SetGameMaster(true);'
    language: cpp
  - title: Advanced Usage Example
    code: "Player* player = GetPlayer();\nif (player->IsGameMaster()) {\n    player->SetGameMaster(false);\n\
      }\nelse {\n    player->SetGameMaster(true);\n}"
    language: cpp
  notes: The method modifies internal player flags and should be used carefully as
    it affects the player's visibility and access to game commands. It is recommended
    to use this method in conjunction with other GM-related functions for complete
    control over player permissions.
  warnings: Using this method without proper checks may lead to unexpected behavior
    or access violations. Ensure that player permissions are properly managed when
    toggling GM status.
  related:
  - IsGameMaster
  - GetPlayer
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:08:27.674535'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
