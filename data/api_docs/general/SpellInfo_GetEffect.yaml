api:
  class: SpellInfo
  method: GetEffect
  signature: const SpellEffectInfo & SpellInfo::GetEffect(int index) const
documentation:
  brief: Returns the spell effect information at the specified index.
  description: The GetEffect method retrieves the SpellEffectInfo structure for a
    specific effect index from the SpellInfo object. This method is commonly used
    in TrinityCore's spell system to access detailed information about individual
    spell effects, such as damage values, target types, or aura effects. It allows
    developers to examine and manipulate spell properties during spell processing,
    particularly in cases where multiple effects are present within a single spell.
    The method provides const access to ensure data integrity while maintaining performance.
  parameters: []
  returns: Returns a constant reference to the SpellEffectInfo structure corresponding
    to the specified index. This reference provides direct access to the effect data
    without copying, making it efficient for read-only operations. If the index is
    out of bounds, the method will return an invalid reference that may cause undefined
    behavior.
  examples:
  - title: Basic Usage Example
    code: 'SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);

      const SpellEffectInfo& effect = spellInfo->GetEffect(0);

      // Access effect data

      int damage = effect.MiscValue;

      '
    language: cpp
  - title: Advanced Usage Example
    code: "SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);\nfor (int i = 0;\
      \ i < spellInfo->GetEffectCount(); ++i)\n{\n    const SpellEffectInfo& effect\
      \ = spellInfo->GetEffect(i);\n    // Process each effect\n    if (effect.Effect\
      \ == SPELL_EFFECT_SCHOOL_DAMAGE)\n    {\n        // Handle damage effect\n \
      \       int damage = effect.MiscValue;\n    }\n}\n"
    language: cpp
  notes: This method is typically used during spell processing and requires careful
    handling of index bounds. The SpellInfo object must be valid and the index should
    be within range of available effects. Performance considerations include avoiding
    unnecessary copying of effect data, as this method returns a reference.
  warnings: Be cautious when using this method with invalid indices; accessing out-of-bounds
    effects can lead to memory corruption or undefined behavior. Ensure that the spell
    information exists and that the index is valid before calling this method.
  related:
  - GetEffectCount
  - GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:09:37.484654'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
