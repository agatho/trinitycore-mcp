api:
  class: Unit
  method: isPossessedByPlayer
  signature: bool Unit::isPossessedByPlayer() const
documentation:
  brief: Checks whether the unit is currently possessed by a player.
  description: This method determines if the Unit object is currently under player
    control through possession, which occurs when a player controls an NPC or creature
    through the use of spells like Possession or Mind Control. The method returns
    true if the unit is being controlled by a player, false otherwise. It is commonly
    used in game mechanics to verify player-controlled units and can be essential
    for determining whether a unit's behavior should be altered based on its possession
    status.
  parameters: []
  returns: Returns true if the unit is possessed by a player, false otherwise. This
    indicates that the unit is currently under player control through possession mechanics.
  examples:
  - title: Basic Usage Example
    code: "if (unit->isPossessedByPlayer()) {\n    // Unit is controlled by player\n\
      \    // Perform actions specific to player-controlled units\n}"
    language: cpp
  notes: This method typically relies on internal state tracking within the TrinityCore
    framework, and may involve checking the unit's ownership status. It is important
    to note that this method does not directly check for possession via spell effects
    but rather checks if the unit is currently under player control.
  warnings: Be cautious when using this method in conjunction with other possession-related
    methods, as it may return false even if a player has cast a possession spell on
    the unit. The method only reflects current control status and not necessarily
    the presence of possession effects.
  related:
  - Unit::GetOwner
  - Unit::IsControlledByPlayer
  - Unit::HasUnitFlag
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:52:53.065442'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
