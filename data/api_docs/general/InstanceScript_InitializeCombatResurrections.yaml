api:
  class: InstanceScript
  method: InitializeCombatResurrections
  signature: void InstanceScript::InitializeCombatResurrections(uint8 charges, uint32
    interval)
documentation:
  brief: Initializes combat resurrection mechanics for the instance with specified
    charges and interval.
  description: The InitializeCombatResurrections method sets up the combat resurrection
    system within an instance script, configuring how many times players can be resurrected
    during combat and at what intervals. This mechanism is typically used in raid
    encounters or challenging scenarios where controlled resurrection is required
    to balance difficulty and gameplay flow. The method configures internal state
    variables that track resurrection charges and cooldown periods, ensuring that
    players cannot be continuously revived without restriction. It's commonly called
    during instance initialization or encounter start to prepare the combat resurrection
    system for active use.
  parameters:
  - name: charges
    description: The number of resurrection charges available to players during combat.
      This determines how many times a player can be resurrected before the system
      becomes inactive.
  - name: interval
    description: The cooldown interval (in milliseconds) between successive resurrections.
      This prevents rapid consecutive revives and adds strategic depth to combat encounters.
  returns: null
  examples:
  - title: Basic Usage in Instance Script
    code: "class BossEncounterScript : public InstanceScript\n{\npublic:\n    void\
      \ Initialize() override\n    {\n        // Initialize combat resurrections with\
      \ 3 charges and 10 second interval\n        InitializeCombatResurrections(3,\
      \ 10000);\n    }\n};"
    language: cpp
  - title: Advanced Usage with Dynamic Configuration
    code: "class RaidInstanceScript : public InstanceScript\n{\npublic:\n    void\
      \ OnEncounterStart()\n    {\n        uint8 chargeCount = GetDifficulty() ==\
      \ DUNGEON_DIFFICULTY_HEROIC ? 5 : 3;\n        uint32 intervalMs = GetDifficulty()\
      \ == DUNGEON_DIFFICULTY_HEROIC ? 8000 : 10000;\n        \n        InitializeCombatResurrections(chargeCount,\
      \ intervalMs);\n    }\n};"
    language: cpp
  notes: This method should be called during instance initialization or before combat
    begins to ensure proper setup of resurrection mechanics. The implementation likely
    involves internal tracking of player states and cooldown timers. Developers should
    consider that this system may interact with other instance management features
    like reset timers or player tracking.
  warnings: Improper use of this method can lead to unbalanced encounters where players
    are either over-resurrected or unable to be revived at all. Ensure that the charge
    count and interval values align with intended difficulty levels. Calling this
    method multiple times may overwrite previous configurations without proper state
    management.
  related:
  - GetCombatResurrectionCharges
  - SetCombatResurrectionCharges
  - IsCombatResurrectionActive
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T00:12:38.341931'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
