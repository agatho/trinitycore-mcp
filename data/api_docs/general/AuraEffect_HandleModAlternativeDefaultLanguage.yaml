api:
  class: AuraEffect
  method: HandleModAlternativeDefaultLanguage
  signature: void AuraEffect::HandleModAlternativeDefaultLanguage(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the alternative default language setting for a player when an aura
    is applied or removed.
  description: The HandleModAlternativeDefaultLanguage method is responsible for adjusting
    a player's alternative default language based on the application or removal of
    an aura effect. This method is typically invoked during aura application or removal
    events to modify the player's language preferences, which may affect communication
    with other players or NPCs in the game world. The method takes into account whether
    the aura is being applied or removed and updates the player's language settings
    accordingly. It operates within the context of TrinityCore's aura system and integrates
    with the broader player state management mechanisms.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura application
      event. This parameter provides context about which aura is being applied or
      removed, including information about the target player and aura properties.
  - name: mode
    description: The mode of operation indicating how the language setting should
      be modified. Valid values typically include 0 for removal, 1 for application,
      or other mode-specific constants depending on implementation details.
  - name: apply
    description: Boolean flag indicating whether the aura is being applied (true)
      or removed (false). This determines the direction of the language setting modification.
  returns: null
  examples:
  - title: Basic Aura Language Modification
    code: "void MyAuraEffect::HandleModAlternativeDefaultLanguage(const AuraApplication*\
      \ aurApp, uint8 mode, bool apply) const {\n    Player* player = aurApp->GetTarget()->ToPlayer();\n\
      \    if (!player)\n        return;\n    \n    if (apply) {\n        // Apply\
      \ language modification\n        player->SetAlternativeDefaultLanguage(415);\
      \ // Example: Orcish\n    } else {\n        // Remove language modification\n\
      \        player->ResetAlternativeDefaultLanguage();\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore. It
    should be called only from within the aura application/removal context to ensure
    proper state management. The method assumes that the AuraApplication parameter
    contains valid target information and that the player object can be safely accessed.
  warnings: Improper use of this method may result in inconsistent language settings
    for players. Ensure that all aura applications are properly validated before modifying
    player language preferences. Avoid calling this method outside of the aura application
    context as it may lead to undefined behavior or crashes.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Player::SetAlternativeDefaultLanguage
  - Player::ResetAlternativeDefaultLanguage
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:45:29.430707'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
