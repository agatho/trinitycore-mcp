api:
  class: AuraEffect
  method: ApplySpellMod
  signature: void AuraEffect::ApplySpellMod(Unit * target, bool apply, const AuraEffect
    * triggeredBy)
documentation:
  brief: Applies or removes a spell modifier to the target unit based on the aura
    effect's properties.
  description: The ApplySpellMod method is used to modify spell properties for a target
    unit when an aura effect is applied or removed. It adjusts various spell parameters
    such as damage, duration, or cost based on the aura's characteristics. This method
    is typically called internally by the aura system during aura application or removal
    events. The behavior of this method depends on the specific type of aura effect
    and its associated spell modifiers. It ensures that spell modifications are correctly
    applied to the target unit's spell calculations.
  parameters:
  - name: target
    description: Pointer to the Unit object that will receive or have the spell modifier
      applied. Must be a valid unit pointer, typically a player or creature.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the spell modifier from the target.
  - name: triggeredBy
    description: Pointer to the AuraEffect that triggered this call. Can be nullptr
      if not triggered by another aura effect. Used for tracking the origin of the
      modification.
  returns: null
  examples:
  - title: Basic Usage in Aura Application
    code: "void MyAuraEffect::OnApply(AuraEffect const* aurEff, AuraEffectHandleModes\
      \ mode)\n{\n    Unit* target = GetTarget();\n    ApplySpellMod(target, true,\
      \ aurEff);\n}"
    language: cpp
  - title: Usage with Triggered By Parameter
    code: "void MyAuraEffect::OnRemove(AuraEffect const* aurEff, AuraEffectHandleModes\
      \ mode)\n{\n    Unit* target = GetTarget();\n    ApplySpellMod(target, false,\
      \ aurEff->GetBase());\n}"
    language: cpp
  notes: This method is part of the aura effect handling system and should only be
    called during appropriate aura application or removal phases. The spell modifier
    logic depends on the specific aura type and its associated spell mod definitions.
    Performance-wise, this method may involve calculations that affect spell processing
    for the target unit.
  warnings: Do not call this method outside of proper aura application/removal contexts
    as it may lead to incorrect spell behavior or crashes. Ensure that the target
    pointer is valid before calling this method to avoid null pointer dereferences.
  related:
  - GetTarget
  - GetBase
  - GetAuraType
  - ApplySpellMod
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:43:56.486342'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
