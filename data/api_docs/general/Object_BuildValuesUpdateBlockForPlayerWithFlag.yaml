api:
  class: Object
  method: BuildValuesUpdateBlockForPlayerWithFlag
  signature: void Object::BuildValuesUpdateBlockForPlayerWithFlag(UpdateData * data,
    int flags, const Player * target) const
documentation:
  brief: Builds an update block for a player with specified flags, used to send object
    data in updates.
  description: The BuildValuesUpdateBlockForPlayerWithFlag method constructs an update
    block containing the object's data fields that are relevant to a specific target
    player. This method is typically invoked during World of Warcraft packet construction
    to efficiently transmit object state changes to players. It uses the provided
    flags to determine which fields should be included in the update, allowing for
    selective transmission based on visibility or update requirements. The method
    operates on the object's internal data structure and populates the given UpdateData
    container with the appropriate update packets.
  parameters:
  - name: data
    description: Pointer to an UpdateData object where the constructed update block
      will be stored. This container holds the serialized update information that
      will be sent to the client.
  - name: flags
    description: Integer flags that control which fields are included in the update
      block. These flags typically determine visibility, update type, or other filtering
      criteria for the object's data fields.
  - name: target
    description: Pointer to the Player object for whom the update block is being constructed.
      This determines the player-specific context and visibility rules applied during
      update block creation.
  returns: null
  examples:
  - title: Basic usage in update processing
    code: 'UpdateData data;

      Player* targetPlayer = ...;

      int updateFlags = UPDATEFLAG_LOWGUID | UPDATEFLAG_HAS_POSITION;

      this->BuildValuesUpdateBlockForPlayerWithFlag(&data, updateFlags, targetPlayer);

      '
    language: cpp
  - title: Using with custom visibility flags
    code: 'UpdateData data;

      Player* player = ...;

      int customFlags = UPDATEFLAG_SELF | UPDATEFLAG_TRANSPORT;

      this->BuildValuesUpdateBlockForPlayerWithFlag(&data, customFlags, player);

      '
    language: cpp
  notes: This method is part of the core update system in TrinityCore and is called
    internally by the game engine when sending object updates to players. The flags
    parameter controls which fields are included in the update, and must be properly
    set according to the update requirements. This method modifies the UpdateData
    object passed as a parameter, adding new update blocks to it.
  warnings: This method should only be called from within the game's update system
    or when constructing update packets for players. Incorrect flag values may result
    in incomplete or incorrect updates being sent to clients. The target player parameter
    must not be null, and the UpdateData object must be properly initialized before
    calling this method.
  related:
  - BuildValuesUpdateBlockForPlayer
  - BuildOutOfRangeUpdateBlock
  - GetUpdateData
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T20:02:46.446518'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
