api:
  class: ScriptMgr
  method: OnFailedAccountLogin
  signature: void ScriptMgr::OnFailedAccountLogin(uint32 accountId)
documentation:
  brief: Called when an account login attempt fails in the TrinityCore server.
  description: The OnFailedAccountLogin method is a hook point in the ScriptMgr class
    that gets invoked whenever a player attempts to log into their account but the
    login process fails. This can occur due to incorrect username or password, account
    lockout, or other authentication issues. The method provides a way for custom
    scripts or modules to react to failed login attempts, such as logging the event,
    implementing rate limiting, or triggering security measures. It is part of the
    general scripting interface in TrinityCore that allows developers to extend server
    behavior without modifying core code.
  parameters:
  - name: accountId
    description: The unique identifier of the account attempting to log in. This value
      corresponds to the 'id' field in the 'account' table of the TrinityCore database.
  returns: null
  examples:
  - title: Basic Implementation Example
    code: "class MyScript : public ScriptObject\n{\npublic:\n    MyScript() : ScriptObject(\"\
      MyScript\") {}\n\n    void OnFailedAccountLogin(uint32 accountId) override\n\
      \    {\n        // Log failed login attempt\n        sLog->outInfo(LOG_FILTER_SCRIPTS,\
      \ \"Failed login attempt for account ID: %u\", accountId);\n    }\n};"
    language: cpp
  - title: Advanced Example with Rate Limiting
    code: "class SecurityScript : public ScriptObject\n{\npublic:\n    SecurityScript()\
      \ : ScriptObject(\"SecurityScript\") {}\n\n    void OnFailedAccountLogin(uint32\
      \ accountId) override\n    {\n        static std::map<uint32, uint32> failedAttempts;\n\
      \        ++failedAttempts[accountId];\n        \n        if (failedAttempts[accountId]\
      \ >= 5)\n        {\n            // Lock account after 5 failed attempts\n  \
      \          CharacterDatabase.PExecute(\"UPDATE account SET locked = 1 WHERE\
      \ id = %u\", accountId);\n            sLog->outInfo(LOG_FILTER_SCRIPTS, \"Account\
      \ ID %u locked due to multiple failed login attempts.\", accountId);\n     \
      \   }\n    }\n};"
    language: cpp
  notes: This method is called from the authentication flow within the server's login
    system. It runs in the main thread and should not perform heavy operations that
    could block login processing. The accountId parameter is guaranteed to be valid
    at the time of call, but it may not correspond to an active account if the login
    failure was due to a non-existent account.
  warnings: Avoid performing database writes or complex operations within this method
    as it can impact login performance. Ensure any logging or tracking mechanisms
    are efficient and do not introduce security vulnerabilities.
  related:
  - OnAccountLogin
  - OnFailedUsernameLogin
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T22:49:59.289962'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
