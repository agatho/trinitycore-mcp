api:
  class: Unit
  method: HasNpcFlag
  signature: bool Unit::HasNpcFlag(NPCFlags flags) const
documentation:
  brief: Checks if the unit has a specific NPC flag set.
  description: This method determines whether a Unit object possesses a particular
    NPC flag, which is used to define the behavior and classification of non-player
    characters in World of Warcraft. The function evaluates the NPC flags assigned
    to the unit and returns true if the specified flag is present. This is commonly
    used for identifying special NPC types such as vendors, trainers, or guards, and
    is essential for proper game logic handling in TrinityCore's core functionality.
  parameters: []
  returns: Returns true if the unit has the specified NPC flag set, false otherwise.
  examples:
  - title: Checking for vendor flag
    code: "if (unit->HasNpcFlag(NPCFlags::Vendor)) {\n    // Unit is a vendor\n}"
    language: cpp
  notes: The method performs bitwise operations on the NPC flags, making it efficient
    but requiring careful handling of flag values. This function should be used in
    conjunction with other NPC-related methods to properly classify units.
  warnings: Improper use of this method can lead to incorrect behavior when identifying
    NPC types, particularly if flags are not properly set or checked. Ensure that
    the NPCFlags enum is correctly defined before calling this method.
  related:
  - HasNpcFlag
  - GetNpcFlags
  - SetNpcFlags
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:19:49.098749'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
