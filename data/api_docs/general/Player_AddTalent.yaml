api:
  class: Player
  method: AddTalent
  signature: bool Player::AddTalent(const TalentEntry * talent, uint8 spec, bool learning)
documentation:
  brief: Adds a talent to the player's specified spec.
  description: The AddTalent method allows a player to add a specific talent entry
    to their character's talent tree for a given spec. This method is used primarily
    during character creation or when learning new talents through various game mechanics
    such as talent points distribution. The method returns true if the talent was
    successfully added, false otherwise. It handles both the internal talent point
    allocation and updates the player's talent data accordingly.
  parameters:
  - name: talent
    description: Pointer to a TalentEntry structure that defines the talent to be
      added. This contains information about the talent such as its ID, rank, and
      required prerequisites.
  - name: spec
    description: The spec index (0-2) where the talent should be added. Spec 0 represents
      the first spec, spec 1 represents the second spec, and spec 2 represents the
      third spec.
  - name: learning
    description: Boolean flag indicating whether the talent is being learned (true)
      or simply added without learning (false). This affects how the talent points
      are handled during addition.
  returns: Returns true if the talent was successfully added to the player's spec,
    false otherwise. The method may return false if the talent entry is invalid or
    if the spec index is out of bounds.
  examples:
  - title: Basic Usage Example
    code: 'Player* player = GetPlayer();

      TalentEntry* talent = new TalentEntry;

      // ... fill talent data ...

      bool result = player->AddTalent(talent, 0, true);'
    language: cpp
  - title: Advanced Usage Example
    code: "// Assuming we have a valid talent entry\nTalentEntry* talent = GetTalentEntry(12345);\n\
      bool success = player->AddTalent(talent, 1, false);\nif (success)\n{\n    //\
      \ Talent added successfully\n}\nelse\n{\n    // Failed to add talent\n}"
    language: cpp
  notes: This method is typically used in conjunction with other talent-related methods
    like AddTalentPoints or UpdateTalents. The method internally manages the player's
    talent point allocation and ensures that the talent entry is properly added to
    the correct spec. It should be used carefully during character creation or when
    modifying talents.
  warnings: This method should not be called during active gameplay without proper
    consideration of game mechanics. Adding talents incorrectly may result in invalid
    talent points or incorrect spec assignments. Also, this method does not validate
    that the talent entry is valid for the player's class and level.
  related:
  - AddTalentPoints
  - UpdateTalents
  - GetTalentEntry
  - GetTalentPoints
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:27:56.059922'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
