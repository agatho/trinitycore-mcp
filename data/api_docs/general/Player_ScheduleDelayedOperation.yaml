api:
  class: Player
  method: ScheduleDelayedOperation
  signature: void Player::ScheduleDelayedOperation(uint32 operation)
documentation:
  brief: Schedules a delayed operation for the player to be executed at a later time.
  description: The ScheduleDelayedOperation method queues a specific operation for
    the player that will be executed asynchronously at a later point in time. This
    mechanism is commonly used in TrinityCore to defer certain actions, such as spell
    effects, item usage, or other game logic, allowing them to be processed outside
    of the main update loop. The operation identifier determines what kind of delayed
    action will be performed when the scheduled time arrives. This method does not
    execute the operation immediately but rather registers it for future execution.
  parameters: []
  returns: void
  examples:
  - title: Scheduling a Delayed Spell Effect
    code: 'Player* player = ...;

      player->ScheduleDelayedOperation(PLAYER_DELAYED_SPELL_EFFECT);'
    language: cpp
  notes: This method is typically used in conjunction with the player's delayed operation
    system, which manages a queue of operations to be executed. The actual execution
    of the delayed operation occurs during the next update cycle when the delay has
    expired.
  warnings: null
  related:
  - Player::Update
  - Player::AddDelayedOperation
  - Player::ExecuteDelayedOperations
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T14:46:12.020119'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
