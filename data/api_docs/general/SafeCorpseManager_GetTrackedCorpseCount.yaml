api:
  class: SafeCorpseManager
  method: GetTrackedCorpseCount
  signature: uint32 SafeCorpseManager::GetTrackedCorpseCount() const
documentation:
  brief: Returns the total number of corpses currently tracked by the safe corpse
    manager.
  description: The GetTrackedCorpseCount method retrieves the current count of corpses
    that are being managed by the SafeCorpseManager instance. This count represents
    all corpses that have been registered with the manager, typically including those
    associated with players who have died but not yet been cleaned up or revived.
    The method provides a way to monitor the state of corpse tracking within the game
    world, which is essential for managing memory and ensuring proper cleanup of player-related
    data structures after death. This functionality is particularly relevant in scenarios
    involving player death, resurrection mechanics, and server-side corpse management.
  parameters: []
  returns: A uint32 value representing the number of corpses currently tracked by
    the SafeCorpseManager instance. Returns zero if no corpses are being tracked.
  examples:
  - title: Basic Usage to Monitor Corpse Count
    code: "uint32 corpseCount = sObjectAccessor->GetCorpseManager()->GetTrackedCorpseCount();\n\
      if (corpseCount > 0)\n{\n    TC_LOG_INFO(\"server\", \"Currently tracking %u\
      \ corpses\", corpseCount);\n}"
    language: cpp
  notes: This method is typically used for debugging and monitoring purposes to understand
    how many corpses are being tracked by the system. It's a read-only operation and
    does not modify any internal state of the manager. The count returned may include
    both player and creature corpses depending on how the SafeCorpseManager is configured.
  warnings: null
  related:
  - GetTrackedCorpse
  - AddCorpse
  - RemoveCorpse
  - RemoveCorpseByGuid
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:59:53.622978'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
