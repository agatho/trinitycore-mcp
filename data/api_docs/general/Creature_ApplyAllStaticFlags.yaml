api:
  class: Creature
  method: ApplyAllStaticFlags
  signature: void Creature::ApplyAllStaticFlags(const CreatureStaticFlagsHolder &
    flags)
documentation:
  brief: Applies all static flags from the provided holder to this creature instance.
  description: The ApplyAllStaticFlags method is used to configure a Creature object
    with a set of predefined static flags. These flags define various behavioral and
    functional properties of the creature within the World of Warcraft game environment,
    such as movement patterns, interaction settings, and AI behaviors. The method
    takes a reference to a CreatureStaticFlagsHolder which contains all the necessary
    flag configurations that should be applied to the creature. This operation is
    typically performed during creature initialization or when applying specific static
    configurations to an existing creature instance.
  parameters:
  - name: flags
    description: A constant reference to a CreatureStaticFlagsHolder object containing
      all static flags to be applied to this creature. This holder encapsulates various
      configuration flags that define the creature's behavior and properties.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'CreatureStaticFlagsHolder staticFlags;

      // Configure staticFlags with desired settings

      creature->ApplyAllStaticFlags(staticFlags);'
    language: cpp
  - title: Applying Custom Static Flags
    code: 'CreatureStaticFlagsHolder customFlags;

      customFlags.SetFlag(CreatureStaticFlags::FLAG_NO_PVP);

      customFlags.SetFlag(CreatureStaticFlags::FLAG_CAN_SWIM);

      creature->ApplyAllStaticFlags(customFlags);'
    language: cpp
  notes: This method is typically called during creature creation or when dynamically
    modifying a creature's static properties. The implementation likely involves bitwise
    operations to set flags within the creature's internal flag storage. Developers
    should ensure that the CreatureStaticFlagsHolder contains valid and appropriate
    flags before calling this method.
  warnings: Calling this method on an already initialized creature may have unintended
    consequences if not properly synchronized with the game state. Care should be
    taken when applying flags that might conflict with existing creature behaviors
    or AI states.
  related:
  - GetStaticFlags
  - SetStaticFlag
  - HasStaticFlag
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T16:56:25.506966'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
