api:
  class: Item
  method: BuildUpdate
  signature: void Item::BuildUpdate(int & param0)
documentation:
  brief: Generates and updates the item's visual appearance for all nearby players.
  description: The BuildUpdate method constructs and sends the item's visual representation
    to nearby players in the world. This method is crucial for ensuring that items
    are properly displayed with their correct appearance, including enchantments,
    gem slots, and other visual attributes. It handles the creation of update fields
    for the item's display information, which is essential for maintaining game state
    consistency when items are equipped or modified. The method typically involves
    setting up the proper update mask and sending the data to players within range.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Item* item = new Item();

      item->BuildUpdate();

      // This will generate the update for the item''s appearance'
    language: cpp
  notes: This method is typically called during item initialization or when changes
    occur to the item's visual properties. It may be invoked multiple times during
    an item's lifecycle, particularly when enchantments or gems are applied. Performance
    considerations include avoiding frequent calls during rapid item modifications.
  warnings: The method should not be called directly in most cases; it is usually
    invoked through internal game mechanics or by the player's update system. Improper
    usage may lead to visual inconsistencies or incorrect display of items.
  related:
  - Item::GetUInt32Value
  - Item::SetUInt32Value
  - Item::Update
  - Item::BuildUpdateFields
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T02:16:52.663558'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
