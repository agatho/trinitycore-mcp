api:
  class: PlayerbotDatabaseManager
  method: IsConnected
  signature: bool PlayerbotDatabaseManager::IsConnected() const
documentation:
  brief: Checks whether the playerbot database connection is currently active.
  description: The IsConnected method determines if the PlayerbotDatabaseManager has
    an active and valid connection to the database. This is crucial for playerbot
    functionality, as all database operations depend on a working connection. The
    method typically checks internal connection state flags or attempts a lightweight
    query to verify connectivity. It's commonly used before performing database operations
    to prevent errors from failed queries.
  parameters: []
  returns: Returns true if the database connection is active and functional; returns
    false if the connection is closed, lost, or has not been established yet.
  examples:
  - title: Basic Connection Check
    code: "if (PlayerbotDatabaseManager::Instance()->IsConnected()) {\n    // Proceed\
      \ with database operations\n    LOG_INFO(\"playerbots\", \"Database connection\
      \ is active\");\n} else {\n    LOG_ERROR(\"playerbots\", \"Database connection\
      \ failed\");\n}"
    language: cpp
  - title: Preventing Database Errors
    code: "PlayerbotDatabase* db = PlayerbotDatabaseManager::Instance();\nif (!db->IsConnected())\
      \ {\n    LOG_ERROR(\"playerbots\", \"Cannot perform operation: database not\
      \ connected\");\n    return false;\n}\n// Safe to proceed with database operations\n\
      return true;"
    language: cpp
  notes: This method performs a lightweight check and should not significantly impact
    performance. It's recommended to cache the result of this check if it's being
    called frequently in tight loops. The implementation likely uses connection state
    tracking rather than attempting full queries for efficiency.
  warnings: While this method indicates connection status, it doesn't guarantee that
    subsequent database operations will succeed. Network issues can occur between
    the connection check and actual query execution. Always implement proper error
    handling around database operations regardless of connection status.
  related:
  - PlayerbotDatabaseManager::Connect
  - PlayerbotDatabaseManager::Disconnect
  - PlayerbotDatabaseManager::GetConnection
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T08:26:04.550730'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
