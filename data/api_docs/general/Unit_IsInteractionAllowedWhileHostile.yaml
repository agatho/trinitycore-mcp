api:
  class: Unit
  method: IsInteractionAllowedWhileHostile
  signature: bool Unit::IsInteractionAllowedWhileHostile() const
documentation:
  brief: Determines whether interaction is allowed while hostile.
  description: This method checks if a unit can engage in interactions such as talk,
    questing, or trading while in a hostile state. It typically returns true when
    the unit's faction allows for peaceful interaction even when hostiles, and false
    otherwise. The method is commonly used to determine whether a player or NPC can
    interact with another unit without being interrupted by combat or hostility. This
    functionality is crucial for maintaining game balance and preventing exploits
    during player vs player interactions.
  parameters: []
  returns: Returns true if interaction is allowed while hostile, false otherwise.
    The method returns false when the unit's faction or state prevents interaction
    under hostile conditions.
  examples:
  - title: Basic Usage Example
    code: "if (unit->IsInteractionAllowedWhileHostile())\n{\n    // Perform interaction\n\
      }\nelse\n{\n    // Avoid interaction\n}"
    language: cpp
  notes: 'Implementation details: This method likely checks the unit''s faction standing
    and state flags. Performance considerations: The method should be fast as it is
    often called during combat situations. Thread safety: This method is thread-safe
    as it only reads immutable state properties.'
  warnings: 'This method may not always accurately reflect real-world game behavior,
    especially in edge cases involving specific factions or NPC states. Common mistake:
    Assuming that this method will always return true for all units can lead to incorrect
    gameplay logic and potential exploits.'
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T11:59:48.550327'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
