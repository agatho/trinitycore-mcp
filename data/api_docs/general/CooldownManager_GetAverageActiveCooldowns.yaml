api:
  class: CooldownManager
  method: GetAverageActiveCooldowns
  signature: uint32 CooldownManager::GetAverageActiveCooldowns() const
documentation:
  brief: Calculates and returns the average number of active cooldowns for the managed
    unit.
  description: The GetAverageActiveCooldowns method computes the average count of
    active cooldowns associated with the unit controlled by this CooldownManager.
    This value is typically used for performance monitoring, balancing checks, or
    statistical analysis within the TrinityCore framework. The method does not modify
    any internal state and is safe to call during gameplay. It aggregates cooldown
    data from all applicable abilities and spells that are currently on cooldown for
    the unit.
  parameters: []
  returns: A uint32 value representing the average number of active cooldowns. Returns
    0 if no cooldowns are active or if the manager has no associated unit.
  examples:
  - title: Basic Usage in Player Context
    code: 'Player* player = ...;

      CooldownManager* cm = player->GetCooldownManager();

      uint32 avgCooldowns = cm->GetAverageActiveCooldowns();

      TC_LOG_INFO("misc", "Average active cooldowns: %u", avgCooldowns);'
    language: cpp
  - title: Performance Monitoring Example
    code: "void CheckCooldownBalance(Player* player)\n{\n    CooldownManager* cm =\
      \ player->GetCooldownManager();\n    uint32 avg = cm->GetAverageActiveCooldowns();\n\
      \    if (avg > 10)\n        TC_LOG_WARNING(\"server\", \"Player %s has unusually\
      \ high cooldown count: %u\", player->GetName().c_str(), avg);\n}"
    language: cpp
  notes: This method may involve iterating through all active cooldown entries, so
    frequent calls could have minor performance implications. The calculation is based
    on the current state of the unit's cooldowns and does not account for future cooldown
    additions or removals unless explicitly triggered by game events.
  warnings: Ensure that the CooldownManager instance is properly initialized before
    calling this method. Calling it on a null or unlinked manager may result in undefined
    behavior or incorrect results.
  related:
  - GetTotalActiveCooldowns
  - GetCooldownForSpell
  - ResetAllCooldowns
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:47:35.818984'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
