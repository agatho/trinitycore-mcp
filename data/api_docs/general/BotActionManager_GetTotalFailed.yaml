api:
  class: BotActionManager
  method: GetTotalFailed
  signature: uint64 BotActionManager::GetTotalFailed() const
documentation:
  brief: Returns the total number of failed bot actions tracked by the manager
  description: The GetTotalFailed method retrieves the cumulative count of all bot
    actions that have failed since the manager was initialized or last reset. This
    value includes all types of failures across all managed bots and is typically
    used for monitoring bot performance, debugging issues, or generating reports on
    bot reliability. The counter is maintained internally by the BotActionManager
    class and increments each time a bot action fails to complete successfully. This
    method does not modify any internal state and is safe to call at any time during
    runtime.
  parameters: []
  returns: A uint64 value representing the total number of failed bot actions. Returns
    zero if no failures have occurred or if the manager has been reset.
  examples:
  - title: Basic Usage to Monitor Bot Failures
    code: "uint64 totalFailed = botActionManager.GetTotalFailed();\nif (totalFailed\
      \ > 100)\n{\n    sLog->outString(\"Warning: %u bot actions have failed\", totalFailed);\n\
      }"
    language: cpp
  - title: Tracking Failure Rate Over Time
    code: 'uint64 initialFailures = botActionManager.GetTotalFailed();

      // ... run some bot operations ...

      uint64 currentFailures = botActionManager.GetTotalFailed();

      uint64 failuresSinceStart = currentFailures - initialFailures;

      sLog->outString("Bot failures since start: %u", failuresSinceStart);'
    language: cpp
  notes: This method provides a global view of bot action failures and does not distinguish
    between different types of failures or individual bot sources. The value is thread-safe
    for reading but should be used carefully in high-frequency scenarios where performance
    might be impacted by frequent calls.
  warnings: The returned value represents cumulative failures and may overflow if
    the system runs for an extended period with a very high failure rate. Ensure that
    any logic depending on this value accounts for potential integer overflow or uses
    appropriate data types for large numbers.
  related:
  - GetTotalSuccess
  - GetTotalExecuted
  - ResetCounters
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:30:03.131000'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
