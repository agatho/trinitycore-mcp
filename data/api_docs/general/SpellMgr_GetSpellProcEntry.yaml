api:
  class: SpellMgr
  method: GetSpellProcEntry
  signature: const SpellProcEntry * SpellMgr::GetSpellProcEntry(const SpellInfo *
    spellInfo) const
documentation:
  brief: Retrieves the spell proc entry data associated with a given spell info structure.
  description: The GetSpellProcEntry method looks up and returns the SpellProcEntry
    structure that contains procedural effect data for a specific spell. This is used
    internally by the game engine to determine how spells interact with various triggers
    such as damage dealt, healing received, or periodic effects. The returned pointer
    points to static data within the SpellMgr's internal storage and should not be
    modified. This method is typically called during spell processing to check if
    a spell has defined proc behavior that needs to be handled.
  parameters: []
  returns: A const pointer to a SpellProcEntry structure containing the procedural
    effect data for the specified spell, or nullptr if no proc entry exists for that
    spell.
  examples:
  - title: Basic Usage to Check Proc Entry
    code: "const SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);\nif (spellInfo)\n\
      {\n    const SpellProcEntry* procEntry = sSpellMgr->GetSpellProcEntry(spellInfo);\n\
      \    if (procEntry)\n    {\n        // Process the proc entry data\n       \
      \ printf(\"Spell %u has proc entry with chance: %f\\n\", spellInfo->Id, procEntry->Chance);\n\
      \    }\n    else\n    {\n        printf(\"Spell %u has no proc entry\\n\", spellInfo->Id);\n\
      \    }\n}"
    language: cpp
  notes: This method performs a lookup in the internal spell proc map, which is populated
    during server startup from spell proc definitions in database tables. The returned
    SpellProcEntry structures are immutable and shared across all spell instances.
    Performance is generally good as it uses hash-based lookups, but frequent calls
    should still be considered in performance-critical code paths.
  warnings: Do not modify the returned SpellProcEntry structure as it points to read-only
    data. Ensure that the input SpellInfo pointer is valid before calling this method
    to avoid undefined behavior or crashes.
  related:
  - GetSpellInfo
  - LoadSpellProcEntries
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:14:40.345301'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
