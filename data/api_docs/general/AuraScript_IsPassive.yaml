api:
  class: AuraScript
  method: IsPassive
  signature: bool AuraScript::IsPassive() const
documentation:
  brief: Checks whether the aura is passive.
  description: The IsPassive method determines if the aura associated with the AuraScript
    is a passive aura. Passive auras are applied automatically without requiring a
    specific trigger or activation condition, typically representing buffs or debuffs
    that persistently affect the target. This method is commonly used in aura script
    implementations to modify behavior based on whether an aura is passive or active.
    The result of this check can influence how the aura's effects are processed or
    displayed.
  parameters: []
  returns: Returns true if the aura is passive, false otherwise.
  examples:
  - title: Basic Usage in Aura Script
    code: "class MyAuraScript : public AuraScript\n{\npublic:\n    void OnApply(AuraEffect\
      \ const* aurEff, AuraEffectHandleModes mode) override\n    {\n        if (IsPassive())\n\
      \        {\n            // Handle passive aura logic\n            SendPacketToPlayer();\n\
      \        }\n    }\n};"
    language: cpp
  - title: Conditional Logic Based on Passive State
    code: "class ExampleAuraScript : public AuraScript\n{\npublic:\n    void OnUpdate(uint32\
      \ diff) override\n    {\n        if (IsPassive())\n        {\n            //\
      \ Passive auras may have different update logic\n            DoPassiveUpdate();\n\
      \        }\n        else\n        {\n            // Active auras might use different\
      \ behavior\n            DoActiveUpdate();\n        }\n    }\n};"
    language: cpp
  notes: This method relies on the aura's internal flags to determine passivity. Passive
    auras are typically defined in spell templates with the passive flag set. Developers
    should ensure that the aura being checked is properly initialized before calling
    this method.
  warnings: Calling IsPassive() on an uninitialized or invalid aura may result in
    undefined behavior. Always verify that the AuraScript is associated with a valid
    aura instance before invoking this method.
  related:
  - IsPositive
  - IsNegative
  - GetAura
  - GetTarget
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T18:10:39.241787'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
