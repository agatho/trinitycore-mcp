api:
  class: RoleBasedCombatPositioning
  method: GetPositionUpdateCount
  signature: uint32 RoleBasedCombatPositioning::GetPositionUpdateCount() const
documentation:
  brief: Returns the total count of position updates performed by the role-based combat
    positioning system.
  description: The GetPositionUpdateCount method retrieves the cumulative number of
    position update operations executed within the RoleBasedCombatPositioning class.
    This counter tracks how many times the system has adjusted or recalculated positions
    for units during combat scenarios, which is essential for monitoring performance
    and ensuring proper positioning behavior in role-based combat mechanics. The value
    is typically incremented each time a unit's position is modified based on role-specific
    rules, such as maintaining optimal distance from targets or repositioning for
    ranged attacks. This method provides insight into the activity level of the combat
    positioning system and can be used for debugging, performance analysis, or tracking
    system usage over time.
  parameters: []
  returns: A uint32 value representing the total number of position updates that have
    been processed by the RoleBasedCombatPositioning system since its initialization
    or last reset. Each increment corresponds to a successful position adjustment
    operation.
  examples:
  - title: Basic Usage Example
    code: 'uint32 updateCount = combatPositioning->GetPositionUpdateCount();

      TC_LOG_INFO("combat", "Position updates performed: %u", updateCount);'
    language: cpp
  - title: Performance Monitoring Example
    code: 'uint32 initialCount = combatPositioning->GetPositionUpdateCount();

      // ... perform combat actions ...

      uint32 finalCount = combatPositioning->GetPositionUpdateCount();

      TC_LOG_DEBUG("combat", "Total position updates during combat: %u", finalCount
      - initialCount);'
    language: cpp
  notes: This method is typically used for debugging and performance monitoring. The
    counter may be reset under certain conditions, such as when a new combat encounter
    begins or when the system is explicitly reset. The value returned represents a
    monotonically increasing count, making it suitable for tracking changes over time.
  warnings: Be aware that this counter continues to increment across multiple combat
    encounters unless explicitly reset. If used in long-running systems or during
    extended gameplay sessions, the counter may approach maximum uint32 values and
    require handling of potential overflow scenarios.
  related:
  - ResetPositionUpdateCount
  - GetLastPositionUpdate
  - IsPositionUpdateRequired
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:26:34.298171'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
