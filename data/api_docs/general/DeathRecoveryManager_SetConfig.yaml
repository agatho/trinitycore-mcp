api:
  class: DeathRecoveryManager
  method: SetConfig
  signature: void DeathRecoveryManager::SetConfig(const DeathRecoveryConfig & config)
documentation:
  brief: Updates the death recovery configuration settings for the DeathRecoveryManager
    instance.
  description: The SetConfig method allows updating the internal configuration of
    a DeathRecoveryManager object with a new DeathRecoveryConfig instance. This method
    is typically used to apply runtime changes to how death recovery mechanics are
    handled, such as adjusting respawn timers, loot preservation settings, or player
    state restoration parameters. The configuration is applied immediately and affects
    subsequent death recovery operations. This method does not validate the input
    configuration values, so it's expected that valid configurations are passed to
    avoid unexpected behavior during death recovery events.
  parameters:
  - name: config
    description: A const reference to a DeathRecoveryConfig object containing the
      new configuration settings to be applied. This includes parameters such as respawn
      delays, loot retention policies, and other death recovery related options.
  returns: null
  examples:
  - title: Basic Configuration Update
    code: 'DeathRecoveryConfig newConfig;

      newConfig.respawnDelay = 300; // 5 minutes

      newConfig.lootRetention = true;

      manager.SetConfig(newConfig);'
    language: cpp
  - title: Updating with Dynamic Configuration Values
    code: 'DeathRecoveryConfig config;

      config.respawnDelay = sWorld->getIntConfig(CONFIG_DEATH_RECOVERY_RESPAWN_DELAY);

      config.lootRetention = sWorld->getBoolConfig(CONFIG_DEATH_RECOVERY_LOOT_RETENTION);

      manager.SetConfig(config);'
    language: cpp
  notes: This method directly modifies the internal state of the DeathRecoveryManager.
    It's recommended to ensure that all configuration values are validated before
    calling this method, as invalid configurations may lead to unexpected behavior
    during death recovery events. The method performs no locking or synchronization
    internally, so if used in a multi-threaded environment, external synchronization
    may be required.
  warnings: Passing an invalid or malformed DeathRecoveryConfig object may result
    in undefined behavior during death recovery operations. Always validate configuration
    values before calling this method to prevent potential crashes or incorrect game
    mechanics behavior.
  related:
  - GetConfig
  - ApplyDeathRecovery
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:22:05.606003'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
