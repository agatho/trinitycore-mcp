api:
  class: Unit
  method: CanInstantCast
  signature: bool Unit::CanInstantCast() const
documentation:
  brief: Determines whether a unit can instant cast spells without requiring channeling
    or casting time.
  description: The CanInstantCast method checks if a Unit (such as a player or creature)
    is capable of performing instant cast spells, meaning it can execute spells immediately
    without waiting for any casting delay or channeling time. This functionality is
    crucial for understanding the game mechanics of spell execution and is often used
    in conjunction with other methods like CanCast, CanChannel, or CanInterrupt to
    determine the full casting behavior of a unit. The method typically returns true
    when the unit has no active casting restrictions or conditions that prevent instant
    casting, such as being in combat or having certain debuffs.
  parameters: []
  returns: Returns true if the unit can perform an instant cast, false otherwise.
    A return value of false may indicate that the unit is currently restricted by
    game mechanics such as being in combat, under a specific debuff, or has other
    conditions preventing immediate casting.
  examples:
  - title: Basic Usage Example
    code: "if (unit->CanInstantCast()) {\n    // Perform instant cast\n}"
    language: cpp
  notes: This method is commonly used in spell handling logic to determine if a unit
    can bypass normal casting requirements. It's often tied to game mechanics involving
    player movement, combat state, or debuff states.
  warnings: This method should not be used as the sole determinant of whether a spell
    can be cast; it must be combined with other checks like CanCast and CanChannel
    for full accuracy.
  related:
  - Unit::CanCast
  - Unit::CanChannel
  - Unit::CanInterrupt
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T08:23:43.210258'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
