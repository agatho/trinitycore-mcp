api:
  class: Spell
  method: EffectDualWield
  signature: void Spell::EffectDualWield()
documentation:
  brief: Enables dual-wield mechanics for the spell, allowing simultaneous off-hand
    weapon attacks.
  description: The EffectDualWield method handles the implementation of dual-wield
    combat mechanics within the TrinityCore Spell system. This method ensures that
    when a player executes a spell with dual-wield capabilities, the game properly
    processes and applies the off-hand weapon attack alongside the main-hand attack.
    It typically involves checking for valid dual-wield conditions, applying appropriate
    modifiers, and managing the timing of both weapon attacks. The method is crucial
    for maintaining proper combat flow during spells that support dual-wield functionality,
    particularly in scenarios involving weapon specialization or specific spell effects
    that require dual-wield mechanics.
  parameters: []
  returns: null
  examples:
  - title: Basic Spell DualWield Usage
    code: "void Spell::EffectDualWield()\n{\n    // Implementation logic for dual-wield\n\
      \    // This method handles off-hand attack execution\n    // during spell casting\n\
      }"
    language: cpp
  notes: This method requires proper handling of weapon states and must be called
    after the main-hand attack is processed. It should only be invoked when the player
    has a valid off-hand weapon equipped and meets dual-wield requirements.
  warnings: Improper implementation may result in incorrect combat timing or missing
    off-hand attacks during spell execution. Ensure that all dual-wield conditions
    are properly checked before calling this method.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T22:35:11.250939'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
