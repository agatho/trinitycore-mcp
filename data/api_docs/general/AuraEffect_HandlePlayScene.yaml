api:
  class: AuraEffect
  method: HandlePlayScene
  signature: void AuraEffect::HandlePlayScene(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Plays a scene effect associated with an aura application when applied or
    removed.
  description: The HandlePlayScene method is responsible for triggering scene effects
    related to auras in World of Warcraft. It is called during the application or
    removal of an aura effect and manages the visual or auditory scene events that
    should occur. This method typically interacts with the client-side scene system
    to display effects such as spell visualizations, cinematic sequences, or environmental
    changes tied to specific aura states. The behavior depends on the mode parameter
    which determines whether the scene should be played in a specific context (e.g.,
    application or removal) and the apply flag which indicates if the aura is being
    applied or removed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter is required and must not be
      null for proper functionality.
  - name: mode
    description: Integer value indicating the mode of operation for the scene playback.
      Valid values typically represent different contexts such as application, removal,
      or specific visual states. The exact meaning depends on implementation details
      within TrinityCore's aura system.
  - name: apply
    description: Boolean flag that determines whether the aura is being applied (true)
      or removed (false). This affects how the scene effect is handled and which events
      are triggered during the aura lifecycle.
  returns: null
  examples:
  - title: Basic usage in aura application
    code: "void MyAuraEffect::HandlePlayScene(const AuraApplication* aurApp, uint8\
      \ mode, bool apply) const {\n    if (apply) {\n        // Play scene when aura\
      \ is applied\n        aurApp->GetTarget()->PlayScene(12345, SCENEFLAG_NONE);\n\
      \    } else {\n        // Play reverse scene when aura is removed\n        aurApp->GetTarget()->PlayScene(12346,\
      \ SCENEFLAG_NONE);\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system and should only be
    called from within the context of aura application or removal logic. The actual
    scene playback behavior depends heavily on the specific implementation of the
    scene system in TrinityCore and may require additional setup for custom scenes.
  warnings: Improper use of this method can lead to client-side visual glitches or
    incorrect scene playback. Ensure that all scene IDs referenced are valid and properly
    registered with the client. This method should not be called outside of the proper
    aura lifecycle context as it may cause undefined behavior.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetTarget
  - Unit::PlayScene
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:04:49.928554'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
