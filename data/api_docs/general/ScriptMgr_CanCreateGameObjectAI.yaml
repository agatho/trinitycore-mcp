api:
  class: ScriptMgr
  method: CanCreateGameObjectAI
  signature: bool ScriptMgr::CanCreateGameObjectAI(uint32 scriptId) const
documentation:
  brief: Determines whether a GameObject AI can be created for the specified script
    ID.
  description: The CanCreateGameObjectAI method checks if a GameObject AI instance
    can be instantiated for a given script identifier. This method is typically used
    during GameObject creation to verify that the associated script supports AI behavior.
    It ensures that only valid and supported GameObject scripts are allowed to have
    AI components attached, preventing runtime errors or undefined behavior. The method
    acts as a validation layer before attempting to create GameObject AI instances.
  parameters: []
  returns: Returns true if a GameObject AI can be created for the specified script
    ID; otherwise, returns false. A return value of false indicates that either the
    script ID is invalid, the script does not support AI behavior, or the AI system
    is not properly initialized.
  examples:
  - title: Check if GameObject AI can be created before instantiation
    code: "uint32 myScriptId = 12345;\nif (sScriptMgr->CanCreateGameObjectAI(myScriptId))\n\
      {\n    // Safe to proceed with GameObject AI creation\n    GameObject* go =\
      \ new GameObject();\n    go->SetGOInfo(sObjectMgr->GetGameObjectTemplate(myScriptId));\n\
      \    // ... further initialization\n}\nelse\n{\n    // Handle case where AI\
      \ cannot be created\n    sLog->outError(LOG_FILTER_GENERAL, \"Cannot create\
      \ AI for GameObject script %u\", myScriptId);\n}"
    language: cpp
  notes: This method is primarily used internally by the TrinityCore framework during
    GameObject creation and AI initialization. It relies on internal script registry
    data structures to determine if a given script ID has a valid AI implementation.
    The method should be called before attempting to create GameObject AI instances
    to avoid potential crashes or undefined behavior.
  warnings: Do not assume that a script ID with a valid GameObject template will necessarily
    support AI. Always call this method before creating GameObject AI instances. This
    method may return false for legitimate script IDs if the AI system is not properly
    initialized or if the specific script type does not support AI functionality.
  related:
  - GetGameObjectAI
  - CreateGameObjectAI
  - HasGameObjectScript
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:39:29.715611'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
