api:
  class: Unit
  method: CanHaveThreatList
  signature: bool Unit::CanHaveThreatList() const
documentation:
  brief: Determines whether the unit can maintain a threat list.
  description: This method checks if the unit is capable of maintaining a threat list,
    which is essential for determining whether the unit can engage in combat and generate
    threat. The function typically returns true for units that are capable of being
    in combat, such as players or NPCs with valid threat generation capabilities.
    It's commonly used in the context of AI behavior and combat system logic to ensure
    proper threat management.
  parameters: []
  returns: Returns true if the unit can maintain a threat list, false otherwise. This
    indicates whether the unit is capable of generating or maintaining threat in combat
    situations.
  examples:
  - title: Basic usage example
    code: "if (unit->CanHaveThreatList()) {\n    // Unit can generate threat\n   \
      \ // Perform threat-related actions\n}"
    language: cpp
  notes: This method is often used in conjunction with other threat-related functions
    to determine if a unit should be included in threat calculations. It's important
    to note that this function may not be directly related to the actual threat generation
    but rather to whether the unit can maintain a list of threats.
  warnings: This method should not be used as a direct replacement for checking if
    a unit is in combat, as it only determines capability to maintain threat lists,
    not whether the unit is actually generating threat.
  related:
  - Unit::IsInCombat
  - Unit::GetThreatList
  - Unit::CanGenerateThreat
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:43:26.277703'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
