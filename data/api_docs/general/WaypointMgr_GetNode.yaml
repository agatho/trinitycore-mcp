api:
  class: WaypointMgr
  method: GetNode
  signature: const WaypointNode * WaypointMgr::GetNode(uint32 pathId, uint32 nodeId)
    const
documentation:
  brief: Retrieves a specific waypoint node from a given path ID and node ID.
  description: The GetNode method retrieves a const pointer to a WaypointNode object
    within the WaypointMgr system. It allows access to individual waypoints that are
    part of a defined path, identified by a unique pathId and a specific nodeId within
    that path. This method is commonly used during NPC movement logic to fetch and
    process individual waypoints for path following behavior. The returned node pointer
    remains valid as long as the waypoint data is loaded and not modified or destroyed.
  parameters:
  - name: pathId
    description: Unique identifier of the waypoint path to retrieve the node from.
  - name: nodeId
    description: Index or unique identifier of the specific node within the path.
  returns: A const pointer to the WaypointNode object if found, or nullptr if either
    the path or node does not exist.
  examples:
  - title: Basic usage example
    code: "const WaypointNode* node = sWaypointMgr->GetNode(12345, 0);\nif (node)\n\
      {\n    // Process waypoint node\n    printf(\"Node X: %f, Y: %f\\n\", node->x,\
      \ node->y);\n}"
    language: cpp
  - title: Usage in movement logic
    code: "uint32 currentPath = creature->GetMotionMaster()->GetCurrentPathId();\n\
      uint32 currentNodeId = creature->GetMotionMaster()->GetCurrentNodeId();\nconst\
      \ WaypointNode* node = sWaypointMgr->GetNode(currentPath, currentNodeId);\n\
      if (node)\n{\n    // Use node for movement\n    creature->GetMotionMaster()->MovePoint(node->id,\
      \ node->x, node->y, node->z);\n}"
    language: cpp
  notes: This method assumes that the waypoint data has been properly loaded into
    memory. The WaypointMgr maintains internal structures for fast lookup of nodes
    by path and node ID. Ensure that pathId and nodeId values are within valid ranges
    to avoid undefined behavior.
  warnings: Accessing a node with invalid pathId or nodeId may return nullptr, so
    always check the return value before dereferencing. Do not modify the returned
    WaypointNode pointer as it's const and managed by the WaypointMgr system.
  related:
  - GetPath
  - GetNodeCount
  - LoadPath
  - AddNode
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:02:25.349113'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
