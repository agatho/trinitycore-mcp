api:
  class: Battleground
  method: IsPlayerInBattleground
  signature: bool Battleground::IsPlayerInBattleground(int guid) const
documentation:
  brief: Checks whether a player with the specified GUID is currently participating
    in the battleground.
  description: The IsPlayerInBattleground method determines if a player identified
    by their global unique identifier (GUID) is currently present and active within
    the battleground instance. This method is commonly used to validate player participation
    before performing actions such as awarding rewards, checking eligibility for victory
    conditions, or managing player states during battleground events. The method performs
    a lookup in the internal battleground player lists to confirm the player's presence.
    It returns true if the player is found in the battleground, and false otherwise.
    This check is essential for maintaining game integrity and ensuring that only
    valid participants can interact with battleground-specific mechanics.
  parameters: []
  returns: Returns true if a player with the specified GUID is currently participating
    in the battleground; otherwise, returns false.
  examples:
  - title: Basic Usage to Check Player Participation
    code: "if (bg->IsPlayerInBattleground(playerGuid)) {\n    // Player is in the\
      \ battleground\n    SendVictoryMessageToPlayer(playerGuid);\n} else {\n    //\
      \ Player is not in the battleground\n    SendErrorMessageToPlayer(playerGuid,\
      \ \"You are not in this battleground.\");\n}"
    language: cpp
  - title: Using in a Battleground Event Handler
    code: "void OnPlayerLeaveBattleground(Player* player) {\n    if (player && bg->IsPlayerInBattleground(player->GetGUID().GetCounter()))\
      \ {\n        // Perform cleanup for active player\n        RemovePlayerFromBattleground(player);\n\
      \    }\n}"
    language: cpp
  notes: This method performs a lookup in the battleground's internal data structures,
    so frequent calls may have performance implications. It is recommended to cache
    results when checking multiple times within a short timeframe. The GUID parameter
    should be validated before calling this method to ensure it represents a valid
    player.
  warnings: Ensure that the GUID passed to this method corresponds to a valid player
    object; passing an invalid or non-player GUID may lead to undefined behavior or
    incorrect return values. This method does not validate if the player is still
    alive or in a valid state, only their presence in the battleground instance.
  related:
  - GetPlayerCount
  - AddPlayer
  - RemovePlayer
  - IsPlayerInBattleground
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:04:03.268059'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
