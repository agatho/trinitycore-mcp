api:
  class: MotionMaster
  method: MoveJumpTo
  signature: void MotionMaster::MoveJumpTo(float angle, float speedXY, float speedZ)
documentation:
  brief: Initiates a jumping movement to a specified angle with given horizontal and
    vertical speeds.
  description: The MoveJumpTo method starts a jump motion for an AI-controlled unit,
    moving it in a parabolic trajectory toward a target angle. This method is typically
    used for creatures or NPCs that need to perform acrobatic or tactical jumps, such
    as leaping over obstacles or attacking from elevated positions. The movement follows
    a physics-based trajectory using the provided horizontal speed (speedXY) and vertical
    speed (speedZ). The jump will begin immediately if the unit is not already moving,
    otherwise it will interrupt any ongoing movement. This method does not block execution;
    the jump occurs asynchronously as part of the motion queue.
  parameters:
  - name: angle
    description: The target angle (in radians) that defines the direction of the jump
      relative to the unit's current facing direction. A value of 0 represents forward
      movement, pi/2 represents rightward movement, etc.
  - name: speedXY
    description: The horizontal speed component of the jump in game units per second.
      Controls how fast the unit moves along the ground plane during the jump.
  - name: speedZ
    description: The vertical speed component of the jump in game units per second.
      Positive values indicate upward motion, negative values indicate downward motion.
  returns: null
  examples:
  - title: Basic Jump to Target Angle
    code: 'float angle = M_PI / 4; // 45 degrees

      float speedXY = 10.0f;

      float speedZ = 8.0f;

      motionMaster->MoveJumpTo(angle, speedXY, speedZ);'
    language: cpp
  - title: Jump Forward with High Vertical Velocity
    code: '// Make a high jump forward

      motionMaster->MoveJumpTo(0.0f, 5.0f, 12.0f); // Jump straight ahead with strong
      upward motion'
    language: cpp
  notes: This method is part of the MotionMaster's queue-based movement system. The
    actual jump physics are handled by the core movement engine and may be affected
    by terrain height, collision detection, and unit weight. It is recommended to
    call this method only when the unit is in a state where it can safely perform
    jumps (e.g., not in combat or while grounded).
  warnings: Calling MoveJumpTo without proper context may result in unexpected behavior
    if the unit cannot physically perform the jump due to environmental constraints.
    Avoid calling this method repeatedly in rapid succession as it will queue multiple
    jumps, potentially causing erratic movement patterns.
  related:
  - MoveJump
  - MovePoint
  - MoveStop
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:33:42.867268'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
