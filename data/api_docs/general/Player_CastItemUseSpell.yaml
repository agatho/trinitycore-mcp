api:
  class: Player
  method: CastItemUseSpell
  signature: void Player::CastItemUseSpell(Item * item, const SpellCastTargets & targets,
    int castCount, int32 * misc)
documentation:
  brief: Cast an item use spell on a target with specified parameters
  description: This method executes a spell associated with an item's usage, allowing
    players to cast spells from items such as scrolls, potions, or other consumable
    items. It handles the casting process including target validation and spell execution,
    with optional parameters for cast count and miscellaneous data. The method is
    typically used when a player interacts with an item that has a spell attached
    to it, ensuring proper game mechanics are followed.
  parameters:
  - name: item
    description: Pointer to the Item object that contains the spell to be cast. Must
      not be null and should have valid spell data.
  - name: targets
    description: SpellCastTargets structure defining where and how the spell should
      be cast. Includes target information such as target type, position, and other
      relevant parameters.
  - name: castCount
    description: Integer specifying how many times the spell should be cast. Typically
      used for multi-cast scenarios or when item effects repeat multiple times.
  - name: misc
    description: Pointer to an array of integers that provides additional data for
      the spell cast, such as item quality or other modifiers. Can be null if not
      needed.
  returns: null
  examples:
  - title: Basic Item Use Spell Casting
    code: 'Player* player = ...;

      Item* item = ...;

      SpellCastTargets targets;

      player->CastItemUseSpell(item, targets, 1, nullptr);'
    language: cpp
  - title: Advanced Item Use with Misc Data
    code: 'Player* player = ...;

      Item* item = ...;

      SpellCastTargets targets;

      int32 miscData[2] = {10, 20};

      player->CastItemUseSpell(item, targets, 2, miscData);'
    language: cpp
  notes: This method is part of the core game mechanics for item usage and spell casting.
    It requires proper validation of item data and target information to ensure correct
    behavior. The method may be called from various contexts including player interaction,
    NPC interaction, or other game events involving item use.
  warnings: Improper handling of item parameters can lead to incorrect spell execution
    or game crashes. Make sure the item actually contains a valid spell before calling
    this method. Also, be aware that casting multiple times may not always produce
    expected results depending on how the spell is defined.
  related:
  - Player::CastSpell
  - Item::GetSpell
  - Player::UseItem
  - Player::SpellCast
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:04:15.403457'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
