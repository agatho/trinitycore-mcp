api:
  class: ScriptMgr
  method: OnPlayerFailedDelete
  signature: void ScriptMgr::OnPlayerFailedDelete(int guid, uint32 accountId)
documentation:
  brief: Called when a player deletion attempt fails in the database.
  description: This method is invoked by the ScriptMgr when a player deletion operation
    fails during character removal from the database. It provides a hook for custom
    scripts to handle failed deletion attempts, such as logging errors, notifying
    administrators, or performing cleanup operations. The method receives the player's
    unique identifier (GUID) and the associated account ID to allow for detailed tracking
    and debugging of deletion failures. This callback is typically used in custom
    core modifications or scripting systems that require monitoring of database operations.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the player whose deletion attempt
      failed. This value represents the internal database ID for the character.
  - name: accountId
    description: The account ID associated with the player's account. Used to identify
      which account the failed deletion attempt was related to.
  returns: null
  examples:
  - title: Basic Implementation Example
    code: "class MyScript : public ScriptObject\n{\npublic:\n    MyScript() : ScriptObject(\"\
      MyScript\") {}\n\n    void OnPlayerFailedDelete(int guid, uint32 accountId)\
      \ override\n    {\n        // Log the failed deletion attempt\n        sLog->outString(\"\
      Failed to delete player with GUID %u and Account ID %u\", guid, accountId);\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the TrinityCore scripting system and is called from
    within the core's character deletion logic. It should be implemented carefully
    to avoid performance bottlenecks or infinite loops. The method executes in the
    context of the database transaction that failed, so any operations performed here
    should not interfere with ongoing database operations.
  warnings: Do not perform heavy operations or blocking calls within this method as
    it may impact server performance. Avoid modifying database state directly from
    this callback unless absolutely necessary, as it could lead to inconsistent states
    or deadlocks.
  related:
  - OnPlayerDelete
  - OnPlayerLogin
  - OnPlayerLogout
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T22:19:12.504546'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
