api:
  class: Player
  method: GetEffectiveTeamId
  signature: int Player::GetEffectiveTeamId() const
documentation:
  brief: Returns the effective team ID of the player, which determines faction alignment
    and group member relationships.
  description: The GetEffectiveTeamId method retrieves the effective team identifier
    for a player, which is used to determine faction alignment and group member relationships
    within World of Warcraft. This value is crucial for determining whether a player
    belongs to a specific team (faction) and affects how the game handles player versus
    player interactions, group loot distribution, and other faction-based mechanics.
    The method returns an integer representing the team ID, typically either 0 or
    1, where 0 represents the Alliance team and 1 represents the Horde team. This
    value is derived from the player's current faction status and can be influenced
    by various game mechanics including reputation levels, quest completion, and other
    faction-related activities.
  parameters: []
  returns: Returns an integer representing the effective team ID of the player. Value
    0 indicates the player belongs to the Alliance team, while value 1 indicates the
    player belongs to the Horde team. This value is used for determining faction relationships
    and group member compatibility in World of Warcraft.
  examples:
  - title: Basic Usage Example
    code: "int teamId = player->GetEffectiveTeamId();\nif (teamId == 0)\n{\n    //\
      \ Player belongs to Alliance\n}\nelse if (teamId == 1)\n{\n    // Player belongs\
      \ to Horde\n}"
    language: cpp
  notes: The method is typically used in conjunction with other faction-related methods
    and should be considered when determining player group compatibility. Performance-wise,
    this method is lightweight as it simply returns a stored value without complex
    calculations. The method is thread-safe as it only reads from internal player
    state.
  warnings: This method should not be used for determining actual faction status directly,
    as the effective team ID may change based on game mechanics and reputation levels.
    Be cautious when using this in conjunction with other faction-related methods
    to avoid conflicts or incorrect assumptions about player alignment.
  related:
  - GetTeamId
  - GetFactionStatus
  - GetReputation
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:07:13.482269'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
