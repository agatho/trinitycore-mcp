api:
  class: ObjectMgr
  method: LoadGameObjects
  signature: void ObjectMgr::LoadGameObjects()
documentation:
  brief: Loads all game object definitions from the database into memory for use in
    the world.
  description: The LoadGameObjects method initializes and populates the internal data
    structures of the ObjectMgr class with all game object entries stored in the database.
    This includes loading static data such as object templates, positions, orientations,
    and other properties required to spawn and manage game objects in the world. The
    method is typically invoked during server startup or map loading processes to
    ensure that all defined game objects are available for instantiation. It reads
    from the gameobject_template table and related tables, constructing internal lookup
    structures that allow efficient retrieval and spawning of game objects based on
    their template IDs.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage During Server Initialization
    code: "void World::LoadGameObjectTemplates()\n{\n    ObjectMgr::Instance()->LoadGameObjects();\n\
      }"
    language: cpp
  notes: This method is typically called once during server initialization before
    any world updates begin. It's not thread-safe and should only be executed from
    the main thread. The loading process can be performance-intensive on servers with
    many game objects, as it involves reading from the database and constructing internal
    data structures.
  warnings: Calling this method after the server has started can lead to inconsistent
    state or crashes if existing game objects are not properly cleaned up first. It
    should never be called during active gameplay operations.
  related:
  - LoadGameObjectTemplates
  - GetGameObjectTemplate
  - SpawnGameObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T23:17:25.499237'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
