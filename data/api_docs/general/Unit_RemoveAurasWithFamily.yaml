api:
  class: Unit
  method: RemoveAurasWithFamily
  signature: void Unit::RemoveAurasWithFamily(int family, const int & familyFlag,
    int casterGUID)
documentation:
  brief: Removes auras with specified family and flag from the unit
  description: This method removes all auras that match the specified family and family
    flag from the unit. It is used to clear specific aura effects from creatures or
    players, particularly useful for managing aura effects during combat or when certain
    conditions are met. The method takes into account the caster GUID to ensure proper
    removal of auras that may have been applied by a specific source. This functionality
    is essential for maintaining game balance and preventing unwanted side effects
    in gameplay mechanics.
  parameters:
  - name: family
    description: The family identifier (int) used to match against aura effects. This
      corresponds to the family type of the aura being removed.
  - name: familyFlag
    description: The family flag (const int&) used to match against aura effects.
      This represents the specific flags associated with the aura family, allowing
      for more precise removal of targeted auras.
  - name: casterGUID
    description: The GUID of the caster that applied the aura being removed. This
      ensures that only auras applied by the specified caster are removed, preventing
      accidental removal of unrelated auras.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = player;

      unit->RemoveAurasWithFamily(12, 34, 56);'
    language: cpp
  - title: Advanced usage example with conditional removal
    code: "Unit* unit = creature;\nif (unit->HasAura(12)) {\n    unit->RemoveAurasWithFamily(12,\
      \ 34, 56);\n}\n"
    language: cpp
  notes: Implementation details include handling of aura removal through the unit's
    aura system. Performance considerations involve checking for matching auras before
    removal to avoid unnecessary processing. Thread safety is ensured by using proper
    locking mechanisms during aura updates.
  warnings: Common mistakes include forgetting to specify correct family flag values
    or caster GUID, which can lead to incorrect removal of auras. Dangerous edge cases
    occur when multiple auras share the same family but different flags, potentially
    causing unintended removal of unrelated auras.
  related:
  - RemoveAurasWithMechanic
  - RemoveAurasWithSpell
  - RemoveAuras
  - GetAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:39:31.191831'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
