api:
  class: Player
  method: SendMirrorTimer
  signature: void Player::SendMirrorTimer(MirrorTimerType Type, uint32 MaxValue, uint32
    CurrentValue, int32 Regen)
documentation:
  brief: Sends a mirror timer update to the player's client for visual feedback of
    debuffs, buffs, or other time-based effects.
  description: The SendMirrorTimer method is used to synchronize time-based visual
    effects with the player's client. It updates the client-side mirror timer UI element,
    which displays countdowns for various game mechanics such as feign death, swimming,
    or other temporary effects. This method sends a packet to the player's client
    containing the type of timer, maximum value, current value, and regeneration rate.
    The timer is typically displayed in the center of the screen and can be used for
    both positive and negative effects. The method does not directly modify any game
    state; it only sends visual updates to the client.
  parameters:
  - name: Type
    description: 'Specifies the type of mirror timer to display. Valid values include:
      MIRROR_TIMER_TYPE_FEIGN_DEATH (0), MIRROR_TIMER_TYPE_SWIMMING (1), MIRROR_TIMER_TYPE_SLOW_FALL
      (2), and others defined in MirrorTimerType enum.'
  - name: MaxValue
    description: The maximum time value for the timer in milliseconds. This represents
      the total duration of the effect.
  - name: CurrentValue
    description: The current remaining time value in milliseconds. This determines
      how much of the timer is left to display.
  - name: Regen
    description: The regeneration rate in milliseconds per second. A positive value
      indicates the timer is counting down, while a negative value may indicate a
      different behavior or effect.
  returns: null
  examples:
  - title: Send Feign Death Timer
    code: player->SendMirrorTimer(MIRROR_TIMER_TYPE_FEIGN_DEATH, 10000, 5000, 1000);
    language: cpp
  - title: Send Swimming Timer
    code: player->SendMirrorTimer(MIRROR_TIMER_TYPE_SWIMMING, 30000, 15000, -1000);
    language: cpp
  notes: This method only affects the client-side UI and does not modify any server-side
    state. The timer will automatically stop when CurrentValue reaches zero or when
    the effect is removed from the player. The regeneration rate parameter controls
    how quickly the timer updates on the client side.
  warnings: Incorrect usage of this method can cause visual glitches in the UI. Make
    sure to properly initialize all parameters, especially MaxValue and CurrentValue,
    to avoid unexpected behavior. Using invalid Type values may result in undefined
    behavior or no timer being displayed at all.
  related:
  - GetMirrorTimer
  - SetMirrorTimer
  - RemoveMirrorTimer
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:11:04.980988'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
