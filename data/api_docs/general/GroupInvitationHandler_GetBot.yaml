api:
  class: GroupInvitationHandler
  method: GetBot
  signature: Player * GroupInvitationHandler::GetBot() const
documentation:
  brief: Retrieves the bot player associated with the group invitation handler.
  description: The GetBot method returns a pointer to the Player object representing
    the bot that is managed by this group invitation handler. This method is typically
    used in the context of automated group management or AI-driven player interactions
    within TrinityCore's framework. The returned pointer may be null if no bot has
    been assigned or initialized for the handler. This functionality is commonly utilized
    in custom scripts or addons that automate group creation, invite handling, or
    bot-based gameplay mechanics.
  parameters: []
  returns: A pointer to a Player object representing the bot associated with this
    group invitation handler, or nullptr if no bot is assigned.
  examples:
  - title: Basic Usage
    code: "GroupInvitationHandler* handler = ...;\nPlayer* bot = handler->GetBot();\n\
      if (bot != nullptr)\n{\n    // Use the bot player object\n    sLog->outString(\"\
      Bot found: %s\", bot->GetName().c_str());\n}"
    language: cpp
  - title: Checking Bot Before Group Invitation
    code: "GroupInvitationHandler* handler = ...;\nPlayer* bot = handler->GetBot();\n\
      if (bot != nullptr && bot->IsInWorld())\n{\n    // Proceed with group invitation\
      \ logic\n    handler->SendGroupInvite(bot);\n}\nelse\n{\n    sLog->outString(\"\
      No valid bot available for group invitation.\");\n}"
    language: cpp
  notes: The method does not perform any validation on the returned Player pointer
    beyond ensuring it was previously assigned. Developers should verify that the
    returned player is valid and in a usable state before attempting to use its methods
    or properties.
  warnings: Calling this method on an uninitialized or improperly configured GroupInvitationHandler
    may return a null pointer, which must be checked for before dereferencing. Improper
    handling of the returned Player pointer can lead to access violations or undefined
    behavior.
  related:
  - SetBot
  - HasBot
  - ClearBot
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:19:50.294849'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
