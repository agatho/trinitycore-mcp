api:
  class: Object
  method: hasQuest
  signature: bool Object::hasQuest(uint32 param0) const
documentation:
  brief: Checks whether the object has a specific quest in its quest log
  description: The hasQuest method determines if a given quest has been assigned to
    the object, typically used for player characters or NPCs. This method is essential
    for quest system functionality and can be used to verify quest completion status
    or check if a quest is available for acceptance. The method returns true if the
    quest exists in the object's quest log, false otherwise. It's commonly used in
    conjunction with other quest-related methods like GetQuestStatus or QuestAccept
    to determine whether a player can accept or complete a quest.
  parameters:
  - name: param0
    description: The quest ID to check for existence in the object's quest log
  returns: Returns true if the specified quest ID is present in the object's quest
    log, false otherwise. This indicates whether the quest has been assigned or completed.
  examples:
  - title: Basic Quest Check
    code: "if (player->hasQuest(12345)) {\n    // Quest exists\n    // Do something\n\
      }\nelse {\n    // Quest doesn't exist\n}"
    language: cpp
  notes: This method is thread-safe and can be used in both player and NPC contexts.
    Performance considerations include checking against a large number of quests,
    which may impact efficiency if not properly optimized.
  warnings: The method does not verify quest completion status; it only checks if
    the quest ID exists in the object's quest log. Be careful when using this method
    with quest IDs that might be assigned to multiple objects or when dealing with
    quest-related logic that requires specific quest states.
  related:
  - GetQuestStatus
  - QuestAccept
  - HasQuest
  - IsQuestComplete
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:41:30.186165'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
