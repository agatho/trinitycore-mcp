api:
  class: Unit
  method: UpdateArmor
  signature: void Unit::UpdateArmor()
documentation:
  brief: Updates the unit's armor value based on current equipment and modifiers
  description: The UpdateArmor method recalculates and refreshes the Unit's total
    armor value by considering all active armor bonuses, reductions, and equipment
    modifications. This method is typically invoked when armor-related stats change,
    such as when equipping or unequipping items, applying buffs or debuffs, or when
    the unit's level changes. The updated armor value affects the unit's damage mitigation
    calculations in combat. This method does not directly modify any external state
    but ensures internal armor tracking remains consistent with current game conditions.
  parameters: []
  returns: null
  examples:
  - title: Basic Armor Update Call
    code: 'Unit* player = ...;

      player->UpdateArmor();

      // Armor value is recalculated and stored internally'
    language: cpp
  - title: Updating Armor After Equipment Change
    code: 'Player* player = ...;

      Item* newItem = ...;

      player->SetItemAtSlot(newItem, EQUIPMENT_SLOT_HEAD);

      player->UpdateArmor();

      // Ensures armor reflects new equipment'
    language: cpp
  notes: This method is usually called internally by the game engine when armor-related
    events occur. Developers should not typically call this method directly unless
    implementing custom armor mechanics or debugging armor calculations.
  warnings: Calling UpdateArmor manually may cause inconsistencies if not properly
    synchronized with other stat updates. It's recommended to use this method only
    in controlled scenarios where armor modifications are explicitly managed.
  related:
  - GetArmor
  - SetArmor
  - CalculateArmor
  - ApplyAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T16:30:05.062515'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
