api:
  class: RuneManager
  method: Update
  signature: void RuneManager::Update(uint32 diff)
documentation:
  brief: Updates the state of runes managed by the RuneManager, processing cooldowns
    and availability.
  description: The Update method is responsible for managing the internal state of
    runes within the RuneManager class. It processes the passage of time for rune
    cooldowns, updates rune availability based on elapsed time, and ensures that runes
    are correctly marked as ready or on cooldown. This method is typically called
    during game loop iterations to maintain accurate rune states for player actions
    such as spell casting or abilities that require runes. The method takes a time
    delta parameter (diff) which represents the milliseconds elapsed since the last
    update, allowing it to accurately calculate how much time has passed for rune
    cooldowns.
  parameters:
  - name: diff
    description: The time difference in milliseconds since the last update call. This
      value is used to determine how much time has passed for rune cooldown calculations.
  returns: null
  examples:
  - title: Basic Update Call
    code: 'RuneManager* runeMgr = player->GetRuneManager();

      uint32 diff = 100; // 100ms elapsed

      runeMgr->Update(diff);'
    language: cpp
  - title: Integration with Game Loop
    code: "void WorldSession::Update(uint32 diff)\n{\n    // ... other updates ...\n\
      \    if (Player* player = GetPlayer())\n    {\n        if (RuneManager* runeMgr\
      \ = player->GetRuneManager())\n        {\n            runeMgr->Update(diff);\n\
      \        }\n    }\n    // ... other updates ...\n}"
    language: cpp
  notes: This method should be called regularly during the game loop to maintain accurate
    rune states. The implementation likely uses internal timers or cooldown tracking
    mechanisms that rely on the provided time delta for precise calculations. RuneManager
    typically manages death knight runes, so this update is crucial for maintaining
    proper spell and ability usage mechanics.
  warnings: Calling Update with incorrect time deltas may cause inaccurate rune state
    management. Ensure that diff represents actual elapsed time since last call to
    avoid unexpected behavior in rune availability. This method modifies internal
    rune states, so calling it at inappropriate times could interfere with game logic
    or player actions.
  related:
  - GetRune
  - IsRuneReady
  - ConsumeRune
  - ResetRune
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T20:43:41.978745'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
