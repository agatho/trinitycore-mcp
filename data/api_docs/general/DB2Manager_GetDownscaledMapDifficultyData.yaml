api:
  class: DB2Manager
  method: GetDownscaledMapDifficultyData
  signature: const MapDifficultyEntry * DB2Manager::GetDownscaledMapDifficultyData(uint32
    mapId, Difficulty & difficulty) const
documentation:
  brief: Retrieves the downscaled map difficulty data for a specified map and difficulty
    level.
  description: The GetDownscaledMapDifficultyData method fetches the MapDifficultyEntry
    that corresponds to a given map ID and difficulty level, taking into account any
    downscaling rules applied in the game. This is commonly used when determining
    the appropriate difficulty settings for instances or zones where the actual difficulty
    might be adjusted based on player count or other game mechanics. The method ensures
    that the returned data reflects the correct difficulty scaling as defined in the
    DB2 files. It's important to note that this function may return a null pointer
    if no matching map difficulty entry is found for the specified parameters.
  parameters:
  - name: mapId
    description: The unique identifier of the map for which to retrieve the downscaled
      difficulty data.
  - name: difficulty
    description: A reference to a Difficulty enum value that will be modified to reflect
      the actual difficulty level after downscaling.
  returns: A pointer to a MapDifficultyEntry structure containing the downscaled difficulty
    information for the specified map and difficulty. Returns nullptr if no matching
    entry is found.
  examples:
  - title: Retrieve downscaled map difficulty data
    code: "const MapDifficultyEntry* entry = sDB2Manager->GetDownscaledMapDifficultyData(1234,\
      \ difficulty);\nif (entry)\n{\n    // Use the entry to determine difficulty\
      \ settings\n    printf(\"Difficulty ID: %u\\n\", entry->ID);\n}"
    language: cpp
  notes: This method relies on internal DB2 data structures and assumes that the DB2
    files have been properly loaded. The difficulty parameter is passed by reference
    and may be modified during the lookup process to reflect any downscaling applied.
  warnings: Ensure that the mapId and difficulty values are valid before calling this
    function, as invalid inputs could lead to unexpected behavior or crashes. Also,
    be aware that the returned pointer should not be stored for extended periods since
    it points to internal DB2 data structures that may change or be freed.
  related:
  - GetMapDifficultyData
  - LoadDB2Files
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:06:52.979061'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
