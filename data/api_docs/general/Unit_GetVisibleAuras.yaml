api:
  class: Unit
  method: GetVisibleAuras
  signature: const VisibleAuraContainer & Unit::GetVisibleAuras() const
documentation:
  brief: Returns the visible aura container for the unit, containing all active visible
    auras.
  description: This method provides access to the visible aura container of a Unit,
    which contains all active auras that are currently visible to the unit. The returned
    container is read-only and represents the current state of visible auras in the
    game world. It's commonly used for checking the presence of specific buffs or
    debuffs on a unit, and can be essential for gameplay mechanics involving aura
    tracking and management. This method does not modify any data but returns a reference
    to the existing container.
  parameters: []
  returns: Returns a constant reference to the VisibleAuraContainer which holds all
    visible auras currently affecting the unit. The container may be empty if no visible
    auras are present, and contains only active auras that are visible to the unit.
  examples:
  - title: Checking for specific aura
    code: "if (Unit* target = GetVisibleAuras().find(12345) != Unit::VisibleAuraContainer::const_iterator)\n\
      {\n    // Aura exists\n}"
    language: cpp
  - title: Iterating through visible auras
    code: "for (auto aura = unit->GetVisibleAuras().begin(); aura != unit->GetVisibleAuras().end();\
      \ ++aura)\n{\n    // Process each visible aura\n}"
    language: cpp
  notes: This method is thread-safe and can be safely called from multiple threads.
    Performance considerations are minimal as it returns a reference to an existing
    container rather than creating new objects. The returned container may be invalidated
    if the unit's aura state changes, so developers should be aware of potential lifetime
    issues.
  warnings: The returned container reference should not be modified directly as it
    is read-only. Care must be taken when using this method in conjunction with other
    methods that might modify the aura state, as the container could become stale
    if not properly synchronized.
  related:
  - GetAuraCount
  - GetAura
  - GetVisibleAuras
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:27:19.725933'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
