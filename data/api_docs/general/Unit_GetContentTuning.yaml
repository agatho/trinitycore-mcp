api:
  class: Unit
  method: GetContentTuning
  signature: int32 Unit::GetContentTuning() const
documentation:
  brief: Retrieves the content tuning level for the unit.
  description: This method returns the content tuning value associated with the unit,
    which determines the difficulty and progression level of content that the unit
    can access. The content tuning level is used by the game engine to adjust creature
    stats, loot distribution, and quest rewards based on the player's or unit's content
    progression. This value typically reflects the highest level content the unit
    has access to, and is often used in conjunction with other content-related methods
    to determine appropriate game mechanics for the unit.
  parameters: []
  returns: Returns an integer representing the content tuning level. A negative value
    indicates that the unit has not yet progressed to a specific content level, while
    positive values indicate the current content tuning level that the unit can access.
  examples:
  - title: Basic Usage Example
    code: "int32 tuningLevel = unit->GetContentTuning();\nif (tuningLevel > 0)\n{\n\
      \    // Unit has access to content up to this level\n}"
    language: cpp
  notes: This method is typically used in conjunction with other content-related methods
    like GetLevel(), GetDifficulty(), and GetQuestLevel. The value returned may vary
    depending on the unit's current content progression, and can be affected by player
    or creature level differences.
  warnings: Be cautious when using this method as it may not always reflect the actual
    content level of a unit; it is important to consider other factors such as player
    level, quest progression, and game mechanics when determining appropriate content
    tuning.
  related:
  - GetLevel
  - GetDifficulty
  - GetQuestLevel
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:20:36.366911'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
