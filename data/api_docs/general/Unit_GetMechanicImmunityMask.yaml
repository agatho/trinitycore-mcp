api:
  class: Unit
  method: GetMechanicImmunityMask
  signature: uint64 Unit::GetMechanicImmunityMask() const
documentation:
  brief: Returns the mechanic immunity mask for the unit, which determines which mechanical
    effects the unit is immune to.
  description: This method retrieves the mechanic immunity mask for a Unit, which
    represents the set of mechanical effects that the unit is immune to. The mask
    is a 64-bit value where each bit corresponds to a specific mechanic type. This
    is commonly used in World of Warcraft to determine which mechanical effects (such
    as stun, root, silence, etc.) a creature or player is immune to. The method is
    typically used for combat and game mechanics calculations, particularly when determining
    whether an attack or spell can affect the unit based on its immunity status.
  parameters: []
  returns: Returns a uint64 value representing the mechanic immunity mask. Each bit
    in this mask corresponds to a specific mechanic type (e.g., stun, root, silence,
    etc.), and if a bit is set to 1, it means the unit is immune to that specific
    mechanic.
  examples:
  - title: Basic Usage Example
    code: "uint64 immunityMask = unit->GetMechanicImmunityMask();\nif (immunityMask\
      \ & MECHANIC_STUN)\n{\n    // Unit is immune to stun\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* target = GetTarget();\nuint64 immunityMask = target->GetMechanicImmunityMask();\n\
      uint64 spellMechanic = 1ULL << (SpellInfo->Mechanic - 1);\nif (!(immunityMask\
      \ & spellMechanic))\n{\n    // Unit is not immune to this mechanic\n}"
    language: cpp
  notes: This method is typically used in conjunction with other mechanics-related
    methods and should be used carefully when checking against specific mechanic types.
    The mask is usually set during creature or player initialization, and changes
    may occur during combat situations.
  warnings: Be aware that this method returns a uint64 value which can be large and
    may not always be directly comparable to standard mechanic values. Care should
    be taken when using bitwise operations with the returned value.
  related:
  - GetMechanicImmunityList
  - SetMechanicImmunityMask
  - IsImmuneToMechanic
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:00:03.151548'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
