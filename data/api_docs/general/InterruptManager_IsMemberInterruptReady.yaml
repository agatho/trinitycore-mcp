api:
  class: InterruptManager
  method: IsMemberInterruptReady
  signature: bool InterruptManager::IsMemberInterruptReady(int memberGuid)
documentation:
  brief: Checks if a specific group member is ready to interrupt an ability.
  description: The IsMemberInterruptReady method determines whether a given group
    member, identified by their GUID, is currently capable of performing an interrupt
    action. This functionality is typically used in group-based combat scenarios where
    players must be synchronized to ensure proper timing of interrupts during spell
    casting or other time-sensitive actions. The method evaluates the readiness state
    of the specified member based on internal cooldowns, status effects, and game
    logic related to interrupt mechanics.
  parameters:
  - name: memberGuid
    description: The unique identifier (GUID) of the group member being checked for
      interrupt readiness. This value must correspond to a valid player in the current
      group context.
  returns: Returns true if the specified group member is ready to perform an interrupt
    action; otherwise, returns false. A return value of false may indicate that the
    member is on cooldown, affected by a disabling effect, or otherwise unable to
    interrupt at this time.
  examples:
  - title: Basic Usage in Group Combat
    code: "if (interruptManager.IsMemberInterruptReady(playerGuid)) {\n    // Proceed\
      \ with interrupting enemy spell\n    DoInterruptSpell(target);\n} else {\n \
      \   // Member not ready, delay or find alternative action\n    SendChatMessage(\"\
      Interrupt not ready yet.\");\n}"
    language: cpp
  - title: Checking Multiple Group Members
    code: "for (auto& memberGuid : groupMembers) {\n    if (interruptManager.IsMemberInterruptReady(memberGuid))\
      \ {\n        // Trigger interrupt logic for this member\n        ProcessInterrupt(memberGuid);\n\
      \    }\n}"
    language: cpp
  notes: This method relies on internal tracking of player states and cooldowns, so
    it should only be called within valid group contexts. The readiness check may
    involve checking for debuffs, global cooldowns, or other conditions that prevent
    a successful interrupt.
  warnings: Ensure that the provided memberGuid corresponds to an actual player in
    the active group; otherwise, behavior is undefined. Calling this method outside
    of combat or group scenarios might yield incorrect results due to missing context.
  related:
  - InterruptManager::SetMemberInterruptReady
  - InterruptManager::GetInterruptCooldown
  - InterruptManager::ResetInterruptState
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:28:33.307995'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
