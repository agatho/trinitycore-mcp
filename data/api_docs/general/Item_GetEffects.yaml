api:
  class: Item
  method: GetEffects
  signature: int Item::GetEffects() const
documentation:
  brief: Returns the number of effects on an item
  description: The GetEffects method retrieves the total count of active enchantment
    effects applied to an item. This method is commonly used in item handling and
    evaluation logic within TrinityCore's core systems. It provides information about
    how many effects are currently active on the item, which can be crucial for determining
    item quality, stat calculations, or special abilities. The method returns an integer
    value representing the count of effects that are currently applied to the item.
  parameters: []
  returns: Returns an integer value representing the number of active effects on the
    item. This value corresponds to the total number of enchantment effects currently
    applied to the item, which can range from 0 to several depending on the item type
    and quality.
  examples:
  - title: Basic Usage Example
    code: 'Item* item = player->GetItemByPos(0, 0);

      int effectCount = item->GetEffects();

      // effectCount will be 0 if no effects are active'
    language: cpp
  notes: This method is typically used in conjunction with other item-related methods
    for evaluating item properties. The returned value may vary depending on the item's
    enchantment level and type, and can be influenced by factors such as item quality,
    gem slots, or special enchantments.
  warnings: Be cautious when using this method in conditional logic, as it may return
    zero for items without effects, which could lead to incorrect assumptions about
    item properties. Also note that this method does not account for temporary effects
    or buffs that might be applied during gameplay.
  related:
  - GetEnchantmentSlot
  - GetItemTemplate
  - GetOwner
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T05:03:15.242238'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
