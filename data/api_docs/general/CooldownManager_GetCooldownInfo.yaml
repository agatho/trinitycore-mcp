api:
  class: CooldownManager
  method: GetCooldownInfo
  signature: CooldownInfo CooldownManager::GetCooldownInfo(uint32 spellId) const
documentation:
  brief: Retrieves cooldown information for a specified spell ID from the cooldown
    manager.
  description: The GetCooldownInfo method retrieves detailed cooldown information
    for a given spell ID. This method is typically used in the context of World of
    Warcraft's TrinityCore server to check if a spell is currently on cooldown, and
    to obtain relevant cooldown data such as remaining time, cooldown duration, and
    other associated metadata. The returned CooldownInfo structure contains all necessary
    details about the spell's current cooldown state within the game system.
  parameters: []
  returns: A CooldownInfo object containing the cooldown information for the specified
    spell ID. This includes details like the remaining cooldown time, total cooldown
    duration, and any other relevant cooldown-related data. If no cooldown is found
    for the given spell ID, the returned structure may contain default or zero values
    indicating no active cooldown.
  examples:
  - title: Basic Usage to Check Spell Cooldown
    code: "CooldownInfo info = cooldownManager.GetCooldownInfo(12345);\nif (info.remainingTime\
      \ > 0)\n{\n    std::cout << \"Spell is on cooldown for \" << info.remainingTime\
      \ << \" seconds.\" << std::endl;\n}\nelse\n{\n    std::cout << \"Spell is ready\
      \ to use.\" << std::endl;\n}"
    language: cpp
  notes: This method is typically called during spell casting or usage checks. The
    CooldownInfo structure returned should be used carefully as it may contain cached
    data that could become stale if not properly updated by the game engine. Ensure
    proper synchronization when accessing cooldown information in multithreaded environments.
  warnings: Be cautious when relying on this method for real-time cooldown calculations,
    especially in high-frequency spell usage scenarios. The returned values may not
    reflect instantaneous changes due to caching or server-side processing delays.
  related:
  - SetCooldown
  - IsOnCooldown
  - ResetCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:46:16.191052'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
