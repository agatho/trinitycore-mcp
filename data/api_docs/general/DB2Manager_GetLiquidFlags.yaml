api:
  class: DB2Manager
  method: GetLiquidFlags
  signature: uint32 DB2Manager::GetLiquidFlags(uint32 liquidType)
documentation:
  brief: Retrieves the liquid flags associated with a specified liquid type from the
    DB2 database.
  description: The GetLiquidFlags method fetches the bitmask of flags that define
    the properties and behaviors of a specific liquid type stored in the game's DB2
    files. These flags are typically used by the client and server to determine how
    liquids interact with the environment, such as whether they are water, lava, or
    other special fluids. The method accesses internal data structures managed by
    the DB2Manager class and returns a uint32 value representing the combined flags
    for the given liquid type ID. This is commonly used during map loading and terrain
    processing to correctly render and handle different types of liquids in the game
    world.
  parameters: []
  returns: A uint32 bitmask containing the flags that define properties of the specified
    liquid type. Each bit in the mask corresponds to a specific characteristic or
    behavior of the liquid, such as whether it is deep, has surface effects, or is
    dangerous to players.
  examples:
  - title: Retrieve liquid flags for a water type
    code: "uint32 liquidFlags = sDB2Manager->GetLiquidFlags(1); // Assuming 1 represents\
      \ water\nif (liquidFlags & LIQUID_FLAG_WATER)\n{\n    // Handle water-specific\
      \ logic\n}"
    language: cpp
  - title: Check if a liquid type is dangerous
    code: "uint32 flags = sDB2Manager->GetLiquidFlags(5); // Assuming 5 represents\
      \ lava\nif (flags & LIQUID_FLAG_LAVA)\n{\n    // Apply lava damage or special\
      \ effects\n}"
    language: cpp
  notes: This method relies on pre-loaded DB2 data structures. The liquid type IDs
    should correspond to valid entries in the LiquidType.db2 file. The returned flags
    are defined by constants such as LIQUID_FLAG_WATER, LIQUID_FLAG_LAVA, etc., which
    are typically defined in the game's internal headers or resource files.
  warnings: Ensure that the liquidType parameter is within the valid range of known
    liquid types to avoid accessing invalid memory or returning undefined behavior.
    The method assumes that DB2 data has been properly loaded before calling.
  related:
  - GetLiquidType
  - LoadDB2Files
  - GetLiquidEntry
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:56:26.953551'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
