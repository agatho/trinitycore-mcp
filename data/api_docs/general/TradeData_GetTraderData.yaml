api:
  class: TradeData
  method: GetTraderData
  signature: TradeData * TradeData::GetTraderData() const
documentation:
  brief: Returns the trade data object associated with the trader in a trade session
  description: The GetTraderData method retrieves the TradeData instance that represents
    the trading partner's trade state within a player-to-player trade interaction.
    This method is typically used during trade operations to access or modify the
    trade data of the opposing party. The returned pointer can be used to query or
    update the trade status, items, and gold amounts for the trader. It is important
    to note that this method should only be called within an active trade session
    context where the TradeData object has been properly initialized.
  parameters: []
  returns: A pointer to the TradeData object representing the trader's trade state,
    or nullptr if no valid trade data exists for the trader in the current context
  examples:
  - title: Accessing Trader Data During Trade
    code: "TradeData* traderData = tradeData->GetTraderData();\nif (traderData !=\
      \ nullptr)\n{\n    // Process trader's trade data\n    uint32 goldAmount = traderData->GetMoney();\n\
      \    // ... other operations\n}"
    language: cpp
  notes: This method is part of the trade system implementation and should only be
    called when a valid trade session exists. The returned TradeData pointer is managed
    by the trade system and should not be deleted manually.
  warnings: Calling this method outside of an active trade context may result in a
    null pointer return or undefined behavior. Ensure proper validation of the returned
    pointer before dereferencing.
  related:
  - TradeData::GetMoney
  - TradeData::SetMoney
  - TradeData::GetItem
  - TradeData::SetItem
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:18:08.484639'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
