api:
  class: Pet
  method: SetDisplayId
  signature: void Pet::SetDisplayId(uint32 modelId, bool setNative)
documentation:
  brief: Sets the display model ID for the pet, optionally updating its native display
    state.
  description: The SetDisplayId method updates the visual model ID of a Pet object,
    allowing it to change its appearance in the game world. This method is commonly
    used when a pet's model needs to be dynamically changed, such as during transformations
    or when switching between different creature forms. The optional setNative parameter
    controls whether the native display state of the pet should also be updated to
    match the new model. When setNative is true, the pet's native display ID will
    be synchronized with the provided model ID, ensuring consistency in how the pet
    appears across all systems and interactions.
  parameters:
  - name: modelId
    description: The unique identifier of the model to be displayed for this pet.
      This value corresponds to an entry in the CreatureDisplayInfo database table
      and determines the visual appearance of the pet.
  - name: setNative
    description: A boolean flag indicating whether to update the pet's native display
      ID to match the new model. If true, both the current display ID and the native
      display ID will be set to the provided modelId; if false, only the current display
      ID is updated.
  returns: null
  examples:
  - title: Basic Usage - Change Pet Model
    code: 'Pet* myPet = player->GetPet();

      myPet->SetDisplayId(12345, true); // Sets the pet''s model to ID 12345 and updates
      native display'
    language: cpp
  - title: Advanced Usage - Conditional Model Change
    code: "if (player->GetTeam() == ALLIANCE)\n{\n    Pet* myPet = player->GetPet();\n\
      \    myPet->SetDisplayId(54321, false); // Only changes current display ID\n\
      }"
    language: cpp
  notes: This method directly affects the visual representation of a pet in the game
    world. It should be used carefully to avoid inconsistent states between different
    systems that rely on the pet's display information. The native display state update
    may trigger additional internal synchronization processes within TrinityCore,
    particularly if the pet is currently summoned or controlled by a player.
  warnings: Calling this method while the pet is in combat or actively being controlled
    by a player can lead to visual glitches or inconsistent behavior. Always ensure
    that the modelId provided exists in the database to prevent invalid display states.
    Avoid frequent calls to this method without proper state checks, as it may impact
    performance.
  related:
  - GetDisplayId
  - SetNativeDisplayId
  - GetNativeDisplayId
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:50:08.459171'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
