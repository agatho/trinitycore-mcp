api:
  class: Battleground
  method: SetElapsedTime
  signature: void Battleground::SetElapsedTime(int Time)
documentation:
  brief: Sets the elapsed time for the battleground to the specified value.
  description: The SetElapsedTime method updates the internal timer of a battleground
    instance to reflect a new elapsed time value. This is typically used to synchronize
    or modify the progression of time within a battleground, such as when starting
    or resetting a match. The method directly modifies the battleground's time tracking
    mechanism and does not return any value. It is commonly invoked during battleground
    initialization, reset operations, or when adjusting game timing for specific events.
  parameters:
  - name: Time
    description: The new elapsed time value to set for the battleground in seconds.
      This should be a non-negative integer representing the number of seconds that
      have passed since the battleground started or was last reset.
  returns: null
  examples:
  - title: Setting Elapsed Time to Zero
    code: 'Battleground* bg = sObjectMgr->GetBattleground(1234);

      bg->SetElapsedTime(0);'
    language: cpp
  - title: Setting Elapsed Time to 30 Minutes
    code: 'Battleground* bg = sObjectMgr->GetBattleground(5678);

      bg->SetElapsedTime(1800); // 30 minutes in seconds'
    language: cpp
  notes: This method directly modifies the battleground's internal time state. It
    should be used carefully, especially during active gameplay, as it may affect
    game logic that depends on accurate timing such as respawn timers or match duration
    tracking.
  warnings: Modifying elapsed time during active battlegrounds can cause unexpected
    behavior in game mechanics relying on precise timing. Ensure this method is only
    called when appropriate, such as during initialization or reset phases.
  related:
  - GetElapsedTime
  - Update
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:00:21.436814'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
