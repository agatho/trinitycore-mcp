api:
  class: Aura
  method: ResetProcCooldown
  signature: void Aura::ResetProcCooldown()
documentation:
  brief: Resets the proc cooldown timer for the aura, allowing it to trigger again
    immediately.
  description: The ResetProcCooldown method clears the internal cooldown state of
    an aura's proc mechanism, effectively enabling the aura to be triggered by its
    proc events without delay. This is commonly used when an aura needs to be re-evaluated
    or reactivated immediately after a condition has been met, such as when a spell
    is cast or a buff is refreshed. The method does not alter the aura's duration
    or application state; it only resets the cooldown timer associated with its proc
    system. This functionality is essential for managing complex aura interactions
    where timing and trigger conditions are critical.
  parameters: []
  returns: null
  examples:
  - title: Resetting a Proc Cooldown on Aura Application
    code: "void OnSpellHit(Unit* target, SpellInfo const* spellInfo)\n{\n    if (Aura*\
      \ aura = target->GetAura(12345))\n    {\n        aura->ResetProcCooldown();\n\
      \    }\n}"
    language: cpp
  - title: Resetting Cooldown Before Reapplying Aura
    code: "void RefreshBuff(Unit* target)\n{\n    if (Aura* oldAura = target->GetAura(BUFF_ID))\n\
      \    {\n        oldAura->ResetProcCooldown();\n        target->RemoveAura(BUFF_ID);\n\
      \    }\n    target->AddAura(BUFF_ID, target);\n}"
    language: cpp
  notes: This method directly manipulates the aura's internal proc cooldown state
    and should be used carefully to avoid unintended behavior in complex aura interactions.
    It is typically called from within aura application or removal logic, or when
    a specific event requires immediate reactivation of the aura's proc mechanism.
  warnings: Calling ResetProcCooldown on an aura that does not have a proc mechanism
    may result in undefined behavior. Ensure that the aura actually has procs enabled
    before calling this method to prevent potential crashes or unexpected gameplay
    effects.
  related:
  - GetProcCooldown
  - SetProcCooldown
  - HasProcCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:50:37.867662'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
