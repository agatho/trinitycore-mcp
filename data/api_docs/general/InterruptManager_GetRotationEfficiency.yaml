api:
  class: InterruptManager
  method: GetRotationEfficiency
  signature: float InterruptManager::GetRotationEfficiency() const
documentation:
  brief: Calculates and returns the efficiency percentage of spell interruption during
    a player's rotation.
  description: The GetRotationEfficiency method computes the effectiveness of spell
    interruption mechanics within a player's combat rotation. It evaluates how well
    a player manages to maintain their spellcasting sequence without being interrupted
    by enemy attacks or abilities. This metric is typically used in performance analysis,
    raid composition planning, and character optimization for PvP or PvE scenarios.
    The method considers factors such as the number of successful casts versus interrupted
    casts over a defined time period or combat segment.
  parameters: []
  returns: A float value representing the rotation efficiency as a percentage. Values
    typically range from 0.0 (no efficiency) to 100.0 (maximum efficiency), where
    higher values indicate better spellcasting consistency and interruption management.
  examples:
  - title: Basic Usage
    code: 'float efficiency = player->GetInterruptManager()->GetRotationEfficiency();

      printf("Rotation Efficiency: %.2f%%\n", efficiency);'
    language: cpp
  - title: Performance Analysis
    code: "InterruptManager* interruptMgr = player->GetInterruptManager();\nfloat\
      \ efficiency = interruptMgr->GetRotationEfficiency();\nif (efficiency < 70.0f)\n\
      {\n    // Suggests need for improvement in spell timing or mitigation\n    player->SendSystemMessage(\"\
      Your rotation efficiency is below optimal levels.\");\n}"
    language: cpp
  notes: This method likely accumulates data over time and may reset or recalculate
    based on combat state changes. The implementation might involve tracking successful
    casts, interruption events, and time-based metrics to compute a rolling average
    or snapshot of efficiency.
  warnings: The returned value is dependent on accurate tracking of spell interruption
    events. If the interrupt manager's internal counters are not properly maintained,
    the result may be inaccurate. Also, this metric does not account for different
    spell types or their inherent interruption resistance.
  related:
  - GetInterruptCount
  - GetSuccessfulCastCount
  - ResetRotationStats
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:31:56.683171'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
