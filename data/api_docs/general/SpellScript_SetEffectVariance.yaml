api:
  class: SpellScript
  method: SetEffectVariance
  signature: void SpellScript::SetEffectVariance(float variance)
documentation:
  brief: Sets the variance value for a spell effect within the SpellScript context.
  description: The SetEffectVariance method configures the variance parameter that
    affects how spell effects are calculated or applied. This is commonly used in
    spell scripts to introduce randomness or variation in damage, healing, or other
    effect values. The variance value typically controls the degree of fluctuation
    around a base value, with higher values producing more unpredictable results.
    This method should be called during the appropriate spell script phase, usually
    before the effect is finalized or executed.
  parameters:
  - name: variance
    description: A floating-point value representing the variance to apply to the
      spell effect. Higher values increase randomness in effect calculations. Valid
      range is typically 0.0f (no variance) to positive values, though exact limits
      may depend on spell implementation.
  returns: null
  examples:
  - title: Basic Usage in Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleEffectApply()\n\
      \    {\n        SetEffectVariance(0.1f); // Apply 10% variance to the effect\n\
      \    }\n};"
    language: cpp
  - title: Dynamic Variance Based on Player Level
    code: "class AdvancedSpellScript : public SpellScript\n{\npublic:\n    void HandleEffectApply()\n\
      \    {\n        float playerLevel = GetCaster()->GetLevel();\n        float\
      \ variance = std::min(0.3f, playerLevel * 0.02f); // Max 30% variance\n    \
      \    SetEffectVariance(variance);\n    }\n};"
    language: cpp
  notes: This method modifies the spell effect's behavior during execution and should
    only be called when the spell script is in an appropriate state. The variance
    value may interact with other spell modifiers and can affect critical hit calculations
    or damage scaling depending on the specific spell implementation.
  warnings: Calling this method after the spell effect has already been processed
    may have no effect or cause undefined behavior. Ensure that variance values are
    within reasonable bounds to prevent extreme randomness in gameplay balance.
  related:
  - GetEffectVariance
  - SetEffectValue
  - SetEffectRadius
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T05:44:47.158580'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
