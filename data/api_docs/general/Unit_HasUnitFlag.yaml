api:
  class: Unit
  method: HasUnitFlag
  signature: bool Unit::HasUnitFlag(UnitFlags flags) const
documentation:
  brief: Checks if a unit has a specific unit flag.
  description: This method determines whether a given Unit possesses a particular
    UnitFlags value. It is commonly used in World of Warcraft's TrinityCore framework
    to evaluate unit states, such as whether a unit is in combat, is stealthed, or
    is in a specific state. The method returns true if the specified flag is present
    in the unit's flags, and false otherwise. This functionality is essential for
    implementing game mechanics that rely on unit state evaluation.
  parameters: []
  returns: Returns true if the unit has the specified UnitFlags, false otherwise.
  examples:
  - title: Basic usage example
    code: "if (unit->HasUnitFlag(UnitFlags::UNIT_FLAG_IN_COMBAT)) {\n    // Unit is\
      \ in combat\n}"
    language: cpp
  notes: The method performs bitwise operations on the unit's flags, making it efficient
    for checking individual flags. It does not modify any state or flags; it simply
    reads and evaluates them.
  warnings: This method should be used carefully when evaluating flags that may change
    frequently during combat or movement. The flags can be modified by various game
    mechanics such as stealth, invisibility, or combat state changes.
  related:
  - Unit::GetUnitFlags
  - Unit::SetUnitFlag
  - Unit::RemoveUnitFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:17:14.051458'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
