api:
  class: Creature
  method: SaveToDB
  signature: void Creature::SaveToDB(uint32 mapid, const int & spawnDifficulties)
documentation:
  brief: Saves the creature's data to the database with specified map and spawn difficulties.
  description: The SaveToDB method persists the current state of a Creature object
    into the database, ensuring that any changes made to the creature's properties
    are stored for future sessions. This includes saving the creature's position,
    health, equipment, and other relevant data. The method takes a map ID and spawn
    difficulties as parameters to correctly associate the creature with its appropriate
    map context and difficulty settings. It is typically called during world updates
    or when a creature is modified in a way that requires persistence across server
    restarts.
  parameters:
  - name: mapid
    description: The unique identifier of the map where the creature resides. This
      ensures proper association with the correct world instance and prevents data
      corruption or incorrect positioning.
  - name: spawnDifficulties
    description: Reference to an integer representing the spawn difficulties for this
      creature. This value determines how the creature should be spawned under different
      difficulty modes (normal, heroic, etc.) and affects its stats and behavior accordingly.
  returns: null
  examples:
  - title: Basic SaveToDB Usage
    code: 'Creature* creature = ...;

      uint32 mapId = creature->GetMapId();

      int spawnDifficulty = creature->GetSpawnDifficulty();

      creature->SaveToDB(mapId, spawnDifficulty);'
    language: cpp
  - title: Saving Creature with Custom Map and Difficulty
    code: 'Creature* creature = ...;

      uint32 customMapId = 1234;

      int customDifficulty = 1;

      creature->SaveToDB(customMapId, customDifficulty);'
    language: cpp
  notes: This method performs database I/O operations which can be expensive. It should
    not be called excessively in performance-critical sections of code. The actual
    saving process may involve multiple SQL queries depending on the creature's state
    and associated data.
  warnings: Calling SaveToDB without proper map ID or difficulty settings might result
    in incorrect creature placement or behavior after server restarts. Ensure that
    all necessary data is properly initialized before calling this method.
  related:
  - Creature::LoadFromDB
  - Creature::Update
  - Creature::SetMapId
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T20:30:33.178833'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
