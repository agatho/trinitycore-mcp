api:
  class: Guild
  method: HasAnyRankRight
  signature: bool Guild::HasAnyRankRight(GuildRankId rankId, GuildRankRights rights)
    const
documentation:
  brief: Checks if a guild rank has any of the specified rights enabled.
  description: The HasAnyRankRight method determines whether a given guild rank possesses
    at least one of the specified guild rank rights. This method is used internally
    by the TrinityCore server to validate permissions for various guild operations
    such as promoting members, managing guild items, or changing guild settings. It
    evaluates the rank's rights bitmask against the provided rights parameter and
    returns true if any of the specified rights are granted to that rank. The method
    does not modify any state and is purely a query operation.
  parameters:
  - name: rankId
    description: The identifier of the guild rank to check. This value corresponds
      to the GuildRankId enum which typically ranges from 0 (lowest rank) to 9 (highest
      rank). Valid values are integers within this range.
  - name: rights
    description: A bitmask representing the guild rank rights to check for. This parameter
      uses bitwise flags that correspond to specific guild permissions such as right
      to invite members, manage guild bank, or modify guild information. Multiple
      rights can be combined using the bitwise OR operator.
  returns: Returns true if the specified guild rank has at least one of the provided
    rights enabled; otherwise returns false.
  examples:
  - title: Check if Rank 1 Has Invite Rights
    code: "if (guild->HasAnyRankRight(GUILD_RANK_1, GRL_RIGHT_INVITE)) {\n    // Allow\
      \ inviting members\n}"
    language: cpp
  - title: Verify Multiple Rights for a Rank
    code: "GuildRankRights rights = GRL_RIGHT_INVITE | GRL_RIGHT_REMOVE | GRL_RIGHT_SETMOTD;\n\
      if (guild->HasAnyRankRight(GUILD_RANK_2, rights)) {\n    // Rank 2 has at least\
      \ one of these rights\n}"
    language: cpp
  notes: This method is commonly used in permission checks within the guild system
    to determine if a player with a specific rank can perform certain actions. The
    implementation likely involves checking against pre-defined rank right bitmasks
    stored in the database or configuration files.
  warnings: Ensure that the rankId parameter corresponds to an existing guild rank,
    as invalid values may lead to undefined behavior or incorrect results. Be careful
    when combining multiple rights using bitwise operations to avoid unintended permission
    grants.
  related:
  - GetRankRights
  - SetRankRights
  - HasRankRight
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T15:01:42.174508'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
