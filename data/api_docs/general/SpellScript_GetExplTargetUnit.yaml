api:
  class: SpellScript
  method: GetExplTargetUnit
  signature: Unit * SpellScript::GetExplTargetUnit() const
documentation:
  brief: Returns the target unit of the spell's explosion effect.
  description: The GetExplTargetUnit method retrieves the Unit object that represents
    the target of a spell's explosion or detonation effect. This is typically used
    in spell scripts where the spell's impact or explosion occurs on a specific target,
    such as area-of-effect spells or explosive projectiles. The returned Unit pointer
    can be used to perform further operations on the target, like applying damage,
    effects, or checking properties. This method should only be called within the
    context of a spell script execution and during the appropriate phase of the spell's
    lifecycle.
  parameters: []
  returns: A pointer to the Unit object that is the target of the spell's explosion
    effect. Returns nullptr if no valid explosion target exists or if called outside
    of an appropriate spell script context.
  examples:
  - title: Basic usage in spell script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleExplode()\n\
      \    {\n        Unit* target = GetExplTargetUnit();\n        if (target)\n \
      \       {\n            // Apply damage or effects to the explosion target\n\
      \            target->DealDamage(caster, damageAmount, nullptr);\n        }\n\
      \    }\n};"
    language: cpp
  - title: Checking target validity before processing
    code: "class AdvancedSpellScript : public SpellScript\n{\npublic:\n    void HandleDetonation()\n\
      \    {\n        Unit* explTarget = GetExplTargetUnit();\n        if (!explTarget)\n\
      \            return;\n        \n        // Ensure target is valid and alive\n\
      \        if (explTarget->IsAlive() && !explTarget->HasFlag(UNIT_FIELD_FLAGS,\
      \ UNIT_FLAG_NON_ATTACKABLE))\n        {\n            // Process explosion effects\
      \ on valid target\n            ExplodeOnTarget(explTarget);\n        }\n   \
      \ }\n};"
    language: cpp
  notes: This method is specifically designed for use within spell script contexts
    where explosion targets are relevant. It should not be called outside of spell
    execution phases. The returned Unit pointer is valid only during the current spell
    execution cycle and may become invalid if the target dies or is removed from the
    world.
  warnings: Calling this method outside of a proper spell script context will likely
    result in undefined behavior or crashes. Always check for null return values before
    dereferencing the returned Unit pointer to avoid segmentation faults.
  related:
  - GetSpell
  - GetCaster
  - GetHitTarget
  - GetExplTargetItem
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:01:02.506592'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
