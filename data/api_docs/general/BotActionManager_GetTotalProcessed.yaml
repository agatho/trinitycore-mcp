api:
  class: BotActionManager
  method: GetTotalProcessed
  signature: uint64 BotActionManager::GetTotalProcessed() const
documentation:
  brief: Returns the total number of processed bot actions since system initialization
  description: The GetTotalProcessed method retrieves a cumulative count of all bot
    actions that have been successfully processed by the BotActionManager. This counter
    increments each time a bot action completes its execution cycle, providing insight
    into the overall activity and workload of the bot management system. The value
    is typically used for performance monitoring, debugging, and tracking system utilization
    across multiple bot instances. The method is thread-safe and provides a consistent
    view of processed actions regardless of concurrent bot operations.
  parameters: []
  returns: A uint64 value representing the total number of bot actions that have been
    processed by the BotActionManager since the system started. This counter is monotonically
    increasing and does not reset during runtime.
  examples:
  - title: Basic Usage to Monitor Bot Activity
    code: 'uint64 totalProcessed = botActionManager->GetTotalProcessed();

      TC_LOG_INFO("bot", "Total processed bot actions: {}", totalProcessed);'
    language: cpp
  - title: Tracking Action Processing Rate
    code: 'uint64 initialCount = botActionManager->GetTotalProcessed();

      sleep(1000);

      uint64 finalCount = botActionManager->GetTotalProcessed();

      uint64 actionsPerSecond = finalCount - initialCount;

      TC_LOG_INFO("bot", "Actions per second: {}", actionsPerSecond);'
    language: cpp
  notes: This method provides a global view of bot action processing and should not
    be used as a real-time performance indicator for individual bots. The counter
    is maintained in a thread-safe manner, but the value may not reflect instantaneous
    processing rates due to potential batching or asynchronous execution patterns.
  warnings: The returned value represents cumulative processing across all bots managed
    by this BotActionManager instance. If multiple managers exist in the system, each
    will maintain its own independent counter. This method should not be called excessively
    in performance-critical code paths as it may involve atomic operations.
  related:
  - GetProcessedCount
  - GetActiveBots
  - ResetProcessingCount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:29:35.875242'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
