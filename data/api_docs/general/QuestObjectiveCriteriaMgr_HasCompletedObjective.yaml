api:
  class: QuestObjectiveCriteriaMgr
  method: HasCompletedObjective
  signature: bool QuestObjectiveCriteriaMgr::HasCompletedObjective(const int * questObjective)
    const
documentation:
  brief: Checks whether a specific quest objective has been completed by the player
  description: The HasCompletedObjective method determines if a given quest objective,
    identified by its unique identifier, has been fully completed by the player. This
    method is typically used within the context of quest progression and criteria
    tracking in TrinityCore's quest system. It evaluates the current state of the
    player's progress against the specified objective and returns a boolean value
    indicating completion status. The method operates on a single quest objective
    at a time and does not perform any side effects or modifications to the player's
    data.
  parameters:
  - name: questObjective
    description: Pointer to an integer representing the unique identifier of the quest
      objective to check for completion. This value corresponds to the objective ID
      defined in the quest database.
  returns: Returns true if the specified quest objective has been completed by the
    player, false otherwise. The method does not throw exceptions or return error
    codes.
  examples:
  - title: Basic usage to check if a quest objective is completed
    code: "int objectiveId = 12345;\nif (questObjectiveCriteriaMgr.HasCompletedObjective(&objectiveId))\
      \ {\n    // Objective is completed, proceed with reward logic\n    player->CompleteQuest(questId);\n\
      } else {\n    // Objective not yet completed\n    player->SendNotification(\"\
      Objective not yet completed.\");\n}"
    language: cpp
  - title: Checking multiple objectives in a loop
    code: "std::vector<int> objectives = {1001, 1002, 1003};\nfor (int objectiveId\
      \ : objectives) {\n    if (questObjectiveCriteriaMgr.HasCompletedObjective(&objectiveId))\
      \ {\n        // Process completed objective\n        HandleCompletedObjective(objectiveId);\n\
      \    }\n}"
    language: cpp
  notes: This method is part of the internal quest criteria management system and
    should only be called when the player's quest data is properly initialized. The
    method assumes that the provided quest objective ID is valid and corresponds to
    an existing objective in the database. Performance-wise, this method performs
    a simple lookup operation and should not cause noticeable delays in normal gameplay
    scenarios.
  warnings: Ensure that the questObjective parameter points to a valid integer representing
    an actual quest objective ID. Passing an invalid or uninitialized pointer may
    result in undefined behavior. This method should not be used outside of proper
    quest progression contexts where player criteria data is available.
  related:
  - GetQuestObjectiveCriteria
  - CompleteQuestObjective
  - IsQuestObjectiveCompleted
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T07:43:12.363714'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
