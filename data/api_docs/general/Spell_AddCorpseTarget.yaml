api:
  class: Spell
  method: AddCorpseTarget
  signature: void Spell::AddCorpseTarget(Corpse * target, uint32 effectMask)
documentation:
  brief: Adds a corpse target to the spell for processing during execution
  description: The AddCorpseTarget method registers a Corpse object as a valid target
    for the current spell. This method is typically used in spells that require interaction
    with corpse objects, such as resurrection spells or spells that consume corpses
    as part of their effect. The method stores the corpse reference along with an
    effect mask that determines which effects of the spell should be applied to this
    specific target. The corpse target will be processed during the spell's execution
    phase, and its properties will influence how the spell behaves for this particular
    target.
  parameters:
  - name: target
    description: Pointer to the Corpse object that will be added as a target for this
      spell. Must not be null.
  - name: effectMask
    description: Bitmask indicating which effects of the spell should be applied to
      this corpse target. Each bit represents a specific effect index, allowing selective
      application of spell effects.
  returns: null
  examples:
  - title: Basic usage for resurrection spell
    code: "Corpse* corpse = player->GetCorpse();\nif (corpse)\n{\n    spell->AddCorpseTarget(corpse,\
      \ 1 << EFFECT_0);\n}"
    language: cpp
  - title: Adding multiple corpse targets with different effect masks
    code: "for (auto& target : corpseList)\n{\n    uint32 mask = 0;\n    if (target->GetTypeId()\
      \ == TYPEID_PLAYER)\n        mask = (1 << EFFECT_0) | (1 << EFFECT_1);\n   \
      \ else\n        mask = 1 << EFFECT_0;\n    \n    spell->AddCorpseTarget(target,\
      \ mask);\n}"
    language: cpp
  notes: This method does not validate whether the corpse is actually valid or accessible
    for the spell. It simply stores the reference and effect mask for later processing.
    The actual handling of corpse targets occurs during spell execution when the spell's
    target processing logic iterates through all registered targets.
  warnings: Ensure that the Corpse pointer passed to this method remains valid throughout
    the spell's execution lifecycle. Passing a null pointer or a corpse that has been
    destroyed will lead to undefined behavior. The effectMask should be carefully
    constructed to avoid unintended effects on the spell's behavior.
  related:
  - Spell::AddTarget
  - Spell::AddUnitTarget
  - Spell::GetTargets
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:03:49.557944'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
