api:
  class: ScriptMgr
  method: GetCurrentScriptContext
  signature: const std::string & ScriptMgr::GetCurrentScriptContext() const
documentation:
  brief: Returns the name of the currently executing script context
  description: The GetCurrentScriptContext method retrieves the name of the script
    context that is currently being executed within the TrinityCore scripting system.
    This method is typically used by scripts to identify their own execution environment
    or to provide debugging information. The returned string represents the context
    in which the script is running, such as a specific event handler or function call
    within the game's scripting framework. This functionality is essential for maintaining
    proper script isolation and debugging capabilities in TrinityCore's modular scripting
    architecture.
  parameters: []
  returns: A constant reference to a std::string containing the name of the currently
    active script context. The string will be empty if no script context is active
    or if the method is called outside of a script execution environment.
  examples:
  - title: Basic usage in a script handler
    code: "void OnPlayerEnterWorld(Player* player)\n{\n    std::string currentContext\
      \ = sScriptMgr->GetCurrentScriptContext();\n    if (!currentContext.empty())\n\
      \    {\n        TC_LOG_INFO(\"script\", \"Currently executing in context: %s\"\
      , currentContext.c_str());\n    }\n}"
    language: cpp
  notes: This method should only be called from within an active script execution
    context. The returned string is managed by the ScriptMgr and should not be modified.
    In multi-threaded environments, each thread maintains its own script context stack.
  warnings: Calling this method outside of a script execution context may return an
    empty string or undefined behavior. Do not store references to the returned string
    beyond the scope of the current script execution as it may become invalid.
  related:
  - ScriptMgr::SetCurrentScriptContext
  - ScriptMgr::GetScriptContextStack
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:49:30.902369'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
