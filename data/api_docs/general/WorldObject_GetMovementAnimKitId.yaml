api:
  class: WorldObject
  method: GetMovementAnimKitId
  signature: uint16 WorldObject::GetMovementAnimKitId() const
documentation:
  brief: Retrieves the animation kit ID used for movement animations of the world
    object.
  description: The GetMovementAnimKitId method returns the unique identifier of the
    animation kit that is associated with the movement behavior of this WorldObject.
    This ID corresponds to an entry in the AnimKit database table and determines how
    the object animates during movement actions such as walking, running, or flying.
    The returned value can be used to customize or override default movement animations
    for creatures, game objects, or players within the TrinityCore framework. This
    method is typically called during movement updates or animation processing to
    ensure proper visual feedback for player and NPC movement.
  parameters: []
  returns: A uint16 value representing the AnimKit ID used for movement animations
    of this WorldObject. A value of 0 indicates no specific movement animation kit
    is assigned, defaulting to standard movement behavior.
  examples:
  - title: Basic Usage
    code: "uint16 animKitId = unit->GetMovementAnimKitId();\nif (animKitId != 0)\n\
      {\n    // Use the animation kit ID for custom movement logic\n    sLog->outString(\"\
      Unit %u uses movement anim kit: %u\", unit->GetGUID().GetCounter(), animKitId);\n\
      }"
    language: cpp
  - title: Checking Movement Animation Override
    code: "Creature* creature = ...;\nuint16 kitId = creature->GetMovementAnimKitId();\n\
      if (kitId > 0)\n{\n    // Apply custom movement behavior based on the animation\
      \ kit\n    creature->SetWalk(false);\n    creature->SetSpeed(MOVE_RUN, 2.0f);\n\
      }\nelse\n{\n    // Default movement behavior\n    creature->SetWalk(true);\n\
      }"
    language: cpp
  notes: This method is part of the core WorldObject animation system and should be
    used carefully during movement updates to avoid performance issues. The returned
    AnimKit ID must correspond to a valid entry in the AnimKit table, otherwise the
    behavior may be undefined or default to standard movement animations.
  warnings: Do not modify the returned value directly as it is read-only; use appropriate
    setters or database updates if you need to change the movement animation kit.
    Incorrectly setting an invalid AnimKit ID can cause client-side visual glitches
    or crashes.
  related:
  - SetMovementAnimKitId
  - GetAnimKitId
  - GetMovementType
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T21:57:51.282214'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
