api:
  class: DeathRecoveryManager
  method: GetCorpseLocation
  signature: WorldLocation DeathRecoveryManager::GetCorpseLocation() const
documentation:
  brief: Retrieves the world location where a player's corpse is currently located.
  description: The GetCorpseLocation method returns the current WorldLocation of a
    player's corpse within the game world. This location represents the exact coordinates
    and map ID where the player's body resides after death, which is essential for
    corpse recovery mechanics in TrinityCore. The returned location can be used by
    various systems such as corpse retrieval, spirit healer positioning, or death-related
    quest progression. The method does not modify any internal state and is typically
    called when a player dies or when corpse-related functionality needs to be accessed.
  parameters: []
  returns: A WorldLocation object containing the map ID, X, Y, Z coordinates, and
    orientation of the player's corpse in the game world. Returns an invalid location
    if no corpse exists for the associated player.
  examples:
  - title: Retrieve corpse location after player death
    code: "WorldLocation corpseLoc = deathRecoveryMgr.GetCorpseLocation();\nif (corpseLoc.IsInMap())\
      \ {\n    // Use corpseLoc to display corpse position or send to client\n   \
      \ sLog->outString(\"Corpse located at map %u, X: %.2f, Y: %.2f, Z: %.2f\", \n\
      \                    corpseLoc.GetMapId(), corpseLoc.GetX(), corpseLoc.GetY(),\
      \ corpseLoc.GetZ());\n}"
    language: cpp
  notes: This method assumes that the DeathRecoveryManager instance is properly initialized
    with a valid player context. The returned WorldLocation object should not be modified
    directly as it may affect internal state tracking. Performance-wise, this operation
    is lightweight as it only retrieves pre-calculated location data.
  warnings: Calling this method on a DeathRecoveryManager instance not associated
    with a living player may return an invalid or undefined location. Always verify
    the validity of the returned WorldLocation before using its coordinates in game
    logic.
  related:
  - GetCorpse
  - SetCorpseLocation
  - HasCorpse
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:26:25.429962'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
