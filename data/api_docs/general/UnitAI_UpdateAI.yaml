api:
  class: UnitAI
  method: UpdateAI
  signature: void UnitAI::UpdateAI(uint32 diff)
documentation:
  brief: Updates the AI behavior of the unit based on elapsed time and current state.
  description: The UpdateAI method is a core component of the UnitAI system in TrinityCore,
    responsible for driving the artificial intelligence logic of game entities such
    as NPCs and creatures. It processes various AI states, updates target selection,
    manages movement patterns, and executes combat behaviors based on the time delta
    (diff) passed to it. This method is typically called every tick by the game loop
    and ensures that AI-controlled units respond dynamically to their environment
    and player actions. The implementation handles state transitions, threat management,
    spell casting, and pathfinding logic depending on the unit's current AI type and
    configuration.
  parameters: []
  returns: null
  examples:
  - title: Basic AI Update Call
    code: "void GameEvent::Update(uint32 diff)\n{\n    // Update all active units'\
      \ AIs\n    for (auto& unit : m_activeUnits)\n    {\n        if (unit->GetAI())\n\
      \            unit->GetAI()->UpdateAI(diff);\n    }\n}"
    language: cpp
  - title: Custom AI Update Override
    code: "class MyCreatureAI : public UnitAI\n{\npublic:\n    void UpdateAI(uint32\
      \ diff) override\n    {\n        if (!UpdateVictim())\n            return;\n\
      \n        // Custom behavior before base update\n        DoMeleeAttackIfReady();\n\
      \        \n        // Call parent implementation for standard AI updates\n \
      \       UnitAI::UpdateAI(diff);\n    }\n};"
    language: cpp
  notes: This method is called frequently during the game loop, so performance is
    critical. Avoid heavy computations or blocking operations within this function.
    The 'diff' parameter represents milliseconds since last update and should be used
    for time-based calculations. AI behavior can be influenced by various factors
    including unit type, faction, current threat level, and scripted events.
  warnings: Do not call this method directly from outside the game loop as it may
    cause unexpected behavior or race conditions. Modifying unit state during UpdateAI
    execution can lead to undefined behavior. Be cautious when overriding this method
    in custom AI classes to ensure proper inheritance of base functionality.
  related:
  - Unit::GetAI
  - Unit::SetAI
  - UpdateVictim
  - DoMeleeAttackIfReady
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:04:49.854801'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
