api:
  class: Unit
  method: GetDamageMultiplierForTarget
  signature: float Unit::GetDamageMultiplierForTarget(const int * param0) const
documentation:
  brief: Calculates damage multiplier for a target based on the unit's attack power
    and target's resistance.
  description: This method computes the damage multiplier that a Unit applies when
    dealing damage to a target, taking into account the unit's attack power and the
    target's resistance. It is commonly used in combat calculations to determine how
    much damage a unit will deal against a specific target. The method returns a float
    value representing the multiplier, which can be less than 1.0 for reduced damage
    or greater than 1.0 for increased damage depending on the relationship between
    attack power and resistance. This calculation is essential for determining effective
    damage in PvP and PvE scenarios.
  parameters:
  - name: param0
    description: The target's resistance value that affects the damage multiplier
      calculation. This parameter typically represents the target's armor or resistances,
      which influence how much damage the unit's attacks will deal.
  returns: Returns a float value representing the calculated damage multiplier for
    the target, where values less than 1.0 indicate reduced damage and values greater
    than 1.0 indicate increased damage based on the relationship between attack power
    and resistance.
  examples:
  - title: Basic Usage Example
    code: "float multiplier = unit->GetDamageMultiplierForTarget(&targetResist);\n\
      if (multiplier > 1.0f)\n{\n    // Increased damage\n    std::cout << \"Damage\
      \ increased by \" << multiplier << std::endl;\n}\nelse\n{\n    // Reduced damage\n\
      \    std::cout << \"Damage reduced by \" << multiplier << std::endl;\n}"
    language: cpp
  notes: The method is typically used in combat calculations and requires accurate
    resistance values to compute correct results. It may involve complex calculations
    based on unit's attack power, target's resistance, and various game mechanics
    such as critical strikes or damage bonuses.
  warnings: This method should not be used without proper understanding of the underlying
    combat mechanics. Incorrect use of resistance values can lead to inaccurate damage
    calculations. The method is sensitive to changes in target resistance values and
    may require recalculating when resistance changes.
  related:
  - GetDamageBonusForTarget
  - GetAttackPower
  - GetSpellPower
  - GetResistance
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:17:25.901520'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
