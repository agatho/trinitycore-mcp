api:
  class: Unit
  method: GetHealthMultiplierForTarget
  signature: float Unit::GetHealthMultiplierForTarget(const int * param0) const
documentation:
  brief: Returns the health multiplier for a target based on the provided parameter.
  description: This method retrieves the health multiplier value for a specified target,
    which is typically used in combat calculations to determine how much health a
    unit has relative to its maximum health. The method operates on a const object
    and returns a float value representing the multiplier. It's commonly used in game
    mechanics involving damage calculation or health-based targeting. The parameter
    likely represents an index or identifier for a specific target within the context
    of the unit's target list.
  parameters:
  - name: param0
    description: An integer pointer that specifies the target index or identifier
      to retrieve the health multiplier for. This parameter is typically used in conjunction
      with other targeting mechanisms to determine which target's health multiplier
      should be returned.
  returns: A float value representing the health multiplier for the specified target,
    where values typically range from 0.0 to 1.0. A value of 1.0 indicates full health,
    while values less than 1.0 indicate reduced health relative to maximum. Values
    greater than 1.0 may occur in certain edge cases or special circumstances.
  examples:
  - title: Basic usage example
    code: float multiplier = unit->GetHealthMultiplierForTarget(&targetIndex);
    language: cpp
  notes: This method is part of the Unit class and operates on a const object, meaning
    it does not modify the state of the unit. The method likely involves internal
    calculations based on target's health status and may be used in conjunction with
    other methods like GetTarget() or GetMaxHealth(). Performance considerations include
    potential overhead from accessing target data structures.
  warnings: This method may return unexpected values if the target index is invalid
    or out of bounds, potentially leading to undefined behavior. Care should be taken
    when using this method in combat calculations to ensure proper validation of target
    indices before calling this method.
  related:
  - GetTarget
  - GetMaxHealth
  - GetHealth
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:07:39.008564'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
