api:
  class: EquipmentManager
  method: GetStatPriority
  signature: const StatPriority & EquipmentManager::GetStatPriority(int * player)
documentation:
  brief: Retrieves the stat priority configuration for a player's equipment management.
  description: The GetStatPriority method returns a constant reference to the StatPriority
    structure that defines how stats should be prioritized for equipment allocation
    in the player's inventory. This method is typically used by the EquipmentManager
    to determine which attributes (such as strength, agility, intellect) are most
    valuable for a specific player class and specialization. The returned StatPriority
    object contains information about stat weights and preferences that influence
    item selection algorithms during gear optimization processes.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's unique identifier
      or index within the system. This parameter is used internally by the EquipmentManager
      to locate and retrieve the appropriate stat priority configuration for the specified
      player.
  returns: A constant reference to a StatPriority structure that contains the prioritized
    stat weights and preferences for equipment optimization. The returned object should
    not be modified directly as it represents the current configuration for the player's
    equipment management system.
  examples:
  - title: Basic Usage Example
    code: 'int playerId = 12345;

      const StatPriority& priority = equipmentManager.GetStatPriority(&playerId);

      // Use priority values to determine optimal gear choices

      printf("Strength Priority: %f\n", priority.strength);

      printf("Agility Priority: %f\n", priority.agility);'
    language: cpp
  - title: Integration with Gear Optimization
    code: 'int playerId = player->GetGUID().GetCounter();

      const StatPriority& priority = equipmentManager.GetStatPriority(&playerId);


      // Apply stat priorities when evaluating item values

      float itemValue = 0.0f;

      itemValue += item->GetItemLevel() * priority.strength;

      itemValue += item->GetItemLevel() * priority.agility;

      itemValue += item->GetItemLevel() * priority.intellect;'
    language: cpp
  notes: This method assumes that the player parameter points to a valid player identifier.
    The returned StatPriority reference is only valid while the EquipmentManager instance
    exists and the player's configuration has not changed. Consider caching the result
    if this method is called frequently within a short time frame.
  warnings: Do not modify the returned StatPriority object directly as it may affect
    the global stat priority settings for the player. Ensure that the player pointer
    passed to this method points to a valid player entity to avoid undefined behavior
    or memory access violations.
  related:
  - SetStatPriority
  - GetPlayerEquipment
  - OptimizeInventory
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:59:33.255828'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
