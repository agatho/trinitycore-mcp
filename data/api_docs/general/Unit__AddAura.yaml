api:
  class: Unit
  method: _AddAura
  signature: void Unit::_AddAura(UnitAura * aura, Unit * caster)
documentation:
  brief: Adds a new aura to the unit's aura list.
  description: The _AddAura method adds a UnitAura object to the specified unit, allowing
    for the application of buffs, debuffs, or other magical effects. This method is
    typically used within the context of World of Warcraft's TrinityCore framework
    to manage the state of units and their active auras. It handles the proper initialization
    and registration of the aura with the unit's aura system, ensuring that the aura's
    properties are correctly applied and maintained.
  parameters:
  - name: aura
    description: The UnitAura object to be added to the unit. This represents the
      specific magical effect being applied.
  - name: caster
    description: The unit that is casting the aura. This is typically the source of
      the aura and determines the aura's properties such as duration, stack count,
      and effects.
  returns: null
  examples:
  - title: Basic Aura Application Example
    code: 'UnitAura* aura = new UnitAura();

      Unit* caster = new Unit();

      unit->_AddAura(aura, caster);'
    language: cpp
  notes: This method is part of the core aura management system in TrinityCore and
    should be used carefully to avoid memory leaks or incorrect aura application.
    The method ensures that the aura is properly initialized and registered with the
    unit's aura list.
  warnings: Improper use of this method can lead to incorrect aura application or
    memory leaks. Care must be taken when handling the UnitAura object to ensure it
    is properly allocated and managed.
  related:
  - Unit::GetAura
  - Unit::RemoveAura
  - Unit::AddAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:03:01.514028'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
