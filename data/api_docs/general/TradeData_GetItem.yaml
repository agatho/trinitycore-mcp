api:
  class: TradeData
  method: GetItem
  signature: Item * TradeData::GetItem(TradeSlots slot) const
documentation:
  brief: Retrieves the item at the specified trade slot from the trade data.
  description: The GetItem method retrieves an Item pointer from a specific trade
    slot within the TradeData object. This method is used in the context of player
    trading mechanics in World of Warcraft, where players can offer items for trade.
    The method takes a TradeSlots enumeration value to identify which slot's item
    should be returned. It performs bounds checking internally and returns nullptr
    if the specified slot is invalid or empty. The returned Item pointer can be used
    to access item properties such as GUID, entry, stack count, and other item-specific
    data.
  parameters: []
  returns: A pointer to the Item object located at the specified trade slot, or nullptr
    if the slot is invalid or contains no item.
  examples:
  - title: Basic Usage in Trade Context
    code: "TradeData* tradeData = player1->GetTradeData();\nItem* offeredItem = tradeData->GetItem(TRADE_SLOT_ITEM_0);\n\
      if (offeredItem != nullptr)\n{\n    uint32 itemId = offeredItem->GetEntry();\n\
      \    uint32 stackCount = offeredItem->GetCount();\n    // Process the item details\n\
      }"
    language: cpp
  - title: Checking Multiple Trade Slots
    code: "TradeData* tradeData = player1->GetTradeData();\nfor (int i = 0; i < TRADE_SLOT_COUNT;\
      \ ++i)\n{\n    Item* item = tradeData->GetItem(TradeSlots(i));\n    if (item\
      \ != nullptr)\n    {\n        // Handle item in slot\n        sLog->outString(\"\
      Item in slot %d: %u\", i, item->GetEntry());\n    }\n}"
    language: cpp
  notes: This method is part of the trade system and should only be called when a
    player has an active trade session. The TradeSlots enumeration typically includes
    TRADE_SLOT_ITEM_0 through TRADE_SLOT_ITEM_6, plus TRADE_SLOT_TRADE_ACCEPT and
    TRADE_SLOT_TRADE_CANCEL. The returned Item pointer remains valid only as long
    as the TradeData object is valid and the item hasn't been removed from that slot.
  warnings: Calling this method on a TradeData object without an active trade session
    may result in undefined behavior or return invalid pointers. Always verify that
    the trade session is active before calling this method, and ensure the returned
    pointer is not null before dereferencing it.
  related:
  - SetItem
  - ClearItem
  - HasItem
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:21:23.060087'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
