api:
  class: AuctionManager
  method: GetMarketScanInterval
  signature: uint32 AuctionManager::GetMarketScanInterval() const
documentation:
  brief: Returns the interval in seconds between market scans performed by the auction
    manager.
  description: The GetMarketScanInterval method retrieves the configured time interval,
    in seconds, that determines how frequently the auction manager performs market
    scans. This interval is used to control the frequency of automated price checks
    and updates for items listed on the auction house. The value returned represents
    the delay between consecutive automatic scanning operations. This setting is typically
    configured through server configuration files or game settings and affects the
    overall responsiveness and resource usage of the auction system.
  parameters: []
  returns: A uint32 value representing the interval in seconds between market scans.
    A value of 0 typically indicates that automatic scanning is disabled, while positive
    values indicate the number of seconds to wait between scans.
  examples:
  - title: Basic Usage
    code: "uint32 scanInterval = sAuctionMgr->GetMarketScanInterval();\nif (scanInterval\
      \ > 0)\n{\n    printf(\"Market scans occur every %u seconds\\n\", scanInterval);\n\
      }"
    language: cpp
  - title: Checking Scan Frequency
    code: "AuctionManager* auctionMgr = sAuctionMgr;\nuint32 interval = auctionMgr->GetMarketScanInterval();\n\
      if (interval == 0)\n{\n    printf(\"Automatic market scanning is disabled\\\
      n\");\n}\nelse if (interval < 3600)\n{\n    printf(\"Scanning every %u seconds\
      \ (less than an hour)\\n\", interval);\n}\nelse\n{\n    printf(\"Scanning every\
      \ %u seconds (over an hour)\\n\", interval);\n}"
    language: cpp
  notes: This method is typically called during server initialization or configuration
    loading to determine how often the auction house should automatically update market
    prices. The returned value may be cached internally by the AuctionManager class,
    so changes to the underlying configuration may not immediately affect subsequent
    calls unless the manager is reinitialized.
  warnings: Be cautious when modifying the scan interval in a live environment as
    frequent scans can increase server load and database I/O. Setting the interval
    too low may cause performance degradation, while setting it too high may result
    in outdated market data.
  related:
  - SetMarketScanInterval
  - GetAuctionTime
  - UpdateAuctions
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T18:26:42.695764'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
