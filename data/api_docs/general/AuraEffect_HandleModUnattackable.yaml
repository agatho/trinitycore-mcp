api:
  class: AuraEffect
  method: HandleModUnattackable
  signature: void AuraEffect::HandleModUnattackable(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the unattackable state of a unit based on aura application and mode.
  description: The HandleModUnattackable method is responsible for applying or removing
    the unattackable state modifier from a unit affected by an aura. This method is
    typically invoked during aura application or removal to adjust the target's combat
    eligibility. It takes into account the AuraApplication context, the mode of operation
    (such as whether to apply or remove the effect), and whether the effect should
    be activated or deactivated. The unattackable state prevents a unit from being
    targeted or attacked by enemies, commonly used in various game mechanics such
    as invulnerability effects, divine shields, or temporary immunity states.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      how this aura is applied to a target. It provides context for which unit is
      affected and how the aura should behave.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. This
      typically determines whether the effect is being applied (e.g., 1) or removed
      (e.g., 0), though exact values may vary depending on implementation details
      in TrinityCore.
  - name: apply
    description: Boolean flag that specifies whether to apply (true) or remove (false)
      the unattackable effect. This parameter works in conjunction with the mode parameter
      to determine final behavior.
  returns: null
  examples:
  - title: Applying Unattackable Aura
    code: 'AuraEffect* auraEffect = ...; // Get reference to an AuraEffect

      AuraApplication* app = ...; // Get reference to an AuraApplication

      auraEffect->HandleModUnattackable(app, 1, true); // Apply unattackable state'
    language: cpp
  - title: Removing Unattackable Aura
    code: 'AuraEffect* auraEffect = ...; // Get reference to an AuraEffect

      AuraApplication* app = ...; // Get reference to an AuraApplication

      auraEffect->HandleModUnattackable(app, 0, false); // Remove unattackable state'
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and should
    only be called from within the core aura application logic. It directly modifies
    the target's combat eligibility flags and may interact with other systems like
    threat generation or targeting.
  warnings: Improper use of this method can lead to unexpected behavior where units
    become permanently unattackable or immune to effects. Ensure that all calls are
    made through proper aura application mechanisms to avoid inconsistent state changes.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::Apply
  - AuraApplication::Remove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:17:12.932718'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
