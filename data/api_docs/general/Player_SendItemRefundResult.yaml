api:
  class: Player
  method: SendItemRefundResult
  signature: void Player::SendItemRefundResult(Item * item, const ItemExtendedCostEntry
    * iece, uint8 error) const
documentation:
  brief: Sends a refund result message to the player's client for a specific item.
  description: The SendItemRefundResult method is used to communicate the outcome
    of an item refund operation back to the player's client. This method is typically
    invoked when a player attempts to refund an item through the game's interface,
    such as when returning an item to a vendor or using a refund mechanism. The method
    sends a structured message containing the item reference, extended cost information
    (if applicable), and an error code indicating whether the refund was successful
    or encountered an issue. This ensures that the client displays appropriate feedback
    to the user regarding the refund transaction.
  parameters:
  - name: item
    description: Pointer to the Item object that is being refunded. Must be a valid
      item instance; null pointers will result in undefined behavior.
  - name: iece
    description: Pointer to the ItemExtendedCostEntry structure containing extended
      cost information for the refund. Can be null if no extended cost is associated
      with the refund operation.
  - name: error
    description: A uint8 error code indicating the result of the refund attempt. Values
      typically correspond to predefined refund error codes (e.g., 0 = success, 1
      = invalid item, etc.).
  returns: null
  examples:
  - title: Basic Usage for Successful Refund
    code: "Item* refundItem = player->GetItemByGuid(itemGuid);\nif (refundItem)\n\
      {\n    ItemExtendedCostEntry* iece = sItemExtendedCostStore.LookupEntry(12345);\n\
      \    player->SendItemRefundResult(refundItem, iece, 0); // 0 indicates success\n\
      }"
    language: cpp
  - title: Handling Refund Failure with Error Code
    code: "Item* refundItem = player->GetItemByGuid(itemGuid);\nif (refundItem)\n\
      {\n    ItemExtendedCostEntry* iece = sItemExtendedCostStore.LookupEntry(12345);\n\
      \    player->SendItemRefundResult(refundItem, iece, 1); // 1 indicates failure\n\
      }"
    language: cpp
  notes: This method directly interacts with the client's network communication system
    and should only be called from within a valid game context where the player object
    is fully initialized. The error codes used must align with those defined in the
    client-side refund handling logic to ensure correct UI display.
  warnings: Calling this method without proper validation of the item pointer may
    lead to crashes or undefined behavior. Ensure that the ItemExtendedCostEntry is
    properly retrieved from the database and not null unless explicitly intended.
  related:
  - Player::SendItemPushResult
  - Player::SendBuyError
  - Player::SendSellError
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:45:55.616653'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
