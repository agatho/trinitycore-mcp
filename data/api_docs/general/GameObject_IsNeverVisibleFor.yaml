api:
  class: GameObject
  method: IsNeverVisibleFor
  signature: bool GameObject::IsNeverVisibleFor(const int * seer, bool allowServersideObjects)
    const
documentation:
  brief: Determines whether a game object is never visible for a specific player or
    group.
  description: This method checks if a GameObject is never visible to a particular
    player or group of players, typically used in scenarios where visibility restrictions
    are applied based on player faction, team, or other game mechanics. It evaluates
    whether the object should be hidden from the specified seer, considering both
    client-side and server-side visibility rules. The method returns true when the
    object is not visible for the given seer, false otherwise.
  parameters:
  - name: seer
    description: Pointer to the player or group that should not see this GameObject.
      This parameter defines the visibility context for the object.
  - name: allowServersideObjects
    description: Boolean flag indicating whether server-side objects (such as those
      created by scripts) should be considered in visibility calculations. If true,
      server-side objects may be excluded from visibility checks.
  returns: Returns true if the GameObject is never visible for the specified seer;
    otherwise returns false. This indicates that the object should not appear to the
    player or group.
  examples:
  - title: Basic usage example
    code: bool isVisible = gameobject->IsNeverVisibleFor(&player, true);
    language: cpp
  - title: Advanced usage with server-side object handling
    code: bool isVisible = gameobject->IsNeverVisibleFor(&player, false);
    language: cpp
  notes: This method is typically used in conjunction with visibility systems and
    may be affected by player faction, team, or other game mechanics. Performance
    considerations include checking visibility against multiple players or groups,
    especially in large-scale scenarios.
  warnings: Be cautious when using this method as it may affect gameplay balance if
    misused. It's important to ensure that visibility rules are correctly implemented
    to avoid unintended exposure of objects to players who shouldn't see them.
  related:
  - IsVisibleFor
  - IsVisible
  - GetVisibility
  - SetVisibility
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T18:12:13.203566'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
