api:
  class: Unit
  method: SetStat
  signature: void Unit::SetStat(int stat, int32 val)
documentation:
  brief: Sets a unit's stat value to the specified integer.
  description: The SetStat method allows developers to modify a unit's stat attribute,
    such as strength, agility, stamina, intellect, or spirit. This method is commonly
    used in custom scripts and game mechanics to adjust character stats dynamically
    during gameplay. It directly affects the unit's base stats and can be used to
    implement various game effects like buffs, debuffs, or stat modifications. The
    method operates on the unit's internal stat system and requires valid stat identifiers
    and corresponding values.
  parameters:
  - name: stat
    description: The stat identifier to modify, typically representing one of the
      primary attributes (strength, agility, stamina, intellect, spirit). Valid values
      are integers from 0-4, where 0 = strength, 1 = agility, 2 = stamina, 3 = intellect,
      and 4 = spirit.
  - name: val
    description: The new value to set for the specified stat. This can be positive
      or negative, representing increases or decreases in stat values. A value of
      0 effectively removes all stat modifiers for that attribute.
  returns: null
  examples:
  - title: Basic Stat Modification Example
    code: 'Unit* target = GetTarget();


      // Set strength to 100

      target->SetStat(0, 100);


      // Set agility to -50

      target->SetStat(1, -50);'
    language: cpp
  - title: Advanced Stat Modification with Game Mechanics
    code: '// Example: Modify a unit''s stats based on custom buffs

      Unit* player = GetCaster();


      // Apply a temporary stat boost

      player->SetStat(0, 50);

      player->SetStat(1, 30);


      // Reset after duration

      player->SetStat(0, 0);

      player->SetStat(1, 0);'
    language: cpp
  notes: This method directly modifies the unit's stat system and should be used carefully.
    It may affect combat performance and character stats, especially when applied
    to player characters. The method is typically used in conjunction with other stat-related
    methods like GetStat or ModifyStat for complete stat management.
  warnings: Improper use of SetStat can lead to incorrect stat calculations, potentially
    causing game balance issues or unexpected behavior in gameplay. It should not
    be used on non-player units unless explicitly intended. The method does not validate
    the input values, so developers must ensure proper stat values are passed.
  related:
  - GetStat
  - ModifyStat
  - SetMaxHealth
  - SetMaxPower
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T00:47:42.428861'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
