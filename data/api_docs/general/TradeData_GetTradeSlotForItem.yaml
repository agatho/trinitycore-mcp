api:
  class: TradeData
  method: GetTradeSlotForItem
  signature: TradeSlots TradeData::GetTradeSlotForItem(int itemGuid) const
documentation:
  brief: Determines the trade slot index for a given item GUID within the trade data.
  description: The GetTradeSlotForItem method maps an item's unique identifier (GUID)
    to its corresponding trade slot position in the TradeData structure. This is essential
    for tracking which items are being offered in a trade between two players. The
    method searches through the internal list of traded items and returns the appropriate
    TradeSlots enumeration value representing the slot index. If no matching item
    GUID is found, it typically returns an invalid or default trade slot value. This
    functionality supports core trading mechanics such as item validation, trade updates,
    and synchronization between client and server states.
  parameters:
  - name: itemGuid
    description: The unique identifier (GUID) of the item for which to find the trade
      slot. This should be a valid item GUID from the player's inventory or trade
      context.
  returns: Returns a TradeSlots enumeration value indicating the slot index where
    the specified item is located in the trade data. If the item is not found, it
    may return an invalid slot value such as TRADE_SLOT_COUNT or a default state depending
    on implementation.
  examples:
  - title: Finding Trade Slot for an Item
    code: "uint32 itemGuid = player->GetItemByPos(INVENTORY_SLOT_BAG_0, 0)->GetGUID();\n\
      TradeSlots slot = tradeData->GetTradeSlotForItem(itemGuid);\nif (slot < TRADE_SLOT_COUNT)\n\
      {\n    // Valid trade slot found\n    sLog->outString(\"Item found in trade\
      \ slot: %u\", slot);\n}\nelse\n{\n    // Item not found in trade\n    sLog->outString(\"\
      Item not found in current trade.\");\n}"
    language: cpp
  notes: This method assumes that the TradeData object contains valid item references
    and that item GUIDs are properly tracked. It is commonly used during trade updates
    to ensure that items remain synchronized between players' views and server-side
    state.
  warnings: Ensure that the provided itemGuid corresponds to an actual item in the
    trade context; otherwise, the result may be undefined or misleading. Also note
    that this method does not validate whether the item is still valid for trading
    (e.g., if it was removed from inventory).
  related:
  - GetItem
  - SetItem
  - ClearTradeData
  - ConfirmTrade
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:18:59.863040'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
