api:
  class: BotPopulationManager
  method: GetUnderpopulatedZones
  signature: int BotPopulationManager::GetUnderpopulatedZones() const
documentation:
  brief: Calculates and returns the number of zones that are currently underpopulated
    in the bot population system.
  description: The GetUnderpopulatedZones method determines how many game zones currently
    have fewer bots than the configured minimum threshold for that zone. This method
    is typically used by the bot management system to identify areas where additional
    bots should be spawned to maintain optimal population levels. The calculation
    considers the current number of bots in each zone versus the defined minimum population
    requirements, returning a count of zones that fall below this threshold. This
    information is crucial for dynamic bot population balancing within the TrinityCore
    framework.
  parameters: []
  returns: An integer representing the total count of zones that are currently underpopulated.
    Returns zero if all zones meet or exceed their minimum population requirements,
    or if no zones have been configured with population thresholds.
  examples:
  - title: Basic Usage
    code: "int underpopulatedCount = botPopulationManager->GetUnderpopulatedZones();\n\
      if (underpopulatedCount > 0)\n{\n    // Spawn additional bots in underpopulated\
      \ zones\n    LOG_INFO(\"bot\", \"Found {} underpopulated zones, initiating bot\
      \ spawn process.\", underpopulatedCount);\n}"
    language: cpp
  notes: This method performs a read-only calculation based on current bot population
    data and configured thresholds. It does not modify any state or trigger bot spawning
    directly. The result may vary between calls as bot populations change dynamically
    in the game world.
  warnings: null
  related:
  - GetOverpopulatedZones
  - GetZonePopulation
  - UpdateBotPopulations
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T17:00:17.518726'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
