api:
  class: Map
  method: isGridObjectDataLoaded
  signature: bool Map::isGridObjectDataLoaded(uint32 x, uint32 y) const
documentation:
  brief: Checks if grid object data is loaded for the specified grid coordinates.
  description: The isGridObjectDataLoaded method determines whether the object data
    for a specific grid cell has been loaded into memory. This method is used internally
    by the Map class to manage memory usage and ensure that only necessary data is
    loaded for active areas of the game world. The grid coordinates are typically
    derived from the player's position or other spatial queries within the game world.
  parameters: []
  returns: Returns true if the grid object data for the specified coordinates has
    been loaded, false otherwise. This indicates whether the system has retrieved
    and cached the relevant object information for that grid cell.
  examples:
  - title: Check if Grid Data is Loaded
    code: "uint32 x = 50;\nuint32 y = 75;\nif (map->isGridObjectDataLoaded(x, y))\
      \ {\n    // Grid data is loaded, safe to access objects in this grid\n    printf(\"\
      Grid (%u,%u) data is loaded\\n\", x, y);\n} else {\n    // Grid data is not\
      \ yet loaded\n    printf(\"Grid (%u,%u) data is not loaded\\n\", x, y);\n}"
    language: cpp
  notes: This method is typically used in conjunction with grid-based spatial queries
    and object management systems. It helps optimize memory usage by only loading
    data for grids that are actively being accessed or need to be processed.
  warnings: null
  related:
  - Map::LoadGrid
  - Map::UnloadGrid
  - Map::isGridLoaded
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:56:48.948750'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
