api:
  class: ObjectMgr
  method: GetTaxiPath
  signature: void ObjectMgr::GetTaxiPath(uint32 source, uint32 destination, int &
    path, uint32 & cost)
documentation:
  brief: Retrieves the taxi path ID and cost between two flight paths.
  description: The GetTaxiPath method looks up and returns the taxi path identifier
    (path) and associated cost (cost) for traveling from a source flight path node
    to a destination flight path node. This method is typically used in the context
    of World of Warcraft's taxi system, where players can travel between various locations
    using predefined flight paths. The method populates the provided reference parameters
    with the path ID and cost if a valid route exists between the specified nodes.
    If no such route is found, the behavior depends on implementation but generally
    results in invalid or default values being set.
  parameters:
  - name: source
    description: The unique identifier (ID) of the starting flight path node or taxi
      map point.
  - name: destination
    description: The unique identifier (ID) of the destination flight path node or
      taxi map point.
  - name: path
    description: Reference to an integer that will be set to the ID of the taxi path
      connecting source and destination. If no path exists, this value may remain
      unchanged or be set to a default/invalid value.
  - name: cost
    description: Reference to an unsigned 32-bit integer that will be set to the cost
      (in copper) required to take the taxi path from source to destination. If no
      path exists, this value may remain unchanged or be set to zero.
  returns: null
  examples:
  - title: Retrieve Taxi Path Between Two Nodes
    code: "uint32 sourceNode = 1234;\nuint32 destNode = 5678;\nint pathId = -1;\n\
      uint32 cost = 0;\nObjectMgr::GetTaxiPath(sourceNode, destNode, pathId, cost);\n\
      if (pathId != -1 && cost > 0)\n{\n    // Valid taxi path found\n    printf(\"\
      Path ID: %d, Cost: %u copper\\n\", pathId, cost);\n}\nelse\n{\n    // No valid\
      \ path exists\n    printf(\"No taxi path available between nodes.\\n\");\n}"
    language: cpp
  notes: This method is part of the ObjectMgr class which manages various game objects
    including taxi paths. It likely queries internal data structures such as a flight
    path database or lookup table to find valid routes. The method does not perform
    any validation on input node IDs beyond basic existence checks, so invalid IDs
    might result in undefined behavior.
  warnings: Ensure that the source and destination node IDs are valid taxi map points;
    passing invalid IDs may lead to incorrect results or crashes depending on implementation.
    The path parameter is passed by reference and will be modified regardless of whether
    a valid route exists.
  related:
  - GetTaxiPathNode
  - GetTaxiPathByPathId
  - LoadTaxiPaths
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T09:08:33.581117'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
