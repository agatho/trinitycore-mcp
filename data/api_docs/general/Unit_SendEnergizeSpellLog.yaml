api:
  class: Unit
  method: SendEnergizeSpellLog
  signature: void Unit::SendEnergizeSpellLog(Unit * victim, uint32 spellId, int32
    damage, int32 overEnergize, int powerType)
documentation:
  brief: Sends an energize spell log message to the victim's client, displaying power
    change effects from spell casting.
  description: This method sends a spell log message to the specified unit's client,
    showing how much power was gained or lost due to a spell effect. It is used for
    displaying power changes such as mana regeneration from spells, energy recovery
    from abilities, or rage changes from attacks. The method handles both positive
    and negative power changes, with the overEnergize parameter indicating how much
    extra power was gained beyond normal limits. This is typically used in spell processing
    to show power changes to players or NPCs.
  parameters:
  - name: victim
    description: The unit that will receive the spell log message. This can be a player
      or NPC, and represents the target of the power change.
  - name: spellId
    description: The spell identifier that caused the power change. This is used to
      determine which spell log message should be displayed to the victim's client.
  - name: damage
    description: The amount of power change, positive for gain or negative for loss.
      This represents the actual power change value.
  - name: overEnergize
    description: The amount of extra power gained beyond normal limits. This is used
      to show how much additional power was gained when the power exceeds normal limits.
  - name: powerType
    description: The type of power being changed (mana, energy, rage, etc.). This
      determines which power type is displayed in the spell log message.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = player->GetVictim();

      Unit* caster = player;

      int32 damage = 50;

      int32 overEnergize = 10;

      uint32 spellId = 12345;

      int powerType = POWER_MANA;


      caster->SendEnergizeSpellLog(target, spellId, damage, overEnergize, powerType);'
    language: cpp
  - title: Advanced usage example
    code: '// Example showing how to handle different power types

      Unit* target = player->GetVictim();

      Unit* caster = player;

      int32 damage = -20;

      int32 overEnergize = 0;

      uint32 spellId = 12345;

      int powerType = POWER_MANA;


      // For negative damage (loss)

      caster->SendEnergizeSpellLog(target, spellId, damage, overEnergize, powerType);'
    language: cpp
  notes: This method is typically used in spell processing to display power changes
    to the client. It's important to note that this method only sends messages to
    the victim's client, not to other players in the area. The method handles both
    positive and negative power changes, making it suitable for various spell effects
    including healing spells and attack power changes.
  warnings: This method should only be called when the unit is a valid target of the
    spell being processed. It's important to ensure that the power type matches the
    actual power being changed, as mismatched power types can cause client display
    issues. Also, this method does not handle any validation or processing of the
    power change itself - it simply sends the message.
  related:
  - SendSpellLog
  - SendPowerUpdate
  - SendSpellCastResult
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:22:23.831269'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
