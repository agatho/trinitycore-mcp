api:
  class: SpellScriptBase
  method: operator=
  signature: SpellScriptBase & SpellScriptBase::operator=(SpellScriptBase && right)
documentation:
  brief: Moves a SpellScriptBase object's resources to another SpellScriptBase object
  description: The move assignment operator for SpellScriptBase transfers ownership
    of resources from the right-hand side object to the left-hand side object. This
    operation is typically used in scenarios where temporary or temporary-like SpellScriptBase
    objects need to be efficiently transferred without copying their internal data
    structures. The method ensures that the moved-from object is left in a valid but
    unspecified state, suitable for subsequent destruction or assignment. In the context
    of TrinityCore's spell system, this operator supports efficient resource management
    during spell script lifecycle operations.
  parameters: []
  returns: A reference to the left-hand side SpellScriptBase object after the move
    operation has completed
  examples:
  - title: Basic Move Assignment Usage
    code: 'SpellScriptBase&& tempScript = std::move(someSpellScript);

      SpellScriptBase newScript;

      newScript = std::move(tempScript); // Moves resources from tempScript to newScript'
    language: cpp
  notes: This operator is part of the C++ move semantics implementation and should
    be used carefully to avoid double-free errors or undefined behavior. The moved-from
    object must not be accessed after the operation unless reassigned.
  warnings: Using this operator on an already moved-from object can lead to undefined
    behavior. Always ensure that objects are properly initialized or assigned before
    performing move operations.
  related:
  - SpellScriptBase::SpellScriptBase(SpellScriptBase&&)
  - SpellScriptBase::operator=
  - SpellScriptBase::~SpellScriptBase
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:55:11.110779'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
