api:
  class: LineOfSightManager
  method: UpdateDynamicObstructions
  signature: void LineOfSightManager::UpdateDynamicObstructions()
documentation:
  brief: Updates the dynamic obstructions in the line of sight manager to reflect
    current game state.
  description: The UpdateDynamicObstructions method refreshes the internal list of
    dynamic obstructions within the LineOfSightManager. These obstructions represent
    temporary or moving objects in the game world that can block line of sight, such
    as creatures, vehicles, or environmental effects. This method is typically called
    during each game tick to ensure accurate line-of-sight calculations for pathfinding,
    spell casting, and AI behavior. It ensures that the line of sight system has up-to-date
    information about which objects are currently obstructing vision.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage in Game Loop
    code: "void GameWorld::Update()\n{\n    // ... other update logic ...\n    m_lineOfSightManager.UpdateDynamicObstructions();\n\
      \    // ... continue with pathfinding and AI ...\n}"
    language: cpp
  - title: Integration with Movement Updates
    code: "void Unit::UpdateMovement()\n{\n    // Update unit position\n    UpdatePosition();\n\
      \    \n    // Update dynamic obstructions to reflect new positions\n    if (GetMap())\n\
      \        GetMap()->GetLineOfSightManager()->UpdateDynamicObstructions();\n}"
    language: cpp
  notes: This method should be called regularly, typically every game tick or at a
    fixed interval, to maintain accurate line of sight calculations. It may have performance
    implications if there are many dynamic obstructions in the area. The method is
    designed to be thread-safe and can be safely called from different threads.
  warnings: Calling this method too frequently without proper throttling may cause
    performance degradation. Ensure that it's not called during critical rendering
    or AI calculation phases to avoid blocking other systems. This method does not
    handle static obstructions - those must be managed separately.
  related:
  - GetDynamicObstructions
  - AddDynamicObstruction
  - RemoveDynamicObstruction
  - IsInLineOfSight
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T23:54:48.506432'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
