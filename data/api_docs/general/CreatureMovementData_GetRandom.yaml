api:
  class: CreatureMovementData
  method: GetRandom
  signature: CreatureRandomMovementType CreatureMovementData::GetRandom() const
documentation:
  brief: Returns a random movement type from the creature's movement data.
  description: The GetRandom method selects and returns a random CreatureRandomMovementType
    from the internal collection of movement types associated with the creature. This
    is typically used in AI behavior to determine unpredictable movement patterns
    for creatures during random roaming or patrol behaviors. The method ensures that
    all registered movement types have an equal chance of being selected, providing
    natural variation in creature movement without requiring explicit weighting. This
    functionality is integral to creating dynamic and engaging NPC behavior within
    the TrinityCore framework.
  parameters: []
  returns: A CreatureRandomMovementType enum value representing one of the possible
    random movement behaviors that can be assigned to a creature. The specific type
    returned depends on the internal configuration and may include values such as
    RANDOM_MOVEMENT_WALK, RANDOM_MOVEMENT_RUN, or RANDOM_MOVEMENT_FLIGHT.
  examples:
  - title: Basic usage in AI context
    code: "class MyCreatureAI : public CreatureAI {\npublic:\n    void UpdateAI(uint32\
      \ diff) override {\n        CreatureRandomMovementType movement = me->GetCreatureMovementData()->GetRandom();\n\
      \        // Use the random movement type for behavior logic\n        switch\
      \ (movement) {\n            case RANDOM_MOVEMENT_WALK:\n                // Handle\
      \ walking behavior\n                break;\n            case RANDOM_MOVEMENT_RUN:\n\
      \                // Handle running behavior\n                break;\n      \
      \  }\n    }\n};"
    language: cpp
  notes: This method performs a uniform random selection from the available movement
    types. The internal collection of movement types should be properly initialized
    before calling this method to avoid undefined behavior. The performance impact
    is minimal as it only involves a simple random number generation and array indexing
    operation.
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:34:08.688799'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
