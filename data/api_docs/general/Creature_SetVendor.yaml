api:
  class: Creature
  method: SetVendor
  signature: void Creature::SetVendor(int flags, bool apply)
documentation:
  brief: Sets the vendor flag for a creature to enable or disable vendor functionality.
  description: The SetVendor method allows developers to control whether a creature
    acts as a vendor, enabling or disabling the vendor functionality through flags.
    This method is typically used in conjunction with other creature-related methods
    to manage NPC behavior and interaction with players. The flag parameter determines
    the specific vendor type, while the apply parameter controls whether the vendor
    functionality is enabled (true) or disabled (false). This method affects how creatures
    interact with player vendors and can be crucial for implementing custom NPC behavior
    in World of Warcraft server development.
  parameters:
  - name: flags
    description: The vendor flag that determines the type of vendor functionality
      to enable. Valid values include various vendor types such as 'vendor' or 'innkeeper',
      and can be used to control specific vendor behaviors.
  - name: apply
    description: Boolean value controlling whether to enable (true) or disable (false)
      the vendor functionality for the creature. When true, the creature will function
      as a vendor; when false, it will not.
  returns: null
  examples:
  - title: Basic Vendor Enable Example
    code: 'Creature* creature = new Creature();

      creature->SetVendor(1, true);

      // Enables vendor functionality for the creature'
    language: cpp
  - title: Advanced Vendor Disable Example
    code: 'Creature* creature = new Creature();

      creature->SetVendor(2, false);

      // Disables vendor functionality for the creature

      // This can be used to create custom NPC behavior'
    language: cpp
  notes: This method requires proper understanding of creature flags and their implications
    in World of Warcraft. It should be used carefully as it affects how creatures
    interact with players, particularly in terms of vendor interactions. The method
    may require additional setup to ensure proper vendor functionality works correctly.
  warnings: Improper use of this method can lead to incorrect vendor behavior or NPC
    interaction issues. Care should be taken when applying flags to ensure they match
    the intended vendor type. Incorrect application of the apply parameter can cause
    creatures to not function as expected in vendor interactions.
  related:
  - SetVendor
  - GetVendor
  - Creature::SetFlag
  - Creature::RemoveFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:33:43.877449'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
