api:
  class: CreatureScript
  method: ~CreatureScript
  signature: void CreatureScript::~CreatureScript()
documentation:
  brief: Destroys a CreatureScript instance and releases its resources.
  description: The CreatureScript destructor is automatically invoked when a CreatureScript
    object goes out of scope or is explicitly deleted. This method ensures proper
    cleanup of any allocated memory or resources associated with the creature script.
    In TrinityCore, CreatureScript instances are typically managed by the core system
    and destroyed during server shutdown or when scripts are reloaded. The destructor
    does not perform any special operations beyond standard object cleanup, as CreatureScript
    serves primarily as a base class for defining creature AI behavior.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of CreatureScript instance
    code: "void ExampleFunction()\n{\n    CreatureScript* script = new CreatureScript(\"\
      ExampleCreatureScript\");\n    // ... use the script ...\n    delete script;\
      \ // Destructor is called here\n}"
    language: cpp
  notes: The destructor is a virtual function in the base class, allowing proper polymorphic
    destruction of derived script classes. Developers should not manually invoke this
    destructor unless implementing custom memory management patterns.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T04:16:50.688133'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
