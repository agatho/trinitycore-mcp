api:
  class: Player
  method: IsPetNeedBeTemporaryUnsummoned
  signature: bool Player::IsPetNeedBeTemporaryUnsummoned() const
documentation:
  brief: Determines whether the player's pet should be temporarily unsummoned.
  description: This method checks if the player's summoned pet needs to be temporarily
    unsummoned based on game mechanics and player state. It evaluates various conditions
    including player level, pet behavior, and summoning state to determine if the
    pet should be removed from the world. The method is typically used in conjunction
    with pet management systems to ensure proper pet handling during gameplay events.
  parameters: []
  returns: Returns true if the pet should be temporarily unsummoned, false otherwise.
    This indicates whether the current pet summoning state requires temporary removal
    of the pet from the player's control.
  examples:
  - title: Basic usage example
    code: "if (player->IsPetNeedBeTemporaryUnsummoned())\n{\n    // Pet should be\
      \ unsummoned\n    player->UnsummonPet();\n}\nelse\n{\n    // Pet remains summoned\n\
      \    player->GetPet()->SetOwner(player);\n}"
    language: cpp
  notes: This method is part of the pet management system and should be called during
    game events or when player state changes. Implementation may vary based on specific
    game mechanics and player conditions.
  warnings: This method should not be used in isolation; it's recommended to check
    other related methods like GetPet() or IsPetSummoned() for complete pet management
    logic.
  related:
  - Player::GetPet
  - Player::UnsummonPet
  - Player::IsPetSummoned
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T15:42:14.979791'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
