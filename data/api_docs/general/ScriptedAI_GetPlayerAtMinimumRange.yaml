api:
  class: ScriptedAI
  method: GetPlayerAtMinimumRange
  signature: int * ScriptedAI::GetPlayerAtMinimumRange(float minRange)
documentation:
  brief: Returns the unique identifier (GUID) of the player located at the minimum
    range from the AI-controlled creature.
  description: The GetPlayerAtMinimumRange method searches through all players within
    the AI-controlled creature's detection range and returns the GUID of the player
    who is closest to the creature. This method is typically used in scripted AI behaviors
    where the creature needs to target or interact with the nearest player. The method
    performs a distance calculation using the creature's current position and each
    player's position, selecting the player with the smallest distance that meets
    the minimum range requirement. If no players are found within the specified minimum
    range, the method may return null or an invalid GUID depending on implementation
    details.
  parameters: []
  returns: A pointer to an integer representing the GUID of the closest player within
    the minimum range, or nullptr if no valid player is found within range.
  examples:
  - title: Basic usage in AI behavior
    code: "void ExampleCreatureAI::UpdateAI(uint32 diff)\n{\n    if (Unit* target\
      \ = me->GetPlayerAtMinimumRange(5.0f))\n    {\n        // Perform action on\
      \ the nearest player within 5 yards\n        DoMeleeAttackIfReady();\n    }\n\
      }"
    language: cpp
  notes: This method relies on the creature's current position and the positions of
    all players in its threat list or detection range. It may not account for line-of-sight
    restrictions unless explicitly implemented. The returned pointer should be checked
    for null before dereferencing to avoid runtime errors.
  warnings: The method assumes that the creature has a valid position and that player
    data is accessible. Using this method in high-frequency update loops without proper
    caching or optimization may impact performance. Ensure that the minimum range
    parameter is set appropriately to prevent unintended targeting behavior.
  related:
  - GetClosestPlayer
  - GetPlayersInRange
  - GetNearestHostileUnit
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:44:35.789160'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
