api:
  class: Aura
  method: GetCastItemId
  signature: uint32 Aura::GetCastItemId() const
documentation:
  brief: Returns the item ID associated with the aura's cast source.
  description: The GetCastItemId method retrieves the unique identifier of the item
    that was used to cast the aura. This is typically used in cases where an aura
    is applied through an item effect, such as enchantments, potions, or other consumable
    items. The returned ID can be used to identify the specific item that triggered
    the aura application, which is useful for tracking item-based effects, implementing
    item cooldowns, or determining the source of a buff or debuff. This method is
    commonly called during aura application and removal events to maintain accurate
    tracking of item-based auras.
  parameters: []
  returns: A uint32 value representing the item ID that cast this aura. Returns 0
    if the aura was not cast by an item, or if the item ID has not been set.
  examples:
  - title: Basic Usage to Identify Item Source
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    uint32 castItemId\
      \ = aura->GetCastItemId();\n    if (castItemId != 0)\n    {\n        // This\
      \ aura was cast by an item\n        sLog->outString(\"Aura cast by item ID:\
      \ %u\", castItemId);\n    }\n}"
    language: cpp
  - title: Checking for Item-Based Aura in Combat
    code: "void OnAuraRemove(Aura* aura)\n{\n    uint32 itemId = aura->GetCastItemId();\n\
      \    if (itemId != 0)\n    {\n        // Handle item-based aura removal\n  \
      \      ItemTemplate const* proto = sObjectMgr->GetItemTemplate(itemId);\n  \
      \      if (proto)\n        {\n            // Apply any item-specific effects\
      \ on aura removal\n            sLog->outString(\"Removed item-based aura from\
      \ item: %s\", proto->Name1.c_str());\n        }\n    }\n}"
    language: cpp
  notes: This method should only be called on auras that were originally cast by items.
    If the aura was applied through other means (spells, effects, etc.), the returned
    value will likely be zero. The returned item ID is not necessarily unique to a
    specific instance of an item in the player's inventory, but rather represents
    the base item template ID.
  warnings: Be cautious when using this method on auras that may have been applied
    through multiple sources. Ensure proper validation before assuming the aura was
    cast by an item. Also note that some auras might not have a valid cast item ID
    set, particularly if they are applied directly by spells rather than items.
  related:
  - GetCaster()
  - GetSpellInfo()
  - GetCastItem()
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:23:12.364383'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
