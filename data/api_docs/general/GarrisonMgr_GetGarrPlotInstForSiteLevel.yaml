api:
  class: GarrisonMgr
  method: GetGarrPlotInstForSiteLevel
  signature: const int * GarrisonMgr::GetGarrPlotInstForSiteLevel(uint32 garrSiteLevelId)
    const
documentation:
  brief: Retrieves the garrison plot instance ID associated with a specified garrison
    site level.
  description: The GetGarrPlotInstForSiteLevel method fetches the corresponding garrison
    plot instance identifier for a given garrison site level. This is used internally
    by the game to determine which plot instance should be utilized when interacting
    with a specific garrison site of a certain level. The method returns a pointer
    to an array of integers, where each element corresponds to a different aspect
    or property of the plot instance associated with that site level. It's important
    to note that this function does not perform any validation on the input parameter;
    it assumes the provided garrSiteLevelId is valid and corresponds to an existing
    garrison site level in the game data.
  parameters: []
  returns: A pointer to a constant integer array representing the garrison plot instance
    identifiers for the specified site level. The array may contain multiple values
    depending on the internal structure of the garrison system, or it might be a single
    value wrapped in an array. Returns nullptr if no valid data is found for the given
    site level ID.
  examples:
  - title: Basic Usage Example
    code: "GarrisonMgr* garrisonMgr = sGarrisonMgr;\nconst int* plotInstIds = garrisonMgr->GetGarrPlotInstForSiteLevel(10);\n\
      if (plotInstIds != nullptr)\n{\n    // Process the returned array of plot instance\
      \ IDs\n    for (int i = 0; i < 3; ++i) // Assuming max 3 entries\n    {\n  \
      \      printf(\"Plot Instance ID: %d\\n\", plotInstIds[i]);\n    }\n}"
    language: cpp
  notes: This method is part of the internal garrison management system and should
    only be used by developers working directly with the TrinityCore garrison mechanics.
    The returned pointer points to an internal static data structure, so it's safe
    to use but must not be modified. Performance-wise, this function performs a lookup
    in an internal map or array, making it relatively fast but still subject to caching
    behavior depending on how often the same site level is queried.
  warnings: Do not assume that the returned array will always have the same size;
    different site levels may return arrays of varying lengths. Also, be cautious
    when using this method without verifying that the garrSiteLevelId parameter corresponds
    to a valid entry in the game's garrison data tables, as invalid IDs might lead
    to undefined behavior or incorrect results.
  related:
  - GetGarrSiteLevelForPlotInst
  - GetGarrPlotInstForSite
  - GetGarrSiteLevel
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:33:12.774373'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
