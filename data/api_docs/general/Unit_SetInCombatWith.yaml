api:
  class: Unit
  method: SetInCombatWith
  signature: void Unit::SetInCombatWith(Unit * enemy, bool addSecondUnitSuppressed)
documentation:
  brief: Sets a unit into combat with another unit, establishing mutual combat status.
  description: The SetInCombatWith method establishes combat between two units by
    setting them into mutual combat status. This method is used to initiate combat
    between units, typically when one unit attacks another or when a player engages
    an enemy. The method handles the necessary game mechanics for combat initiation,
    including updating combat state and potentially suppressing additional combat
    units if specified. It's commonly used in AI scripts and player interaction scenarios.
  parameters:
  - name: enemy
    description: Pointer to the unit that will be set into combat with the current
      unit. This parameter must be a valid Unit pointer, typically representing an
      enemy or target.
  - name: addSecondUnitSuppressed
    description: Boolean flag indicating whether to suppress additional combat units.
      When true, prevents additional units from being added to combat state, otherwise
      allows normal combat behavior.
  returns: null
  examples:
  - title: Basic Combat Setup Example
    code: 'Unit* enemy = GetEnemy();

      Unit->SetInCombatWith(enemy);'
    language: cpp
  - title: Advanced Combat with Suppression
    code: 'Unit* enemy = GetEnemy();

      Unit->SetInCombatWith(enemy, true);

      // This prevents additional combat units from being added to combat state'
    language: cpp
  notes: This method typically requires the unit to be in a valid state for combat
    initiation. It may trigger combat-related events and updates in the game world.
    The implementation likely involves updating combat state flags and potentially
    triggering combat-related callbacks.
  warnings: The method may not properly handle edge cases where both units are already
    in combat with each other. Care should be taken when using this method in AI scripts
    to avoid infinite loops or unexpected behavior.
  related:
  - GetInCombat
  - SetInCombat
  - CombatState
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T01:09:20.959375'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
