api:
  class: ProfessionManager
  method: GetProfessionCategory
  signature: ProfessionCategory ProfessionManager::GetProfessionCategory(ProfessionType
    profession) const
documentation:
  brief: Retrieves the category associated with a specified profession type.
  description: The GetProfessionCategory method retrieves the ProfessionCategory enumeration
    value that corresponds to the given ProfessionType. This method is used internally
    by the TrinityCore framework to categorize different professions for gameplay
    mechanics, such as determining whether a profession is a primary or secondary
    skill, or identifying its role in the game's crafting system. The method performs
    a lookup based on the provided profession type and returns the appropriate category.
    It is typically called during profession initialization, skill tracking, or when
    evaluating profession-related game logic.
  parameters:
  - name: profession
    description: The ProfessionType enumeration value representing the specific profession
      for which to retrieve the category.
  returns: A ProfessionCategory enumeration value that represents the category of
    the specified profession. Possible values may include PRIMARY, SECONDARY, TRADE_SKILL,
    etc., depending on how professions are categorized within the TrinityCore system.
  examples:
  - title: Retrieve Category for Alchemy
    code: "ProfessionType alchemy = PROFESSION_ALCHEMY;\nProfessionCategory category\
      \ = professionManager->GetProfessionCategory(alchemy);\nif (category == PROFESSON_CATEGORY_TRADE_SKILL)\n\
      {\n    // Handle trade skill category logic\n}"
    language: cpp
  - title: Categorize Multiple Professions
    code: "std::vector<ProfessionType> professions = {PROFESSION_ALCHEMY, PROFESSION_BLACKSMITHING,\
      \ PROFESSION_ENCHANTING};\nfor (auto& prof : professions)\n{\n    ProfessionCategory\
      \ cat = professionManager->GetProfessionCategory(prof);\n    // Process each\
      \ profession's category\n}"
    language: cpp
  notes: This method is expected to be a fast lookup operation, likely implemented
    using a map or array for O(1) access. The implementation assumes that all valid
    ProfessionType values are properly mapped to their corresponding ProfessionCategory
    values. It's recommended to validate the input profession type before calling
    this method to avoid unexpected behavior.
  warnings: Ensure that the input profession parameter is a valid ProfessionType value;
    invalid inputs may lead to undefined behavior or incorrect category assignments.
    The method should not be called with uninitialized or corrupted profession data.
  related:
  - GetProfessionType
  - IsProfessionValid
  - GetProfessionName
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:02:37.585805'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
