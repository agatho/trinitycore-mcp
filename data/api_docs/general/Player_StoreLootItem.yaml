api:
  class: Player
  method: StoreLootItem
  signature: void Player::StoreLootItem(int lootWorldObjectGuid, uint8 lootSlot, Loot
    * loot, AELootResult * aeResult)
documentation:
  brief: Stores loot items from a world object into the player's inventory
  description: This method handles the process of storing loot items retrieved from
    a WorldObject into the player's inventory. It takes a lootWorldObjectGuid parameter
    which identifies the specific world object that contains the loot, a lootSlot
    parameter indicating which slot in the loot list to store, and a Loot pointer
    containing the actual loot data. The method also accepts an AELootResult pointer
    for handling additional loot information. This functionality is crucial for maintaining
    proper loot distribution mechanics within World of Warcraft's game system, particularly
    when dealing with quest rewards or loot from mobs.
  parameters:
  - name: lootWorldObjectGuid
    description: The GUID identifying the world object that contains the loot items
      to be stored. This is typically a GameObject or Creature GUID.
  - name: lootSlot
    description: The specific loot slot number to store, indicating which item from
      the loot list should be added to player's inventory.
  - name: loot
    description: Pointer to the Loot object containing the actual loot data to be
      stored. This represents the loot items that will be added to the player's inventory.
  - name: aeResult
    description: Pointer to an AELootResult structure which handles additional loot
      information, such as loot type or special conditions for the loot item.
  returns: null
  examples:
  - title: Basic loot storage example
    code: 'Player* player = new Player();

      Loot* loot = new Loot();

      AELootResult* aeResult = new AELootResult();

      player->StoreLootItem(12345, 0, loot, aeResult);'
    language: cpp
  notes: This method is typically called during the loot distribution process when
    a player interacts with a world object. The implementation involves checking if
    the loot item can be added to the player's inventory, and if so, adding it to
    the appropriate slot. Performance considerations include ensuring that the player's
    inventory has space available before attempting to store items.
  warnings: This method should not be called directly without proper context. It requires
    a valid loot object and should only be used when the player is actually in possession
    of the loot items from a WorldObject. Improper usage can lead to inventory overflow
    or incorrect loot handling.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T23:26:40.013350'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
