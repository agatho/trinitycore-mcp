api:
  class: LineOfSightManager
  method: GetSpellMaxRange
  signature: float LineOfSightManager::GetSpellMaxRange(uint32 spellId)
documentation:
  brief: Retrieves the maximum range of a specified spell from the spell database.
  description: The GetSpellMaxRange method fetches the maximum casting range for a
    given spell ID. This value is typically defined in the spell database and represents
    how far a player or creature can be from a target while still being able to cast
    the spell successfully. The returned float value corresponds to the maximum distance
    in yards. This method is commonly used during line-of-sight checks and spell validation
    logic to ensure that a spell can reach its intended target within the allowed
    range. It's important to note that this function does not account for any temporary
    modifiers or buffs that might affect spell range during runtime.
  parameters: []
  returns: A float value representing the maximum range of the specified spell in
    yards. Returns 0.0f if the spell ID is invalid or not found in the database.
  examples:
  - title: Basic Usage to Check Spell Range
    code: "float maxRange = lineOfSightManager.GetSpellMaxRange(12345);\nif (maxRange\
      \ > 0.0f)\n{\n    // Spell has a valid range\n    printf(\"Maximum range: %.2f\
      \ yards\\n\", maxRange);\n}\nelse\n{\n    // Invalid spell ID or no range defined\n\
      \    printf(\"Invalid spell or no range defined\\n\");\n}"
    language: cpp
  - title: Using Range in Line-of-Sight Validation
    code: "uint32 spellId = 12345;\nfloat maxRange = lineOfSightManager.GetSpellMaxRange(spellId);\n\
      if (maxRange > 0.0f && distanceToTarget <= maxRange)\n{\n    // Proceed with\
      \ spell casting logic\n    // Validate line of sight and cast the spell\n}\n\
      else\n{\n    // Target is out of range or spell has no defined range\n    SendSpellFailed(SPELL_FAILED_OUT_OF_RANGE);\n\
      }"
    language: cpp
  notes: This method relies on internal spell database lookups, so performance may
    be impacted if called frequently with many different spell IDs. The returned value
    is static and does not change during runtime unless the spell data itself is modified
    in the database. This function should only be used when validating spell targets
    or calculating valid casting distances.
  warnings: Ensure that the spell ID passed to this method is valid; invalid spell
    IDs will return 0.0f, which might be misinterpreted as a zero-range spell. Do
    not use this method for dynamic range calculations involving buffs or debuffs
    that modify spell range during combat.
  related:
  - GetSpellMinRange
  - IsSpellInRange
  - GetSpellInfo
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T11:08:48.270393'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
