api:
  class: Player
  method: PushQuests
  signature: void Player::PushQuests()
documentation:
  brief: Sends quest data to the player's client for display in the quest log.
  description: The PushQuests method is responsible for transmitting the current state
    of a player's active and available quests to their client. This method ensures
    that the player's quest log is up-to-date with all relevant quest information,
    including quest objectives, progress, and completion status. It typically gets
    invoked when a player logs in, accepts a new quest, or when quest data needs to
    be refreshed in the user interface. The method handles serialization of quest
    data and sends it through the appropriate network packets to update the client's
    view.
  parameters: []
  returns: null
  examples:
  - title: Basic usage during player login
    code: "void HandlePlayerLogin(Player* player)\n{\n    // Other login logic...\n\
      \    player->PushQuests();\n    // Continue with other login procedures\n}"
    language: cpp
  notes: This method is typically called internally by the core system when quest
    data needs to be synchronized with the client. Developers should not normally
    need to call this directly unless implementing custom quest handling logic. The
    method may trigger additional network traffic and should be used judiciously during
    high-frequency operations.
  warnings: Calling PushQuests manually in inappropriate contexts might cause synchronization
    issues or duplicate quest entries in the player's log. It should only be invoked
    when quest state has actually changed or when explicitly required by the game
    flow logic.
  related:
  - Player::AddQuest
  - Player::RemoveQuest
  - Player::UpdateQuestObjective
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:11:22.685888'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
