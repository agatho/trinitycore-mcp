api:
  class: GameObject
  method: SetAnimKitId
  signature: void GameObject::SetAnimKitId(uint16 animKitId, bool oneshot)
documentation:
  brief: Sets the animation kit ID for a game object, controlling its visual animation
    behavior.
  description: This method assigns an animation kit ID to a GameObject instance, which
    determines the specific animation sequence that will be played when the object
    is interacted with or when certain conditions are met. The animKitId parameter
    controls the animation state, while the oneshot boolean parameter specifies whether
    the animation should play once or continuously. This functionality is commonly
    used for objects like doors, chests, or other interactive elements where custom
    animations are required.
  parameters:
  - name: animKitId
    description: The animation kit ID to assign to the GameObject. Valid values range
      from 0 to 65535, with 0 typically indicating no animation. This ID corresponds
      to specific animation sequences defined in the game's animation database.
  - name: oneshot
    description: A boolean flag that determines if the animation should play once
      (true) or continuously (false). When set to true, the animation will execute
      only once and then stop. When false, the animation will loop indefinitely until
      changed.
  returns: null
  examples:
  - title: Setting a one-time animation for a door
    code: 'GameObject* door = new GameObject();


      // Set animKitId to 12345 with one-shot behavior

      door->SetAnimKitId(12345, true);


      // This will play the animation once and stop

      '
    language: cpp
  - title: Setting continuous animation for a chest
    code: 'GameObject* chest = new GameObject();


      // Set animKitId to 67890 with continuous behavior

      chest->SetAnimKitId(67890, false);


      // This will loop the animation until changed

      '
    language: cpp
  notes: The method is typically used in conjunction with other GameObject methods
    like SetGoState or SetDisplayId to fully control an object's visual behavior.
    Performance considerations include ensuring that animKitId values are valid and
    do not cause conflicts with existing animation entries in the database.
  warnings: Improper use of this method can lead to visual glitches or incorrect animation
    sequences. Care must be taken when assigning animKitId values, as invalid IDs
    may result in no animation being displayed or unexpected behavior. Also note that
    setting this value does not automatically trigger the animation; it must be manually
    activated through other methods.
  related:
  - GetAnimKitId
  - SetGoState
  - SetDisplayId
  - UpdateObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:11:23.644372'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
