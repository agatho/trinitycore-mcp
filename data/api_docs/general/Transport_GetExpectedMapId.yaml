api:
  class: Transport
  method: GetExpectedMapId
  signature: int Transport::GetExpectedMapId() const
documentation:
  brief: Returns the expected map identifier that the transport is associated with.
  description: The GetExpectedMapId method retrieves the map ID that the transport
    object is expected to be located on. This value represents the intended or default
    map where the transport should exist, regardless of its current position in the
    game world. It is used primarily for validation and synchronization purposes within
    the TrinityCore framework to ensure transports are correctly associated with their
    designated maps. The returned value typically corresponds to a valid MapEntry
    in the game's database and is crucial for proper transport behavior during zone
    transitions or when checking transport validity.
  parameters: []
  returns: An integer representing the expected map ID that this transport is associated
    with. This value should correspond to a valid map entry in the game world, or
    0 if no expected map is set.
  examples:
  - title: Basic Usage Example
    code: "Transport* transport = ...; // Assume transport is initialized\nint expectedMapId\
      \ = transport->GetExpectedMapId();\nif (expectedMapId != 0)\n{\n    printf(\"\
      Transport expected on map: %d\\n\", expectedMapId);\n}"
    language: cpp
  notes: This method does not account for the transport's current location in the
    world; it only returns the pre-configured expected map ID. The value returned
    may be used to validate that a transport is correctly associated with its intended
    map, particularly during loading or zone transition scenarios.
  warnings: null
  related:
  - GetMapId
  - SetExpectedMapId
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:42:23.036602'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
