api:
  class: SmartScript
  method: ProcessEvent
  signature: void SmartScript::ProcessEvent(SmartScriptHolder & e, Unit * unit, uint32
    var0, uint32 var1, bool bvar, const SpellInfo * spell, GameObject * gob, int varString)
documentation:
  brief: Processes a smart script event with specified parameters and triggers associated
    AI behaviors.
  description: The ProcessEvent method in SmartScript is responsible for handling
    and executing AI events based on provided parameters. It evaluates conditions,
    triggers actions, and manages the flow of scripted behavior for creatures, game
    objects, or other entities within the TrinityCore framework. This method serves
    as the core execution point for smart scripts that define custom AI logic. The
    method accepts various event-specific data including unit references, spell information,
    and variable values to determine how the AI should respond. It integrates with
    the broader SmartScript system to ensure proper event handling and script execution.
  parameters:
  - name: e
    description: Reference to a SmartScriptHolder containing the event configuration
      and script data to be processed
  - name: unit
    description: Pointer to the Unit object that triggered or is associated with this
      event, can be nullptr
  - name: var0
    description: First generic variable parameter used for various event-specific
      data (typically used as an ID or counter)
  - name: var1
    description: Second generic variable parameter for additional event data, often
      used for timing or state values
  - name: bvar
    description: Boolean flag that can be used to pass conditional state information
      to the script
  - name: spell
    description: Pointer to SpellInfo structure containing spell data related to this
      event, can be nullptr
  - name: gob
    description: Pointer to GameObject that triggered the event, can be nullptr
  - name: varString
    description: Integer value representing a string variable used in script execution,
      typically for text or identifier purposes
  returns: null
  examples:
  - title: Basic event processing with unit reference
    code: 'SmartScriptHolder event;

      Unit* target = player;

      ProcessEvent(event, target, 100, 200, true, nullptr, nullptr, 50);

      // Processes an event triggered by a player unit with specific parameters'
    language: cpp
  - title: Advanced event processing with spell data
    code: 'SmartScriptHolder event;

      Unit* caster = mob;

      SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);

      ProcessEvent(event, caster, 0, 0, false, spellInfo, nullptr, -1);

      // Processes an event related to a specific spell cast by a mob'
    language: cpp
  notes: This method is part of the core SmartScript AI system and should only be
    called from within the appropriate AI context. The parameters var0 and var1 are
    commonly used for different purposes depending on the event type, so their meaning
    must be understood in context. The method performs no direct database operations
    but relies heavily on internal script state management.
  warnings: Calling this method with invalid or null pointers may lead to undefined
    behavior. Ensure that SmartScriptHolder contains valid data before calling ProcessEvent.
    The method assumes proper initialization of all referenced objects and should
    not be called outside the AI execution context.
  related:
  - SmartScript::GetEvent
  - SmartScript::ExecuteEvent
  - SmartScript::OnReset
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T21:23:09.919468'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
