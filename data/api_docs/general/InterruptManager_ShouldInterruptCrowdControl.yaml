api:
  class: InterruptManager
  method: ShouldInterruptCrowdControl
  signature: bool InterruptManager::ShouldInterruptCrowdControl(const SpellInfo *
    spellInfo, Unit * caster)
documentation:
  brief: Determines whether a spell should interrupt crowd control effects.
  description: The ShouldInterruptCrowdControl method evaluates if a given spell is
    capable of breaking or interrupting ongoing crowd control effects applied to a
    target. This functionality is crucial for game mechanics involving spell interactions,
    particularly when dealing with abilities that can dispel or break enemy control
    effects such as fear, charm, or stun. The method checks the spell's properties
    and the caster's capabilities to determine if the spell qualifies for crowd control
    interruption. It serves as part of the core interrupt management system in TrinityCore's
    spell handling logic.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing detailed information
      about the spell being evaluated. This includes flags, effects, and other attributes
      that determine if the spell can interrupt crowd control.
  - name: caster
    description: Pointer to the Unit object representing the caster of the spell.
      The caster's properties and state are considered when determining if the spell
      can interrupt crowd control effects.
  returns: Returns true if the specified spell is capable of interrupting crowd control
    effects; otherwise, returns false. This indicates whether the spell's mechanics
    allow it to break existing control effects on targets.
  examples:
  - title: Basic Usage in Spell Logic
    code: "if (interruptManager->ShouldInterruptCrowdControl(spellInfo, caster)) {\n\
      \    // Proceed with interrupting crowd control effects\n    target->RemoveCrowdControlEffects();\n\
      }"
    language: cpp
  - title: Integration with Spell Cast Handling
    code: "void Spell::HandleCrowdControlInterrupt() {\n    if (m_caster && m_spellInfo)\
      \ {\n        if (sInterruptManager->ShouldInterruptCrowdControl(m_spellInfo,\
      \ m_caster)) {\n            // Apply interrupt logic\n            m_caster->InterruptCrowdControl();\n\
      \        }\n    }\n}"
    language: cpp
  notes: This method is typically used within the spell system's core logic to determine
    if a spell should be allowed to break crowd control effects. It relies on spell
    flags and properties defined in the SpellInfo structure, which are loaded from
    the database or hardcoded definitions. The implementation may involve checking
    for specific spell attributes like 'Interrupts Crowd Control' flags.
  warnings: Ensure that both spellInfo and caster parameters are valid pointers before
    calling this method to prevent segmentation faults. Incorrectly configured spell
    flags in SpellInfo can lead to unexpected behavior where spells either fail to
    interrupt crowd control or incorrectly do so.
  related:
  - InterruptManager::CanInterruptSpell
  - Unit::RemoveCrowdControlEffects
  - SpellInfo::HasAttribute
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T12:25:31.877031'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
