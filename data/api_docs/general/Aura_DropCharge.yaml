api:
  class: Aura
  method: DropCharge
  signature: bool Aura::DropCharge(AuraRemoveMode removeMode)
documentation:
  brief: Removes one charge from the aura and triggers appropriate cleanup if charges
    are depleted.
  description: The DropCharge method reduces the current charge count of an aura by
    one. If the aura has no charges remaining after this operation, it will be removed
    from the target. This method is typically used in conjunction with aura applications
    that have limited uses or duration-based charges. The removal process respects
    the provided remove mode to determine how the aura should be cleaned up. It's
    commonly invoked when an effect that consumes aura charges is triggered, such
    as a spell or ability that depletes charge counts.
  parameters: []
  returns: Returns true if the aura was successfully dropped and removed (when charges
    reached zero), false otherwise. If the aura still has charges remaining after
    dropping one, it returns false but does not remove the aura.
  examples:
  - title: Basic Usage in Spell Effect
    code: "if (Aura* aura = target->GetAura(12345)) {\n    if (aura->DropCharge(AURA_REMOVE_BY_DEATH))\
      \ {\n        // Aura was removed due to charge depletion\n    }\n}"
    language: cpp
  - title: Checking Charge Status Before Dropping
    code: "Aura* aura = player->GetAura(67890);\nif (aura && aura->GetCharges() >\
      \ 0) {\n    bool removed = aura->DropCharge(AURA_REMOVE_BY_CANCEL);\n    if\
      \ (removed) {\n        // Handle aura removal logic\n    }\n}"
    language: cpp
  notes: This method should only be called on auras that are capable of having charges.
    It is not safe to call DropCharge on auras without charge support, as this may
    lead to undefined behavior or crashes. The aura must be active and valid for the
    method to function correctly.
  warnings: Calling DropCharge on an aura with zero charges will result in immediate
    removal, which can cause unexpected side effects if not handled properly. Ensure
    that any dependent systems are notified before calling this method to avoid dangling
    references or logic errors.
  related:
  - GetCharges
  - SetCharges
  - AddCharge
  - RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:58:20.223177'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
