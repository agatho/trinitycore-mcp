api:
  class: ScheduledChangeAI
  method: UpdateAI
  signature: void ScheduledChangeAI::UpdateAI(int param0)
documentation:
  brief: Updates the AI behavior of a scheduled change unit based on the provided
    time parameter.
  description: The UpdateAI method is responsible for executing the core logic of
    the ScheduledChangeAI class, which manages AI behaviors that are scheduled to
    occur at specific times. This method typically handles state transitions, action
    execution, and timing-based decision making for AI-controlled units. It is called
    regularly by the game engine's update loop to ensure that scheduled AI events
    are processed correctly according to their defined timing parameters. The method
    may trigger various AI actions such as movement, casting spells, or changing combat
    states based on internal scheduling logic.
  parameters:
  - name: param0
    description: The time parameter that determines the current update cycle and influences
      AI decision-making. This value is typically a timestamp or tick count used to
      synchronize scheduled events with the game's timing system.
  returns: null
  examples:
  - title: Basic UpdateAI Call
    code: "void MyScheduledChangeAI::UpdateAI(int param0)\n{\n    // Process scheduled\
      \ AI behavior based on time parameter\n    if (param0 % 1000 == 0) // Every\
      \ second\n    {\n        // Execute scheduled action\n        DoScheduledAction();\n\
      \    }\n}"
    language: cpp
  notes: This method is typically invoked by the game engine's main update loop and
    should not be called directly from other AI methods to avoid potential recursion
    issues. The time parameter (param0) represents milliseconds since the last update,
    making it suitable for precise timing of scheduled events.
  warnings: Avoid performing heavy computations or blocking operations within this
    method as it is called frequently and can impact overall game performance. Ensure
    that all scheduled actions are properly synchronized with the game's time system
    to prevent timing inconsistencies.
  related:
  - ScheduledChangeAI::Initialize
  - ScheduledChangeAI::ScheduleEvent
  - ScheduledChangeAI::CancelEvent
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T23:04:59.908627'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
