api:
  class: Spell
  method: ExecuteLogEffectTakeTargetPower
  signature: void Spell::ExecuteLogEffectTakeTargetPower(int effect, Unit * target,
    int powerType, uint32 points, float amplitude)
documentation:
  brief: Logs the effect of taking power from a target unit during spell execution.
  description: This method handles the logging of power consumption effects when a
    spell targets a specific unit. It records the type of power being consumed, the
    amount of points involved, and the amplitude of the effect. The method is typically
    invoked during spell processing to track power usage for various game mechanics
    such as mana, rage, or energy consumption. This function ensures proper logging
    of power changes in the game context, particularly when dealing with spell effects
    that consume target power.
  parameters:
  - name: effect
    description: The effect index being executed, indicating which specific effect
      is being processed
  - name: target
    description: Pointer to the unit whose power is being consumed, could be null
      if no target exists
  - name: powerType
    description: The type of power being consumed (mana, rage, energy, etc.), typically
      represented by enum values
  - name: points
    description: The amount of power points being consumed, usually representing the
      quantity or value of power taken
  - name: amplitude
    description: The amplitude of the effect, representing how much power is consumed
      during the spell execution
  returns: null
  examples:
  - title: Basic usage example
    code: 'Spell* spell = new Spell();

      spell->ExecuteLogEffectTakeTargetPower(0, targetUnit, POWER_MANA, 100, 1.0f);'
    language: cpp
  - title: Advanced usage with power type handling
    code: 'Spell* spell = new Spell();

      spell->ExecuteLogEffectTakeTargetPower(1, targetUnit, POWER_RAGE, 50, 2.0f);

      // This would log a rage consumption effect for the second effect index'
    language: cpp
  notes: This method is part of the internal spell execution process and should only
    be called during spell processing. It's typically used in conjunction with other
    logging methods to ensure complete power tracking during spell effects. The method
    may not be directly invoked by developers but rather through internal spell handling
    mechanisms.
  warnings: The method requires valid pointers to target units; passing null pointers
    can lead to crashes or undefined behavior. Care should be taken when using this
    method in conjunction with other spell-related functions to avoid conflicts or
    incorrect logging.
  related:
  - Spell::ExecuteLogEffect
  - Spell::LogEffect
  - Spell::TakeTargetPower
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T22:02:01.377858'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
