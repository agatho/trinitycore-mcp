api:
  class: Aura
  method: SetCharges
  signature: void Aura::SetCharges(uint8 charges)
documentation:
  brief: Sets the charge count of an aura to the specified value.
  description: The SetCharges method updates the current number of charges remaining
    on an aura. This is commonly used for auras that have limited uses, such as spell
    effects with limited duration or consumable buffs. The method directly modifies
    the internal charge counter of the aura instance without triggering any additional
    events or recalculations. It's important to note that setting charges to zero
    will not immediately remove the aura from the target; it simply sets the charge
    count to zero, which may affect how the aura behaves in subsequent checks or applications.
  parameters:
  - name: charges
    description: The new charge count to assign to the aura. Valid values are typically
      0-255 for uint8 type. A value of 0 indicates no remaining charges, while higher
      values represent the number of times the aura can be consumed or applied.
  returns: null
  examples:
  - title: Setting Aura Charges to 3
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    aura->SetCharges(3);\n\
      }"
    language: cpp
  - title: Resetting Aura Charges to Zero
    code: "Unit* target = GetTarget();\nAura* aura = target->GetAura(67890);\nif (aura)\n\
      {\n    aura->SetCharges(0);\n    // The aura will no longer consume charges\
      \ but remains on the target\n}"
    language: cpp
  notes: This method directly modifies the aura's internal state. It does not validate
    whether the new charge count is within expected bounds for the specific aura type,
    so developers should ensure appropriate values are passed. The method is typically
    used in conjunction with other aura management functions like GetCharges() or
    RemoveAura().
  warnings: Setting charges to zero does not automatically remove the aura from the
    target; it only resets the charge counter. If the aura has a limited duration,
    it may still expire naturally after reaching zero charges.
  related:
  - GetCharges
  - AddCharge
  - RemoveAura
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:09:13.327556'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
