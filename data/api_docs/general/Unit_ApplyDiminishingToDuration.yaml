api:
  class: Unit
  method: ApplyDiminishingToDuration
  signature: bool Unit::ApplyDiminishingToDuration(const SpellInfo * auraSpellInfo,
    int32 & duration, int * caster, int previousLevel) const
documentation:
  brief: Applies diminishing returns to spell duration calculations
  description: This method implements the diminishing returns system for spell durations,
    adjusting the duration based on the caster's level and previous spell level. It
    is used to prevent spells from stacking excessively and ensures proper game balance.
    The method modifies the duration parameter according to diminishing return rules
    and returns true if the duration was adjusted, false otherwise.
  parameters:
  - name: auraSpellInfo
    description: Pointer to the SpellInfo structure for the spell being applied. This
      determines which spell is being modified by diminishing returns.
  - name: duration
    description: Reference to the duration value that will be modified by this method.
      The value may be adjusted based on diminishing return rules.
  - name: caster
    description: Pointer to the caster's level, used for determining how much to reduce
      the duration. This parameter is optional and can be nullptr.
  - name: previousLevel
    description: Previous spell level that was applied. Used to determine if diminishing
      returns should apply based on previous spell level.
  returns: Returns true if the duration was adjusted by diminishing returns, false
    otherwise. This indicates whether the spell duration was modified.
  examples:
  - title: Basic usage example
    code: "int32 duration = 1000;\nint casterLevel = 60;\nconst SpellInfo* auraSpellInfo\
      \ = GetSpellInfo(12345);\nbool result = unit->ApplyDiminishingToDuration(auraSpellInfo,\
      \ duration, &casterLevel, 1);\nif (result)\n    std::cout << \"Duration adjusted\"\
      \ << std::endl;"
    language: cpp
  notes: This method is part of the broader diminishing returns system in TrinityCore.
    It should be used carefully as it affects spell stacking and game balance. The
    method may be called multiple times per spell, depending on how many times a spell
    is applied.
  warnings: This method modifies the duration parameter directly, so care must be
    taken to ensure that the value is not modified inappropriately. Also, this method
    does not handle all possible spell types - only specific ones are affected by
    diminishing returns.
  related:
  - ApplyDiminishingToDuration
  - GetSpellInfo
  - IsDiminishingReturn
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T21:28:55.753684'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
