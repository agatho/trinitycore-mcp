api:
  class: Group
  method: GetInvited
  signature: Player * Group::GetInvited(const int & name) const
documentation:
  brief: Retrieves a player from the group's invited list by index.
  description: The GetInvited method retrieves a Player object from the group's list
    of invited members. This method allows access to players who have been invited
    to join the group but have not yet accepted the invitation. The method takes an
    integer index parameter that specifies which invited player to retrieve, with
    valid indices ranging from 0 to the total number of invited players minus one.
    If the provided index is out of bounds or no player exists at that position, the
    method returns a null pointer. This functionality is essential for managing group
    invitations and tracking pending join requests in World of Warcraft's group system.
  parameters:
  - name: name
    description: An integer index specifying which invited player to retrieve from
      the group's invitation list. Valid values range from 0 to (GetInvitedCount()
      - 1).
  returns: A pointer to the Player object at the specified index in the group's invited
    list, or nullptr if the index is out of bounds or no player exists at that position.
  examples:
  - title: Retrieve and check an invited player
    code: "Group* group = player->GetGroup();\nif (group)\n{\n    Player* invitedPlayer\
      \ = group->GetInvited(0);\n    if (invitedPlayer)\n    {\n        // Process\
      \ the invited player\n        sLog->outString(\"First invited player: %s\",\
      \ invitedPlayer->GetName().c_str());\n    }\n    else\n    {\n        sLog->outString(\"\
      No invited players or invalid index.\");\n    }\n}"
    language: cpp
  - title: Iterate through all invited players
    code: "Group* group = player->GetGroup();\nif (group)\n{\n    uint8 invitedCount\
      \ = group->GetInvitedCount();\n    for (uint8 i = 0; i < invitedCount; ++i)\n\
      \    {\n        Player* invitedPlayer = group->GetInvited(i);\n        if (invitedPlayer)\n\
      \        {\n            sLog->outString(\"Invited player %d: %s\", i, invitedPlayer->GetName().c_str());\n\
      \        }\n    }\n}"
    language: cpp
  notes: This method operates on the group's internal invited list which may be modified
    by other operations such as inviting new players or removing existing invitations.
    The index parameter must be carefully validated to prevent out-of-bounds access.
    This method is typically used in conjunction with GetInvitedCount() to safely
    iterate through all invited members.
  warnings: Using an invalid index (negative or greater than or equal to the number
    of invited players) will result in a null pointer return, but this should not
    be treated as an error condition. Always validate the returned pointer before
    using it to prevent segmentation faults. The invited list may change during iteration
    if other players are invited or removed.
  related:
  - GetInvitedCount
  - AddInvite
  - RemoveInvite
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T16:50:18.728612'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
