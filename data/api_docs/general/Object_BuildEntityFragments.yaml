api:
  class: Object
  method: BuildEntityFragments
  signature: void Object::BuildEntityFragments(ByteBuffer * data, int fragments)
documentation:
  brief: Builds entity fragments for network transmission
  description: The BuildEntityFragments method constructs serialized data fragments
    representing an object's state for network transmission to clients. This method
    is typically invoked during object updates or synchronization events in the TrinityCore
    server. It prepares the object's data in a format suitable for sending over the
    network, potentially splitting the data into multiple fragments based on the specified
    fragment count. The method operates on a provided ByteBuffer which is populated
    with the serialized entity data.
  parameters:
  - name: data
    description: Pointer to a ByteBuffer object where the serialized entity fragments
      will be written. This buffer must be properly initialized before calling the
      method.
  - name: fragments
    description: Integer specifying the number of fragments to split the entity data
      into. This value determines how the object's serialized data is divided for
      network transmission, with higher values resulting in smaller individual fragments.
  returns: null
  examples:
  - title: Basic usage of BuildEntityFragments
    code: 'ByteBuffer buffer;

      int fragmentCount = 4;

      object->BuildEntityFragments(&buffer, fragmentCount);

      // Buffer now contains the fragmented entity data ready for network transmission'
    language: cpp
  notes: This method is typically called internally by the server's update system
    and should not be invoked directly in most cases. The fragmentation logic may
    vary based on object type and network configuration settings. Ensure that the
    ByteBuffer passed to this method has sufficient capacity to hold all the serialized
    data.
  warnings: Direct invocation of this method without proper initialization of the
    ByteBuffer or incorrect fragment count values can lead to undefined behavior or
    memory corruption. This method is part of the internal networking protocol and
    should be used with caution in custom code.
  related:
  - Object::BuildUpdateData
  - Object::BuildCreateUpdateBlockForPlayer
  - Object::BuildValuesUpdateBlockForPlayer
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:23:12.705462'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
