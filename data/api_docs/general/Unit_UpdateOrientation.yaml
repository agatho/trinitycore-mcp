api:
  class: Unit
  method: UpdateOrientation
  signature: void Unit::UpdateOrientation(float orientation)
documentation:
  brief: Updates the orientation of a Unit to the specified angle.
  description: The UpdateOrientation method sets the facing direction of a Unit to
    the given orientation value. This method is typically used to rotate units such
    as players, NPCs, or creatures to face a specific direction in the game world.
    The orientation parameter represents the angle in radians, where 0 radians points
    east, and positive values rotate counter-clockwise. This method does not directly
    send updates to clients; it modifies internal state that may be synchronized during
    the next update cycle. It's commonly used in AI behaviors, spell effects, or movement
    scripts where precise facing control is required.
  parameters:
  - name: orientation
    description: The target orientation angle in radians. Zero radians points east
      (positive X-axis). Positive values rotate counter-clockwise. Valid range is
      typically -PI to PI, though the implementation may normalize values.
  returns: null
  examples:
  - title: Set Unit to Face North
    code: 'Unit* unit = ...;

      float northOrientation = M_PI / 2.0f; // 90 degrees in radians

      unit->UpdateOrientation(northOrientation);'
    language: cpp
  - title: Rotate Unit to Face Player
    code: 'Unit* unit = ...;

      Player* player = ...;

      float angle = unit->GetAngle(player);

      unit->UpdateOrientation(angle);'
    language: cpp
  notes: This method updates the internal orientation value but does not immediately
    broadcast changes to clients. The actual visual update occurs during the next
    update cycle or when the unit's movement is processed. For immediate visual effect,
    consider using SetFacingTo() in addition to this method.
  warnings: Calling UpdateOrientation with invalid angles (e.g., NaN or infinity)
    may cause undefined behavior. Be aware that this method doesn't validate input
    parameters and assumes valid orientation values are passed.
  related:
  - GetOrientation
  - SetFacingTo
  - SetOrientation
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T16:20:51.767896'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
