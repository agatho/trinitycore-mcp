api:
  class: Spell
  method: IsDelayableNoMore
  signature: bool Spell::IsDelayableNoMore()
documentation:
  brief: Determines whether a spell has reached its delay limit and can no longer
    be delayed.
  description: This method checks if a spell's delay has been exhausted, preventing
    further delays. It is commonly used in spell handling logic to determine when
    a spell can no longer be postponed or modified. The method typically returns true
    when the spell's delay has expired, indicating that no more delays are possible.
    This functionality is crucial for managing spell cooldowns and ensuring proper
    game mechanics behavior during spell execution.
  parameters: []
  returns: Returns true if the spell's delay has been exhausted and can no longer
    be delayed, false otherwise. The method indicates that a spell has reached its
    maximum delay limit and cannot be further postponed.
  examples:
  - title: Basic usage example
    code: "if (spell->IsDelayableNoMore()) {\n    // Handle spell that can no longer\
      \ be delayed\n}"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related methods
    to manage spell execution timing. It's important to note that this method may
    not be directly related to cooldown management but rather to delay mechanics specifically.
  warnings: This method should not be confused with cooldown-related functions; it
    specifically handles delay limits rather than cooldowns. Using this method incorrectly
    may lead to unexpected behavior in spell handling logic.
  related:
  - Spell::IsDelayable
  - Spell::GetDelay
  - Spell::SetDelay
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:15:35.283632'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
