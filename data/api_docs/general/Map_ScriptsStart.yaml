api:
  class: Map
  method: ScriptsStart
  signature: void Map::ScriptsStart(const int & scripts, uint32 id, Object * source,
    Object * target)
documentation:
  brief: Starts script execution for a given map with specified source and target
    objects
  description: The ScriptsStart method initiates script processing on a Map instance,
    typically used in TrinityCore's scripting system to trigger events or actions
    based on game conditions. It accepts a reference to an integer representing the
    script type or identifier, along with unique identifiers for source and target
    objects. This method is commonly invoked during quest progression, creature interactions,
    or area-triggered events where scripted behavior needs to be executed within the
    context of a specific map. The method does not return any value but directly affects
    the game state through script execution.
  parameters:
  - name: scripts
    description: Reference to an integer identifying the type or index of script to
      execute. This typically corresponds to predefined script IDs used in TrinityCore's
      scripting framework.
  - name: id
    description: Unique identifier for the script instance, used to distinguish between
      multiple simultaneous script executions on the same map.
  - name: source
    description: Pointer to the Object that initiates or is the origin of the script
      execution. Can be a player, creature, game object, or any other object type.
  - name: target
    description: Pointer to the Object that serves as the target or recipient of the
      script execution. May be NULL if no specific target is required.
  returns: null
  examples:
  - title: Basic Script Start for Quest Event
    code: 'Map* map = player->GetMap();

      map->ScriptsStart(scriptType, questId, player, npc);

      // Triggers a quest-related script on the current map'
    language: cpp
  - title: Area Trigger Script Execution
    code: 'Map* map = trigger->GetMap();

      map->ScriptsStart(AREA_TRIGGER_SCRIPT, triggerId, NULL, player);

      // Executes an area-triggered script with no specific source object'
    language: cpp
  notes: This method is part of TrinityCore's internal scripting system and should
    only be called when the map has active scripts registered. The method may perform
    lookup operations to find matching script entries based on the provided ID and
    context. It is typically invoked from within core game logic rather than directly
    by external code.
  warnings: Calling this method without proper script registration or invalid object
    pointers can lead to undefined behavior or crashes. Ensure that the source and
    target objects are valid and belong to the same map instance before calling ScriptsStart.
  related:
  - Map::ScriptsEnd
  - Map::GetScript
  - Map::AddScript
  - Map::RemoveScript
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:56:12.874928'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
