api:
  class: SafeCorpseManager
  method: Instance
  signature: SafeCorpseManager & SafeCorpseManager::Instance()
documentation:
  brief: Returns the singleton instance of the SafeCorpseManager for managing player
    corpses in a thread-safe manner.
  description: The Instance method implements the singleton pattern to provide global
    access to the SafeCorpseManager. This manager is responsible for handling corpse-related
    operations such as saving, loading, and cleaning up player corpses within the
    game world. The method ensures that only one instance of SafeCorpseManager exists
    throughout the TrinityCore server lifecycle, making it safe for concurrent access
    from multiple threads. It is typically used internally by the core systems to
    manage corpse data without requiring explicit instantiation.
  parameters: []
  returns: A reference to the single global instance of SafeCorpseManager. This reference
    can be used to call other methods on the manager to perform corpse-related operations
    such as adding, removing, or querying corpse data.
  examples:
  - title: Accessing the SafeCorpseManager Instance
    code: 'SafeCorpseManager& corpseManager = SafeCorpseManager::Instance();

      // Now use corpseManager to access corpse management functions

      Corpse* corpse = corpseManager.GetCorpse(playerGuid);'
    language: cpp
  notes: This method is implemented as a thread-safe singleton. The instance is created
    on first access and persists for the lifetime of the server process. Developers
    should not attempt to manually instantiate or destroy SafeCorpseManager objects.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T23:20:24.311175'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
