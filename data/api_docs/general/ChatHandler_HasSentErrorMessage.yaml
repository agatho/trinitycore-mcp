api:
  class: ChatHandler
  method: HasSentErrorMessage
  signature: bool ChatHandler::HasSentErrorMessage() const
documentation:
  brief: Checks whether an error message has been sent to the player's client.
  description: The HasSentErrorMessage method determines if an error message has already
    been dispatched to the player's client during the current command execution. This
    is used internally by the ChatHandler to prevent duplicate error messages from
    being sent, which could confuse players or clutter their chat windows. The method
    typically returns true after an error has been reported via SendSysMessage() or
    similar error reporting functions, and false if no error has been sent yet. This
    functionality helps maintain clean communication between the server and client
    in World of Warcraft's TrinityCore environment.
  parameters: []
  returns: Returns true if an error message has already been sent to the player's
    client during this command execution; otherwise returns false.
  examples:
  - title: Basic usage to check for previous errors
    code: "if (!handler->HasSentErrorMessage())\n{\n    handler->SendSysMessage(\"\
      This is an error message.\");\n}\nelse\n{\n    handler->SendSysMessage(\"An\
      \ error was already sent.\");\n}"
    language: cpp
  notes: This method is primarily used internally by the ChatHandler class to manage
    command execution flow and prevent duplicate error reporting. It's particularly
    useful in complex command handlers where multiple validation steps might occur
    before sending an error message.
  warnings: null
  related:
  - SendSysMessage
  - PSendSysMessage
  - SendNotification
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:17:52.849379'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
