api:
  class: Aura
  method: IsPassive
  signature: bool Aura::IsPassive() const
documentation:
  brief: Determines whether the aura is passive.
  description: The IsPassive method checks if the aura has the passive flag set, indicating
    that it does not require explicit activation or deactivation by the player or
    game system. Passive auras are typically applied automatically upon certain conditions
    or at specific times, such as buffs that persist through combat or effects that
    are always active. This method returns true if the aura is passive and false otherwise.
    The result of this check can be used to determine how an aura behaves in various
    game scenarios, such as whether it should be displayed in the player's aura list
    or if it can be manually removed.
  parameters: []
  returns: Returns true if the aura is passive, false otherwise.
  examples:
  - title: Check if an aura is passive
    code: "Aura* aura = player->GetAura(12345);\nif (aura && aura->IsPassive()) {\n\
      \    // Handle passive aura logic\n    printf(\"Aura is passive\\n\");\n}"
    language: cpp
  notes: This method relies on the internal state of the aura's flags. It does not
    perform any complex checks or calculations, making it a fast operation suitable
    for frequent calls during gameplay.
  warnings: null
  related:
  - Aura::HasFlag
  - Aura::IsPositive
  - Aura::IsExpired
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:11:49.092044'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
