api:
  class: LFGMgr
  method: LFGMgr
  signature: void LFGMgr::LFGMgr(LFGMgr && right)
documentation:
  brief: Moves a LFGMgr object to another LFGMgr object using move semantics.
  description: The LFGMgr move constructor transfers ownership of resources from one
    LFGMgr instance to another. This constructor is typically used when creating a
    new LFGMgr object by moving an existing one, allowing for efficient resource management
    without unnecessary copying. In the context of TrinityCore's LFG (Looking for
    Group) system, this enables fast initialization of LFG managers when handling
    group matching and queue operations. The move constructor ensures that the source
    object is left in a valid but unspecified state after the operation.
  parameters: []
  returns: None
  examples:
  - title: Move Constructing an LFGMgr Instance
    code: 'LFGMgr manager1;

      // ... perform operations on manager1 ...

      LFGMgr manager2 = std::move(manager1); // Move constructor in action

      // manager1 is now in a valid but unspecified state'
    language: cpp
  notes: This constructor is part of the C++ move semantics implementation and should
    only be called with an rvalue reference. It's important to understand that after
    moving, the source object should not be used unless explicitly reset or reassigned.
  warnings: Using this constructor on an already moved-from object can lead to undefined
    behavior. Always ensure proper resource management when using move semantics in
    TrinityCore's LFG system.
  related:
  - LFGMgr::operator=
  - LFGMgr::~LFGMgr
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:47:42.702958'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
