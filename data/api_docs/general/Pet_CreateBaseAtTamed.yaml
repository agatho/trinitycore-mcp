api:
  class: Pet
  method: CreateBaseAtTamed
  signature: bool Pet::CreateBaseAtTamed(const int * cinfo, int * map)
documentation:
  brief: Initializes and creates the base data structure for a tamed pet entity within
    the game world.
  description: The CreateBaseAtTamed method is responsible for setting up the fundamental
    attributes and state of a pet that has been tamed. This includes initializing
    the pet's basic properties such as its entry ID, level, health, mana, and other
    core statistics required for the pet to function properly in the game world. The
    method ensures that all necessary data structures are allocated and configured
    correctly before the pet becomes active. It typically gets invoked during the
    process of taming a creature, where the pet transitions from being a wild creature
    to a controlled companion. This method is part of the internal pet management
    system within TrinityCore and should not be called directly by external code unless
    implementing custom pet behavior or extensions.
  parameters:
  - name: cinfo
    description: Pointer to an array containing creature information including entry
      ID, level, and other base stats for the pet. This parameter is used to determine
      how the pet should be initialized based on the creature type being tamed.
  - name: map
    description: Pointer to an integer representing the map ID where the pet will
      be created. This determines which game world instance the pet will inhabit and
      affects various environmental properties and interactions.
  returns: Returns true if the pet was successfully initialized with base data, false
    otherwise. A return value of false typically indicates a failure in allocating
    memory or setting up essential pet attributes.
  examples:
  - title: Basic usage when taming a creature
    code: "Pet* newPet = new Pet();\nint creatureInfo[] = {12345, 10, 100}; // entryID,\
      \ level, health\nint mapId = 0;\nbool success = newPet->CreateBaseAtTamed(creatureInfo,\
      \ &mapId);\nif (success) {\n    // Pet is now initialized with base stats\n}"
    language: cpp
  notes: This method is an internal utility function used primarily during pet taming
    operations. It assumes that the provided parameters are valid and properly formatted.
    The method does not handle any AI or behavioral logic - it only sets up the basic
    data structures needed for a pet to exist in the game world.
  warnings: Do not call this method directly unless you understand its internal behavior
    and dependencies. Improper use may result in uninitialized memory access or incorrect
    pet state. This function should typically be invoked as part of a larger taming
    procedure rather than standalone.
  related:
  - Pet::Create
  - Pet::LoadFromDB
  - Pet::SaveToDB
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:21:07.375013'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
