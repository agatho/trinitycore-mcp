api:
  class: ObjectMgr
  method: GetGossipMenusMapBoundsNonConst
  signature: GossipMenusMapBoundsNonConst ObjectMgr::GetGossipMenusMapBoundsNonConst(uint32
    uiMenuId)
documentation:
  brief: Retrieves the non-const iterator bounds for a specified gossip menu in the
    ObjectMgr's gossip menus map.
  description: This method returns the iterator bounds (begin and end) for a specific
    gossip menu ID within the internal gossip menus map managed by the ObjectMgr class.
    It allows access to the range of gossip menu entries associated with a given menu
    ID, enabling iteration over related gossip options. The returned bounds are non-const,
    meaning they can be used to modify elements within the range if needed. This functionality
    is primarily used in the context of World of Warcraft's gossip system where NPCs
    present players with interactive menus containing multiple options. The method
    does not perform any validation on the input menu ID and assumes it exists within
    the map structure.
  parameters: []
  returns: A GossipMenusMapBoundsNonConst object representing the iterator bounds
    for the specified gossip menu ID. This typically contains a pair of iterators
    pointing to the beginning and end of the range of entries associated with the
    given menu ID in the internal gossip menus map.
  examples:
  - title: Iterating through gossip menu options
    code: "ObjectMgr* objMgr = ObjectMgr::Instance();\nGossipMenusMapBoundsNonConst\
      \ bounds = objMgr->GetGossipMenusMapBoundsNonConst(12345);\nfor (auto it = bounds.first;\
      \ it != bounds.second; ++it)\n{\n    // Process each gossip menu entry\n   \
      \ GossipMenuEntry* entry = &(*it);\n    // Do something with the entry\n}"
    language: cpp
  notes: This method provides access to internal data structures and should be used
    carefully. The returned bounds are valid only as long as the underlying map structure
    remains unchanged. Modifications to the gossip menus map during iteration may
    invalidate iterators. This is a utility method for internal use in the gossip
    system implementation.
  warnings: Using non-const iterators can lead to undefined behavior if the underlying
    container is modified during iteration. Ensure thread safety when accessing this
    data structure concurrently. The method assumes the menu ID exists and does not
    perform bounds checking.
  related:
  - GetGossipMenusMapBounds
  - GetGossipMenu
  - AddGossipMenu
  - RemoveGossipMenu
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:35:10.209479'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
