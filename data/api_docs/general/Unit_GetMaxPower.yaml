api:
  class: Unit
  method: GetMaxPower
  signature: int32 Unit::GetMaxPower(int power) const
documentation:
  brief: Returns the maximum power value for a specified power type.
  description: This method retrieves the maximum power value for a given power type,
    which is essential for calculating power percentages and determining the upper
    limit of power resources. The method is commonly used in gameplay mechanics to
    determine how much mana, rage, focus, or other power types a unit can have at
    any given time. It is particularly useful for calculating power ratios and ensuring
    proper resource management during combat.
  parameters: []
  returns: Returns the maximum power value as an int32, representing the upper limit
    of the specified power type. This value is typically used to calculate power percentages
    and determine resource limits.
  examples:
  - title: Basic Usage Example
    code: int32 maxPower = unit->GetMaxPower(Powers::POWER_MANA);
    language: cpp
  - title: Advanced Usage Example
    code: 'Unit* target = GetPlayer();

      int32 maxMana = target->GetMaxPower(Powers::POWER_MANA);

      int32 currentMana = target->GetPower(Powers::POWER_MANA);

      float manaPercentage = (float)currentMana / (float)maxMana * 100.0f;'
    language: cpp
  notes: This method is part of the Unit class and should be used in conjunction with
    GetPower() to properly manage power resources. The method does not modify any
    internal state but simply retrieves the maximum value for a given power type.
  warnings: Be aware that this method returns 0 if the specified power type is invalid
    or not supported, which may lead to incorrect calculations if not handled properly.
    Always validate power types before calling this method.
  related:
  - GetPower
  - GetMaxHealth
  - GetMaxMana
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:00:40.243761'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
