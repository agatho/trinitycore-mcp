api:
  class: AuraEffect
  method: HandleOverridePetSpecs
  signature: void AuraEffect::HandleOverridePetSpecs(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes an override effect on pet specializations for a given
    aura application.
  description: The HandleOverridePetSpecs method manages the application and removal
    of effects that override pet specializations within the TrinityCore framework.
    This method is typically invoked during aura application or removal to modify
    how a pet's specialization is handled, potentially changing its behavior or abilities.
    It interacts with the AuraApplication object to determine the context of the effect
    and uses a mode parameter to specify whether to apply or remove the override.
    The implementation likely modifies internal pet state or sends updates to the
    client to reflect the changed specialization settings.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's target, duration,
      and other application-specific data.
  - name: mode
    description: Specifies the operation mode for handling the pet specialization
      override. Valid values are typically 0 for removal and 1 for application, though
      exact values depend on internal TrinityCore implementation.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the specialization override effect from the pet.
  returns: null
  examples:
  - title: Applying a Pet Specialization Override
    code: "AuraEffect* effect = aura->GetEffect(0);\nif (effect)\n{\n    effect->HandleOverridePetSpecs(auraApp,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing a Pet Specialization Override
    code: "AuraEffect* effect = aura->GetEffect(0);\nif (effect)\n{\n    effect->HandleOverridePetSpecs(auraApp,\
      \ 0, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system and should only be called
    during appropriate aura application/removal phases. It may interact with pet state
    management systems and client synchronization logic. The mode parameter's exact
    values are implementation-dependent and should be verified against TrinityCore
    source code.
  warnings: Improper use of this method can lead to incorrect pet behavior or client
    desynchronization. Ensure that the aura application context is valid before calling,
    and verify that the mode parameter corresponds to expected internal values.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetTarget
  - Aura::GetEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:12:43.531922'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
