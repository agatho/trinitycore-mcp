api:
  class: GameObject
  method: UseDoorOrButton
  signature: void GameObject::UseDoorOrButton(uint32 time_to_restore, bool alternative,
    Unit * user)
documentation:
  brief: Activates a game object's door or button mechanism with specified cooldown
    time.
  description: This method triggers the activation of a GameObject's door or button
    functionality, allowing players to interact with the object. It handles the cooldown
    period for the object's use, ensuring that the object cannot be used again within
    a specified time frame. The method also supports alternative activation methods
    and can optionally specify a user unit to perform the action. This is commonly
    used in quest-related events where objects need to be activated to progress quests
    or unlock areas.
  parameters:
  - name: time_to_restore
    description: The cooldown time in milliseconds that the object will remain inactive
      after activation. This determines how long the object cannot be used again.
  - name: alternative
    description: Boolean flag indicating whether alternative activation method should
      be used, typically for special cases like quest completion or specific game
      mechanics.
  - name: user
    description: Pointer to the Unit that is performing the action. This can be a
      player or NPC, and determines which entity activates the object.
  returns: null
  examples:
  - title: Basic usage example
    code: 'GameObject* go = new GameObject();


      // Activate door with 5 second cooldown

      go->UseDoorOrButton(5000, false, player);


      // Activate button with alternative method

      go->UseDoorOrButton(3000, true, nullptr);'
    language: cpp
  - title: Advanced usage example
    code: "// In a quest completion scenario\nGameObject* go = ObjectAccessor::GetGameObject(player,\
      \ guid);\nif (go)\n{\n    go->UseDoorOrButton(10000, true, player);\n    //\
      \ This triggers the door or button activation\n    // and sets cooldown for\
      \ 10 seconds\n}\n// The player can now proceed with quest completion"
    language: cpp
  notes: This method is typically used in conjunction with GameObject's activation
    logic, where it may be called from a quest handler or event system. It handles
    the object's state change and ensures proper cooldown management. The method does
    not directly handle the actual door movement or animation; that is usually handled
    by other systems.
  warnings: This method should only be called when the GameObject is in an active
    state, otherwise it may cause undefined behavior or errors. Also, if the user
    parameter is nullptr, it will default to using the last user who interacted with
    the object, which can lead to unexpected results if not properly managed.
  related:
  - GameObject::Use
  - GameObject::SetGoState
  - GameObject::GetGOInfo
  - GameObject::IsInUse
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:18:23.981910'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
