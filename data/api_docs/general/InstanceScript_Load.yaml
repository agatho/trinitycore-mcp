api:
  class: InstanceScript
  method: Load
  signature: void InstanceScript::Load(const char * data)
documentation:
  brief: Loads instance data from a string for initialization and state restoration.
  description: The Load method is used to initialize or restore the state of an instance
    script using serialized data provided as a string. This method is typically called
    during instance creation or loading from the database, allowing the script to
    reconstruct its internal state based on previously saved information. It enables
    persistent storage of dynamic instance data such as boss encounter states, object
    positions, or quest progress. The method does not return any value but modifies
    the internal state of the InstanceScript object based on the input data string.
  parameters:
  - name: data
    description: A null-terminated character string containing serialized instance
      data. This string typically contains key-value pairs or structured data that
      represents the current state of the instance, such as boss kill status, object
      positions, or quest progress. The format and content are defined by the specific
      implementation of the InstanceScript subclass.
  returns: null
  examples:
  - title: Basic Load Usage
    code: "class MyInstanceScript : public InstanceScript\n{\npublic:\n    void Load(const\
      \ char* data) override\n    {\n        if (!data)\n            return;\n   \
      \     \n        // Parse the data string and restore instance state\n      \
      \  // Example: sscanf(data, \"boss1:%d boss2:%d\", &boss1Killed, &boss2Killed);\n\
      \        // Implementation depends on specific instance data format\n    }\n\
      };"
    language: cpp
  notes: This method is invoked automatically by the TrinityCore framework during
    instance initialization. Developers should ensure that their implementation can
    handle malformed or missing data gracefully, as the input string may be empty
    or contain unexpected values. The Load method is typically called before any other
    methods in the script lifecycle.
  warnings: Do not assume the data parameter will always contain valid information.
    Always validate and sanitize input data to prevent crashes or undefined behavior.
    If this method is overridden, ensure that all base class state restoration logic
    is preserved by calling the parent implementation when necessary.
  related:
  - Save
  - GetInstanceData
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T00:12:05.774223'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
