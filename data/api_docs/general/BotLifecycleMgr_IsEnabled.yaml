api:
  class: BotLifecycleMgr
  method: IsEnabled
  signature: bool BotLifecycleMgr::IsEnabled() const
documentation:
  brief: Checks whether the bot lifecycle management system is currently enabled in
    the TrinityCore server.
  description: The IsEnabled method determines if the bot lifecycle management functionality
    is active within the TrinityCore instance. This feature controls whether automated
    bot behavior, including creation, destruction, and state transitions, is allowed
    to occur. The method typically checks internal configuration flags or runtime
    states that govern bot system activation. It's commonly used by other subsystems
    to verify that bot operations are permitted before attempting to interact with
    bot entities.
  parameters: []
  returns: Returns true if the bot lifecycle management system is enabled and operational;
    returns false otherwise. A false return value typically indicates that bot-related
    functionality has been disabled via configuration or runtime conditions.
  examples:
  - title: Basic Usage Check
    code: "if (BotLifecycleMgr::instance()->IsEnabled()) {\n    // Proceed with bot\
      \ lifecycle operations\n    BotManager::CreateNewBot(playerGuid);\n} else {\n\
      \    // Bot system is disabled, skip bot operations\n    sLog->outString(\"\
      Bot system is currently disabled.\");\n}"
    language: cpp
  notes: This method likely performs a simple boolean check against an internal flag
    or configuration value. It's expected to be lightweight and thread-safe since
    it's frequently called by various subsystems during runtime.
  warnings: null
  related:
  - BotLifecycleMgr::SetEnabled
  - BotLifecycleMgr::IsDisabled
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:10:44.785605'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
