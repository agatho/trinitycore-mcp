api:
  class: BotWorldSessionMgr
  method: GetBotCount
  signature: uint32 BotWorldSessionMgr::GetBotCount() const
documentation:
  brief: Retrieves the total count of active bot sessions managed by the world session
    manager.
  description: The GetBotCount method returns the number of bot sessions currently
    active within the TrinityCore server environment. This count includes all player-controlled
    bots that are connected and registered with the world session manager. The method
    provides a quick way to monitor or debug the number of bots in use, which is particularly
    relevant for servers implementing automated gameplay features or bot-based testing
    environments. The returned value represents a snapshot of active sessions at the
    time of the call and may change dynamically as bots connect or disconnect from
    the server.
  parameters: []
  returns: A uint32 value representing the total number of active bot sessions managed
    by this BotWorldSessionMgr instance. Returns zero if no bots are currently connected
    or registered.
  examples:
  - title: Basic Usage to Monitor Active Bots
    code: 'uint32 botCount = sBotWorldSessionMgr->GetBotCount();

      TC_LOG_INFO("bot", "Currently active bot count: %u", botCount);'
    language: cpp
  - title: Using Bot Count for Server Load Management
    code: "uint32 currentBots = sBotWorldSessionMgr->GetBotCount();\nif (currentBots\
      \ > MAX_ALLOWED_BOTS) {\n    TC_LOG_WARN(\"bot\", \"Exceeded maximum bot limit\
      \ of %u bots.\", MAX_ALLOWED_BOTS);\n    // Implement throttling or shutdown\
      \ logic\n}"
    language: cpp
  notes: This method is typically used for monitoring and administrative purposes.
    The count returned reflects only those bots that have successfully completed the
    login process and are registered with the session manager. It does not include
    bots in transitional states such as connecting or authenticating. The implementation
    likely uses thread-safe operations to ensure accurate counts even when multiple
    threads access the session manager concurrently.
  warnings: While this method provides a snapshot of active bot sessions, it should
    not be used for real-time decision making in performance-critical code paths due
    to potential synchronization overhead. Frequent calls may impact server performance
    on high-traffic servers with many bots.
  related:
  - GetBotSession
  - AddBotSession
  - RemoveBotSession
  - GetAllBotSessions
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T16:37:41.970920'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
