api:
  class: Object
  method: GetEntry
  signature: uint32 Object::GetEntry() const
documentation:
  brief: Returns the entry identifier of the object, which uniquely identifies the
    type of object in the game world.
  description: The GetEntry method retrieves the unique identifier (entry) associated
    with an Object instance, representing the type of object in the game world. This
    entry value is typically used to identify specific creature types, game object
    types, or item types within the TrinityCore database. For creatures, this corresponds
    to the entry value from the creature_template table; for game objects, it corresponds
    to the entry value from the gameobject_template table. The method is commonly
    used in game logic to determine object behavior, properties, and interactions
    based on their type. This identifier is essential for various game mechanics including
    spawning, loot generation, and quest handling.
  parameters: []
  returns: Returns a uint32 value representing the unique entry identifier of the
    object. This value typically corresponds to the database entry field from creature_template
    or gameobject_template tables, and can be used to identify specific object types
    within the game world.
  examples:
  - title: Basic usage example
    code: "uint32 entry = obj->GetEntry();\nif (entry == 12345) {\n    // Handle special\
      \ creature type\n}"
    language: cpp
  - title: Advanced usage with conditional logic
    code: "Object* obj = GetObjectByTypeMask(TYPEMASK_PLAYER);\nuint32 entry = obj->GetEntry();\n\
      switch(entry) {\n    case 12345:\n        // Handle specific creature\n    \
      \    break;\n    case 54321:\n        // Handle different creature\n       \
      \ break;\n}\n"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. The
    returned value is typically cached in memory for performance reasons, though it
    may require database lookup in some cases. It's important to note that this entry
    value does not represent the GUID of the object, but rather its type identifier.
  warnings: This method should not be used for determining object GUIDs, as it returns
    the entry identifier instead. Be careful when using this value in conditional
    logic, as it may not always correspond to a valid database entry if the object
    is not properly initialized.
  related:
  - GetGUID
  - GetObjectByTypeMask
  - GetTypeId
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:01:08.072986'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
