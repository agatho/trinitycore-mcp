api:
  class: Aura
  method: IsProcOnCooldown
  signature: bool Aura::IsProcOnCooldown(int now) const
documentation:
  brief: Checks if the aura's proc is currently on cooldown.
  description: The IsProcOnCooldown method determines whether a specific aura's proc
    effect is currently in a cooldown state. This is commonly used for abilities that
    have limited usage per time period, such as spells or effects that trigger on
    damage dealt or received. The method evaluates the current game time against the
    last proc timestamp and the cooldown duration to decide if the proc can be triggered
    again. It returns true if the proc is on cooldown, false otherwise.
  parameters: []
  returns: Returns true if the aura's proc effect is currently on cooldown, false
    if it is available to trigger.
  examples:
  - title: Basic Usage in Spell Logic
    code: "if (!aura->IsProcOnCooldown(World::GetGameTimeMS())) {\n    // Apply proc\
      \ effect\n    aura->ApplyProcEffect();\n    aura->SetProcCooldown(World::GetGameTimeMS());\n\
      }"
    language: cpp
  - title: Checking Cooldown Before Proc Trigger
    code: "Aura* aura = player->GetAura(12345);\nif (aura && !aura->IsProcOnCooldown(World::GetGameTimeMS()))\
      \ {\n    // Proc can be applied\n    DoProcEffect(player);\n}"
    language: cpp
  notes: This method relies on internal cooldown tracking within the aura object.
    It assumes that the aura has a valid proc cooldown mechanism implemented, and
    that the 'now' parameter is properly converted to the same time base used internally
    (typically milliseconds since game start).
  warnings: Ensure that the aura object is not null before calling this method. Also,
    be aware that this method does not update the internal state of the aura; it only
    checks if a proc is on cooldown at the given time.
  related:
  - SetProcCooldown
  - GetProcCooldown
  - ApplyProcEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:11:20.077704'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
