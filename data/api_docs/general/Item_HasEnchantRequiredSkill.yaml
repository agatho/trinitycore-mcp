api:
  class: Item
  method: HasEnchantRequiredSkill
  signature: bool Item::HasEnchantRequiredSkill(const Player * player) const
documentation:
  brief: Determines whether an item's enchantment requires a specific skill level
    from the player.
  description: This method checks if the enchantment associated with an item requires
    a particular skill level to be applied. It evaluates the player's current skill
    level against the required skill level for the enchantment, returning true if
    the player has sufficient skill, false otherwise. This functionality is crucial
    for determining whether items can be enchanted by players based on their skill
    requirements.
  parameters: []
  returns: Returns true if the player's skill level meets or exceeds the required
    skill level for the enchantment; otherwise returns false.
  examples:
  - title: Basic usage example
    code: "Item* item = player->GetItemByPos(0, 1);\nif (item && item->HasEnchantRequiredSkill(player))\
      \ {\n    // Player can apply the enchantment\n    // Do something here\n}\n\
      else {\n    // Player cannot apply the enchantment\n    // Do something here\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with other enchantment-related
    methods to determine whether a player can apply an enchantment to an item. The
    method relies on the item's enchantment data and the player's skill level, making
    it important for game balance and player progression.
  warnings: This method should be used carefully as it may not account for all possible
    skill requirements in some cases, particularly when dealing with complex enchantments
    or special skills that might require additional conditions beyond standard skill
    levels.
  related:
  - Item::GetEnchantmentSlot
  - Item::HasEnchantRequiredSkill
  - Player::HasSkill
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:47:33.396706'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
