api:
  class: Unit
  method: GetCreatorGUID
  signature: int Unit::GetCreatorGUID() const
documentation:
  brief: Returns the GUID of the unit's creator, typically used for tracking ownership
    of summoned creatures or pets.
  description: The GetCreatorGUID method retrieves the unique identifier (GUID) of
    the entity that created or summoned the current unit. This is commonly used in
    World of Warcraft to track ownership of summoned creatures or pets, particularly
    when dealing with player-controlled summons. The method returns an integer representing
    the GUID of the creator, which can be a player, pet, or other unit depending on
    how the unit was created. This information is crucial for determining control
    over summoned units and understanding game mechanics related to summoning and
    ownership.
  parameters: []
  returns: Returns an integer representing the GUID of the unit's creator. The value
    will be 0 if no creator exists or if the unit was not summoned by another entity.
    This GUID can represent a player, pet, or other unit depending on how the unit
    was created.
  examples:
  - title: Basic usage example
    code: "Unit* unit = new Unit();\nint creatorGUID = unit->GetCreatorGUID();\nif\
      \ (creatorGUID != 0)\n{\n    // Unit has a creator\n    std::cout << \"Creator\
      \ GUID: \" << creatorGUID << std::endl;\n}"
    language: cpp
  notes: 'Implementation details: This method typically relies on internal data structures
    that store the creator''s GUID. Performance considerations: The method itself
    is lightweight, but accessing the GUID may involve additional memory operations
    depending on how the unit was created. Thread safety: This method should be safe
    to use in multi-threaded environments as long as the underlying data structures
    are properly protected.'
  warnings: 'The method may return 0 if no creator exists or if the unit was not summoned
    by another entity. Care should be taken when interpreting this value, as it might
    indicate either no creator or a null creator rather than an actual GUID of 0.
    Common mistake: Using the returned GUID without checking if it''s valid can lead
    to invalid memory access or incorrect behavior in game mechanics.'
  related:
  - GetOwnerGUID
  - GetSummonedGUID
  - GetControlledGUID
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:19:48.797864'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
