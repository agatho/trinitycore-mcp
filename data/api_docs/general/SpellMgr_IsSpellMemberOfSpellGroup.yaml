api:
  class: SpellMgr
  method: IsSpellMemberOfSpellGroup
  signature: bool SpellMgr::IsSpellMemberOfSpellGroup(uint32 spellid, SpellGroup groupid)
    const
documentation:
  brief: Checks if a spell is a member of a specified spell group.
  description: The IsSpellMemberOfSpellGroup method determines whether a given spell
    ID belongs to a specific spell group. This functionality is used in TrinityCore's
    spell system to manage spell interactions, such as spell stacking, proc mechanics,
    and spell restrictions. Spell groups are logical collections of spells that share
    common properties or behaviors. The method performs a lookup in the internal spell
    group database to verify membership. It is commonly used during spell processing
    to apply group-based rules or effects.
  parameters:
  - name: spellid
    description: The unique identifier of the spell to check for membership in the
      specified spell group. Must correspond to a valid spell entry in the database.
  - name: groupid
    description: The spell group identifier to test against. This represents a predefined
      group of spells that share certain properties or behaviors within the game mechanics.
  returns: Returns true if the specified spell is a member of the given spell group;
    otherwise, returns false. If either the spell ID or group ID does not exist in
    the database, the method will return false.
  examples:
  - title: Basic Usage
    code: "if (sSpellMgr->IsSpellMemberOfSpellGroup(12345, SPELL_GROUP_DEVOUR_MAGIC))\
      \ {\n    // Spell 12345 is part of the Devour Magic spell group\n    // Apply\
      \ special handling for this group\n}"
    language: cpp
  - title: Checking Multiple Spells
    code: "uint32 spellIds[] = { 12345, 12346, 12347 };\nSpellGroup groupId = SPELL_GROUP_SHADOW_SPELLS;\n\
      for (uint32 id : spellIds) {\n    if (sSpellMgr->IsSpellMemberOfSpellGroup(id,\
      \ groupId)) {\n        // Handle shadow spell logic\n    }\n}"
    language: cpp
  notes: This method relies on internal spell group data structures that are populated
    at server startup from the spell database. The spell group IDs should be defined
    in the SpellGroup enum or similar structure within the TrinityCore codebase. Performance
    is generally good as it uses hash-based lookups, but repeated calls with many
    different spell IDs may impact performance if not cached appropriately.
  warnings: Ensure that both spellid and groupid are valid identifiers before calling
    this method. Invalid spell or group IDs will result in false returns without any
    error reporting. This method should not be used for runtime spell creation or
    modification as it only checks pre-defined spell group associations.
  related:
  - GetSpellGroupBySpell
  - IsSpellInSpellGroup
  - GetSpellGroupStackType
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:08:37.010646'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
