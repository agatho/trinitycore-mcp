api:
  class: Unit
  method: GetMaxPositiveAuraModifierByMiscMask
  signature: int32 Unit::GetMaxPositiveAuraModifierByMiscMask(int auraType, uint32
    misc_mask, const AuraEffect * except) const
documentation:
  brief: Returns the maximum positive aura modifier value for a given aura type and
    misc mask, excluding specified effect.
  description: This method retrieves the highest positive modifier value from all
    active auras of a specific type that match a given miscellaneous mask. It is commonly
    used in game mechanics to determine bonuses or effects from various buffs, such
    as stat increases, damage boosts, or healing modifiers. The method allows filtering
    by aura type and misc mask while optionally excluding a specific aura effect.
    This functionality is essential for calculating total bonuses in combat calculations
    and other gameplay systems where multiple sources of modifiers need to be considered.
  parameters:
  - name: auraType
    description: The type of aura to search for (e.g., SPELL_AURA_MOD_STAT, SPELL_AURA_MOD_DAMAGE_DONE).
      This parameter defines which category of aura effects are considered.
  - name: misc_mask
    description: The miscellaneous mask that determines which specific aura effects
      are included in the search. This mask is used to filter auras based on their
      specific properties or categories.
  - name: except
    description: Optional pointer to an AuraEffect that should be excluded from the
      calculation. This allows for filtering out specific effects when determining
      maximum modifiers.
  returns: Returns the maximum positive modifier value found among all matching auras,
    or 0 if no such aura exists. The value represents the highest positive modifier
    from all applicable auras of the specified type and mask.
  examples:
  - title: Basic usage example
    code: int32 maxModifier = unit->GetMaxPositiveAuraModifierByMiscMask(SPELL_AURA_MOD_STAT,
      0x00000001);
    language: cpp
  - title: Advanced usage with exclusion
    code: int32 maxModifier = unit->GetMaxPositiveAuraModifierByMiscMask(SPELL_AURA_MOD_DAMAGE_DONE,
      0x00000004, auraEffect);
    language: cpp
  notes: This method is typically used in performance-critical calculations such as
    combat damage or stat computations. It requires iterating through all active auras
    and checking their types and masks, which can impact performance if many auras
    are present.
  warnings: Care must be taken when using this method with multiple aura effects,
    as it may return zero if no matching positive modifiers exist. Also, incorrect
    usage of the misc_mask parameter could lead to unexpected results in calculations.
  related:
  - GetMaxNegativeAuraModifierByMiscMask
  - GetAuraCountByType
  - GetAuraEffect
  - GetMaxPositiveAuraModifier
  - GetMaxNegativeAuraModifier
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:01:33.432521'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
