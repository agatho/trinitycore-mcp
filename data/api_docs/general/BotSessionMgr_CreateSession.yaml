api:
  class: BotSessionMgr
  method: CreateSession
  signature: BotSession * BotSessionMgr::CreateSession(uint32 bnetAccountId, int characterGuid)
documentation:
  brief: Creates a new bot session associated with a Battle.net account and character
    GUID.
  description: The CreateSession method initializes and returns a new BotSession instance
    for managing bot behavior within the TrinityCore framework. It associates the
    session with a specific Battle.net account ID and character GUID, enabling the
    bot to interact with the game world using the specified player identity. This
    method is typically invoked when a new bot connection needs to be established
    or when a bot is assigned to control a particular character. The returned session
    object can then be used to manage the bot's actions, movement, and interactions
    within the game environment.
  parameters:
  - name: bnetAccountId
    description: The unique Battle.net account identifier that owns the bot session.
      This value is used to track and associate the bot with a specific user account
      in the system.
  - name: characterGuid
    description: The GUID of the character that this bot session will control. A negative
      value typically indicates an invalid or unassigned character, while positive
      values represent valid character identifiers.
  returns: A pointer to the newly created BotSession object if successful, or nullptr
    if the session creation fails due to invalid parameters or system limitations.
  examples:
  - title: Basic bot session creation
    code: "BotSession* session = sBotSessionMgr->CreateSession(123456789, 987654321);\n\
      if (session)\n{\n    // Successfully created a new bot session\n    session->Start();\n\
      }"
    language: cpp
  - title: Handling failed session creation
    code: "BotSession* session = sBotSessionMgr->CreateSession(0, -1);\nif (!session)\n\
      {\n    // Handle error case where session creation failed\n    TC_LOG_ERROR(\"\
      bot\", \"Failed to create bot session for account %u and character %i\", 0,\
      \ -1);\n}"
    language: cpp
  notes: This method may perform internal validation of the provided GUIDs and may
    return nullptr if the inputs are invalid or if system resources are insufficient.
    The created session must be properly managed and eventually destroyed to prevent
    memory leaks.
  warnings: Calling this method with invalid parameters (e.g., zero account ID or
    negative character GUID) will likely result in a null return value. Always check
    for null before using the returned session pointer.
  related:
  - GetSession
  - RemoveSession
  - DestroySession
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T01:37:48.747959'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
