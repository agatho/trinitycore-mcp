api:
  class: Aura
  method: ~Aura
  signature: void Aura::~Aura()
documentation:
  brief: Destroys an Aura object and releases all associated resources.
  description: The Aura destructor is responsible for cleaning up memory and resources
    allocated to an aura instance. It ensures that all references to the aura are
    properly removed, preventing memory leaks and potential crashes. This method is
    automatically called when an aura object goes out of scope or is explicitly deleted.
    The destructor handles cleanup of internal data structures, removes the aura from
    affected objects, and performs necessary cleanup operations for game mechanics
    such as stat modifications and visual effects.
  parameters: []
  returns: null
  examples:
  - title: Basic Aura Destruction
    code: 'Aura* aura = new Aura();

      // ... perform some operations

      delete aura;

      // aura destructor is called automatically'
    language: cpp
  notes: The destructor performs cleanup of internal data structures and removes the
    aura from affected objects. It's important to note that this method should not
    be called directly in most cases, as it's invoked automatically during object
    destruction.
  warnings: This method should not be called directly by developers unless explicitly
    required. The destructor handles cleanup automatically when an aura object is
    deleted or goes out of scope.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:59:57.372160'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
