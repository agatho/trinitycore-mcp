api:
  class: ScenarioMgr
  method: CreateInstanceScenario
  signature: InstanceScenario * ScenarioMgr::CreateInstanceScenario(InstanceMap *
    map, uint32 scenarioID) const
documentation:
  brief: Creates and returns a new InstanceScenario object for the specified map and
    scenario ID.
  description: The CreateInstanceScenario method is responsible for initializing and
    returning a new InstanceScenario instance that encapsulates the scenario data
    for a specific map. This method is typically invoked during the creation or loading
    of scenario-based content within the game world. It takes an InstanceMap pointer
    and a scenario identifier as inputs, validates them, and constructs an appropriate
    InstanceScenario object. The returned object can then be used to manage scenario-specific
    behaviors, progress tracking, and reward distribution for players participating
    in that scenario.
  parameters:
  - name: map
    description: Pointer to the InstanceMap for which the scenario is being created.
      Must not be null and must represent a valid instance map.
  - name: scenarioID
    description: Unique identifier for the scenario type to be instantiated. This
      ID corresponds to entries in the scenario database tables and determines the
      specific scenario behavior and content.
  returns: Pointer to the newly created InstanceScenario object if successful, or
    nullptr if the creation fails due to invalid parameters or internal errors.
  examples:
  - title: Basic Usage
    code: "InstanceMap* myMap = ...; // some valid instance map\nuint32 scenarioId\
      \ = 1234;\nInstanceScenario* scenario = sScenarioMgr->CreateInstanceScenario(myMap,\
      \ scenarioId);\nif (scenario)\n{\n    // Use the scenario object\n}"
    language: cpp
  - title: Error Handling
    code: "InstanceMap* map = player->GetMap();\nuint32 scenarioId = GetScenarioIdFromQuest(player);\n\
      InstanceScenario* scenario = sScenarioMgr->CreateInstanceScenario(map, scenarioId);\n\
      if (!scenario)\n{\n    TC_LOG_ERROR(\"scenario\", \"Failed to create scenario\
      \ %u for map %u\", scenarioId, map->GetId());\n    return false;\n}\n// Proceed\
      \ with scenario logic\nreturn true;"
    language: cpp
  notes: This method is part of the scenario management system in TrinityCore and
    should only be called during appropriate initialization or loading phases. The
    InstanceScenario object returned should be managed carefully to prevent memory
    leaks, as it's typically owned by the ScenarioMgr or related systems.
  warnings: Do not call this method with a null map pointer or an invalid scenarioID;
    doing so may result in undefined behavior or crashes. Ensure that the map is already
    initialized and valid before calling this function.
  related:
  - GetInstanceScenario
  - GetScenarioForMap
  - DestroyInstanceScenario
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:42:50.414758'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
