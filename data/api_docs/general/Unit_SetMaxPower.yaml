api:
  class: Unit
  method: SetMaxPower
  signature: void Unit::SetMaxPower(int power, int32 val)
documentation:
  brief: Sets the maximum power value for a Unit.
  description: 'This method allows developers to set the maximum power value for a
    Unit, which determines the upper limit of power resources such as mana, rage,
    energy, or focus. The method accepts two parameters: the first specifies the power
    type (e.g., mana, rage), and the second specifies the actual value to set. This
    functionality is commonly used in custom scripts or game mechanics to modify a
    unit''s power capacity, particularly for NPCs or players during dynamic events
    or special encounters.'
  parameters:
  - name: power
    description: The power type to set (e.g., mana, rage, energy). Valid values include
      0-4 for different power types.
  - name: val
    description: The maximum value to set for the specified power type. This value
      is typically a positive integer representing the new upper limit of the power
      resource.
  returns: null
  examples:
  - title: Setting Maximum Mana for Player
    code: 'Unit* player = GetPlayer();

      player->SetMaxPower(0, 1000);

      // Sets maximum mana to 1000'
    language: cpp
  - title: Setting Maximum Rage for NPC
    code: 'Unit* npc = GetNPC();

      npc->SetMaxPower(1, 500);

      // Sets maximum rage to 500'
    language: cpp
  notes: This method should be used carefully as it directly affects the unit's power
    resource management. The implementation typically involves updating internal data
    structures and may require synchronization in multi-threaded environments. It
    is recommended to use this method during initialization or when modifying game
    state rather than during active gameplay.
  warnings: Improper use of this method can cause unexpected behavior in power calculations,
    especially if the value is set below current power levels. Care should be taken
    to ensure that the new maximum power is consistent with the unit's current power
    and that it does not interfere with existing game mechanics or events.
  related:
  - SetPower
  - GetMaxPower
  - GetPower
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:05:06.876557'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
