api:
  class: LfgPlayerData
  method: SetSelectedDungeons
  signature: void LfgPlayerData::SetSelectedDungeons(const LfgDungeonSet & dungeons)
documentation:
  brief: Sets the collection of selected dungeons for a player in the LFG system
  description: This method updates the set of dungeons that a player has selected
    for use in the Looking for Group (LFG) system. It replaces any previously selected
    dungeons with the provided set, which typically represents the player's current
    dungeon selection for queueing or group matching. The method is used internally
    by the LFG framework to maintain player dungeon preferences and ensure consistency
    across the system. This operation directly affects the player's LFG state and
    may trigger updates to their group matching eligibility.
  parameters:
  - name: dungeons
    description: A constant reference to a set of LfgDungeon objects representing
      the dungeons selected by the player. Each dungeon in the set should be a valid
      LFG dungeon entry with proper ID and type information.
  returns: null
  examples:
  - title: Setting Player's Selected Dungeons
    code: 'LfgDungeonSet dungeons;

      dungeons.insert(LfgDungeon(123, LFG_TYPE_DUNGEON));

      dungeons.insert(LfgDungeon(456, LFG_TYPE_DUNGEON));

      playerData->SetSelectedDungeons(dungeons);'
    language: cpp
  notes: This method performs a direct replacement of the existing dungeon selection.
    It is typically called when a player makes new dungeon selections in the LFG interface
    or when their selections are updated through other system events. The method does
    not validate that the provided dungeons are actually available for the player
    to queue for, as this validation occurs elsewhere in the LFG framework.
  warnings: null
  related:
  - GetSelectedDungeons
  - AddSelectedDungeon
  - RemoveSelectedDungeon
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T11:20:04.949766'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
