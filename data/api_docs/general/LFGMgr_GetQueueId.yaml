api:
  class: LFGMgr
  method: GetQueueId
  signature: uint8 LFGMgr::GetQueueId(int guid)
documentation:
  brief: Retrieves the queue identifier associated with a given player GUID in the
    LFG system
  description: The GetQueueId method retrieves the queue identifier (uint8) for a
    specific player identified by their global unique identifier (int). This function
    is used within TrinityCore's Looking for Group (LFG) subsystem to determine which
    queue a particular player belongs to. The method likely performs a lookup in an
    internal data structure that maps player GUIDs to their current LFG queue positions.
    It is typically called when managing group formations, queue status updates, or
    player movement between different LFG queues such as dungeons, raids, or battlegrounds.
  parameters:
  - name: guid
    description: The global unique identifier (int) of the player whose queue ID is
      being retrieved. This value should correspond to a valid player in the game
      world.
  returns: Returns a uint8 representing the queue identifier for the specified player
    GUID. A return value of 0 typically indicates that the player is not currently
    in any LFG queue, or an error occurred during lookup. Valid queue IDs usually
    correspond to specific dungeon types, raid instances, or other group content types
    defined within the LFG system.
  examples:
  - title: Basic Usage Example
    code: "int playerGuid = 12345;\nuint8 queueId = sLFGMgr->GetQueueId(playerGuid);\n\
      if (queueId != 0) {\n    printf(\"Player is in queue %u\\n\", queueId);\n} else\
      \ {\n    printf(\"Player not in any LFG queue\\n\");\n}"
    language: cpp
  - title: Integration with Group Management
    code: "void HandlePlayerLeaveLFG(int playerGuid) {\n    uint8 currentQueue = sLFGMgr->GetQueueId(playerGuid);\n\
      \    if (currentQueue != 0) {\n        // Remove player from queue\n       \
      \ sLFGMgr->RemovePlayerFromQueue(playerGuid);\n        // Notify other group\
      \ members\n        SendLFGUpdateToGroup(currentQueue);\n    }\n}"
    language: cpp
  notes: This method is part of the LFG subsystem and assumes that player GUIDs are
    valid and exist in the game world. The internal implementation likely uses a hash
    map or similar data structure for efficient lookups. Performance is expected to
    be O(1) on average, but may vary depending on the underlying container implementation.
  warnings: Ensure that the provided GUID corresponds to an active player session;
    otherwise, behavior is undefined. Calling this method with invalid or non-existent
    GUIDs may result in incorrect queue ID returns or potential crashes if not properly
    validated.
  related:
  - GetPlayerQueue
  - AddPlayerToQueue
  - RemovePlayerFromQueue
  - GetLFGQueueId
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T11:47:16.816725'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
