api:
  class: LfgGroupData
  method: GetDungeon
  signature: uint32 LfgGroupData::GetDungeon(bool asId) const
documentation:
  brief: Retrieves the dungeon ID associated with the LFG group.
  description: The GetDungeon method returns the dungeon identifier for the LFG (Looking
    For Group) group. This dungeon ID corresponds to a specific dungeon or instance
    that the group is assigned to. The method accepts an optional boolean parameter
    'asId' which determines whether to return the raw dungeon ID or a processed value.
    When asId is true, it returns the dungeon's unique identifier directly; otherwise,
    it may return a modified version of the ID based on internal logic. This method
    is commonly used in World of Warcraft's LFG system to track and manage group dungeon
    assignments.
  parameters:
  - name: asId
    description: If true, returns the raw dungeon identifier. If false, may return
      a processed or modified version of the ID based on internal logic.
  returns: Returns a uint32 value representing the dungeon identifier. This corresponds
    to the unique ID of the dungeon or instance assigned to the LFG group.
  examples:
  - title: Basic Usage
    code: 'uint32 dungeonId = lfgGroupData.GetDungeon(true);

      // Returns the raw dungeon ID for the group'
    language: cpp
  - title: Checking Assigned Dungeon
    code: "LfgGroupData* groupData = GetLfgGroupData(groupId);\nif (groupData)\n{\n\
      \    uint32 dungeonId = groupData->GetDungeon(false);\n    if (dungeonId > 0)\n\
      \    {\n        // Group is assigned to a dungeon\n        sLog->outString(\"\
      Group %u is assigned to dungeon ID: %u\", groupId, dungeonId);\n    }\n}"
    language: cpp
  notes: This method is part of the LFG system in TrinityCore and relies on internal
    group state management. The returned value may be cached or derived from other
    internal data structures. It's recommended to verify that the LfgGroupData object
    is valid before calling this method.
  warnings: Calling GetDungeon on an uninitialized or invalid LfgGroupData object
    may result in undefined behavior. Always ensure proper initialization and validation
    of group data before invoking this method.
  related:
  - SetDungeon
  - GetState
  - SetState
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:31:18.588900'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
