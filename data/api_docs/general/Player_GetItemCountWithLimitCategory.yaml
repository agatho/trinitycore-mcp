api:
  class: Player
  method: GetItemCountWithLimitCategory
  signature: uint32 Player::GetItemCountWithLimitCategory(uint32 limitCategory, Item
    * skipItem) const
documentation:
  brief: Returns the total count of items in the player's inventory that match a specific
    limit category, excluding a specified item.
  description: This method retrieves the number of items in a player's inventory that
    are associated with a particular limit category. It is commonly used to determine
    how many items of a certain type (e.g., 'Gold' or 'Soulbound') exist in the player's
    inventory, excluding a specific item from consideration. The limit category refers
    to a predefined set of item restrictions that can be applied to items, such as
    those that are bound to account, or those that are restricted by a specific item
    limit. This method is particularly useful for checking item counts in inventory
    for game mechanics involving item limits, such as item restrictions or special
    item sets.
  parameters:
  - name: limitCategory
    description: The limit category identifier to check against. This corresponds
      to the ItemLimitCategory.dbc entry in the database, which defines a set of restrictions
      that apply to items.
  - name: skipItem
    description: The item to exclude from the count calculation. If this parameter
      is nullptr, no item is excluded from the count.
  returns: Returns the total count of items in the player's inventory that match the
    specified limit category, excluding the specified item.
  examples:
  - title: Count items with limit category
    code: uint32 count = player->GetItemCountWithLimitCategory(10, nullptr); // Counts
      all items with limit category 10
    language: cpp
  - title: Count items excluding specific item
    code: 'Item* skip = player->GetItemByPos(0, 1); // Get item from bag slot 1

      uint32 count = player->GetItemCountWithLimitCategory(10, skip); // Count items
      with limit category 10, excluding the specified item'
    language: cpp
  notes: This method is typically used in conjunction with item limit category checks
    to ensure that players do not exceed certain limits on items. It may be used for
    checking item counts when implementing game mechanics such as item restrictions
    or special item sets. Performance considerations include the fact that this method
    iterates through all items in the player's inventory, so it should be used judiciously.
  warnings: This method does not check for item limit category validity; if an invalid
    limit category is passed, it may return unexpected results or cause undefined
    behavior. Care should be taken when using this method with null pointers to avoid
    potential issues.
  related:
  - GetItemCount
  - GetItemByPos
  - GetItemBySlot
  - GetPlayer
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T16:55:28.601782'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
