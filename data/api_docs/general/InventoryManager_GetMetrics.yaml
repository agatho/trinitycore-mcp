api:
  class: InventoryManager
  method: GetMetrics
  signature: PerformanceMetrics InventoryManager::GetMetrics() const
documentation:
  brief: Retrieves performance metrics related to inventory management operations
  description: The GetMetrics method returns a PerformanceMetrics object containing
    detailed statistics about inventory manager operations. This includes information
    such as operation counts, average execution times, and memory usage for various
    inventory-related tasks. The returned metrics are useful for monitoring system
    performance, identifying bottlenecks, and optimizing inventory handling within
    the TrinityCore framework. The method provides read-only access to internal performance
    tracking data without modifying any state.
  parameters: []
  returns: A PerformanceMetrics object containing cumulative statistics about inventory
    manager operations including operation counts, execution times, and resource usage
    metrics
  examples:
  - title: Basic Usage Example
    code: 'InventoryManager* inventoryMgr = player->GetSession()->GetInventoryManager();

      PerformanceMetrics metrics = inventoryMgr->GetMetrics();

      std::cout << "Total operations: " << metrics.totalOperations << std::endl;'
    language: cpp
  - title: Performance Monitoring Example
    code: "void MonitorInventoryPerformance(Player* player) {\n    InventoryManager*\
      \ mgr = player->GetSession()->GetInventoryManager();\n    PerformanceMetrics\
      \ metrics = mgr->GetMetrics();\n    if (metrics.averageExecutionTime > 100.0f)\
      \ {\n        sLog->outInfo(LOG_FILTER_GENERAL, \"High inventory operation latency\
      \ detected: %f ms\", metrics.averageExecutionTime);\n    }\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. The
    returned PerformanceMetrics object is a snapshot of current statistics at the
    time of call, not a live reference. Metrics are cumulative and will continue to
    increase as inventory operations occur.
  warnings: The performance metrics may include data from operations that occurred
    before the method was called, so timing measurements should be interpreted with
    consideration for system load. The returned object should not be modified as it's
    a copy of internal state.
  related:
  - GetInventory
  - AddItem
  - RemoveItem
  - UpdateInventory
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T12:13:17.645514'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
