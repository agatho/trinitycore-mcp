api:
  class: FormationMgr
  method: GetFormationInfo
  signature: FormationInfo * FormationMgr::GetFormationInfo(int spawnId)
documentation:
  brief: Retrieves formation information for a specified spawn ID from the formation
    manager.
  description: The GetFormationInfo method retrieves a FormationInfo object associated
    with a given spawn ID. This method is used in the context of creature formations
    within TrinityCore, where creatures can be grouped together to form specific tactical
    arrangements. The method searches through internal data structures to find and
    return the formation information for the specified spawn ID. If no formation is
    found for the provided spawn ID, it returns a null pointer. This functionality
    supports dynamic formation management during gameplay, allowing for flexible creature
    group behaviors.
  parameters:
  - name: spawnId
    description: The unique identifier of the spawn instance for which to retrieve
      formation information. This ID typically corresponds to a specific creature
      or group of creatures within the game world.
  returns: A pointer to a FormationInfo object if a formation exists for the specified
    spawn ID; otherwise, returns nullptr if no matching formation is found.
  examples:
  - title: Basic Usage
    code: "FormationInfo* info = formationMgr->GetFormationInfo(12345);\nif (info\
      \ != nullptr)\n{\n    // Use the formation information\n    printf(\"Formation\
      \ type: %d\\n\", info->GetType());\n}"
    language: cpp
  - title: Safe Access with Null Check
    code: "FormationInfo* info = formationMgr->GetFormationInfo(54321);\nif (info\
      \ && info->IsValid())\n{\n    // Proceed with formation logic\n    info->ApplyFormation();\n\
      }\nelse\n{\n    // Handle missing formation case\n    LOG_ERROR(\"world\", \"\
      No formation found for spawn ID %u\", 54321);\n}"
    language: cpp
  notes: This method performs a lookup operation in an internal data structure, so
    performance may vary depending on the number of formations registered. The returned
    FormationInfo pointer should not be deleted by the caller as it is managed internally
    by the FormationMgr.
  warnings: Always check for null return values before using the returned FormationInfo
    object to prevent segmentation faults. Incorrect spawn IDs may lead to unexpected
    behavior or missing formation data.
  related:
  - AddFormation
  - RemoveFormation
  - GetFormationBySpawnId
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:38:02.552815'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
