api:
  class: Unit
  method: CanEnterWater
  signature: bool Unit::CanEnterWater() const
documentation:
  brief: Determines whether a unit can enter water.
  description: The CanEnterWater method checks if a unit is capable of entering water,
    typically used for determining if a creature or player can swim or move through
    water areas. This method is essential for game mechanics involving movement and
    collision detection in aquatic environments. The method evaluates various factors
    including unit's movement type, current state, and whether it has the necessary
    abilities to enter water.
  parameters: []
  returns: Returns true if the unit can enter water, false otherwise. This indicates
    whether the unit's movement capabilities allow it to traverse water areas without
    being blocked by collision or other constraints.
  examples:
  - title: Basic usage example
    code: "Unit* unit = player->GetUnit();\nif (unit->CanEnterWater()) {\n    // Unit\
      \ can enter water\n    // Proceed with movement logic\n}"
    language: cpp
  notes: Implementation details include checking the unit's movement type and state
    flags. Performance considerations involve minimal overhead as this method typically
    only checks basic movement capabilities rather than complex physics calculations.
  warnings: This method should not be used for determining whether a unit can swim
    specifically, as it may return true even if the unit cannot actually swim due
    to lack of swimming ability. Always verify with additional methods like CanSwim
    or CanMoveInWater for accurate aquatic behavior determination.
  related:
  - CanSwim
  - CanMoveInWater
  - IsInWater
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:44:13.019920'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
