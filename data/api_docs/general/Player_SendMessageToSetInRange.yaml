api:
  class: Player
  method: SendMessageToSetInRange
  signature: void Player::SendMessageToSetInRange(const WorldPacket * data, float
    dist, bool self, bool own_team_only, bool required3dDist) const
documentation:
  brief: Sends a message to all players within a specified range, optionally including
    the player themselves.
  description: This method sends a WorldPacket message to all players within a given
    distance range from the player. It allows for customization of which players receive
    the message based on whether the sender should be included, if the message should
    be restricted to players on the same team, and whether 3D distance calculation
    should be used. The method is commonly used for sending chat messages or other
    game events to nearby players in a controlled manner. This functionality is essential
    for maintaining proper game mechanics related to player communication and proximity-based
    interactions.
  parameters:
  - name: data
    description: The WorldPacket containing the message data to be sent. This packet
      typically includes the message content, type, and any relevant metadata.
  - name: dist
    description: The maximum distance in yards within which players should receive
      the message. Players beyond this distance will not receive the message.
  - name: self
    description: If true, the player themselves will be included in the message recipients.
      If false, only other players are affected.
  - name: own_team_only
    description: If true, only players on the same team (alignment) as the sender
      will receive the message. If false, all players within range will receive it.
  - name: required3dDist
    description: If true, distance calculation uses 3D coordinates (z-axis). If false,
      distance is calculated in 2D only (x-y plane).
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      WorldPacket data(SMSG_CHAT);

      // Fill packet with message content

      player->SendMessageToSetInRange(&data, 50.0f, true, false, false);'
    language: cpp
  - title: Advanced usage example
    code: '// Send a message to players within 100 yards, including self,

      // but only to those on the same team

      Player* player = GetPlayer();

      WorldPacket data(SMSG_CHAT);

      // Fill packet with message content

      player->SendMessageToSetInRange(&data, 100.0f, true, true, false);'
    language: cpp
  notes: This method is implemented using the player's current position and the WorldPacket
    data. It uses a spatial calculation to determine which players are within range,
    making it performance-sensitive when used with large distances or many players.
    The method does not directly handle thread safety issues but should be used carefully
    in multi-threaded environments where player positions may change rapidly.
  warnings: This method requires careful handling of WorldPacket data to avoid sending
    invalid messages. It is recommended to ensure that the packet contains valid data
    before calling this method, as sending malformed packets can cause client-side
    errors or crashes. Also, be aware that using large distance values can impact
    performance if many players are nearby.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:30:48.893783'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
