api:
  class: Player
  method: RemoveSpellCategoryCooldownMod
  signature: void Player::RemoveSpellCategoryCooldownMod(int32 spellCategoryId, int32
    mod)
documentation:
  brief: Removes a spell category cooldown mod from the player's cooldowns.
  description: 'This method removes a specific spell category cooldown modifier from
    the player''s cooldown system. It is used to adjust how long spells in a particular
    category take to cooldown after being cast. The method takes two parameters: the
    spell category ID and the modifier value to remove. This functionality is essential
    for managing cooldowns, especially when dealing with special effects or abilities
    that modify spell categories. The operation affects the player''s cooldown timing
    for spells within that category.'
  parameters:
  - name: spellCategoryId
    description: The identifier of the spell category whose cooldown modifier is being
      removed. This typically corresponds to a specific category in the game's spell
      system, such as 'Spell Category' or 'Cooldown Category'. Valid values are integers
      representing category IDs.
  - name: mod
    description: The modifier value to remove from the spell category cooldown. This
      represents the amount by which the cooldown is reduced, typically expressed
      in milliseconds. Negative values may indicate increased cooldowns, while positive
      values reduce cooldowns.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Player* player = new Player();

      player->RemoveSpellCategoryCooldownMod(123, -500);'
    language: cpp
  - title: Advanced Usage Example
    code: 'Player* player = GetPlayer();

      player->RemoveSpellCategoryCooldownMod(456, 1000);

      // This removes 1 second from the cooldown of category 456'
    language: cpp
  notes: 'Implementation details: The method likely modifies internal spell cooldown
    tracking structures. Performance considerations: This method may trigger updates
    to cooldown timers and can affect gameplay balance if used incorrectly. Thread
    safety: This method should be thread-safe as long as the player object is properly
    synchronized.'
  warnings: This method should not be used without understanding of the spell category
    system. Incorrect usage could lead to unexpected cooldown behavior or game imbalance.
    Common mistakes include applying negative values where positive ones are expected,
    or using invalid category IDs.
  related:
  - RemoveSpellCooldownMod
  - AddSpellCategoryCooldownMod
  - AddSpellCooldownMod
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T00:14:59.099474'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
