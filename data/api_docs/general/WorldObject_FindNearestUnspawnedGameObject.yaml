api:
  class: WorldObject
  method: FindNearestUnspawnedGameObject
  signature: GameObject * WorldObject::FindNearestUnspawnedGameObject(uint32 entry,
    float range) const
documentation:
  brief: Finds and returns the nearest unspawned game object with the specified entry
    within the given range.
  description: This method searches for the closest unspawned GameObject (i.e., one
    that has not yet been spawned or activated) with the specified entry ID within
    the defined range. It is commonly used in World of Warcraft scripting to locate
    objects such as treasure chests, quest items, or other game mechanics that have
    not yet been triggered. The method operates on the WorldObject's position and
    will return nullptr if no matching GameObject is found within the specified range.
    This functionality is particularly useful for quest completion scripts or when
    implementing custom game logic where specific objects need to be located based
    on their entry ID.
  parameters:
  - name: entry
    description: The entry ID of the GameObject to search for. This corresponds to
      the GameobjectTemplate's entry field, which uniquely identifies a specific type
      of game object in the database.
  - name: range
    description: The maximum distance (in yards) within which to search for the GameObject.
      This parameter defines the search radius around the WorldObject's current position.
  returns: Returns a pointer to the nearest unspawned GameObject matching the specified
    entry ID within the given range, or nullptr if no such GameObject is found. The
    returned GameObject may be null if the search fails due to invalid parameters
    or lack of valid objects in the area.
  examples:
  - title: Finding nearest unspawned treasure chest
    code: "GameObject* chest = player->FindNearestUnspawnedGameObject(176234, 5.0f);\n\
      if (chest != nullptr)\n{\n    // Do something with the chest\n    chest->SetGoState(GO_STATE_READY);\n\
      }"
    language: cpp
  notes: This method performs a search within the defined range using the WorldObject's
    current position as the center. It is typically used in conjunction with other
    methods like GetDistance or GetMap to determine if an object is within reach of
    the player or NPC. Performance considerations include the use of spatial queries
    and potentially expensive searches if the range is large or if many objects exist
    in the area.
  warnings: The method may return nullptr if no matching GameObject exists within
    the specified range, or if the entry ID is invalid. Care should be taken to ensure
    that the range parameter is appropriate for the intended use case, as too small
    a range may miss valid objects while too large a range can cause performance issues.
  related:
  - FindNearestGameObject
  - GetDistance
  - IsWithinDist
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:29:27.324908'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
