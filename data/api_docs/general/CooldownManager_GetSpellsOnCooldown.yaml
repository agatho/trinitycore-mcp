api:
  class: CooldownManager
  method: GetSpellsOnCooldown
  signature: int CooldownManager::GetSpellsOnCooldown() const
documentation:
  brief: Returns the total count of spells currently on cooldown within the manager.
  description: The GetSpellsOnCooldown method retrieves the number of spells that
    are currently in a cooldown state within the CooldownManager. This count includes
    all spells, regardless of their type or category, and is useful for tracking spell
    availability and managing player actions. The method does not modify any internal
    state and provides a snapshot of the current cooldown status. It's commonly used
    in game logic to determine how many abilities are unavailable to a player at any
    given moment.
  parameters: []
  returns: An integer representing the total number of spells currently on cooldown
    in the manager. Returns zero if no spells are on cooldown.
  examples:
  - title: Basic Usage
    code: "int cooldownCount = player->GetCooldownManager()->GetSpellsOnCooldown();\n\
      if (cooldownCount > 0) {\n    // Player has some spells on cooldown\n    printf(\"\
      %d spells are currently on cooldown\\n\", cooldownCount);\n}"
    language: cpp
  - title: Cooldown Management Check
    code: "CooldownManager* cm = player->GetCooldownManager();\nint totalOnCooldown\
      \ = cm->GetSpellsOnCooldown();\nif (totalOnCooldown >= 5) {\n    // Player is\
      \ heavily restricted by cooldowns\n    SendSystemMessage(\"You have many abilities\
      \ on cooldown.\");\n}"
    language: cpp
  notes: This method performs a simple count operation and should be efficient. It's
    recommended to cache the result if it's accessed frequently in performance-critical
    code paths. The returned value reflects only the spells currently in cooldown,
    not those that may be queued or scheduled for future activation.
  warnings: Be aware that this method returns a snapshot of the current state at the
    time of call. If cooldowns are modified between calls to this method and other
    operations, the count may become outdated quickly. This is especially important
    when implementing systems that rely on real-time cooldown tracking.
  related:
  - AddSpellCooldown
  - RemoveSpellCooldown
  - IsSpellOnCooldown
  - GetSpellCooldown
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:42:27.937440'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
