api:
  class: SpellMgr
  method: ForEachSpellInfo
  signature: void SpellMgr::ForEachSpellInfo(std::function<void (const SpellInfo *)>
    callback)
documentation:
  brief: Iterates through all spell information entries and invokes a callback function
    for each one.
  description: The ForEachSpellInfo method provides a way to traverse the entire collection
    of spell definitions loaded in the SpellMgr. It accepts a std::function callback
    that will be executed once for every SpellInfo object in the system. This is useful
    for performing operations or gathering data across all spells, such as validation
    checks, statistical analysis, or applying modifications. The method does not guarantee
    order of iteration and should be used carefully in performance-critical sections
    due to its potentially large iteration scope. It's commonly used during server
    initialization or maintenance tasks where comprehensive spell data access is required.
  parameters: []
  returns: null
  examples:
  - title: Basic usage to print all spell IDs
    code: "SpellMgr::instance()->ForEachSpellInfo([](const SpellInfo* spellInfo) {\n\
      \    std::cout << \"Spell ID: \" << spellInfo->Id << std::endl;\n});"
    language: cpp
  - title: Count spells with a specific effect
    code: "int count = 0;\nSpellMgr::instance()->ForEachSpellInfo([&count](const SpellInfo*\
      \ spellInfo) {\n    for (uint8 i = 0; i < MAX_SPELL_EFFECTS; ++i)\n        if\
      \ (spellInfo->Effects[i].Effect == SPELL_EFFECT_HEAL)\n            ++count;\n\
      });\nstd::cout << \"Total healing spells: \" << count << std::endl;"
    language: cpp
  notes: This method iterates over all loaded SpellInfo objects, which can be a large
    dataset. Avoid using this in frequently called functions or during high-frequency
    server operations to prevent performance degradation. The callback function should
    not modify the spell database directly as it may lead to undefined behavior.
  warnings: Do not modify spell data structures within the callback; doing so may
    cause memory corruption or inconsistent state. Ensure that any operations performed
    inside the callback are thread-safe if used in a multi-threaded environment.
  related:
  - GetSpellInfo
  - GetAllSpellInfoMap
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:06:39.815120'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
