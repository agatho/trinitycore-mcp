api:
  class: ArenaScript
  method: ArenaScript
  signature: void ArenaScript::ArenaScript(BattlegroundMap * map)
documentation:
  brief: Initializes a new ArenaScript instance for the specified battleground map.
  description: The ArenaScript constructor initializes a new arena script instance
    associated with a specific battleground map. This method sets up the necessary
    internal state and configuration required for arena-specific gameplay mechanics,
    including team management, scoring systems, and match progression logic. The constructor
    is typically called during battleground initialization when creating arena scripts
    for different arena types such as 2v2, 3v3, or 5v5 matches. It prepares the script
    to handle events like player joining, team changes, scoring updates, and match
    end conditions within the context of the provided battleground map.
  parameters:
  - name: map
    description: Pointer to the BattlegroundMap instance that this arena script will
      manage. This parameter specifies the battleground context in which the arena
      script operates, including team assignments, scoring systems, and match rules.
  returns: null
  examples:
  - title: Basic ArenaScript Initialization
    code: 'BattlegroundMap* bgMap = sBattlegroundMgr->GetBattlegroundMap(1234);

      ArenaScript* arenaScript = new ArenaScript(bgMap);

      // The arena script is now initialized and ready to handle battleground events'
    language: cpp
  - title: ArenaScript with Team Assignment
    code: 'BattlegroundMap* bgMap = sBattlegroundMgr->GetBattlegroundMap(5678);

      ArenaScript* arenaScript = new ArenaScript(bgMap);

      // The script automatically handles team assignments for players joining the
      battleground

      // and manages scoring based on the arena type (2v2, 3v3, etc.)'
    language: cpp
  notes: This constructor is typically called internally by the TrinityCore battleground
    system when creating arena scripts. Developers should not directly instantiate
    ArenaScript objects unless implementing custom battleground logic. The map parameter
    must be a valid BattlegroundMap pointer; otherwise, undefined behavior may occur.
  warnings: Do not call this constructor directly in most cases as it's intended for
    internal use by the battleground management system. Passing a null or invalid
    map pointer will likely cause crashes or undefined behavior during gameplay.
  related:
  - ArenaScript::~ArenaScript
  - ArenaScript::Update
  - ArenaScript::HandlePlayerJoin
  - ArenaScript::HandlePlayerLeave
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T04:48:11.112041'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
