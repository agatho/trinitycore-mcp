api:
  class: Battleground
  method: UpdatePvpStat
  signature: void Battleground::UpdatePvpStat(Player * player, int pvpStatId, int
    value)
documentation:
  brief: Updates a player's PvP statistics for a specific stat ID with the given value.
  description: The UpdatePvpStat method is used to modify a player's PvP-related statistics
    within the context of a battleground. This method updates a specific PvP stat
    identified by pvpStatId for the provided player with the specified value. It is
    typically invoked during battleground events such as kills, deaths, or other PvP
    actions to maintain accurate player performance metrics. The method likely interacts
    with internal PvP tracking systems and may update player data stored in the database
    or in-memory structures. This function is essential for maintaining accurate PvP
    statistics and rankings within the game's battleground system.
  parameters:
  - name: player
    description: Pointer to the Player object whose PvP statistics will be updated.
      Must not be null.
  - name: pvpStatId
    description: Integer identifier representing the specific PvP statistic to update.
      Valid values correspond to predefined PvP stat types within the battleground
      system.
  - name: value
    description: Integer value to set or add to the specified PvP statistic. Can be
      positive or negative depending on the context of the stat being updated.
  returns: null
  examples:
  - title: Incrementing Kill Count
    code: "Battleground* bg = player->GetBattleground();\nif (bg)\n{\n    bg->UpdatePvpStat(player,\
      \ PVP_STAT_KILLS, 1);\n}"
    language: cpp
  - title: Updating Honor Points
    code: "Battleground* bg = player->GetBattleground();\nif (bg)\n{\n    bg->UpdatePvpStat(player,\
      \ PVP_STAT_HONOR_POINTS, 10);\n}"
    language: cpp
  notes: This method is likely called internally by the battleground system during
    PvP events. It may trigger updates to player data in both memory and database.
    The exact implementation details depend on how the PVP_STAT_* constants are defined
    within the TrinityCore codebase.
  warnings: Ensure that the player pointer is valid before calling this method, as
    passing a null pointer could cause undefined behavior. Also, verify that pvpStatId
    corresponds to a valid PvP statistic type to avoid unexpected results.
  related:
  - GetPvpStat
  - UpdatePlayerStats
  - AddPlayer
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:50:19.402850'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
