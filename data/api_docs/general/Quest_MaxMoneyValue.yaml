api:
  class: Quest
  method: MaxMoneyValue
  signature: uint32 Quest::MaxMoneyValue() const
documentation:
  brief: Returns the maximum money reward value for the quest
  description: The MaxMoneyValue method retrieves the upper limit of the monetary
    reward that a player can receive upon completing the quest. This value is defined
    in the quest's database entry and represents the cap on gold rewards, regardless
    of the number of quest items or objectives completed. The returned value is in
    copper coins, where 100 copper equals 1 silver and 100 silver equals 1 gold. This
    method is commonly used in quest reward calculations and UI display logic to show
    players the maximum potential monetary gain from a quest.
  parameters: []
  returns: A uint32 value representing the maximum money reward for the quest in copper
    coins. Returns 0 if no monetary reward is defined for the quest.
  examples:
  - title: Basic Usage to Check Quest Reward
    code: "Quest* quest = sObjectMgr->GetQuestTemplate(12345);\nuint32 maxMoney =\
      \ quest->MaxMoneyValue();\nif (maxMoney > 0)\n{\n    uint32 gold = maxMoney\
      \ / 10000;\n    uint32 silver = (maxMoney % 10000) / 100;\n    uint32 copper\
      \ = maxMoney % 100;\n    // Display reward as \"Xg Ys Zc\"\n}"
    language: cpp
  - title: Using MaxMoneyValue in Quest Completion Logic
    code: "void Player::RewardQuest(uint32 questId)\n{\n    Quest* quest = sObjectMgr->GetQuestTemplate(questId);\n\
      \    if (quest)\n    {\n        uint32 maxMoney = quest->MaxMoneyValue();\n\
      \        if (maxMoney > 0)\n        {\n            // Apply the maximum money\
      \ reward to player\n            AddMoney(maxMoney);\n        }\n    }\n}"
    language: cpp
  notes: This method directly accesses the quest template data stored in the database.
    The value returned is static and does not change during runtime unless the quest
    template itself is modified. It's important to note that this value represents
    only the maximum possible reward, not necessarily what the player will receive
    if they complete optional objectives or have certain conditions met.
  warnings: Be aware that a return value of 0 does not indicate an error but rather
    means the quest has no monetary reward. Always validate against zero before using
    the returned value in calculations involving currency. Also, this method should
    only be called on valid quest templates; calling it on a null pointer will result
    in undefined behavior.
  related:
  - GetQuestRewardMoney
  - GetRewMoneyOrXp
  - GetQuestReward
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T10:06:58.383693'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
