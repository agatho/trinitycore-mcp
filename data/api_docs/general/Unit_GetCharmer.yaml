api:
  class: Unit
  method: GetCharmer
  signature: Unit * Unit::GetCharmer() const
documentation:
  brief: Returns the Unit that controls this unit as a charmer.
  description: The GetCharmer method retrieves the Unit object that currently controls
    or 'charms' this unit. This is typically used in the context of summoned creatures
    or pets that are under the control of a player or another creature. The method
    returns a pointer to the charmer unit, which can be null if no charmer exists.
    This function is commonly used in game mechanics involving pet behavior, summoning,
    and control systems where units may be controlled by other units.
  parameters: []
  returns: Returns a pointer to the Unit that is controlling this unit as a charmer.
    If no charmer exists, it returns nullptr. The returned pointer can be used to
    access properties and methods of the controlling unit.
  examples:
  - title: Basic Usage Example
    code: "Unit* charmer = unit->GetCharmer();\nif (charmer)\n{\n    // Do something\
      \ with the charmer\n    std::cout << \"Charmer is: \" << charmer->GetName()\
      \ << std::endl;\n}"
    language: cpp
  notes: This method should be used carefully as it may return nullptr if no charmer
    exists, and calling methods on a null pointer can lead to crashes. The method
    is typically used in conjunction with other control-related methods such as GetCharmerOwner
    or GetSummonedCreature.
  warnings: Be cautious when using this method as it may return nullptr if the unit
    is not under any charmer control. Always check for null before accessing properties
    of the returned pointer to avoid runtime errors.
  related:
  - GetCharmerOwner
  - GetSummonedCreature
  - GetControlledUnit
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:23:41.692001'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
