api:
  class: FormationManager
  method: GetOutOfPositionMembers
  signature: int FormationManager::GetOutOfPositionMembers(float tolerance)
documentation:
  brief: Calculates and returns the number of members in a formation that are positioned
    outside the specified tolerance threshold.
  description: The GetOutOfPositionMembers method evaluates all members within a formation
    to determine how many are currently positioned outside of an acceptable tolerance
    range. This method is typically used in AI behavior systems where maintaining
    formation integrity is important, such as during group combat or movement scenarios.
    It compares each member's current position against their expected formation position
    and counts those that exceed the provided tolerance distance. The method does
    not modify any internal state but provides a diagnostic count for use in decision-making
    logic.
  parameters:
  - name: tolerance
    description: The maximum allowed distance (in yards) a formation member can deviate
      from their expected position before being considered out of position. Must be
      a positive value greater than zero.
  returns: Returns an integer representing the count of formation members whose current
    position exceeds the specified tolerance threshold. A return value of zero indicates
    all members are within acceptable positioning, while a positive value indicates
    how many members need adjustment.
  examples:
  - title: Basic Usage to Check Formation Integrity
    code: "int outOfPosition = formationManager.GetOutOfPositionMembers(2.0f);\nif\
      \ (outOfPosition > 0)\n{\n    // Formation needs adjustment\n    LOG_DEBUG(\"\
      world\", \"{} members are out of position in the formation.\", outOfPosition);\n\
      }"
    language: cpp
  - title: Dynamic Tolerance Based on Combat State
    code: "float tolerance = isInCombat ? 3.0f : 1.5f;\nint outOfPosition = formationManager.GetOutOfPositionMembers(tolerance);\n\
      if (outOfPosition > 0)\n{\n    // Trigger formation correction logic\n    formationManager.ApplyFormationCorrection();\n\
      }"
    language: cpp
  notes: This method assumes that the FormationManager has a valid formation setup
    with defined member positions. It performs calculations based on current positions,
    so it should be called after members have been positioned in the formation. The
    tolerance parameter is measured in yards and represents Euclidean distance.
  warnings: The method may return inaccurate results if the formation has not been
    properly initialized or if member positions are not updated regularly. Using a
    tolerance value of zero or negative numbers will produce undefined behavior.
  related:
  - GetFormationMembers
  - SetFormationPosition
  - ApplyFormationCorrection
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:43:00.448848'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
