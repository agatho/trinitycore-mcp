api:
  class: TransportMgr
  method: Unload
  signature: void TransportMgr::Unload()
documentation:
  brief: Unloads all transport systems and their associated data from memory
  description: The TransportMgr::Unload method is responsible for cleaning up and
    releasing all resources associated with transport systems within the TrinityCore
    server. This includes removing all loaded transports, clearing internal transport
    lists, and freeing memory allocated for transport-related data structures. The
    method ensures that no transport entities remain in the active game world state
    when invoked, making it essential for server shutdown procedures or map reloading
    operations. It should only be called when the server is in a state where no active
    transport interactions are occurring to prevent undefined behavior.
  parameters: []
  returns: null
  examples:
  - title: Basic unload usage during server shutdown
    code: "void ShutdownServer()\n{\n    // Perform cleanup operations\n    sTransportMgr->Unload();\n\
      \    // Continue with other shutdown procedures\n}"
    language: cpp
  notes: This method is typically invoked during server shutdown sequences or when
    reloading maps to ensure clean state. It's important that no active transport
    passengers exist when calling this method, as it may lead to memory corruption
    or invalid references. The operation is not thread-safe and should only be called
    from the main game thread.
  warnings: Calling TransportMgr::Unload() while transports are actively carrying
    players or objects can result in crashes or data corruption. Always verify that
    all transport systems are idle before invoking this method. This function does
    not perform any validation checks on active transport usage.
  related:
  - TransportMgr::Load
  - TransportMgr::AddTransport
  - TransportMgr::RemoveTransport
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:12:08.586321'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
