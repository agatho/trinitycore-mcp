api:
  class: Unit
  method: IsContestedGuard
  signature: bool Unit::IsContestedGuard() const
documentation:
  brief: Determines whether the unit is a contested guard, indicating it is actively
    engaged in combat with a player.
  description: The IsContestedGuard method checks if the unit is currently in a contested
    state, meaning it has been flagged for PvP and is actively engaged in combat with
    a player. This method is used to identify units that are considered 'contested
    guards' within the game mechanics, typically those that are flagged for PvP and
    have been involved in combat with players. The method returns true when the unit
    is actively contested and false otherwise, which helps determine whether the unit
    should be treated as a contested guard for purposes of PvP combat.
  parameters: []
  returns: Returns true if the unit is currently in a contested state and engaged
    in PvP combat with a player, false otherwise. This indicates that the unit has
    been flagged for PvP and is actively involved in combat.
  examples:
  - title: Basic usage example
    code: "if (unit->IsContestedGuard()) {\n    // Unit is currently contested\n \
      \   // Handle PvP combat logic\n}"
    language: cpp
  notes: This method is typically used in conjunction with other PvP-related functions
    to determine whether a unit should be treated as a contested guard. It may be
    called during combat state checks and is important for determining whether a unit
    can be attacked by players without being flagged for PvP.
  warnings: This method should not be confused with IsPvPFlagged, which indicates
    if a unit has been flagged for PvP but is not necessarily engaged in combat. The
    contested guard status requires active combat engagement to be true.
  related:
  - IsPvPFlagged
  - IsInCombat
  - GetPvPFlag
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:12:00.559199'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
