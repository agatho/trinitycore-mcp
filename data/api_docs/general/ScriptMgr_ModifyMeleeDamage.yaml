api:
  class: ScriptMgr
  method: ModifyMeleeDamage
  signature: void ScriptMgr::ModifyMeleeDamage(Unit * target, Unit * attacker, uint32
    & damage)
documentation:
  brief: Modifies the melee damage dealt by an attacker to a target.
  description: The ModifyMeleeDamage method is a hook point in TrinityCore's script
    manager that allows custom scripts to modify the melee damage amount before it
    is applied. This method is invoked during the melee attack processing phase, giving
    developers the ability to adjust damage values based on various conditions such
    as player stats, buffs, debuffs, or custom game mechanics. The damage value is
    passed by reference, allowing modifications to directly affect the final outcome
    of the attack.
  parameters:
  - name: target
    description: Pointer to the Unit that is being attacked. This represents the victim
      in the melee interaction.
  - name: attacker
    description: Pointer to the Unit that is performing the melee attack. This represents
      the aggressor in the melee interaction.
  - name: damage
    description: Reference to the uint32 damage value that will be modified. The value
      can be increased, decreased, or set to zero to alter the final damage dealt.
  returns: null
  examples:
  - title: Basic Damage Reduction Example
    code: "void ScriptMgr::ModifyMeleeDamage(Unit* target, Unit* attacker, uint32&\
      \ damage)\n{\n    // Reduce damage by 25% if the target is a player\n    if\
      \ (target->IsPlayer())\n        damage = damage * 0.75f;\n}"
    language: cpp
  - title: Conditional Damage Boost Based on Buff
    code: "void ScriptMgr::ModifyMeleeDamage(Unit* target, Unit* attacker, uint32&\
      \ damage)\n{\n    // Increase damage by 50% if the attacker has a specific buff\n\
      \    if (attacker->HasAura(12345))\n        damage = damage * 1.5f;\n}"
    language: cpp
  notes: This method is called during the combat processing pipeline, so modifications
    to damage should be made carefully to avoid breaking game balance or causing unexpected
    behavior. The method may be invoked multiple times per attack depending on the
    combat system's complexity and whether additional effects are applied.
  warnings: Modifying damage values directly can have cascading effects on combat
    calculations, including critical hits, armor mitigation, and spell interactions.
    Be cautious when reducing damage below zero or setting it to an extremely high
    value as this may cause client-side issues or server instability.
  related:
  - ModifySpellDamage
  - ModifyHealing
  - OnUnitMeleeAttack
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T23:04:10.172608'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
