api:
  class: CooldownManager
  method: GetTimeUntilReady
  signature: uint32 CooldownManager::GetTimeUntilReady(uint32 spellId) const
documentation:
  brief: Calculates and returns the time remaining until a specified spell is ready
    to be cast again.
  description: The GetTimeUntilReady method determines how much time (in milliseconds)
    remains before a given spell can be cast again, based on its cooldown status.
    This method is typically used in conjunction with cooldown tracking systems within
    the TrinityCore framework to enforce game mechanics such as spell cooldowns and
    resource management. It checks the internal cooldown state of the spell and returns
    the remaining duration if the spell is currently on cooldown, or zero if it's
    ready to be cast immediately. The returned value represents the time until the
    next usable opportunity for casting the specified spell.
  parameters: []
  returns: Returns a uint32 value representing the time in milliseconds until the
    specified spell becomes ready to cast again. If the spell is not on cooldown,
    this method returns zero.
  examples:
  - title: Check if a spell is ready to cast
    code: "uint32 cooldownTime = cooldownManager->GetTimeUntilReady(12345);\nif (cooldownTime\
      \ == 0)\n{\n    // Spell is ready to cast\n    // Proceed with spell casting\
      \ logic\n}\nelse\n{\n    // Spell is on cooldown, wait for cooldownTime milliseconds\n\
      \    // Handle cooldown logic here\n}"
    language: cpp
  notes: This method assumes that the CooldownManager instance has been properly initialized
    with spell cooldown data. It is typically called during spell casting checks and
    game state updates to enforce cooldown restrictions.
  warnings: null
  related:
  - SetSpellCooldown
  - IsSpellReady
  - GetSpellCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:41:33.776392'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
