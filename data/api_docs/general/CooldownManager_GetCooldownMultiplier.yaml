api:
  class: CooldownManager
  method: GetCooldownMultiplier
  signature: float CooldownManager::GetCooldownMultiplier() const
documentation:
  brief: Calculates and returns the current cooldown multiplier applied to spell or
    ability cooldowns within the manager.
  description: The GetCooldownMultiplier method retrieves the cumulative cooldown
    reduction factor that affects all spells and abilities managed by this CooldownManager
    instance. This value is typically used in World of Warcraft's combat system to
    determine how much faster or slower cooldowns should reset, based on various game
    mechanics such as talent bonuses, buffs, debuffs, or item effects. The returned
    float value represents a multiplier where 1.0 means no change, values less than
    1.0 reduce cooldowns (faster resets), and values greater than 1.0 increase cooldowns
    (slower resets). This method does not modify any internal state and is safe to
    call multiple times during a single game tick.
  parameters: []
  returns: A float value representing the current cooldown multiplier. A value of
    1.0 indicates normal cooldown behavior, values below 1.0 indicate faster cooldowns,
    and values above 1.0 indicate slower cooldowns.
  examples:
  - title: Basic Usage
    code: "float multiplier = cooldownManager.GetCooldownMultiplier();\nif (multiplier\
      \ < 1.0f)\n{\n    // Cooldowns are being reduced\n    printf(\"Cooldowns are\
      \ faster by %.2f%%\\n\", (1.0f - multiplier) * 100.0f);\n}"
    language: cpp
  - title: Applying Multiplier to Cooldown Calculation
    code: 'float baseCooldown = 10.0f; // seconds

      float currentMultiplier = cooldownManager.GetCooldownMultiplier();

      float effectiveCooldown = baseCooldown * currentMultiplier;

      printf("Effective cooldown: %.2f seconds\n", effectiveCooldown);'
    language: cpp
  notes: This method aggregates all active cooldown modifiers from buffs, talents,
    and other game effects that influence spell cooldowns. It's important to note
    that the multiplier may vary during combat or based on player state changes such
    as entering/leaving combat, applying buffs, or using specific items.
  warnings: The returned value should not be used directly for cooldown calculations
    without considering potential rounding errors or precision loss in floating-point
    arithmetic. Also, this method assumes that all relevant cooldown modifiers are
    properly applied and updated within the manager before calling.
  related:
  - SetCooldownMultiplier
  - AddCooldownModifier
  - RemoveCooldownModifier
  - GetRemainingCooldown
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T15:45:53.755082'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
