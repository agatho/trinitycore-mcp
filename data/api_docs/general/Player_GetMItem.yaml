api:
  class: Player
  method: GetMItem
  signature: Item * Player::GetMItem(int id)
documentation:
  brief: Returns the item at the specified slot index from the player's inventory
  description: The GetMItem method retrieves an Item object from the player's inventory
    at the given slot index. This method is commonly used in World of Warcraft's TrinityCore
    framework to access items stored in a player's bag or backpack. The method returns
    nullptr if no item exists at the specified slot, making it useful for checking
    item existence before performing operations on items. It serves as a direct getter
    for items in the player's inventory and is often used in conjunction with other
    inventory-related methods for managing item transactions and equipment.
  parameters:
  - name: id
    description: The slot index of the item to retrieve from the player's inventory.
      This represents the position within the player's bag or backpack where the item
      is stored, typically ranging from 0 to 36 for standard inventory slots.
  returns: Returns a pointer to the Item object at the specified slot index, or nullptr
    if no item exists at that location. The returned Item object may be null if the
    slot is empty or if the item has been removed from the inventory.
  examples:
  - title: Basic usage example
    code: "Item* item = player->GetMItem(10);\nif (item != nullptr)\n{\n    // Item\
      \ exists at slot 10\n    // Perform operations on item\n}\nelse\n{\n    // No\
      \ item at slot 10\n}"
    language: cpp
  - title: Advanced usage with inventory management
    code: "// Get item from player's backpack\nItem* item = player->GetMItem(15);\n\
      if (item != nullptr)\n{\n    // Check if item is valid before performing operations\n\
      \    if (item->GetTemplate()->GetRequiredLevel() > player->getLevel())\n   \
      \ {\n        // Item requires higher level than player\n    }\n}\nelse\n{\n\
      \    // No item at slot 15\n}"
    language: cpp
  notes: This method is thread-safe when used within the context of a player's inventory
    operations. Performance considerations include checking for null returns before
    accessing item properties, as accessing properties on nullptr items will cause
    crashes. The method should be used carefully in multi-threaded environments where
    inventory changes may occur concurrently.
  warnings: The method may return nullptr if the slot index is invalid or exceeds
    the bounds of the player's inventory. Care must be taken to validate the slot
    index before calling this method, as accessing invalid slots can lead to memory
    access violations. Additionally, this method should not be used for item removal
    operations without proper handling.
  related:
  - GetItemByPos
  - GetBagSlot
  - GetInventorySlot
  - GetMItem
  - GetItem
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:51:27.053705'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
