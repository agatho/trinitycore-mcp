api:
  class: Player
  method: GetCoordsMapAreaAndZoneString
  signature: std::string Player::GetCoordsMapAreaAndZoneString() const
documentation:
  brief: Returns the map area and zone coordinates string for the player's current
    location
  description: This method retrieves the map area and zone coordinates string that
    represents the player's current position within the game world. It combines the
    map ID, area ID, and zone ID into a formatted string that can be used for various
    game mechanics purposes such as identifying the player's location for quest tracking,
    teleportation, or coordinate-based calculations. The method is particularly useful
    when working with player positioning systems and coordinate-based gameplay elements
    in TrinityCore.
  parameters: []
  returns: Returns a std::string containing the map area and zone coordinates string
    formatted as 'MapID:AreaID:ZoneID' representing the player's current location
    in the game world
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      std::string coords = player->GetCoordsMapAreaAndZoneString();

      printf("Current coordinates: %s\n", coords.c_str());'
    language: cpp
  notes: This method is typically used in conjunction with other coordinate-related
    methods and should be called when the player's position needs to be determined
    for game mechanics purposes. It may return empty strings if the player is not
    in a valid location or if the map/area/zone IDs are not properly initialized.
  warnings: The method may return empty string if the player's coordinates are not
    properly set or if the player is in an invalid location within the game world.
    This can happen when the player is in a zone that doesn't have proper area information
    assigned.
  related:
  - GetMapId
  - GetAreaId
  - GetZoneId
  - GetCoords
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T17:15:00.922990'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
