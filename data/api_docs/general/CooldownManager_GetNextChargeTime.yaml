api:
  class: CooldownManager
  method: GetNextChargeTime
  signature: uint32 CooldownManager::GetNextChargeTime(uint32 spellId) const
documentation:
  brief: Returns the time when the next charge of a spell will be available.
  description: The GetNextChargeTime method retrieves the timestamp at which the next
    charge of a specified spell will become available for use. This is typically used
    in conjunction with cooldown management systems to determine when a player can
    cast a spell that has multiple charges or a rechargeable ability. The returned
    value represents a Unix timestamp, indicating the exact moment when the next charge
    will be ready. This method does not modify any internal state and is purely informational.
  parameters: []
  returns: A uint32 value representing the Unix timestamp when the next charge of
    the spell will be available. If no charges are currently on cooldown or if the
    spell has no charges, this will typically return 0.
  examples:
  - title: Check when next charge is available
    code: "uint32 nextChargeTime = cooldownManager->GetNextChargeTime(12345);\nif\
      \ (nextChargeTime > 0)\n{\n    uint32 currentTime = time(nullptr);\n    uint32\
      \ timeRemaining = nextChargeTime - currentTime;\n    printf(\"Next charge available\
      \ in %u seconds\\n\", timeRemaining);\n}"
    language: cpp
  notes: This method assumes that the spell ID provided corresponds to a spell with
    charges or a rechargeable ability. If the spell does not have charges, the return
    value will likely be 0. The implementation relies on internal cooldown tracking
    data maintained by the CooldownManager.
  warnings: null
  related:
  - GetSpellCooldown
  - GetGlobalCooldown
  - AddSpellCooldown
  - ResetSpellCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:44:30.279390'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
