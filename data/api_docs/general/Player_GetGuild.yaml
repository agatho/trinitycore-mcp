api:
  class: Player
  method: GetGuild
  signature: const Guild * Player::GetGuild() const
documentation:
  brief: Returns the guild that the player belongs to, or nullptr if the player is
    not in a guild.
  description: The GetGuild method retrieves the Guild object associated with the
    player's current guild membership. This method provides access to the guild data
    structure for players who are part of a guild. The returned Guild pointer will
    be null if the player has no guild membership, which occurs when the player is
    not in a guild or has left the guild. This method is commonly used in game logic
    to determine player guild status and to access guild-related functionality such
    as guild permissions, member lists, and guild events. It should be noted that
    this method does not perform any validation or checks on the player's guild membership
    state; it simply returns the current guild reference if one exists.
  parameters: []
  returns: Returns a pointer to the Guild object that the player belongs to, or nullptr
    if the player is not in a guild. The returned pointer may be null when the player
    has no guild membership, indicating that the player is not part of any guild.
  examples:
  - title: Basic Usage Example
    code: "if (Guild* guild = player->GetGuild()) {\n    // Player is in a guild\n\
      \    std::cout << \"Guild name: \" << guild->GetName() << std::endl;\n} else\
      \ {\n    // Player is not in a guild\n    std::cout << \"Player has no guild\"\
      \ << std::endl;\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. It does not
    perform any checks or validation on the player's guild membership state, so developers
    should ensure that they are checking for null before using the returned pointer.
    Performance-wise, this method is very lightweight as it simply returns a stored
    pointer without any computation.
  warnings: This method may return nullptr if the player has no guild membership,
    which can lead to null pointer dereference errors if not properly handled in code.
    Developers should always check for null before using the returned Guild pointer
    to avoid runtime errors.
  related:
  - GetGuildId
  - GetGuildMember
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:01:02.480563'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
