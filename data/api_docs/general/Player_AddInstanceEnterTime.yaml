api:
  class: Player
  method: AddInstanceEnterTime
  signature: void Player::AddInstanceEnterTime(uint32 instanceId, time_t enterTime)
documentation:
  brief: Records the timestamp when a player enters an instance dungeon.
  description: This method stores the time when a player enters a specific instance
    dungeon, allowing the game to track instance completion times and cooldowns. It
    is typically used during instance entry events to log when players enter dungeons,
    which helps with tracking instance reset times and preventing players from entering
    instances too soon after previous runs. The method updates internal player data
    structures related to instance entry times.
  parameters:
  - name: instanceId
    description: The unique identifier for the instance dungeon being entered. This
      corresponds to the InstanceId used in the database and is typically a number
      representing the dungeon's ID.
  - name: enterTime
    description: The timestamp when the player enters the instance. This is usually
      a time_t value representing the current time in seconds since Unix epoch.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      uint32 instanceId = 123;

      time_t enterTime = time(nullptr);

      player->AddInstanceEnterTime(instanceId, enterTime);'
    language: cpp
  - title: Advanced usage with instance tracking
    code: "Player* player = GetPlayer();\nuint32 instanceId = 456;\ntime_t enterTime\
      \ = time(nullptr);\nplayer->AddInstanceEnterTime(instanceId, enterTime);\n//\
      \ This can be used to check if player is eligible to enter instance again\n\
      if (player->GetInstanceEnterTime(instanceId) > 0)\n{\n    // Player already\
      \ entered this instance recently\n}"
    language: cpp
  notes: This method is typically called when a player enters an instance dungeon,
    either through the game's instance system or manually by developers. It updates
    internal tracking data for instance entry times and should be used in conjunction
    with other instance-related methods to properly manage instance cooldowns.
  warnings: Improper use of this method can lead to incorrect instance cooldown tracking,
    potentially preventing players from entering instances too soon after previous
    runs. Ensure that enterTime is properly set and that instanceId corresponds to
    valid instance IDs.
  related:
  - GetInstanceEnterTime
  - GetPlayerInstanceData
  - ResetInstance
  - SetInstanceEnterTime
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T01:34:18.267061'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
