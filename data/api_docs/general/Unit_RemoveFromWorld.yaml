api:
  class: Unit
  method: RemoveFromWorld
  signature: void Unit::RemoveFromWorld()
documentation:
  brief: Removes the unit from the world, making it invisible and disconnecting it
    from all game objects
  description: The RemoveFromWorld method removes a Unit object from the active world
    state, effectively disconnecting it from all game systems and making it invisible
    to players and NPCs. This method is typically used during creature or player destruction,
    or when a unit needs to be temporarily removed from gameplay. The unit will remain
    in memory but will not be accessible through normal game mechanics until it is
    re-added to the world. This operation is crucial for managing unit lifecycle and
    preventing memory leaks or invalid references.
  parameters: []
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->RemoveFromWorld();'
    language: cpp
  notes: This method should only be called when the unit is no longer needed in the
    world. It does not destroy the unit object itself, but rather removes it from
    active gameplay. The method may trigger cleanup routines depending on the implementation,
    and should be used carefully to avoid dangling references.
  warnings: Calling this method without proper context can lead to memory leaks or
    invalid references if the unit is not properly re-added later. Also, if called
    during a game loop iteration, it may cause undefined behavior in certain systems.
  related:
  - Unit::AddToWorld
  - Unit::IsInWorld
  - Unit::GetMap
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:36:33.438482'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
