api:
  class: GameObject
  method: GetRespawnDelay
  signature: uint32 GameObject::GetRespawnDelay() const
documentation:
  brief: Returns the respawn delay time in seconds for the game object.
  description: The GetRespawnDelay method retrieves the time interval in seconds that
    a game object will remain disabled before respawning. This value determines how
    long the object stays inactive after being destroyed or deactivated, typically
    used for objects like chests, doors, or other interactive elements. The delay
    is usually set during the object's initialization and reflects the configured
    respawn time in the database. This method is essential for managing game object
    behavior and ensuring proper timing of respawn events.
  parameters: []
  returns: Returns the respawn delay time in seconds as a uint32 value. A value of
    0 indicates no delay or immediate respawn, while higher values represent longer
    waiting periods before the object respawns.
  examples:
  - title: Basic Usage Example
    code: "uint32 delay = gameObject->GetRespawnDelay();\nif (delay > 0)\n{\n    //\
      \ Do something with the delay\n    // e.g., log or use in calculations\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "uint32 delay = gameObject->GetRespawnDelay();\nuint32 respawnTime = delay\
      \ * 1000; // Convert to milliseconds\n// Use delay in calculations for timing\n\
      // e.g., scheduling respawn events\nif (delay == 0)\n{\n    // Immediate respawn\n\
      }\nelse\n{\n    // Delayed respawn\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. The
    value returned represents the actual delay time in seconds, not milliseconds.
    It's important to note that this method may return 0 for objects with immediate
    respawn or no delay configured.
  warnings: Be cautious when using this method as it may return 0 for objects without
    a configured respawn delay. Ensure proper handling of zero values to avoid unexpected
    behavior in game logic. Also, the value returned is not necessarily the same as
    the actual database configuration time.
  related:
  - GetRespawnTime
  - SetRespawnDelay
  - GetRespawnState
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:20:40.439971'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
