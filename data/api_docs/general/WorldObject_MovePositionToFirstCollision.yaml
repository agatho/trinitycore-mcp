api:
  class: WorldObject
  method: MovePositionToFirstCollision
  signature: void WorldObject::MovePositionToFirstCollision(Position & pos, float
    dist, float angle) const
documentation:
  brief: Moves the object to the first collision point within the specified distance
    and angle.
  description: This method calculates and moves the WorldObject to the first collision
    point along a given direction and distance. It is commonly used for pathfinding
    and movement calculations in World of Warcraft, particularly when determining
    where an object can move without colliding with terrain or other objects. The
    method takes into account the object's current position, orientation, and the
    specified distance and angle to determine the final position. This functionality
    is essential for ensuring accurate movement calculations in complex environments.
  parameters:
  - name: pos
    description: Reference to a Position structure that will be updated with the resulting
      collision point coordinates.
  - name: dist
    description: The maximum distance to move along the specified angle direction.
      Must be positive and typically represents a distance in yards.
  - name: angle
    description: The angle in radians to move from the object's current orientation.
      This determines the direction of movement, with 0 being forward and increasing
      counter-clockwise.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Position pos;

      float dist = 5.0f;

      float angle = M_PI_2;

      WorldObject::MovePositionToFirstCollision(pos, dist, angle);'
    language: cpp
  - title: Advanced usage with movement calculation
    code: 'Position pos;

      float dist = 10.0f;

      float angle = M_PI_2;

      WorldObject::MovePositionToFirstCollision(pos, dist, angle);

      // Use pos.x and pos.y to determine where the object moved to

      // This is useful for pathfinding or movement calculations'
    language: cpp
  notes: This method is typically used in conjunction with other movement-related
    methods. It's important to note that the method modifies the Position structure
    passed in, rather than returning a new position. The implementation uses collision
    detection algorithms and may be computationally intensive depending on the environment.
  warnings: The method assumes that the object has valid coordinates and orientation
    before calling. If used on objects without proper positioning, it may result in
    incorrect movement calculations or errors. Also, this method does not account
    for dynamic obstacles or moving objects in the environment.
  related:
  - MovePosition
  - MoveToFirstCollision
  - GetDistance
  - GetAngle
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:40:39.659152'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
