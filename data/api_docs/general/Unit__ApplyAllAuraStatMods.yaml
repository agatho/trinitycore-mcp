api:
  class: Unit
  method: _ApplyAllAuraStatMods
  signature: void Unit::_ApplyAllAuraStatMods()
documentation:
  brief: Applies all aura stat mods to the unit's attributes.
  description: This method applies all active aura stat modifications to a Unit object,
    affecting various attributes such as stats, resistances, and other game mechanics.
    It is typically used during aura application or removal processes to ensure proper
    stat adjustments. The method handles the calculation and application of all stat
    modifiers from active auras, including those that may affect character attributes
    like strength, agility, intellect, and others. This function is part of the core
    aura management system in TrinityCore and ensures proper stat application when
    auras are applied or removed.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* unit = new Unit;

      unit->_ApplyAllAuraStatMods();

      // This applies all active aura stat mods to the unit'
    language: cpp
  notes: This method is typically called during aura application or removal processes.
    It involves iterating through all active auras and applying their stat modifications
    to the unit's attributes. Performance considerations include potential overhead
    from multiple stat calculations, especially in high-frequency scenarios.
  warnings: Improper handling of this method can lead to incorrect stat application,
    potentially causing game balance issues. Care should be taken when calling this
    method during aura updates or removals to avoid double application of stat modifiers.
  related:
  - Unit::AddAura
  - Unit::RemoveAura
  - Unit::ApplyAuraStatMod
  - Unit::GetAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:02:39.764810'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
