api:
  class: Spell
  method: CheckRange
  signature: SpellCastResult Spell::CheckRange(bool strict) const
documentation:
  brief: Checks whether the spell's range is valid for casting.
  description: The CheckRange method evaluates if a spell's target range is acceptable
    for execution, considering both strict and non-strict modes. It determines if
    the spell can be cast based on distance requirements from the caster to the target.
    This method is crucial for validating spell mechanics in World of Warcraft's TrinityCore
    framework, ensuring proper execution conditions are met before casting begins.
    The method returns a SpellCastResult indicating whether the range check passed
    or failed, with strict mode enforcing more stringent distance constraints.
  parameters: []
  returns: SpellCastResult indicating whether the spell range is valid for casting.
    Returns SPELL_FAILED_BAD_TARGETs if range is invalid, SPELL_CAST_SUCCESS if valid,
    and other values depending on specific conditions.
  examples:
  - title: Basic usage example
    code: "SpellCastResult result = spell->CheckRange(false);\nif (result == SPELL_CAST_SUCCESS)\n\
      {\n    // Spell can be cast\n    // Proceed with casting logic\n}"
    language: cpp
  notes: This method is typically called during spell validation phase before actual
    spell execution. Implementation relies on distance calculations between caster
    and target, considering both unit and spell-specific range requirements. Performance
    impact is minimal as it only performs distance checks.
  warnings: Be aware that strict mode may cause early failure if target is too far
    away, potentially leading to incorrect spell casting decisions. The method should
    be used carefully in conjunction with other validation methods for comprehensive
    spell checking.
  related:
  - Spell::CheckSpellCast
  - Spell::IsSpellValid
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T22:43:19.666021'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
