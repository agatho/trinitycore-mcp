api:
  class: Unit
  method: ApplyDiminishingAura
  signature: void Unit::ApplyDiminishingAura(int group, bool apply)
documentation:
  brief: Applies or removes a diminishing aura effect to the unit.
  description: The ApplyDiminishingAura method is used to manage the application and
    removal of diminishing effects on a unit, typically related to crowd control abilities
    or similar mechanics. This method controls how the unit's diminishing returns
    are handled for specific groups of effects, allowing for precise control over
    the behavior of these mechanics in gameplay. The method operates on a group-based
    system where each group represents a category of diminishing effects, such as
    fear, charm, or stun. It is commonly used in conjunction with other methods like
    ApplyAuraEffect to manage complex interactions between different aura types.
  parameters:
  - name: group
    description: The group identifier representing the type of diminishing effect
      being applied or removed. This typically corresponds to specific categories
      like fear, charm, or stun, and is used to determine which diminishing return
      rules apply.
  - name: apply
    description: A boolean value indicating whether to apply (true) or remove (false)
      the diminishing aura effect from the unit. When true, the method applies the
      diminishing effect; when false, it removes it.
  returns: null
  examples:
  - title: Basic Usage Example
    code: "Unit* target = GetTarget();\nif (target)\n{\n    target->ApplyDiminishingAura(1,\
      \ true);\n}\n"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* target = GetTarget();\nif (target)\n{\n    target->ApplyDiminishingAura(3,\
      \ false);\n    target->ApplyDiminishingAura(4, true);\n}\n"
    language: cpp
  notes: This method is part of the broader aura management system in TrinityCore
    and should be used carefully to avoid unintended side effects. It requires that
    the unit be valid and may interact with other methods like ApplyAuraEffect. The
    group parameter must match predefined categories, and incorrect usage can lead
    to improper handling of diminishing returns.
  warnings: Improper use of this method can cause issues with crowd control mechanics
    and diminishing returns. Care should be taken when applying or removing these
    effects to ensure correct group identifiers are used. Misuse may result in incorrect
    behavior of aura effects that rely on diminishing return rules.
  related:
  - ApplyAuraEffect
  - RemoveAura
  - GetDiminishing
  - SetDiminishing
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T21:29:20.238116'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
