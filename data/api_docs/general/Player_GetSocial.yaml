api:
  class: Player
  method: GetSocial
  signature: PlayerSocial * Player::GetSocial() const
documentation:
  brief: Returns the social data structure associated with the player.
  description: The GetSocial method retrieves the PlayerSocial object that contains
    all social information for the player, including friends, ignore lists, and guild
    members. This data structure is essential for managing player relationships within
    the game's social system. The method provides access to the player's social settings
    and can be used to query or modify social behavior. It returns a pointer to the
    PlayerSocial object which contains all social data related to the player.
  parameters: []
  returns: Returns a pointer to the PlayerSocial object that represents the player's
    social data structure, containing information about friends, ignore lists, and
    guild members. The returned pointer may be null if the player has not yet initialized
    their social data or if the player is not in a valid state.
  examples:
  - title: Accessing player social data
    code: "PlayerSocial* social = player->GetSocial();\nif (social)\n{\n    // Use\
      \ social data\n    // Example: get friends list\n}"
    language: cpp
  notes: The method is thread-safe and can be called from any thread. It's important
    to note that the returned pointer may be null if the player hasn't initialized
    their social data yet, which typically happens during player initialization or
    when the player is in a state where social data isn't fully available.
  warnings: Be cautious when using this method as it may return nullptr if the player's
    social data hasn't been initialized. Always check for null before accessing social
    data to avoid crashes or undefined behavior.
  related:
  - GetSocial
  - SetSocial
  - SocialList
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T16:21:33.318584'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
