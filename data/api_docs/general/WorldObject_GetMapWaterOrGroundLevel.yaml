api:
  class: WorldObject
  method: GetMapWaterOrGroundLevel
  signature: float WorldObject::GetMapWaterOrGroundLevel(float x, float y, float z,
    float * ground) const
documentation:
  brief: Retrieves the water or ground level at a specified location on the map.
  description: The GetMapWaterOrGroundLevel method calculates and returns the elevation
    (Z-coordinate) of either the ground or water surface at the given coordinates
    (x, y). If the 'ground' parameter is provided and not null, it will be filled
    with the ground level at that location. This method is commonly used in World
    of Warcraft's TrinityCore to determine terrain height for object placement, movement
    calculations, or environmental interactions such as swimming mechanics. The method
    accounts for both solid ground and water surfaces, making it essential for accurate
    positioning within the game world.
  parameters:
  - name: x
    description: The X coordinate of the location to query.
  - name: y
    description: The Y coordinate of the location to query.
  - name: z
    description: The Z coordinate of the location to query (used as a reference point).
  - name: ground
    description: Optional pointer to a float that will be filled with the ground level
      at the specified coordinates. If null, this value is ignored.
  returns: Returns the Z-coordinate representing either the water surface or ground
    level at the specified (x, y) location. If the area is underwater, it returns
    the water level; otherwise, it returns the ground level.
  examples:
  - title: Basic usage to get elevation
    code: 'float x = 100.0f;

      float y = 200.0f;

      float z = 50.0f;

      float groundLevel = 0.0f;

      float elevation = unit->GetMapWaterOrGroundLevel(x, y, z, &groundLevel);

      // ''elevation'' now contains the Z-level at (x,y), and ''groundLevel'' has
      the actual ground level.'
    language: cpp
  - title: Checking if an object is underwater
    code: "float x = 100.0f;\nfloat y = 200.0f;\nfloat z = 50.0f;\nfloat groundLevel\
      \ = 0.0f;\nfloat waterOrGroundLevel = unit->GetMapWaterOrGroundLevel(x, y, z,\
      \ &groundLevel);\nif (waterOrGroundLevel < z)\n{\n    // Object is underwater\n\
      }\nelse\n{\n    // Object is above water\n}"
    language: cpp
  notes: This method internally uses the map's height and liquid data to determine
    elevation. It may involve terrain sampling or lookup tables depending on the implementation.
    For performance-critical code, caching results where possible is recommended.
  warnings: Ensure that x and y coordinates are within valid map boundaries; otherwise,
    behavior may be undefined or result in invalid elevation values. The 'ground'
    parameter should be checked for null before use to avoid runtime errors.
  related:
  - GetMap
  - GetPositionZ
  - IsInWater
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T21:59:47.877953'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
