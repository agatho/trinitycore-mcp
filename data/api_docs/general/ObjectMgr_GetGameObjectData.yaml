api:
  class: ObjectMgr
  method: GetGameObjectData
  signature: const int * ObjectMgr::GetGameObjectData(int spawnId) const
documentation:
  brief: Retrieves game object data associated with a specific spawn ID
  description: The GetGameObjectData method retrieves a pointer to an array of integers
    containing data associated with a specified game object spawn ID. This method
    is typically used to access configuration or runtime data for game objects such
    as creatures, items, or world objects within the TrinityCore framework. The returned
    integer array may contain various metadata including position coordinates, orientation,
    health values, or other object-specific properties depending on how the data was
    initialized. The method performs a lookup in an internal data structure mapping
    spawn IDs to their corresponding data arrays and returns a const pointer to ensure
    data integrity during read operations.
  parameters: []
  returns: A const pointer to an integer array containing game object data for the
    specified spawn ID, or nullptr if no data is found for the given spawn ID
  examples:
  - title: Basic usage example
    code: "const int* data = sObjectMgr->GetGameObjectData(12345);\nif (data != nullptr)\
      \ {\n    // Process game object data\n    int x = data[0];\n    int y = data[1];\n\
      \    int z = data[2];\n}"
    language: cpp
  - title: Error handling example
    code: "const int* data = sObjectMgr->GetGameObjectData(99999);\nif (data == nullptr)\
      \ {\n    // Handle case where spawn ID doesn't exist\n    sLog->outError(\"\
      No game object data found for spawn ID 99999\");\n} else {\n    // Use the data\n\
      \    int health = data[5];\n}"
    language: cpp
  notes: This method assumes that the internal data structures have been properly
    initialized with game object data. The returned pointer is valid only as long
    as the underlying data structure remains unchanged and should not be modified
    directly. Performance may be impacted if large numbers of spawn ID lookups are
    performed frequently without caching.
  warnings: The returned pointer must never be freed or modified directly, as it points
    to internal managed memory. Accessing elements beyond the allocated array bounds
    will result in undefined behavior. This method is not thread-safe and should be
    used with appropriate synchronization if called from multiple threads simultaneously.
  related:
  - GetCreatureData
  - GetObjectData
  - GetGOData
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:44:05.166116'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
