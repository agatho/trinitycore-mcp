api:
  class: Player
  method: GetBlockPercent
  signature: float Player::GetBlockPercent(uint8 attackerLevel) const
documentation:
  brief: Calculates the block chance percentage for the player based on attacker level.
  description: This method returns the block chance percentage for the player, which
    is determined by comparing the player's level to the attacker's level. The calculation
    considers the difference in levels between the player and the attacker to determine
    the base block chance. This method is used primarily in combat calculations to
    determine the probability of blocking an attack. It takes into account the player's
    defensive stats and level difference to compute the final block chance value.
  parameters: []
  returns: Returns a float value representing the block chance percentage. The value
    typically ranges from 0.0 to 100.0, where 0.0 indicates no chance of blocking
    and 100.0 indicates maximum chance of blocking.
  examples:
  - title: Basic usage example
    code: 'float blockChance = player->GetBlockPercent(60);

      // This returns the block chance percentage for a level 60 attacker

      '
    language: cpp
  - title: Combat calculation example
    code: 'uint8 attackerLevel = 60;

      float blockChance = player->GetBlockPercent(attackerLevel);

      // Used in combat calculations to determine blocking probability

      '
    language: cpp
  notes: The method is part of the player's defensive statistics calculation and should
    be used in conjunction with other defensive stats such as dodge, parry, and defense.
    This method does not account for any buffs or debuffs that may affect block chance.
    It only considers the base level difference between the player and attacker.
  warnings: This method is typically used in combat calculations and may not reflect
    real-time block chance if the player has buffs or debuffs affecting their defensive
    stats. Care should be taken when using this method in scenarios where player's
    defensive stats are modified by external factors.
  related:
  - GetDodgePercent
  - GetParryPercent
  - GetDefense
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:18:58.496216'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
