api:
  class: BehaviorManager
  method: GetTimeSinceLastUpdate
  signature: uint32 BehaviorManager::GetTimeSinceLastUpdate() const
documentation:
  brief: Returns the time elapsed since the last behavior update in milliseconds.
  description: The GetTimeSinceLastUpdate method calculates and returns the number
    of milliseconds that have passed since the last behavior update occurred for this
    BehaviorManager instance. This is typically used within AI systems to determine
    how frequently behaviors should be evaluated or updated. The value represents
    a delta time that can be used for timing-based logic, such as determining when
    to trigger specific actions or when to perform periodic checks. This method relies
    on an internal timestamp tracking mechanism that is updated whenever the behavior
    manager's update function is called.
  parameters: []
  returns: A uint32 value representing the number of milliseconds elapsed since the
    last behavior update. Returns 0 if no update has occurred yet or if the internal
    timer has not been initialized.
  examples:
  - title: Basic usage to check time since last update
    code: "uint32 msSinceLastUpdate = behaviorManager->GetTimeSinceLastUpdate();\n\
      if (msSinceLastUpdate > 1000)\n{\n    // Perform action every second\n    DoSomething();\n\
      }"
    language: cpp
  - title: Using time delta for AI decision making
    code: "uint32 deltaTime = behaviorManager->GetTimeSinceLastUpdate();\nif (deltaTime\
      \ > 500)\n{\n    // Update AI behavior only every 500ms\n    behaviorManager->UpdateAI();\n\
      }"
    language: cpp
  notes: This method assumes that the BehaviorManager maintains an internal timestamp
    of the last update. The accuracy of this value depends on how frequently the manager's
    update function is called and whether it properly updates its internal timer.
    In a typical TrinityCore environment, this would be called from within AI update
    loops where timing precision is important for behavior consistency.
  warnings: Be cautious when using this method in high-frequency update scenarios
    as it may introduce performance overhead if called excessively. Also, ensure that
    the BehaviorManager instance has been properly initialized and that its internal
    timer is valid before calling this method to avoid unexpected results.
  related:
  - Update
  - SetLastUpdateTime
  - GetLastUpdateTime
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:02:23.895661'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
