api:
  class: AuraEffect
  method: HandleShapeshiftBoosts
  signature: void AuraEffect::HandleShapeshiftBoosts(Unit * target, bool apply) const
documentation:
  brief: Applies or removes shapeshift boosts to a target unit.
  description: The HandleShapeshiftBoosts method manages the application and removal
    of aura effects that modify a unit's attributes while in shapeshift forms. This
    method is typically invoked when an aura affecting shapeshift abilities is applied
    or removed from a unit, adjusting their stats, abilities, or other properties
    accordingly. It ensures that the correct bonuses or penalties are added or subtracted
    based on the current shapeshift state and aura context.
  parameters:
  - name: target
    description: The Unit object to which the shapeshift boosts are applied or removed.
      This parameter specifies the unit whose attributes will be modified by the aura
      effect.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the shapeshift boosts. When true, the method applies the aura's effects; when
      false, it removes them.
  returns: null
  examples:
  - title: Applying Shapeshift Boosts
    code: 'AuraEffect* auraEffect = ...;

      Unit* target = player;

      auraEffect->HandleShapeshiftBoosts(target, true); // Apply shapeshift boosts'
    language: cpp
  - title: Removing Shapeshift Boosts
    code: 'AuraEffect* auraEffect = ...;

      Unit* target = player;

      auraEffect->HandleShapeshiftBoosts(target, false); // Remove shapeshift boosts'
    language: cpp
  notes: This method is part of the aura system in TrinityCore and is commonly used
    for handling druid shapeshift forms such as Cat Form, Bear Form, and others. It
    interacts with the unit's stat modifiers and may trigger updates to display or
    gameplay mechanics.
  warnings: Ensure that the target unit is valid before calling this method, as passing
    a null pointer could lead to undefined behavior. Also, be cautious when applying
    or removing boosts in rapid succession, as it might cause visual or gameplay inconsistencies.
  related:
  - AuraEffect::ApplyModifier
  - AuraEffect::RemoveModifier
  - Unit::UpdateStats
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:01:17.942758'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
