api:
  class: ScriptMgr
  method: OnPlayerKilledByCreature
  signature: void ScriptMgr::OnPlayerKilledByCreature(Creature * killer, Player *
    killed)
documentation:
  brief: Invoked when a creature kills a player, allowing scripts to execute custom
    logic.
  description: The OnPlayerKilledByCreature method is a callback function in the TrinityCore
    ScriptMgr class that gets triggered whenever a Creature successfully kills a Player.
    This method serves as an event handler for player death caused by creatures, enabling
    developers to implement custom behaviors such as quest progress updates, loot
    modifications, or reward distributions. The method does not return any value and
    is typically used within script extensions to modify game behavior during combat
    encounters. It's important to note that this function may be called multiple times
    per player kill depending on the server configuration and scripting setup.
  parameters:
  - name: killer
    description: Pointer to the Creature object that caused the player's death. This
      parameter is guaranteed to be valid during execution.
  - name: killed
    description: Pointer to the Player object who was killed by the creature. This
      parameter is guaranteed to be valid during execution.
  returns: null
  examples:
  - title: Basic Script Implementation
    code: "class MyScript : public ScriptObject\n{\npublic:\n    MyScript() : ScriptObject(\"\
      MyScript\") {}\n\n    void OnPlayerKilledByCreature(Creature* killer, Player*\
      \ killed) override\n    {\n        // Log the event\n        sLog->outString(\"\
      Player %s was killed by %s\", killed->GetName().c_str(), killer->GetName().c_str());\n\
      \        \n        // Award quest credit if applicable\n        if (killer->GetEntry()\
      \ == 12345)\n            killed->KilledMonsterCredit(12345);\n    }\n};"
    language: cpp
  - title: Advanced Custom Reward System
    code: "class CombatRewardsScript : public ScriptObject\n{\npublic:\n    CombatRewardsScript()\
      \ : ScriptObject(\"CombatRewardsScript\") {}\n\n    void OnPlayerKilledByCreature(Creature*\
      \ killer, Player* killed) override\n    {\n        // Only process if the killer\
      \ is a specific type of mob\n        if (killer->GetEntry() == 54321)\n    \
      \    {\n            // Give gold reward\n            uint32 goldReward = 1000;\n\
      \            killed->ModifyMoney(goldReward);\n            \n            //\
      \ Send custom message\n            killed->SendNotification(\"You received %u\
      \ gold for defeating the creature!\", goldReward);\n            \n         \
      \   // Trigger a custom event\n            sScriptMgr->OnPlayerKill(killed,\
      \ killer);\n        }\n    }\n};"
    language: cpp
  notes: This method is called from within the core game loop and should avoid heavy
    computations or blocking operations. The pointers passed to this function are
    guaranteed to be valid during execution but may become invalid after the function
    returns. Script developers should ensure that their implementations do not cause
    performance bottlenecks or infinite loops.
  warnings: Avoid modifying player state in ways that could cause crashes or exploit
    vulnerabilities. Be cautious when accessing creature data that might change during
    the execution of this method. Do not call methods that may recursively trigger
    this same event handler, as it can lead to stack overflow conditions.
  related:
  - OnPlayerKilledByPlayer
  - OnPlayerDeath
  - OnCreatureKill
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T22:18:14.960843'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
