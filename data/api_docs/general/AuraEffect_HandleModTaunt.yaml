api:
  class: AuraEffect
  method: HandleModTaunt
  signature: void AuraEffect::HandleModTaunt(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes taunt effect on target based on aura application state
  description: The HandleModTaunt method manages the taunt mechanic for an aura effect,
    modifying the target's behavior to focus aggro on the caster. This method is invoked
    during aura application or removal to adjust the target's threat generation and
    targeting behavior. It typically affects mobs that are under the influence of
    taunt effects, causing them to shift their attention from other targets to the
    caster. The method operates based on the aura application state (apply or remove)
    and the mode parameter which determines how the taunt is processed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's target, caster,
      and application state.
  - name: mode
    description: The mode of operation for the taunt effect. Typically indicates how
      the taunt should be processed (e.g., 0 for normal taunt, 1 for forced taunt).
      Values may vary based on implementation details.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the taunt effect. When true, target will be taunted; when false, taunt is removed.
  returns: null
  examples:
  - title: Basic Taunt Application
    code: "void ApplyTaunt(AuraApplication* aurApp) {\n    AuraEffect* aura = new\
      \ AuraEffect();\n    aura->HandleModTaunt(aurApp, 0, true);\n}"
    language: cpp
  - title: Removing Taunt Effect
    code: "void RemoveTaunt(AuraApplication* aurApp) {\n    AuraEffect* aura = new\
      \ AuraEffect();\n    aura->HandleModTaunt(aurApp, 0, false);\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and integrates
    with the mob AI system to modify target selection behavior. The taunt effect typically
    works by modifying the threat table of the affected creature, making it prioritize
    the caster over other targets.
  warnings: Improper usage of this method can cause unexpected behavior in mob targeting
    and threat management. Ensure that aurApp is valid and properly initialized before
    calling this method. Incorrect mode values may lead to undefined behavior or improper
    taunt application.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - AuraApplication::GetTarget
  - AuraApplication::GetCaster
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:18:44.196360'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
