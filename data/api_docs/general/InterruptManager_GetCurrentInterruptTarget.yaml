api:
  class: InterruptManager
  method: GetCurrentInterruptTarget
  signature: InterruptTarget * InterruptManager::GetCurrentInterruptTarget()
documentation:
  brief: Retrieves the current target being interrupted by the interrupt manager.
  description: The GetCurrentInterruptTarget method returns a pointer to the InterruptTarget
    object that is currently being processed for interruption. This method is typically
    used within the context of spell or ability interruption systems in TrinityCore's
    game engine. The returned pointer may be null if no interrupt target is currently
    active. This method does not modify any internal state and is generally safe to
    call during gameplay loops.
  parameters: []
  returns: A pointer to an InterruptTarget object representing the current interrupt
    target, or nullptr if no interrupt target is active.
  examples:
  - title: Basic Usage Example
    code: "InterruptTarget* target = interruptManager->GetCurrentInterruptTarget();\n\
      if (target != nullptr)\n{\n    // Process the interrupt target\n    target->HandleInterrupt();\n\
      }"
    language: cpp
  notes: This method is part of the interrupt management system and should only be
    called when an interruption process is actively occurring. The returned InterruptTarget
    pointer is valid only until the next call to a method that modifies the interrupt
    state.
  warnings: null
  related:
  - InterruptManager::SetCurrentInterruptTarget
  - InterruptManager::ClearCurrentInterruptTarget
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:36:29.216719'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
