api:
  class: Unit
  method: HasRootAura
  signature: bool Unit::HasRootAura() const
documentation:
  brief: Checks if the unit has a root aura applied.
  description: This method determines whether the unit currently has a root effect
    active, which prevents movement and action execution. It is commonly used in combat
    situations to verify if a unit is immobilized by spells or abilities. The method
    returns true when the unit is under the effects of a root spell or aura, false
    otherwise. This functionality is essential for game mechanics involving movement
    restrictions and combat behavior.
  parameters: []
  returns: Returns true if the unit has a root aura applied, false otherwise.
  examples:
  - title: Basic usage example
    code: "if (unit->HasRootAura())\n{\n    // Unit is rooted\n    // Perform actions\
      \ accordingly\n}\nelse\n{\n    // Unit is not rooted\n    // Allow normal movement\n\
      }"
    language: cpp
  notes: This method typically checks for specific root effects such as 'Root' or
    similar mechanics. Implementation may involve checking aura application status,
    and performance considerations are minimal since it's a simple boolean check.
  warnings: This method should not be used to determine if a unit is immobile in all
    cases, as some root effects might not be detectable through this method alone.
    Consider using additional methods like checking for movement restrictions or specific
    spell effects.
  related:
  - Unit::HasAura
  - Unit::HasSpell
  - Unit::IsInCombat
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:18:51.083732'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
