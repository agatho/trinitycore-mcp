api:
  class: Guild
  method: Create
  signature: bool Guild::Create(Player * pLeader, std::string_view name)
documentation:
  brief: Creates a new guild with the specified leader and name.
  description: The Create method initializes a new guild in the game world, assigning
    the provided player as the guild leader. It performs validation checks on the
    guild name and ensures the leader player is valid before proceeding with guild
    creation. This method handles all necessary database operations to persist the
    new guild data and updates the leader's guild membership status. The method returns
    true upon successful creation, or false if any validation fails or the operation
    cannot be completed due to game restrictions.
  parameters:
  - name: pLeader
    description: Pointer to the Player object that will become the guild leader. Must
      be a valid player instance with an active session.
  - name: name
    description: String view containing the desired guild name. Must be between 1
      and 24 characters, contain only valid ASCII characters, and not be a reserved
      or duplicate guild name.
  returns: True if the guild was successfully created with the specified leader and
    name; false otherwise. Returns false if the player is invalid, the guild name
    is invalid, or if the creation process fails due to game restrictions.
  examples:
  - title: Basic Guild Creation
    code: "Player* leader = ...; // Get a valid player\nstd::string_view guildName\
      \ = \"MyAwesomeGuild\";\nbool success = guild->Create(leader, guildName);\n\
      if (success) {\n    // Guild created successfully\n} else {\n    // Handle creation\
      \ failure\n}"
    language: cpp
  notes: This method internally performs database transactions and updates player
    state. It should only be called when the player is in a valid game state with
    an active session. The guild name validation includes checking against reserved
    names, existing guilds, and character restrictions.
  warnings: Calling this method without proper validation of the player or guild name
    may result in undefined behavior or database corruption. Ensure that the player
    object is fully initialized and has an active connection before calling this method.
  related:
  - Guild::GetLeader
  - Guild::GetName
  - Guild::AddMember
  - Guild::RemoveMember
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:39:59.499913'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
