api:
  class: WorldObject
  method: CastSpell
  signature: int WorldObject::CastSpell(const int & targets, uint32 spellId, const
    int & args)
documentation:
  brief: Initiates casting of a spell on a target object.
  description: The CastSpell method allows a WorldObject to cast a specified spell
    on a target object. This method handles the spell casting process including validation,
    target selection, and execution. It is commonly used in AI scripts for NPCs to
    cast spells on targets, or in player actions where the spell needs to be executed
    against a specific target. The method returns an integer indicating success or
    failure of the spell casting operation.
  parameters:
  - name: targets
    description: The target object on which the spell will be cast. This can be a
      WorldObject, GameObject, or Unit that represents the target for the spell.
  - name: spellId
    description: The identifier of the spell to be cast. This is typically a unique
      ID from the Spell.dbc file that corresponds to a specific spell in the game
      database.
  - name: args
    description: Additional arguments or parameters for the spell casting, such as
      custom targets or modifiers. This parameter allows for more complex spell execution
      scenarios.
  returns: Returns 0 if the spell casting fails due to invalid target or spell, 1
    if the spell casting succeeds and is executed successfully, or other values depending
    on specific implementation details.
  examples:
  - title: Basic Spell Casting Example
    code: 'WorldObject* pTarget = GetVictim();

      int result = CastSpell(pTarget, 12345, 0);'
    language: cpp
  - title: Advanced Spell Casting with Custom Args
    code: "WorldObject* pTarget = GetVictim();\nint result = CastSpell(pTarget, 12345,\
      \ 1);\nif (result == 1) {\n    // Spell successfully cast\n}"
    language: cpp
  notes: The method requires valid target and spell ID to function properly. It should
    be used carefully in AI scripts where the target may not always be valid. Performance
    considerations include the overhead of spell validation and target checking, especially
    when used frequently in combat AI.
  warnings: Improper use of this method can lead to invalid target or spell ID errors,
    which may cause the spell casting to fail silently. Always ensure that targets
    and spell IDs are valid before calling this method.
  related:
  - CastSpell
  - SpellCast
  - GetVictim
  - GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:48:33.744459'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
