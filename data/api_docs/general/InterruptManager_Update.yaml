api:
  class: InterruptManager
  method: Update
  signature: void InterruptManager::Update(uint32 diff)
documentation:
  brief: Updates the interrupt manager's internal state based on the elapsed game
    time.
  description: The InterruptManager::Update method is responsible for processing and
    managing interrupt-related logic within the game loop. It handles the timing and
    execution of interrupts that may be triggered by player actions, spells, or other
    game events. This method typically processes queued interrupts, checks for interrupt
    conditions, and updates internal timers or states based on the time difference
    passed as a parameter. The method is called regularly during the game's update
    cycle to ensure timely handling of interrupt events.
  parameters:
  - name: diff
    description: The time elapsed in milliseconds since the last update call. This
      value is used to determine how much time has passed and whether any interrupt
      conditions should be evaluated or processed.
  returns: null
  examples:
  - title: Basic Update Call
    code: "void GameWorld::Update(uint32 diff)\n{\n    // ... other update logic ...\n\
      \    m_interruptManager.Update(diff);\n    // ... other update logic ...\n}"
    language: cpp
  notes: This method is typically called from the main game loop and should be invoked
    with accurate timing information. The implementation may involve checking for
    spell interrupts, movement interruptions, or other gameplay events that require
    time-based processing.
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T00:05:38.722041'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
