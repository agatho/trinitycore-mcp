api:
  class: Spell
  method: SetExecutedCurrently
  signature: void Spell::SetExecutedCurrently(bool yes)
documentation:
  brief: Sets whether the spell has been executed currently.
  description: This method controls the execution state of a spell within the TrinityCore
    framework, determining whether the spell has been processed and completed in the
    current execution cycle. It is primarily used to manage spell execution flow and
    prevent duplicate processing of spells during a single tick. The method affects
    how the spell's effects are handled internally, particularly when dealing with
    spell cooldowns and execution timing.
  parameters: []
  returns: null
  examples:
  - title: Setting Spell Execution State
    code: 'Spell* spell = new Spell();

      spell->SetExecutedCurrently(true);

      // This indicates the spell has been executed

      '
    language: cpp
  notes: This method is typically used internally by the core to track spell execution
    status and prevent double execution. It should be used carefully as it affects
    the internal state of the spell object.
  warnings: Improper use of this method can lead to incorrect spell behavior or execution
    timing issues, particularly in complex spell systems involving multiple effects
    or cooldowns.
  related:
  - Spell::IsExecutedCurrently
  - Spell::GetExecuteStatus
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T14:16:32.432359'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
