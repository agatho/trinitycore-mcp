api:
  class: Player
  method: SetPrimarySpecialization
  signature: void Player::SetPrimarySpecialization(uint32 spec)
documentation:
  brief: Sets the primary specialization for the player character.
  description: This method allows a player to set their primary specialization to
    a specific value, which determines their class specialization and affects their
    gameplay attributes. The method updates the player's active specialization state
    within the game world, ensuring that all relevant mechanics are properly applied
    based on the selected specialization. It is typically used during character creation
    or when changing specializations during gameplay.
  parameters:
  - name: spec
    description: The specialization ID to set as primary. Valid values are 0-3 for
      different classes (e.g., 0 for Arcane, 1 for Fire, 2 for Frost, 3 for Unholy).
      For warrior, the valid values are 0-2 ( Arms, Fury, Protection ). For paladin,
      it's 0-3 ( Holy, Protection, Retribution ). For druid, it's 0-3 ( Feral, Balance,
      Restoration ). For shaman, it's 0-3 ( Elemental, Enhancement, Restoration ).
      For hunter, it's 0-2 ( Beast Mastery, Marksmanship, Survival ). For rogue, it's
      0-3 ( Assassination, Outlaw, Subtlety ). For priest, it's 0-3 ( Shadow, Discipline,
      Holy ). For death knight, it's 0-3 ( Blood, Frost, Unholy ). For mage, it's
      0-3 ( Arcane, Fire, Frost ). For warlock, it's 0-3 ( Affliction, Demonology,
      Destruction ). For monk, it's 0-3 ( Brewmaster, Windwalker, Mistweaver ).
  returns: null
  examples:
  - title: Setting Primary Specialization
    code: 'Player* player = new Player();

      player->SetPrimarySpecialization(1); // Set to Fire specialization'
    language: cpp
  notes: This method should be used carefully as it affects the player's gameplay
    attributes and abilities. The specialization must be valid for the player's class,
    otherwise it may cause issues with game mechanics.
  warnings: Improper use of this method can lead to incorrect specialization states
    and potentially affect gameplay mechanics. Make sure the spec value corresponds
    to a valid specialization for the player's class.
  related:
  - GetPrimarySpecialization
  - SetSecondarySpecialization
  - GetSecondarySpecialization
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:53:39.461532'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
