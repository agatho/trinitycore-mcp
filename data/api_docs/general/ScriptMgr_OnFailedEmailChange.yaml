api:
  class: ScriptMgr
  method: OnFailedEmailChange
  signature: void ScriptMgr::OnFailedEmailChange(uint32 accountId)
documentation:
  brief: Called when an email change attempt fails for a player account
  description: This method is invoked by the ScriptMgr when a player attempts to change
    their account's email address but the operation fails. It serves as a hook for
    custom scripts or modules to perform actions in response to failed email changes,
    such as logging the event, sending notifications, or triggering additional validation
    logic. The method provides the account identifier of the affected user, allowing
    scripts to access account-specific data or perform account-related operations.
    This callback is typically used within the context of account management and security
    systems.
  parameters:
  - name: accountId
    description: The unique identifier of the player's account for which the email
      change attempt failed. This value represents the internal database ID used by
      TrinityCore to identify accounts.
  returns: null
  examples:
  - title: Basic logging of failed email changes
    code: "void MyScript::OnFailedEmailChange(uint32 accountId)\n{\n    sLog->outInfo(LOG_FILTER_SCRIPTS,\
      \ \"Email change failed for account %u\", accountId);\n}"
    language: cpp
  - title: Sending notification to admin on failed email change
    code: "void MyScript::OnFailedEmailChange(uint32 accountId)\n{\n    if (Player*\
      \ player = sObjectAccessor->FindPlayerByLowGUID(accountId))\n    {\n       \
      \ ChatHandler(player->GetSession()).SendSysMessage(\"Email change attempt failed.\
      \ Please contact an administrator.\");\n    }\n}"
    language: cpp
  notes: This method is part of the TrinityCore scripting system and is intended for
    use in custom scripts or modules that extend game functionality. It's called from
    within the core's account management flow, so any logic implemented here should
    be lightweight to avoid performance impact on user operations.
  warnings: Ensure that any actions performed in this callback do not introduce security
    vulnerabilities or cause excessive resource consumption. Avoid performing blocking
    operations or database queries that could delay player interactions.
  related:
  - OnEmailChange
  - OnAccountLogin
  - OnAccountLogout
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T22:49:26.567051'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
