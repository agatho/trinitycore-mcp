api:
  class: GatheringManager
  method: GetDetectionRange
  signature: float GatheringManager::GetDetectionRange() const
documentation:
  brief: Returns the detection range value used by the gathering manager for identifying
    nearby resources or objects.
  description: The GetDetectionRange method retrieves the float value representing
    the maximum distance at which the GatheringManager will detect and interact with
    gatherable objects such as herbs, ore veins, or mining nodes. This range is typically
    configured based on game mechanics and player interaction rules within the TrinityCore
    framework. The returned value defines how far a player's character can 'see' and
    interact with resources in the world, affecting gameplay behavior like auto-looting
    or resource detection. This method does not take any parameters and returns a
    constant float value that represents the detection radius in game units.
  parameters: []
  returns: A float value representing the detection range in game units (typically
    meters or yards). This value defines how far the gathering manager will search
    for nearby resources before triggering interaction events.
  examples:
  - title: Basic Usage Example
    code: 'GatheringManager* manager = player->GetGatheringManager();

      float detectionRange = manager->GetDetectionRange();

      TC_LOG_INFO("misc", "Player''s gathering detection range is: %f", detectionRange);'
    language: cpp
  - title: Using Detection Range for Custom Logic
    code: "GatheringManager* manager = player->GetGatheringManager();\nfloat range\
      \ = manager->GetDetectionRange();\nif (range > 10.0f) {\n    // Perform actions\
      \ based on wide detection range\n    TC_LOG_DEBUG(\"gathering\", \"Wide detection\
      \ range detected: %f\", range);\n}"
    language: cpp
  notes: This method is typically used internally by the gathering system to determine
    valid interaction distances for players. The value returned may vary depending
    on player class, specialization, or equipped items that modify gathering abilities.
    It's recommended to cache this value if it's accessed frequently during performance-critical
    code paths.
  warnings: Ensure that the GatheringManager instance is properly initialized before
    calling this method, as accessing an uninitialized manager could lead to undefined
    behavior. The returned range should not be modified directly; use appropriate
    setter methods or configuration files for changes.
  related:
  - SetDetectionRange
  - GetGatheredObjects
  - IsInRange
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T13:29:30.394669'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
