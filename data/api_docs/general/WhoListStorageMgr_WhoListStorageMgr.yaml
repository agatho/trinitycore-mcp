api:
  class: WhoListStorageMgr
  method: WhoListStorageMgr
  signature: void WhoListStorageMgr::WhoListStorageMgr(WhoListStorageMgr && param0)
documentation:
  brief: Moves a WhoListStorageMgr object to another instance, transferring all internal
    data and resources.
  description: The WhoListStorageMgr move constructor initializes a new WhoListStorageMgr
    object by transferring ownership of resources from an existing WhoListStorageMgr
    object. This operation is typically used when moving objects between scopes or
    containers to avoid unnecessary copying. The source object becomes invalid after
    the move and should not be used. This method is part of the standard C++ move
    semantics implementation for the WhoListStorageMgr class, which manages storage
    for who-list queries in the TrinityCore server environment.
  parameters:
  - name: param0
    description: An rvalue reference to the source WhoListStorageMgr object to be
      moved from. After the move, this object will be left in a valid but unspecified
      state.
  returns: null
  examples:
  - title: Basic Move Constructor Usage
    code: 'WhoListStorageMgr storage1;

      // ... populate storage1 ...

      WhoListStorageMgr storage2 = std::move(storage1); // Moves storage1 to storage2'
    language: cpp
  - title: Move in Function Context
    code: "WhoListStorageMgr CreateStorage()\n{\n    WhoListStorageMgr storage;\n\
      \    // ... populate storage ...\n    return storage; // Move semantics automatically\
      \ used when returning by value\n}\n\nWhoListStorageMgr mainStorage = CreateStorage();\
      \ // Move from temporary to mainStorage"
    language: cpp
  notes: This is a move constructor, not a copy constructor. It should only be called
    with rvalue expressions or explicitly moved objects using std::move(). The move
    operation typically involves transferring pointers or handles rather than deep
    copying data structures, making it more efficient than copying.
  warnings: After calling this move constructor, the source object is left in a valid
    but unspecified state and must not be accessed or used. Attempting to use the
    moved-from object may result in undefined behavior or crashes.
  related:
  - WhoListStorageMgr::WhoListStorageMgr()
  - WhoListStorageMgr::~WhoListStorageMgr()
  - WhoListStorageMgr& WhoListStorageMgr::operator=(WhoListStorageMgr&&)
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:51:20.590636'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
