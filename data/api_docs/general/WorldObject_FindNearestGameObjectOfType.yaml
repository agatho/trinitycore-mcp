api:
  class: WorldObject
  method: FindNearestGameObjectOfType
  signature: GameObject * WorldObject::FindNearestGameObjectOfType(int type, float
    range) const
documentation:
  brief: Finds and returns the nearest GameObject of specified type within given range.
  description: This method searches for the closest GameObject of a specific type
    within a defined radius from the current WorldObject. It is commonly used in World
    of Warcraft scripting to locate game objects such as treasure chests, brewing
    cauldrons, or other interactive objects. The method performs a spatial search
    using the object's position and the specified range parameter, returning the nearest
    matching GameObject found. This functionality is essential for quest completion
    mechanics and player interaction with the game world.
  parameters:
  - name: type
    description: The type of GameObject to search for, typically corresponding to
      GameObjectTemplate::type field. Valid values include 0 (door), 1 (button), 2
      (traps), 3 (chest), etc. This parameter determines which category of game objects
      to look for.
  - name: range
    description: The maximum distance within which to search for GameObjects. This
      defines the radius around the WorldObject's position where the search occurs.
      Values are typically in meters, with common ranges being 10-50 yards depending
      on context.
  returns: Returns a pointer to the nearest GameObject of the specified type within
    the given range. If no matching GameObject is found within the range, it returns
    nullptr. The returned GameObject may be nullptr if the search fails or if the
    object has been destroyed.
  examples:
  - title: Basic usage example
    code: GameObject* nearestChest = player->FindNearestGameObjectOfType(3, 5.0f);
      // Find nearest chest within 5 meters
    language: cpp
  - title: Advanced usage example
    code: "GameObject* nearest = player->FindNearestGameObjectOfType(2, 10.0f); //\
      \ Find nearest trap within 10 meters\nif (nearest)\n{\n    // Do something with\
      \ the found GameObject\n    nearest->Use();\n}\nelse\n{\n    // Handle no object\
      \ found case\n}"
    language: cpp
  notes: This method uses spatial search algorithms that consider the WorldObject's
    position and the specified range. Performance can be affected by large ranges
    or numerous GameObjects in the vicinity. Thread safety depends on the underlying
    implementation; this method should not be called from multiple threads simultaneously
    without proper synchronization.
  warnings: The method may return nullptr if no matching GameObject exists within
    the specified range, so developers should always check for null before using the
    returned pointer. Also, this method does not account for GameObjects that might
    be hidden or invisible to players, which could lead to missed interactions.
  related:
  - FindNearestGameObject
  - GetGameObject
  - GetObjectByGuid
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:46:00.053028'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
