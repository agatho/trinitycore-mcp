api:
  class: Player
  method: GetSubGroup
  signature: uint8 Player::GetSubGroup() const
documentation:
  brief: Returns the subgroup number that the player is currently assigned to.
  description: This method retrieves the current subgroup number of the player within
    the group. It returns a value between 0 and 4, where 0 indicates that the player
    is not in any subgroup (i.e., in the main raid group), and values 1-4 indicate
    which subgroup the player belongs to. This method is commonly used in group management
    and raid handling logic to determine player positioning within the group structure.
    The value returned by this method corresponds to the internal subgroup tracking
    mechanism used by TrinityCore.
  parameters: []
  returns: Returns an integer value between 0 and 4 representing the subgroup number.
    Value 0 means the player is in the main group (not in any subgroup), while values
    1-4 represent subgroups 1-4 respectively.
  examples:
  - title: Basic usage example
    code: "uint8 subGroup = player->GetSubGroup();\nif (subGroup == 0)\n{\n    //\
      \ Player is in main group\n}\nelse\n{\n    // Player is in subgroup number subGroup\n\
      }"
    language: cpp
  notes: This method is thread-safe and does not require any special handling. It
    directly accesses the player's internal group data structure, so it should be
    used carefully when dealing with group changes.
  warnings: Be cautious when using this method in conjunction with group management
    functions; changing subgroups may affect the return value of this method.
  related:
  - GetGroup
  - GetSubGroup
  - SetSubGroup
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:18:43.682448'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
