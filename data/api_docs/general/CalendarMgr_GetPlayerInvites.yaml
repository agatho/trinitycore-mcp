api:
  class: CalendarMgr
  method: GetPlayerInvites
  signature: CalendarInviteStore CalendarMgr::GetPlayerInvites(int guid) const
documentation:
  brief: Retrieves all calendar invites associated with a specific player GUID.
  description: The GetPlayerInvites method fetches a collection of calendar invites
    for a given player identified by their global unique identifier (GUID). This function
    is typically used within the context of World of Warcraft's calendar system to
    retrieve pending invitations that have been sent to a particular player. The returned
    CalendarInviteStore contains all relevant invite data including event details,
    invite status, and sender information. It is important to note that this method
    operates on the server-side calendar manager and should only be called from appropriate
    game logic contexts where player data is accessible.
  parameters:
  - name: guid
    description: The global unique identifier (GUID) of the player whose calendar
      invites are being retrieved. This value uniquely identifies a specific player
      character within the game world.
  returns: A CalendarInviteStore object containing all calendar invites for the specified
    player. The store may be empty if no invites exist, or contain multiple invite
    entries depending on the player's invitation history.
  examples:
  - title: Retrieve and process player calendar invites
    code: "void ProcessPlayerInvites(uint32 playerGuid)\n{\n    CalendarInviteStore\
      \ invites = sCalendarMgr->GetPlayerInvites(playerGuid);\n    for (auto& invite\
      \ : invites)\n    {\n        // Process each invite\n        sLog->outString(\"\
      Received calendar invite for event %u from player %u\", \n                 \
      \      invite->EventId, invite->SenderGuid);\n    }\n}"
    language: cpp
  notes: This method is part of the TrinityCore calendar system and assumes that the
    CalendarMgr singleton has been properly initialized. The returned CalendarInviteStore
    should be handled carefully as it may contain sensitive player data. Consider
    thread safety when accessing this data from concurrent game systems.
  warnings: Ensure that the provided GUID corresponds to an actual existing player
    character, otherwise behavior is undefined. This method does not validate whether
    the player is currently online or offline; it simply retrieves stored invite data
    from the database.
  related:
  - GetPlayerEvents
  - GetEventInvites
  - AddCalendarInvite
  - RemoveCalendarInvite
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:30:13.407991'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
