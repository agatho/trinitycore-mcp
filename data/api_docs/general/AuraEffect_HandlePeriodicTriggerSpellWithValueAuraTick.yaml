api:
  class: AuraEffect
  method: HandlePeriodicTriggerSpellWithValueAuraTick
  signature: void AuraEffect::HandlePeriodicTriggerSpellWithValueAuraTick(Unit * target,
    Unit * caster) const
documentation:
  brief: Executes the periodic spell trigger effect when an aura tick occurs, applying
    a spell to the target with value-based parameters.
  description: The HandlePeriodicTriggerSpellWithValueAuraTick method is responsible
    for executing the logic associated with periodic aura effects that trigger another
    spell. This function is invoked during each tick of a periodic aura, such as those
    from DoTs (damage over time) or HoTs (heal over time), where the aura's effect
    includes triggering a separate spell with specific value parameters. It takes
    the target unit and caster unit as inputs to determine the context for spell application.
    This method is part of the core aura handling system in TrinityCore, ensuring
    proper execution of complex spell interactions that occur over time.
  parameters:
  - name: target
    description: The Unit object that is affected by the aura tick and will be targeted
      by the triggered spell.
  - name: caster
    description: The Unit object that cast the original aura and serves as the source
      for the triggered spell's execution context.
  returns: null
  examples:
  - title: Basic usage in aura tick handler
    code: "void MyAuraEffect::HandlePeriodicTriggerSpellWithValueAuraTick(Unit* target,\
      \ Unit* caster) const {\n    if (!target || !caster)\n        return;\n    \n\
      \    // Trigger a spell with value-based parameters on the target\n    SpellInfo\
      \ const* spellInfo = sSpellMgr->GetSpellInfo(12345);\n    if (spellInfo)\n \
      \       caster->CastSpell(target, spellInfo, true);\n}"
    language: cpp
  notes: This method is typically called internally by the aura system during tick
    processing. Developers should ensure that the target and caster units are valid
    before attempting to cast spells or perform operations on them. The method does
    not handle spell cooldowns or resource costs directly; these are managed by the
    core spell casting system.
  warnings: Ensure that the spell being triggered is properly validated and safe to
    cast in the given context. Improper handling of target or caster can lead to crashes
    or unexpected behavior. Avoid performing heavy operations within this method as
    it's called frequently during aura ticks.
  related:
  - AuraEffect::HandlePeriodicTriggerSpellAuraTick
  - AuraEffect::HandlePeriodicHealAuraTick
  - AuraEffect::HandlePeriodicDamageAuraTick
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:07:07.439001'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
