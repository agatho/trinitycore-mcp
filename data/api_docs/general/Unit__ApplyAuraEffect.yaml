api:
  class: Unit
  method: _ApplyAuraEffect
  signature: void Unit::_ApplyAuraEffect(Aura * aura, uint8 effIndex)
documentation:
  brief: Applies an aura effect to the target unit
  description: This method applies a specific aura effect to the target unit at the
    given index. It handles the execution of various aura effects such as stat modifications,
    damage over time, or periodic healing. The method ensures proper handling of the
    aura's application process and manages the interaction between the aura and the
    target unit's state. This function is typically used internally by the game engine
    to manage aura applications during combat or spell casting.
  parameters:
  - name: aura
    description: Pointer to the Aura object that will be applied. Must not be null
      and should represent a valid aura instance.
  - name: effIndex
    description: The index of the aura effect to apply. Valid range is 0-3, representing
      the three aura effects (or one effect if there are only two) in the aura.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      Aura* aura = new Aura;


      // Apply the first effect of the aura to the target

      target->_ApplyAuraEffect(aura, 0);'
    language: cpp
  - title: Advanced usage example
    code: '// Assuming we have a unit with multiple aura effects

      Unit* target = GetTarget();

      Aura* aura = new Aura;


      // Apply the second effect of the aura to the target

      target->_ApplyAuraEffect(aura, 1);


      // Apply the third effect of the aura to the target

      target->_ApplyAuraEffect(aura, 2);'
    language: cpp
  notes: The method is typically called during spell casting or aura application processes.
    It should be used carefully as it may affect the unit's state and behavior. This
    method is part of the internal aura management system and should not be directly
    invoked by external code unless explicitly required.
  warnings: Improper use of this method can lead to incorrect aura effects or unexpected
    behavior in units. Care must be taken when applying aura effects to ensure correct
    indexing and proper handling of the aura object.
  related:
  - Unit::ApplyAuraEffect
  - Unit::RemoveAura
  - Unit::AddAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:02:01.071440'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
