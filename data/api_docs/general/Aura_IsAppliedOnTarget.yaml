api:
  class: Aura
  method: IsAppliedOnTarget
  signature: bool Aura::IsAppliedOnTarget(int guid) const
documentation:
  brief: Checks whether the aura is applied to a specific target identified by GUID.
  description: The IsAppliedOnTarget method determines if the aura instance is currently
    active and applied to a particular unit, specified by its global unique identifier
    (GUID). This functionality is essential for managing aura states in World of Warcraft's
    combat system, particularly when checking whether effects such as buffs, debuffs,
    or magical auras are affecting a specific target. The method typically performs
    a lookup within the aura's internal data structures to verify the presence of
    the target in its application list. It is commonly used during combat events,
    spell processing, or aura management routines to ensure proper state tracking
    and prevent duplicate applications or incorrect targeting.
  parameters: []
  returns: Returns true if the aura is currently applied to the target with the specified
    GUID; otherwise returns false. A return value of false may indicate that the aura
    has expired, was removed, or never applied to the target in the first place.
  examples:
  - title: Check if an aura is applied to a player
    code: "if (aura->IsAppliedOnTarget(playerGuid)) {\n    // Aura is active on the\
      \ player\n    // Perform actions specific to active aura state\n}"
    language: cpp
  - title: Use in spell effect validation
    code: "void ApplySpellEffect(Unit* caster, Unit* target) {\n    if (!aura->IsAppliedOnTarget(target->GetGUID()))\
      \ {\n        // Apply aura to target if not already applied\n        aura->ApplyToTarget(target);\n\
      \    }\n}"
    language: cpp
  notes: This method is typically used in conjunction with other aura management functions
    like ApplyToTarget, RemoveTarget, or GetTargets. It's important to note that GUIDs
    must be valid and correspond to actual units in the game world for accurate results.
    The method does not perform any side effects or modifications to the aura state;
    it only reads current application status.
  warnings: Ensure that the GUID passed to this method corresponds to a valid unit,
    as passing an invalid or non-existent GUID may lead to undefined behavior or incorrect
    return values. Also, be aware that aura application status can change rapidly
    during combat events, so caching results from this method might not reflect real-time
    state.
  related:
  - ApplyToTarget
  - RemoveTarget
  - GetTargets
  - IsExpired
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:12:55.483935'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
