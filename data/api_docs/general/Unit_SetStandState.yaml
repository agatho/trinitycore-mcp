api:
  class: Unit
  method: SetStandState
  signature: void Unit::SetStandState(UnitStandStateType state, uint32 animKitID)
documentation:
  brief: Sets the stand state of a unit to specified state and animation kit ID.
  description: This method allows setting the stand state of a Unit object to a specific
    UnitStandStateType, with an optional animation kit ID. It is used primarily for
    controlling the stance or position of creatures or players in World of Warcraft.
    The method affects the visual representation of the unit and can influence gameplay
    mechanics such as combat behavior, movement restrictions, and interaction with
    other units. This method is typically called during initialization or when changing
    states during gameplay.
  parameters:
  - name: state
    description: The stand state type to set, which defines whether the unit should
      be standing, sitting, kneeling, or in other states. Valid values include UnitStandStateType::UNIT_STAND_STATE_STAND,
      UnitStandStateType::UNIT_STAND_STATESit, UnitStandStateType::UNIT_STAND_STATE_KNEEL,
      etc.
  - name: animKitID
    description: Optional animation kit ID that defines the specific animation to
      use for the stand state. This allows for more precise control over how the unit
      stands or sits in relation to animations and can be used to match specific game
      mechanics or visual effects.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->SetStandState(UnitStandStateType::UNIT_STAND_STATE_STAND, 0);

      '
    language: cpp
  - title: Advanced usage example with animation kit
    code: 'Unit* unit = new Unit;

      unit->SetStandState(UnitStandStateType::UNIT_STAND_STATE_KNEEL, 12345);

      '
    language: cpp
  notes: Implementation details include handling of animation kits and state transitions.
    This method should be used carefully as it can affect unit behavior in combat
    or movement. Performance considerations include avoiding frequent calls during
    gameplay, as this may cause visual flickering or delays.
  warnings: This method should not be called during combat or movement to avoid potential
    game mechanics issues. Care must be taken when setting animation kit IDs to ensure
    compatibility with existing animations and states.
  related:
  - GetStandState
  - SetDisplayId
  - SetFacing
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T00:48:12.077499'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
