api:
  class: ReputationMgr
  method: SetReputation
  signature: bool ReputationMgr::SetReputation(const FactionEntry * factionEntry,
    int32 standing)
documentation:
  brief: Sets the reputation level for a specified faction
  description: The SetReputation method updates the player's standing with a given
    faction. It takes a FactionEntry pointer and an integer representing the desired
    standing level. The method validates the input parameters and updates the internal
    reputation tracking for the player. This function is typically used in game logic
    to modify player relationships with various factions, such as increasing or decreasing
    reputation through quest rewards, NPC interactions, or other gameplay events.
    The standing value should be within the valid range defined by the game's faction
    system.
  parameters:
  - name: factionEntry
    description: Pointer to the FactionEntry structure that defines the faction whose
      reputation is being modified. Must not be null and must point to a valid faction
      entry in the game's database.
  - name: standing
    description: Integer value representing the desired reputation level (standing)
      for the faction. Valid values typically range from -42000 to 42000, where negative
      values indicate hostile standing and positive values indicate friendly standing.
  returns: Returns true if the reputation was successfully set and updated, false
    otherwise. The method may return false if the faction entry is invalid or if the
    standing value is outside acceptable bounds.
  examples:
  - title: Setting Player Reputation with a Friendly Faction
    code: "FactionEntry const* faction = sFactionStore.LookupEntry(72); // Gnomeregan\n\
      if (faction)\n{\n    reputationMgr->SetReputation(faction, 42000); // Set to\
      \ Exalted\n}"
    language: cpp
  - title: Reducing Reputation with a Hostile Faction
    code: "FactionEntry const* faction = sFactionStore.LookupEntry(942); // The League\
      \ of Arathor\nif (faction)\n{\n    reputationMgr->SetReputation(faction, -42000);\
      \ // Set to Hated\n}"
    language: cpp
  notes: This method directly modifies the player's reputation state and may trigger
    UI updates or other side effects. The faction entry must be valid and correspond
    to an existing faction in the game database. This function should not be called
    during active combat or in performance-critical sections of code due to potential
    database operations.
  warnings: Calling this method with invalid faction entries or out-of-range standing
    values may result in undefined behavior or corrupted reputation data. Always validate
    that the FactionEntry pointer is valid before calling this method. Be cautious
    when modifying reputation during quest completion or NPC interactions as it might
    affect quest progression or achievement tracking.
  related:
  - GetReputation
  - ModifyReputation
  - IsAtWar
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:23:13.398111'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
