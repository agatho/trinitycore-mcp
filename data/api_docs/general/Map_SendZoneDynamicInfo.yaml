api:
  class: Map
  method: SendZoneDynamicInfo
  signature: void Map::SendZoneDynamicInfo(uint32 zoneId, Player * player) const
documentation:
  brief: Sends dynamic zone information to a player, including weather, time of day,
    and other environmental data.
  description: The SendZoneDynamicInfo method is responsible for transmitting real-time
    environmental data specific to a given zone to a particular player. This includes
    information such as current weather conditions, time-based effects, and any dynamic
    zone modifiers that may affect gameplay. The method ensures that players receive
    up-to-date information about their surroundings without requiring constant polling
    from the client. It is typically invoked when a player enters a new zone or when
    environmental conditions change dynamically within the zone. This functionality
    contributes to the immersive experience by making the game world feel alive and
    responsive.
  parameters:
  - name: zoneId
    description: The unique identifier of the zone for which dynamic information is
      being sent. This ID corresponds to a specific area in the game world with its
      own environmental properties and behaviors.
  - name: player
    description: Pointer to the Player object that will receive the dynamic zone information.
      The method sends data specifically tailored to this player's current state and
      location within the zone.
  returns: null
  examples:
  - title: Sending Dynamic Zone Info on Player Entry
    code: "void OnPlayerEnterZone(Player* player, uint32 zoneId)\n{\n    Map* map\
      \ = player->GetMap();\n    map->SendZoneDynamicInfo(zoneId, player);\n}"
    language: cpp
  - title: Updating Zone Info When Weather Changes
    code: "void UpdateZoneWeather(Map* map, uint32 zoneId, Player* player)\n{\n  \
      \  // Simulate weather change\n    WeatherType newWeather = GetRandomWeather();\n\
      \    \n    // Send updated dynamic info to all players in the zone\n    map->SendZoneDynamicInfo(zoneId,\
      \ player);\n}"
    language: cpp
  notes: This method is part of TrinityCore's internal zone management system and
    should only be called when zone-specific environmental data needs to be synchronized
    with the client. It does not directly modify any game state but rather communicates
    changes through network packets. The implementation assumes that the player object
    is valid and that the zoneId corresponds to an existing zone in the map's data
    structures.
  warnings: Calling this method with an invalid zoneId or null player pointer can
    lead to undefined behavior or crashes. Ensure that zoneId references a valid zone
    before calling this function, and verify that the player pointer is not null.
    This method should not be called during critical sections of code where race conditions
    might occur.
  related:
  - Map::SendZoneWeather
  - Map::SendZoneTime
  - Player::SendUpdateWorldState
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:54:43.532572'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
