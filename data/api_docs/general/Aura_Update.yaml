api:
  class: Aura
  method: Update
  signature: void Aura::Update(uint32 diff, Unit * caster)
documentation:
  brief: Updates the aura's duration and effects based on time passed since last update
  description: The Update method handles the internal processing of an aura's duration
    and effects, typically called during each game tick to maintain proper state.
    It ensures that the aura's remaining duration is properly decremented and that
    any periodic effects are applied correctly. This method is essential for maintaining
    accurate spell mechanics in World of Warcraft, particularly for handling active
    buffs or debuffs that have a limited duration. The method also handles cleanup
    of expired auras and ensures proper removal from affected units.
  parameters:
  - name: diff
    description: Time elapsed since last update in milliseconds, used to determine
      how much time has passed for duration calculations
  - name: caster
    description: The unit that cast the aura, which may be needed for certain effects
      or calculations during update process
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Aura* aura = new Aura();

      uint32 diff = 1000;

      Unit* caster = player;

      aura->Update(diff, caster);'
    language: cpp
  - title: Advanced Usage Example
    code: "Aura* aura = new Aura();\nuint32 diff = 1000;\nUnit* caster = player;\n\
      if (aura->GetDuration() > 0)\n{\n    aura->Update(diff, caster);\n}\nelse\n\
      {\n    aura->Remove();\n}"
    language: cpp
  notes: This method is typically called by the game tick loop and should be thread-safe.
    Performance considerations include avoiding unnecessary calculations when duration
    is zero or when aura is already expired. The method may also trigger callbacks
    for certain effects that require specific timing.
  warnings: Improper handling of this method can lead to incorrect aura durations,
    missing effects, or even crashes if the aura is not properly initialized before
    calling Update. Care should be taken when updating auras with multiple effects
    or those that have special conditions.
  related:
  - Aura::GetDuration
  - Aura::SetDuration
  - Aura::Remove
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:52:19.797919'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
