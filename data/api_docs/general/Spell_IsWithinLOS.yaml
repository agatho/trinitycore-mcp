api:
  class: Spell
  method: IsWithinLOS
  signature: bool Spell::IsWithinLOS(const WorldObject * source, const int & target,
    int ignoreFlags) const
documentation:
  brief: Determines whether a target object is within line-of-sight of the spell's
    source.
  description: This method checks if a target object is within line-of-sight of the
    spell's source, considering obstacles and terrain. It is commonly used in spell
    casting mechanics to determine if a target can be reached by a spell without being
    blocked by environment objects. The method evaluates whether the target position
    is visible from the source position, taking into account various ignore flags
    that may affect the LOS calculation. This functionality is crucial for determining
    spell validity and ensuring proper targeting in World of Warcraft gameplay.
  parameters:
  - name: source
    description: The object from which the line-of-sight check originates. This is
      typically the caster or source of the spell.
  - name: target
    description: The target object for which the line-of-sight check is performed.
      This represents the position or object being evaluated for visibility.
  - name: ignoreFlags
    description: Flags that determine what types of obstacles should be ignored during
      the LOS calculation. These flags can include various environmental elements
      like terrain, objects, or other factors that may affect visibility.
  returns: Returns true if the target object is within line-of-sight of the source
    object, false otherwise. This indicates whether a spell can successfully reach
    its target without being blocked by obstacles.
  examples:
  - title: Basic LOS check example
    code: "if (spell->IsWithinLOS(source, target, ignoreFlags)) {\n    // Spell can\
      \ reach target\n} else {\n    // Spell cannot reach target due to obstruction\n\
      }"
    language: cpp
  - title: Advanced LOS check with specific ignore flags
    code: "bool result = spell->IsWithinLOS(source, target, 0x01 | 0x02);\n// Check\
      \ for both terrain and object ignore flags\nif (result) {\n    // Target is\
      \ visible\n} else {\n    // Target is not visible due to obstacles\n}"
    language: cpp
  notes: This method is typically used in spell casting validation and target selection.
    Performance considerations include the computational cost of checking line-of-sight
    for each target, especially when multiple targets are involved. Thread safety
    depends on the source object being thread-safe, as this method may be called from
    different threads during spell processing.
  warnings: This method should not be used as a standalone validation without considering
    other spell mechanics. It is important to note that this method does not account
    for spell range or target selection, only line-of-sight visibility. Misuse can
    lead to incorrect spell targeting or validation.
  related:
  - Spell::IsInLOSPart
  - Spell::IsWithinLOS
  - Spell::IsVisible
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:18:26.278864'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
