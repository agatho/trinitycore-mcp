api:
  class: InterruptManager
  method: ShouldInterruptHealing
  signature: bool InterruptManager::ShouldInterruptHealing(const SpellInfo * spellInfo,
    Unit * caster)
documentation:
  brief: Determines whether a spell should interrupt healing casts.
  description: The ShouldInterruptHealing method evaluates if a given spell has the
    capability to interrupt ongoing healing casts. This is used in combat mechanics
    to determine when a spell can break a target's healing channel, such as when a
    player is being healed by another unit. The method checks the spell's properties
    and the caster's state to make this determination. It is typically invoked during
    spell casting or interruption logic within the TrinityCore framework.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing details about the spell
      being evaluated for healing interruption.
  - name: caster
    description: Pointer to the Unit object representing the caster of the spell that
      may interrupt the healing.
  returns: Returns true if the spell can interrupt healing casts, false otherwise.
  examples:
  - title: Check if a spell interrupts healing
    code: "if (interruptManager->ShouldInterruptHealing(spellInfo, caster)) {\n  \
      \  // Handle interruption logic\n}"
    language: cpp
  notes: This method is part of the core interrupt handling system in TrinityCore
    and relies on spell flags and properties defined in the SpellInfo structure. It
    may be called frequently during combat events, so performance should be considered
    for high-frequency use cases.
  warnings: null
  related:
  - InterruptManager::ShouldInterruptSpell
  - InterruptManager::IsInterruptibleSpell
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:24:01.377909'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
