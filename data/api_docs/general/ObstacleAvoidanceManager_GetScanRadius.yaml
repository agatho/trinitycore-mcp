api:
  class: ObstacleAvoidanceManager
  method: GetScanRadius
  signature: float ObstacleAvoidanceManager::GetScanRadius() const
documentation:
  brief: Retrieves the scan radius used by the obstacle avoidance manager for detecting
    nearby obstacles.
  description: The GetScanRadius method returns the floating-point value representing
    the radius within which the ObstacleAvoidanceManager searches for obstacles. This
    radius determines how far ahead the AI will scan for potential collisions or blockages
    in its path. The value is typically set during initialization or configuration
    of the avoidance manager and affects the aggressiveness and responsiveness of
    obstacle detection. This method is commonly used in pathfinding algorithms to
    ensure units avoid environmental hazards, other creatures, or static objects within
    their vicinity.
  parameters: []
  returns: A float value representing the scan radius in world units (such as yards
    or meters), which defines the maximum distance for obstacle detection.
  examples:
  - title: Basic Usage
    code: 'float radius = obstacleManager->GetScanRadius();

      printf("Current scan radius: %.2f\n", radius);'
    language: cpp
  - title: Using Scan Radius in Pathfinding
    code: "if (player->GetMap()->IsInLineOfSight(player->GetPositionX(), player->GetPositionY(),\
      \ player->GetPositionZ(), targetX, targetY, targetZ)) {\n    float scanRadius\
      \ = obstacleManager->GetScanRadius();\n    if (scanRadius > 0.0f) {\n      \
      \  // Proceed with pathfinding using the defined scan radius\n    }\n}"
    language: cpp
  notes: The returned value is usually a constant or configurable parameter that influences
    how far ahead the AI will look for obstacles. It's important to note that this
    value may be adjusted dynamically based on unit type, movement speed, or environmental
    conditions in some implementations.
  warnings: This method does not perform any validation on the returned radius value;
    it simply returns the stored internal value. If the scan radius has not been initialized
    properly, the result might be zero or an unexpected value.
  related:
  - SetScanRadius
  - GetMovementSpeed
  - IsObstacleInPath
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:51:04.301429'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
