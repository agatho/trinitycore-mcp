api:
  class: Aura
  method: GetAuraEffects
  signature: int Aura::GetAuraEffects() const
documentation:
  brief: Returns the total number of active aura effects associated with this aura.
  description: The GetAuraEffects method retrieves the count of active aura effects
    that are currently applied to a target through this aura. In World of Warcraft's
    TrinityCore framework, an aura can have multiple effects (e.g., damage over time,
    healing, stat bonuses), and this method provides access to the total number of
    such effects. This is useful for determining how many individual effects are active
    within a single aura instance, which can be important for gameplay mechanics like
    stacking calculations, effect tracking, or conditional logic based on the number
    of active effects.
  parameters: []
  returns: An integer representing the number of active aura effects associated with
    this aura. Returns zero if no effects are currently active or if the aura is invalid.
  examples:
  - title: Basic Usage to Check Active Effects
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    int effectCount\
      \ = aura->GetAuraEffects();\n    if (effectCount > 0)\n    {\n        // Process\
      \ active effects\n        sLog->outString(\"Aura has %d active effects.\", effectCount);\n\
      \    }\n}"
    language: cpp
  notes: This method returns a count of active aura effects, not the effects themselves.
    It does not account for inactive or hidden effects, only those currently applied
    and functional. The returned value is typically used in conjunction with other
    methods like GetEffect() to iterate through individual effects.
  warnings: null
  related:
  - GetEffect
  - HasEffect
  - GetAuraDuration
  - GetAuraMaxDuration
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:25:05.877382'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
