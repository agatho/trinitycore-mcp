api:
  class: InstanceScript
  method: OnCreatureCreate
  signature: void InstanceScript::OnCreatureCreate(Creature * creature)
documentation:
  brief: Called when a creature is created within the instance, allowing scripts to
    track or modify creature behavior.
  description: The OnCreatureCreate method is a virtual callback function in the InstanceScript
    class that is invoked whenever a Creature object is spawned or created within
    the instance. This method provides an opportunity for instance-specific scripts
    to perform actions such as storing references to important creatures, setting
    initial states, or modifying creature properties upon their creation. It is part
    of the TrinityCore's instance scripting system and allows developers to customize
    behavior based on creature spawning events. The method is called during the creature
    initialization phase, before the creature becomes active in the world.
  parameters:
  - name: creature
    description: Pointer to the Creature object that was created. This represents
      the specific creature instance within the current instance. The pointer is guaranteed
      to be valid and non-null when this method is called.
  returns: null
  examples:
  - title: Store reference to boss creature
    code: "void ExampleInstanceScript::OnCreatureCreate(Creature* creature)\n{\n \
      \   if (creature->GetEntry() == BOSS_ENTRY)\n    {\n        bossGuid = creature->GetGUID();\n\
      \    }\n}"
    language: cpp
  - title: Set initial creature state
    code: "void ExampleInstanceScript::OnCreatureCreate(Creature* creature)\n{\n \
      \   if (creature->GetEntry() == NPC_TYPE_1)\n    {\n        creature->SetReactState(REACT_PASSIVE);\n\
      \        creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);\n  \
      \  }\n}"
    language: cpp
  notes: This method is called for every creature created in the instance, including
    those that are spawned through various triggers or events. It's important to check
    the creature's entry or other identifying properties to determine which creature
    was created and how to handle it appropriately. The method should be used carefully
    to avoid performance issues, especially if large numbers of creatures are being
    tracked.
  warnings: Do not attempt to modify the creature's position or spawn point within
    this method as it may interfere with the normal spawning process. Also, be cautious
    about storing references to creatures that might be destroyed before the instance
    ends, as this could lead to dangling pointers.
  related:
  - OnCreatureDeath
  - OnCreatureRemove
  - OnGameObjectCreate
  - OnInstanceRemove
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T00:11:40.798260'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
