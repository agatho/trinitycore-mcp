api:
  class: DungeonScriptMgr
  method: GetScriptByName
  signature: DungeonScript * DungeonScriptMgr::GetScriptByName(const std::string &
    name) const
documentation:
  brief: Retrieves a dungeon script instance by its name identifier.
  description: The GetScriptByName method searches through the registered dungeon
    scripts within the DungeonScriptMgr and returns a pointer to the DungeonScript
    object that matches the provided name. This method is typically used during dungeon
    initialization or when scripting specific dungeon behaviors based on script names.
    The method performs a lookup in an internal registry of dungeon scripts, which
    are usually registered at server startup or through script loading mechanisms.
    If no matching script is found, the method returns a null pointer. This functionality
    allows for dynamic script retrieval and execution within the context of World
    of Warcraft dungeon instances.
  parameters:
  - name: name
    description: The string name identifier of the dungeon script to retrieve. This
      should match the name used when registering the script with the DungeonScriptMgr.
  returns: A pointer to the DungeonScript object if a matching script is found; otherwise,
    returns nullptr if no script exists with the specified name.
  examples:
  - title: Basic Usage
    code: "DungeonScript* script = sDungeonScriptMgr->GetScriptByName(\"example_dungeon_script\"\
      );\nif (script)\n{\n    // Use the retrieved script\n    script->OnEnter(instance);\n\
      }"
    language: cpp
  - title: Error Handling
    code: "DungeonScript* script = sDungeonScriptMgr->GetScriptByName(\"nonexistent_script\"\
      );\nif (!script)\n{\n    // Handle case where script is not found\n    sLog->outError(LOG_FILTER_GENERAL,\
      \ \"Failed to load dungeon script: nonexistent_script\");\n}"
    language: cpp
  notes: The method performs a linear search through the internal registry of dungeon
    scripts. For optimal performance, ensure that script names are unique and consistently
    used across the codebase. The DungeonScriptMgr is expected to be initialized before
    calling this method.
  warnings: Calling this method with an invalid or non-existent script name will result
    in a null pointer return. Always check for null before using the returned pointer
    to avoid segmentation faults.
  related:
  - GetScriptById
  - RegisterScript
  - UnregisterScript
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T14:09:15.175326'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
