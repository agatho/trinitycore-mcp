api:
  class: Unit
  method: CalcSpellResistedDamage
  signature: uint32 Unit::CalcSpellResistedDamage(const Unit * attacker, Unit * victim,
    uint32 damage, int schoolMask, const SpellInfo * spellInfo)
documentation:
  brief: Calculates spell resistance damage by applying resistances and damage reduction
    to incoming spell attacks.
  description: This method computes the actual damage that results from a spell attack
    after accounting for spell resistance, damage reduction, and various game mechanics
    such as spell penetration. It takes into consideration the attacker's and victim's
    attributes, the spell's properties, and the damage type to determine how much
    damage is actually dealt. The method is commonly used in combat calculations where
    spell attacks are subject to resistance or mitigation effects.
  parameters:
  - name: attacker
    description: Pointer to the Unit that is initiating the spell attack. This could
      be a player, NPC, or pet.
  - name: victim
    description: Pointer to the Unit receiving the spell attack. This could be a player,
      NPC, or pet.
  - name: damage
    description: The base damage amount that is being calculated for resistance effects.
  - name: schoolMask
    description: The spell school mask indicating which type of damage is being calculated
      (physical, holy, fire, etc.).
  - name: spellInfo
    description: Pointer to the SpellInfo structure that contains information about
      the spell being cast.
  returns: Represents the actual damage after applying resistance and mitigation effects.
    Returns 0 if the spell is completely resisted or blocked, otherwise returns the
    calculated damage value.
  examples:
  - title: Basic usage example
    code: uint32 damage = attacker->CalcSpellResistedDamage(attacker, victim, baseDamage,
      SPELL_SCHOOL_MASK_FIRE, spellInfo);
    language: cpp
  - title: Advanced usage example with multiple spell types
    code: "uint32 damage = attacker->CalcSpellResistedDamage(attacker, victim, baseDamage,\
      \ SPELL_SCHOOL_MASK_HOLY, spellInfo);\nif (damage > 0)\n    victim->DealDamage(attacker,\
      \ damage, NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_HOLY);"
    language: cpp
  notes: This method is used internally by TrinityCore for calculating spell damage
    in combat. It typically involves checking resistance values, applying mitigation
    factors, and handling special cases like immunity or resistance reduction. Performance
    considerations include avoiding unnecessary calculations for non-spell attacks.
  warnings: The method may return 0 if the victim has full immunity to the spell type
    being cast. Care should be taken when using this method in conjunction with other
    damage calculation methods to avoid double-counting or incorrect damage values.
  related:
  - Unit::CalcSpellDamage
  - Unit::DealDamage
  - Unit::CalculateDamage
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:23:41.611728'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
