api:
  class: Unit
  method: IsInPartyWith
  signature: bool Unit::IsInPartyWith(const Unit * unit) const
documentation:
  brief: Determines whether the current unit is in the same party as the specified
    unit.
  description: This method checks if the calling unit shares the same party group
    with the provided unit. It returns true if both units are members of the same
    party, false otherwise. The function is commonly used in player versus player
    (PvP) scenarios and group-based gameplay mechanics where it's important to know
    whether players are in the same party or not. This method does not consider raid
    groups; it only evaluates party membership. The function performs a simple comparison
    of party identifiers and does not require any special conditions or prerequisites.
  parameters: []
  returns: Returns true if both units belong to the same party group, false otherwise.
    A return value of false indicates that either the units are in different parties
    or one or both units are not part of any party group.
  examples:
  - title: Basic usage example
    code: "if (player->IsInPartyWith(targetPlayer))\n{\n    // Do something\n}\nelse\n\
      {\n    // Do something else\n}"
    language: cpp
  - title: Advanced usage in a PvP context
    code: "Unit* target = ObjectAccessor::GetUnit(*player, targetGUID);\nif (target\
      \ && player->IsInPartyWith(target))\n{\n    // Player and target are in the\
      \ same party\n    // Can perform actions like shared loot or group-based abilities\n\
      }"
    language: cpp
  notes: This method is thread-safe and does not require any special conditions. It
    relies on internal party tracking mechanisms within TrinityCore, making it efficient
    for use in game logic. Performance considerations are minimal as the function
    only compares party identifiers.
  warnings: This method only checks party membership and not raid membership. If a
    player is in a raid group but not in a party group, this method will return false
    even if they share the same raid group. Be cautious when using this in scenarios
    involving both party and raid groups.
  related:
  - IsInRaidWith
  - GetParty
  - GetGUID
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:01:28.862392'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
