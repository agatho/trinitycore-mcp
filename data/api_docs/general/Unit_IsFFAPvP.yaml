api:
  class: Unit
  method: IsFFAPvP
  signature: bool Unit::IsFFAPvP() const
documentation:
  brief: Determines whether the unit is in a PvP state for FFA (Free For All) combat.
  description: The IsFFAPvP method checks if a Unit object is currently in a Free
    For All PvP state, meaning the unit can be attacked by any player without consequences.
    This method is commonly used in World of Warcraft's TrinityCore framework to determine
    whether a unit is eligible for PvP combat without being flagged as hostile. The
    function returns true when the unit is in FFA PvP mode and false otherwise, indicating
    that the unit is either in normal PvP or not in PvP at all.
  parameters: []
  returns: Returns true if the unit is in Free For All PvP state, false otherwise.
    This indicates whether the unit can be attacked by any player without being flagged
    as hostile.
  examples:
  - title: Basic usage example
    code: "if (unit->IsFFAPvP()) {\n    // Unit can be attacked by any player\n  \
      \  // Do something here\n}\nelse {\n    // Unit is not in FFA PvP mode\n   \
      \ // Do something else\n}"
    language: cpp
  notes: This method is typically used in conjunction with other PvP-related functions
    to determine combat state. It may be affected by player flags or faction status,
    and should be used carefully in PvP scenarios.
  warnings: This method does not account for player reputation or faction status;
    it only checks the current PvP state of the unit. Be cautious when using this
    method in scenarios where players might be flagged as hostile but still have FFA
    PvP status.
  related:
  - Unit::IsPvP
  - Unit::IsPVP
  - Unit::IsInPvp
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:09:50.621156'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
