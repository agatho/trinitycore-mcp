api:
  class: Unit
  method: GetCastSpellInfo
  signature: const SpellInfo * Unit::GetCastSpellInfo(const SpellInfo * spellInfo,
    int & triggerFlag, GetCastSpellInfoContext * context) const
documentation:
  brief: Returns spell information for a cast spell, including trigger flags and context.
  description: This method retrieves detailed information about a spell being cast
    by the unit, including the spell's data, trigger flags, and contextual information.
    It is commonly used in spell handling systems to determine how spells should be
    processed or triggered. The method allows developers to access comprehensive spell
    data during casting operations, which is essential for implementing custom spell
    behaviors or analyzing spell mechanics. The function returns a pointer to the
    SpellInfo structure, which contains all relevant spell data including effects,
    attributes, and other properties.
  parameters:
  - name: spellInfo
    description: A pointer to the SpellInfo structure representing the spell being
      cast. This parameter is used to determine what information to retrieve from
      the unit's casting state.
  - name: triggerFlag
    description: Reference to an integer that will be filled with trigger flags indicating
      how the spell was triggered (e.g., triggered by aura, triggered by item). These
      flags help determine whether the spell should be processed in a specific way.
  - name: context
    description: Pointer to a GetCastSpellInfoContext structure that provides additional
      context about the casting state. This includes information about the caster,
      target, and other relevant parameters during spell execution.
  returns: Returns a pointer to the SpellInfo structure which contains detailed data
    about the spell being cast. If no valid spell information is available, it returns
    nullptr.
  examples:
  - title: Basic usage example
    code: "const SpellInfo* spellInfo = unit->GetCastSpellInfo(nullptr, triggerFlag,\
      \ context);\nif (spellInfo)\n{\n    // Process spell info\n}"
    language: cpp
  - title: Advanced usage with trigger flags
    code: "int triggerFlag = 0;\nGetCastSpellInfoContext* context = nullptr;\nconst\
      \ SpellInfo* spellInfo = unit->GetCastSpellInfo(spellInfo, triggerFlag, context);\n\
      if (spellInfo && triggerFlag & SPELL_TRIGGER_TYPE_AURA)\n{\n    // Handle aura-triggered\
      \ spell\n}"
    language: cpp
  notes: This method is typically used in conjunction with spell casting logic and
    should be called during active spell casting operations. It's important to note
    that the returned SpellInfo pointer may be nullptr if no valid spell data exists,
    so proper null checks are required.
  warnings: Be cautious when using this method as it may cause performance issues
    if called frequently during spell processing. Also, ensure that the spellInfo
    parameter is properly initialized before calling this method to avoid undefined
    behavior.
  related:
  - GetSpellInfo
  - GetCastSpell
  - SpellMgr::GetSpellInfo
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:26:33.437601'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
