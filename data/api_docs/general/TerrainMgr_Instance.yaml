api:
  class: TerrainMgr
  method: Instance
  signature: TerrainMgr & TerrainMgr::Instance()
documentation:
  brief: Returns the singleton instance of the TerrainMgr class for managing terrain
    data in the game world.
  description: The Instance method implements the singleton pattern for the TerrainMgr
    class, ensuring that only one instance of the terrain manager exists throughout
    the application lifecycle. This method provides access to the global terrain management
    system responsible for handling terrain data, height maps, and related world geometry
    information. The returned reference allows other systems to interact with the
    shared terrain state without requiring explicit instantiation. This is commonly
    used by map loading systems, collision detection, and terrain-based gameplay mechanics
    that require access to world geometry information.
  parameters: []
  returns: A reference to the single global instance of the TerrainMgr class. The
    returned reference is guaranteed to be valid and should not be null under normal
    operation.
  examples:
  - title: Accessing Terrain Manager for Height Query
    code: float height = TerrainMgr::Instance().GetHeight(100.0f, 200.0f, 300.0f);
    language: cpp
  - title: Using Terrain Manager in Map Loading Context
    code: "TerrainMgr& terrain = TerrainMgr::Instance();\nif (terrain.IsTerrainLoaded())\
      \ {\n    // Proceed with terrain-dependent operations\n}"
    language: cpp
  notes: This method is thread-safe as it returns a singleton instance that should
    be initialized during application startup. The singleton pattern ensures consistent
    access to terrain data across all subsystems without duplication or race conditions.
    The implementation typically uses static local variables for lazy initialization.
  warnings: While this is a singleton, avoid storing references to the TerrainMgr
    instance in long-lived objects as it may cause issues if the application shuts
    down before those objects are destroyed. Also, be cautious when using this in
    multithreaded contexts where terrain data might change during operation.
  related:
  - GetHeight
  - IsTerrainLoaded
  - LoadTerrain
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T20:34:18.782565'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
