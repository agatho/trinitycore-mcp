api:
  class: MotionMaster
  method: PropagateSpeedChange
  signature: void MotionMaster::PropagateSpeedChange()
documentation:
  brief: Notifies all active motion generators of a speed change in the associated
    unit.
  description: The PropagateSpeedChange method is used to inform all currently active
    motion generators within a MotionMaster about a change in the speed of the unit
    they control. This ensures that movement behaviors are updated accordingly, such
    as adjusting pathfinding or animation speeds. The method typically gets called
    when a unit's speed is modified through various game mechanics like spell effects,
    movement buffs, or status changes. It is an internal utility function that maintains
    consistency between the unit's movement state and its motion behaviors.
  parameters: []
  returns: null
  examples:
  - title: Triggering Speed Change Propagation
    code: 'Unit* target = ...;

      // Assume target has a MotionMaster

      MotionMaster* mm = target->GetMotionMaster();

      // Modify speed somehow (e.g., apply a spell effect)

      target->SetSpeed(MOVE_RUN, 2.5f);

      // Propagate the new speed to all active motions

      mm->PropagateSpeedChange();'
    language: cpp
  notes: This method is typically invoked automatically by the core when a unit's
    speed changes, but may also be manually called in specific scenarios where external
    modifications require immediate propagation to motion behaviors. It does not directly
    modify speed values itself; rather, it signals other components to react to an
    already-changed speed.
  warnings: null
  related:
  - Update
  - MoveTo
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:25:22.124633'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
