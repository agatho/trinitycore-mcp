api:
  class: TradeManager
  method: OnUpdate
  signature: void TradeManager::OnUpdate(uint32 elapsed)
documentation:
  brief: Updates the trade manager's internal state and processes pending trade operations.
  description: The OnUpdate method is a core component of the TradeManager class responsible
    for maintaining and processing active trades within the game world. It handles
    time-based updates such as trade expiration checks, synchronization of trade states
    between players, and cleanup of invalid or completed trades. This method is typically
    called by the game loop at regular intervals to ensure that all ongoing trades
    are properly managed according to World of Warcraft's trading mechanics. The method
    processes elapsed time to determine if any trades have expired or require state
    transitions.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage in Game Loop
    code: "void GameWorld::Update(uint32 diff)\n{\n    tradeManager.OnUpdate(diff);\n\
      \    // Other update logic\n}"
    language: cpp
  notes: This method should be called regularly by the game's main update loop with
    appropriate time deltas. The implementation likely handles internal timers and
    state transitions for all active trades in the system.
  warnings: null
  related:
  - TradeManager::AddTrade
  - TradeManager::RemoveTrade
  - TradeManager::GetTrade
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T20:17:51.452119'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
