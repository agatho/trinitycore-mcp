api:
  class: Player
  method: HasEnoughMoney
  signature: bool Player::HasEnoughMoney(int64 amount) const
documentation:
  brief: Checks if the player has sufficient money to cover a specified amount.
  description: This method determines whether the player's current money inventory
    is sufficient to meet a given monetary amount. It evaluates the player's wallet
    balance against the provided amount, considering both copper and silver denominations.
    The method is commonly used in transactional contexts such as vendor interactions,
    auction house operations, or when performing monetary transfers between players.
    This check includes all currency types within the player's inventory, ensuring
    accurate evaluation of financial capability.
  parameters:
  - name: amount
    description: The total amount of money (in copper) that needs to be checked against
      the player's current inventory. This value represents the monetary cost or transfer
      amount, and must be non-negative.
  returns: Returns true if the player has sufficient money to cover the specified
    amount; otherwise returns false. The method will return false if the amount is
    negative or if the player's wallet does not contain enough copper to meet the
    required amount.
  examples:
  - title: Basic usage example
    code: "if (player->HasEnoughMoney(1000)) {\n    // Player has at least 1000 copper\n\
      \    // Proceed with transaction\n}\nelse {\n    // Player does not have enough\
      \ money\n    // Notify player or cancel transaction\n}"
    language: cpp
  - title: Advanced usage example
    code: "int64 cost = 15000; // 150 silver\nif (player->HasEnoughMoney(cost)) {\n\
      \    // Player has sufficient money\n    // Proceed with purchase\n}\nelse {\n\
      \    // Player lacks sufficient funds\n    // Display error message to player\n\
      }"
    language: cpp
  notes: This method internally checks the player's wallet balance using the player's
    inventory data. It does not perform any currency conversion or transaction processing,
    but rather evaluates whether the specified amount can be met by the current money
    holdings. Performance considerations include checking all monetary denominations
    in the player's inventory for accuracy.
  warnings: This method should not be used as a sole indicator of financial capability
    for complex transactions involving multiple currencies. It only checks against
    the total copper amount, and may not account for specific currency types or denominations
    required by certain game mechanics.
  related:
  - Player::GetMoney
  - Player::AddMoney
  - Player::SubtractMoney
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:07:26.326584'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
