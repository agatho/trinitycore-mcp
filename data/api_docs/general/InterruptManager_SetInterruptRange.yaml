api:
  class: InterruptManager
  method: SetInterruptRange
  signature: void InterruptManager::SetInterruptRange(float range)
documentation:
  brief: Sets the maximum range within which interrupts can occur for abilities and
    spells.
  description: The SetInterruptRange method configures the distance threshold used
    by the InterruptManager to determine whether an interrupt attempt is valid. This
    range defines how far away a target must be from the interrupting caster for the
    interrupt to succeed. The method updates an internal range value that is subsequently
    used during interrupt checks in combat scenarios, particularly affecting spell
    interruption mechanics such as those caused by abilities like Silenced or Interrupted
    spells. It's typically called during initialization or configuration of interrupt
    behavior within the game engine.
  parameters:
  - name: range
    description: The maximum distance (in yards) within which an interrupt can be
      successfully performed. Must be a positive floating-point value representing
      the range in game units.
  returns: null
  examples:
  - title: Basic Usage
    code: 'InterruptManager* im = sObjectAccessor->GetInterruptManager();

      im->SetInterruptRange(10.0f);'
    language: cpp
  - title: Setting Interrupt Range for Specific Combat Scenario
    code: "void ConfigureCombatInterrupts() {\n    InterruptManager* im = sObjectAccessor->GetInterruptManager();\n\
      \    // Set interrupt range to 8 yards for ranged combat\n    im->SetInterruptRange(8.0f);\n\
      }"
    language: cpp
  notes: This method directly modifies the internal state of the InterruptManager
    and affects all subsequent interrupt attempts made by the system. Changes to this
    range will immediately apply to new interrupts without requiring additional setup
    or reinitialization.
  warnings: Setting an extremely large or negative value for range may cause unexpected
    behavior in combat systems, including potential crashes or incorrect interrupt
    validation logic. Ensure that the provided range is within reasonable bounds (typically
    between 0 and 50 yards) to maintain game balance and stability.
  related:
  - GetInterruptRange
  - CanInterrupt
  - InterruptSpell
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:27:15.732927'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
