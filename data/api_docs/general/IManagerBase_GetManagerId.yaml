api:
  class: IManagerBase
  method: GetManagerId
  signature: std::string IManagerBase::GetManagerId() const
documentation:
  brief: Retrieves the unique identifier string of the manager instance.
  description: The GetManagerId method returns a std::string that uniquely identifies
    the manager instance within the TrinityCore framework. This identifier is typically
    used for tracking, logging, or referencing specific manager objects throughout
    the game's lifecycle. The returned string is expected to be stable for the lifetime
    of the manager object and should not change during normal operation. This method
    is commonly employed in systems that require differentiation between various manager
    types or instances, such as data managers, event handlers, or subsystem controllers.
  parameters: []
  returns: A std::string representing the unique identifier of the manager instance.
    The string is typically non-empty and globally unique within the context of the
    running TrinityCore instance.
  examples:
  - title: Basic Usage
    code: 'IManagerBase* manager = GetSomeManager();

      std::string id = manager->GetManagerId();

      TC_LOG_INFO(LOG_FILTER_GENERAL, "Manager ID: %s", id.c_str());'
    language: cpp
  - title: Manager Identification in Logs
    code: "void LogManagerInfo(IManagerBase* mgr) {\n    std::string id = mgr->GetManagerId();\n\
      \    TC_LOG_DEBUG(LOG_FILTER_GENERAL, \"Initializing manager with ID: %s\",\
      \ id.c_str());\n}"
    language: cpp
  notes: This method is expected to be lightweight and should not perform expensive
    operations. It's recommended that implementations cache the identifier string
    if it involves complex computation or retrieval from external sources.
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:57:46.698270'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
