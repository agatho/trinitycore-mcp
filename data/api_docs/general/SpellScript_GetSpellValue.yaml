api:
  class: SpellScript
  method: GetSpellValue
  signature: const SpellValue * SpellScript::GetSpellValue() const
documentation:
  brief: Retrieves the SpellValue structure containing spell-specific data and configuration
    for the current spell script execution.
  description: The GetSpellValue method provides access to the SpellValue object that
    holds various spell-related parameters and settings used during the execution
    of a spell script. This structure typically contains information such as spell
    modifiers, scaling factors, and other runtime configuration values that influence
    how the spell behaves. The returned pointer is valid only during the execution
    of the spell script and should not be stored or accessed outside of the script's
    scope. This method is commonly used in spell script implementations to retrieve
    dynamic spell properties that may vary based on caster state, target conditions,
    or other contextual factors.
  parameters: []
  returns: A constant pointer to a SpellValue structure containing the current spell's
    configuration and runtime parameters. Returns nullptr if the spell script has
    not been properly initialized or if no spell value data is available.
  examples:
  - title: Accessing Spell Value in a Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\
      \ override\n    {\n        const SpellValue* spellValue = GetSpellValue();\n\
      \        if (spellValue)\n        {\n            // Use spellValue->damage to\
      \ access damage value\n            // or spellValue->radius to get radius value\n\
      \        }\n    }\n};"
    language: cpp
  - title: Modifying Spell Behavior Based on Spell Value
    code: "class DamageSpellScript : public SpellScript\n{\npublic:\n    void OnCalculateDamage()\
      \ override\n    {\n        const SpellValue* spellValue = GetSpellValue();\n\
      \        if (spellValue && spellValue->damage > 0)\n        {\n            //\
      \ Apply scaling or modifications based on spell value\n            int32 newDamage\
      \ = spellValue->damage * 1.5f;\n            // Set modified damage back to spell\n\
      \        }\n    }\n};"
    language: cpp
  notes: The SpellValue structure returned by this method is managed internally by
    the TrinityCore engine and should not be modified directly. Accessing this pointer
    outside of the spell script execution context may result in undefined behavior.
    The returned pointer remains valid only for the duration of the current spell
    execution cycle.
  warnings: Do not store or cache the returned SpellValue pointer for later use, as
    it may become invalid after the spell script finishes executing. Always check
    for null returns before dereferencing the pointer to avoid crashes.
  related:
  - GetSpell
  - SetSpellValue
  - GetCaster
  - GetTarget
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:50:51.482232'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
