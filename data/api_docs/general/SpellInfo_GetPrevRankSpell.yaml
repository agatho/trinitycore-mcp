api:
  class: SpellInfo
  method: GetPrevRankSpell
  signature: const SpellInfo * SpellInfo::GetPrevRankSpell() const
documentation:
  brief: Returns the previous rank spell in the spell chain for a given spell.
  description: This method retrieves the SpellInfo object representing the previous
    rank spell in the spell chain, which is essential for determining spell progression
    and maintaining proper spell hierarchy within the game. The method is commonly
    used in spell learning mechanics, where players must learn spells in sequence
    from lower to higher ranks. It helps identify the parent spell that precedes the
    current spell in the chain, enabling developers to implement correct spell advancement
    logic and maintain consistency with game mechanics such as spell progression and
    training requirements.
  parameters: []
  returns: Returns a pointer to the SpellInfo object representing the previous rank
    spell in the chain. If the current spell is the first in its chain or if no previous
    rank exists, this method returns nullptr.
  examples:
  - title: Basic Usage Example
    code: "const SpellInfo* prevSpell = spellInfo->GetPrevRankSpell();\nif (prevSpell\
      \ != nullptr)\n{\n    // Process the previous rank spell\n    std::cout << \"\
      Previous Rank: \" << prevSpell->Id << std::endl;\n}\nelse\n{\n    // This is\
      \ the first rank in the chain\n    std::cout << \"No previous rank found.\"\
      \ << std::endl;\n}"
    language: cpp
  notes: This method requires that the spell information be properly initialized and
    loaded into memory. The returned SpellInfo object must not be null, otherwise
    it indicates an issue with the spell chain structure or data initialization. Performance
    considerations include caching the result of this method when used frequently
    in loops or during spell progression calculations.
  warnings: Be cautious when using this method in scenarios where the spell chain
    might not be properly initialized. The method may return nullptr if the spell
    is not part of a valid spell chain, which could lead to incorrect logic if not
    handled properly. Also, ensure that the returned pointer does not get invalidated
    during runtime.
  related:
  - GetNextRankSpell
  - GetSpellInfo
  - GetSpellId
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T14:05:35.910544'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
