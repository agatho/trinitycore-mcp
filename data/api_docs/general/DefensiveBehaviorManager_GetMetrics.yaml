api:
  class: DefensiveBehaviorManager
  method: GetMetrics
  signature: const PerformanceMetrics & DefensiveBehaviorManager::GetMetrics() const
documentation:
  brief: Retrieves performance metrics related to defensive AI behavior execution.
  description: The GetMetrics method returns a constant reference to the PerformanceMetrics
    object that contains timing and statistical data about the execution of defensive
    AI behaviors. This includes information such as average execution time, total
    calls, and other performance-related statistics for the defensive behavior manager.
    The returned metrics are updated in real-time as defensive behaviors are executed
    during gameplay. This method is typically used for debugging, performance monitoring,
    or optimization purposes within the AI subsystem.
  parameters: []
  returns: A constant reference to a PerformanceMetrics object containing detailed
    timing and statistical data about defensive AI behavior execution, including average
    execution time, call counts, and other relevant performance indicators.
  examples:
  - title: Basic Usage
    code: 'const PerformanceMetrics& metrics = defensiveBehaviorManager.GetMetrics();

      std::cout << "Average execution time: " << metrics.averageTimeMs << " ms" <<
      std::endl;'
    language: cpp
  - title: Performance Monitoring
    code: "void LogDefensiveBehaviorStats(DefensiveBehaviorManager& manager) {\n \
      \   const PerformanceMetrics& metrics = manager.GetMetrics();\n    if (metrics.totalCalls\
      \ > 0) {\n        LOG_INFO(\"ai\", \"Defensive AI - Avg: {}ms, Calls: {}, Total:\
      \ {}ms\",\n                 metrics.averageTimeMs, metrics.totalCalls, metrics.totalTimeMs);\n\
      \    }\n}"
    language: cpp
  notes: The returned PerformanceMetrics reference is valid only until the next call
    to GetMetrics or until the DefensiveBehaviorManager instance is destroyed. The
    metrics are updated incrementally as defensive behaviors execute, making them
    suitable for real-time performance monitoring.
  warnings: Accessing the returned reference after the DefensiveBehaviorManager has
    been modified or destroyed may result in undefined behavior. Ensure that the DefensiveBehaviorManager
    instance remains valid while using the returned metrics reference.
  related:
  - SetMetrics
  - ResetMetrics
  - UpdateMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:19:40.393355'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
