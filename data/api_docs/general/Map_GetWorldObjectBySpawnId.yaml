api:
  class: Map
  method: GetWorldObjectBySpawnId
  signature: WorldObject * Map::GetWorldObjectBySpawnId(SpawnObjectType type, int
    spawnId) const
documentation:
  brief: Returns a WorldObject by its spawn ID from the map.
  description: This method retrieves a WorldObject instance from the map based on
    the specified spawn type and spawn ID. It allows developers to access objects
    that have been spawned in the world, such as creatures or game objects, using
    their unique spawn identifiers. The method is particularly useful for retrieving
    specific objects after they have been spawned in the world, enabling precise object
    manipulation and interaction within the game environment.
  parameters:
  - name: type
    description: The spawn type of the object to retrieve, such as SPAWN_TYPE_CREATURE
      or SPAWN_TYPE_GAMEOBJECT. This parameter determines which type of object is
      being searched for.
  - name: spawnId
    description: The unique identifier of the spawned object, typically corresponding
      to the spawn ID in the database tables. This value identifies the specific object
      instance within the map.
  returns: Returns a pointer to the WorldObject instance matching the specified spawn
    type and spawn ID, or nullptr if no such object exists in the map.
  examples:
  - title: Retrieve a Creature by Spawn ID
    code: Creature* creature = map->GetWorldObjectBySpawnId(SPAWN_TYPE_CREATURE, 12345);
    language: cpp
  - title: Retrieve a Game Object by Spawn ID
    code: GameObject* gameobject = map->GetWorldObjectBySpawnId(SPAWN_TYPE_GAMEOBJECT,
      67890);
    language: cpp
  notes: This method is primarily used for retrieving objects that have already been
    spawned in the world. It assumes that the spawn ID and type are valid and corresponds
    to an object currently present in the map. Performance considerations should be
    taken into account when using this method frequently, as it may involve searching
    through all objects in the map.
  warnings: This method will return nullptr if no matching object is found, so developers
    must check for null pointer before using the returned object. Additionally, the
    method may not work correctly if the spawn ID or type is invalid or if the object
    has been removed from the map.
  related:
  - GetWorldObjectByGuid
  - GetCreatureBySpawnId
  - GetGameObjectBySpawnId
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:07:09.862113'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
