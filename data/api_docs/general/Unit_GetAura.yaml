api:
  class: Unit
  method: GetAura
  signature: Aura * Unit::GetAura(const int & predicate) const
documentation:
  brief: Retrieves a specific aura from the unit's aura list based on predicate.
  description: The GetAura method retrieves a specific aura from a Unit's aura list
    by using a predicate function to filter and identify the desired aura. This method
    allows for precise control over which aura is returned, making it useful for examining
    specific effects or conditions within the game mechanics. The method operates
    on the unit's aura list and returns a pointer to the aura that matches the given
    predicate criteria. It is commonly used in gameplay logic where specific aura
    effects need to be analyzed or manipulated.
  parameters:
  - name: predicate
    description: A reference to an integer value that serves as a filter for identifying
      the desired aura. This parameter typically represents a specific aura type,
      spell ID, or effect index used to match against the unit's aura list.
  returns: Returns a pointer to the Aura object matching the predicate criteria. If
    no matching aura is found, the method returns nullptr, indicating that no such
    aura exists in the unit's aura list.
  examples:
  - title: Basic Aura Retrieval
    code: Aura* aura = unit->GetAura(12345); // Retrieves aura with spell ID 12345
    language: cpp
  - title: Advanced Aura Filtering
    code: "Aura* aura = unit->GetAura([](Aura* aura) {\n    return aura->GetSpellInfo()->Id\
      \ == 12345;\n}); // Filters by spell ID"
    language: cpp
  notes: This method is part of the Unit's aura management system and should be used
    carefully when dealing with multiple auras. Performance considerations include
    avoiding unnecessary iterations over large aura lists, especially in frequently
    called methods.
  warnings: Be cautious when using this method as it may return nullptr if no matching
    aura exists, which could lead to null pointer dereferences if not properly handled.
    Also, ensure that the predicate parameter correctly identifies the desired aura
    type to avoid incorrect results.
  related:
  - GetAuraBySpellId
  - GetAuraByEffect
  - GetAuraCount
  - GetAuraList
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T13:35:42.559762'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
