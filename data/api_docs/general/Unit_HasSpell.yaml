api:
  class: Unit
  method: HasSpell
  signature: bool Unit::HasSpell(uint32 param0) const
documentation:
  brief: Checks if the unit has a specific spell in its spell list
  description: The HasSpell method determines whether a unit (such as a player or
    creature) possesses a particular spell in its spell list. This method is commonly
    used in game mechanics to verify spell availability, check for spell learning
    status, or validate spell existence within the unit's known spells. It returns
    true if the spell exists in the unit's spell list and false otherwise. The method
    is typically used in conjunction with other spell-related functions to manage
    spell interactions and gameplay.
  parameters: []
  returns: Returns true if the unit has the specified spell, false otherwise. This
    indicates whether the spell is currently known or available to the unit.
  examples:
  - title: Basic Spell Check
    code: "if (player->HasSpell(12345)) {\n    // Do something\n}"
    language: cpp
  - title: Conditional Spell Usage
    code: "if (unit->HasSpell(12345) && unit->HasSpell(67890)) {\n    // Perform action\n\
      }"
    language: cpp
  notes: This method does not check for spell cooldowns or learned status; it only
    checks if the spell exists in the unit's known spells. Performance considerations
    include avoiding frequent calls to this method during gameplay loops.
  warnings: Be cautious when using this method with spell IDs that may not be valid
    or could cause issues if used incorrectly. Avoid checking for non-existent spells
    in performance-critical contexts.
  related:
  - HasSpell
  - IsSpellKnown
  - GetSpellInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:18:18.639914'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
