api:
  class: Player
  method: CanFly
  signature: bool Player::CanFly() const
documentation:
  brief: Determines whether the player can fly in the current game context
  description: The CanFly method checks if a player is capable of flying within the
    game world, taking into account various factors such as player state, aura effects,
    and movement restrictions. This method is commonly used in gameplay logic to determine
    if a character can utilize flight abilities or if they are restricted from flying
    due to certain conditions like being rooted or having specific debuffs. The result
    is typically based on the player's current status and available flight capabilities.
  parameters: []
  returns: Returns true if the player can fly, false otherwise. This indicates whether
    the player has the ability to fly in their current state, which may be affected
    by various game mechanics including buffs, debuffs, or movement restrictions.
  examples:
  - title: Basic usage example
    code: "if (player->CanFly()) {\n    // Player can fly\n    // Perform flight-related\
      \ actions\n}"
    language: cpp
  notes: This method typically checks against player state flags and movement restrictions
    rather than just checking for specific spell effects. It may be affected by various
    game mechanics including movement speed, root effects, and other status conditions
    that prevent flying.
  warnings: This method should not be used to directly determine if a player has access
    to flight abilities; instead, it should be used in conjunction with other methods
    like GetMovementInfo or checking for specific aura effects to properly assess
    flight capability.
  related:
  - Player::HasAura
  - Player::GetMovementInfo
  - Player::CanFly
  - Player::IsFlying
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T17:46:57.910743'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
