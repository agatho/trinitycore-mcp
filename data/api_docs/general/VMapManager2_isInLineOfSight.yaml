api:
  class: VMapManager2
  method: isInLineOfSight
  signature: bool VMapManager2::isInLineOfSight(unsigned int mapId, float x1, float
    y1, float z1, float x2, float y2, float z2, int ignoreFlags)
documentation:
  brief: Checks if there is a clear line of sight between two points in a specified
    map.
  description: The isInLineOfSight method determines whether a direct line can be
    drawn from point A to point B within a given map without any obstructing geometry.
    This function is essential for gameplay mechanics such as spell casting, NPC vision,
    and player targeting, where visibility between entities must be verified. The
    method uses the VMap (Virtual Map) system to perform collision detection against
    the map's static geometry. It takes into account various ignore flags that can
    be used to exclude certain types of obstacles from the line-of-sight check, such
    as specific GameObjects or creatures.
  parameters:
  - name: mapId
    description: The unique identifier of the map where the line-of-sight check is
      performed. This corresponds to the Map ID used internally by TrinityCore.
  - name: x1
    description: The X coordinate of the starting point for the line-of-sight test.
  - name: y1
    description: The Y coordinate of the starting point for the line-of-sight test.
  - name: z1
    description: The Z coordinate of the starting point for the line-of-sight test.
  - name: x2
    description: The X coordinate of the ending point for the line-of-sight test.
  - name: y2
    description: The Y coordinate of the ending point for the line-of-sight test.
  - name: z2
    description: The Z coordinate of the ending point for the line-of-sight test.
  - name: ignoreFlags
    description: A bitmask that specifies which types of objects should be ignored
      during the line-of-sight check. This allows filtering out specific geometry
      such as doors, creatures, or GameObjects based on their flags.
  returns: Returns true if there is a clear line of sight from point (x1,y1,z1) to
    point (x2,y2,z2) in the specified map, considering the ignoreFlags. Returns false
    if any obstacle blocks the direct path between the two points.
  examples:
  - title: Basic Line-of-Sight Check
    code: bool hasLOS = VMapManager2::instance().isInLineOfSight(0, 100.0f, 100.0f,
      50.0f, 200.0f, 200.0f, 50.0f, 0);
    language: cpp
  - title: Line-of-Sight with Ignore Flags
    code: 'const int IGNORE_CREATURES = 1;

      bool hasLOS = VMapManager2::instance().isInLineOfSight(1, 50.0f, 50.0f, 10.0f,
      150.0f, 150.0f, 10.0f, IGNORE_CREATURES);'
    language: cpp
  notes: This method is computationally intensive due to the need for raycasting against
    complex geometry. It should not be called frequently in tight loops without optimization.
    The VMapManager2 must have loaded the map data for the specified mapId before
    this function can operate correctly.
  warnings: Calling this function with invalid map IDs or coordinates outside of loaded
    maps may result in undefined behavior or crashes. Ensure that the map is properly
    loaded and the coordinates are within valid bounds before invoking this method.
  related:
  - getVMap
  - loadMap
  - unloadMap
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:54:05.385035'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
