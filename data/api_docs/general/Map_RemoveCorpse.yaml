api:
  class: Map
  method: RemoveCorpse
  signature: void Map::RemoveCorpse(int * corpse)
documentation:
  brief: Removes a corpse object from the map, cleaning up associated resources and
    data.
  description: The RemoveCorpse method is responsible for removing a corpse object
    from the game map. It handles the cleanup of corpse-related data structures and
    ensures that the corpse is properly removed from the world state. This method
    is typically called when a corpse expires or is manually cleared by players or
    game systems. The method takes an integer pointer to the corpse identifier, which
    represents the unique reference to the corpse being removed. It performs internal
    bookkeeping to maintain map integrity and ensure no dangling references remain
    after removal.
  parameters:
  - name: corpse
    description: Pointer to an integer representing the unique identifier of the corpse
      to be removed from the map. This value should correspond to a valid corpse entry
      in the map's corpse list.
  returns: null
  examples:
  - title: Basic corpse removal
    code: 'int corpseId = 12345;

      Map* map = player->GetMap();

      map->RemoveCorpse(&corpseId);'
    language: cpp
  - title: Removing corpse after player death
    code: "Player* player = ...;\nCorpse* corpse = player->GetCorpse();\nif (corpse)\n\
      {\n    Map* map = player->GetMap();\n    int* corpseId = &corpse->GetGUID().GetRawValue();\n\
      \    map->RemoveCorpse(corpseId);\n}"
    language: cpp
  notes: This method is part of the core map management system and should only be
    called with valid corpse identifiers. The internal implementation may involve
    multiple steps including removing from spatial grids, clearing references in player
    data structures, and notifying other systems about the removal. It's important
    to ensure that the pointer passed to this method points to a valid corpse entry
    to avoid undefined behavior.
  warnings: Passing an invalid or null pointer to this method can lead to crashes
    or memory corruption. Always verify that the corpse identifier corresponds to
    an existing corpse before calling RemoveCorpse. Additionally, calling this method
    on a corpse that has already been removed may cause unexpected behavior.
  related:
  - AddCorpse
  - GetCorpse
  - RemoveGameObject
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T11:01:45.380179'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
