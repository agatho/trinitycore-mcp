api:
  class: WorldObject
  method: ApplyEffectModifiers
  signature: double WorldObject::ApplyEffectModifiers(const SpellInfo * spellInfo,
    uint8 effIndex, double value) const
documentation:
  brief: Applies spell effect modifiers to a given value based on spell information
    and effect index
  description: This method applies various spell effect modifiers to a double value
    using the provided SpellInfo and effect index. It is commonly used in World of
    Warcraft's spell system to calculate modified values for different spell effects,
    such as damage, healing, or other modifiers that depend on the spell's properties
    and the specific effect being applied. The method handles the application of modifiers
    according to the spell's effect type and provides a way to adjust values based
    on game mechanics like talent bonuses, buffs effects, or other factors. It typically
    returns the modified value after applying all relevant modifiers.
  parameters:
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing details about the spell
      being applied. This includes information such as effect type, base value, and
      other parameters that affect how the modifier is applied.
  - name: effIndex
    description: The index of the effect within the spell (0-2). This determines which
      specific effect from the spell's effects array is being modified. Each effect
      index corresponds to a different type of spell effect, such as damage, healing,
      or other modifiers.
  - name: value
    description: The base double value to which the modifiers are applied. This could
      be a raw value like damage amount or a base value like percentage chance that
      gets modified by the spell effects.
  returns: Returns the modified double value after applying all relevant spell effect
    modifiers based on the provided SpellInfo and effIndex. The result may vary depending
    on the specific spell and effect being applied, and can represent either increased
    or decreased values depending on the modifier type.
  examples:
  - title: Basic usage example
    code: 'double modifiedValue = obj->ApplyEffectModifiers(spellInfo, 0, baseValue);

      // Applies the first effect modifier to a base value'
    language: cpp
  - title: Advanced usage with multiple effects
    code: 'double finalValue = obj->ApplyEffectModifiers(spellInfo, 2, baseValue);

      // Applies third effect modifier (e.g., damage over time)

      // This could be used in a complex spell calculation'
    language: cpp
  notes: This method is part of the core spell system and is typically used during
    spell calculations or when applying effects to values. It may involve complex
    logic depending on how the spell effect is defined, and can be affected by various
    factors like talent points, buffs effects, or other modifiers. Performance considerations
    include avoiding unnecessary calls to this method in high-frequency scenarios.
  warnings: Care should be taken when using this method with different effect indices
    as it might lead to incorrect results if the spellInfo structure is not properly
    initialized or if the effect index is out of bounds. Also, ensure that the value
    passed is valid before applying modifiers, especially in cases where the value
    might be zero or negative.
  related:
  - SpellInfo::Effect
  - WorldObject::CalculateSpellDamage
  - WorldObject::ApplySpellMod
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T19:49:48.631549'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
