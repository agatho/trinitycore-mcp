api:
  class: LazyManagerFactory
  method: GetDeathRecoveryManager
  signature: DeathRecoveryManager * LazyManagerFactory::GetDeathRecoveryManager()
documentation:
  brief: Retrieves the singleton DeathRecoveryManager instance used for handling player
    death recovery mechanics.
  description: The GetDeathRecoveryManager method provides access to the global DeathRecoveryManager
    singleton, which is responsible for managing player death-related recovery systems
    in TrinityCore. This includes handling resurrection mechanics, corpse management,
    and related death state transitions. The method ensures that only one instance
    of the DeathRecoveryManager exists throughout the game session, following the
    singleton pattern. It is typically called during player death events or when death-related
    functionality needs to be invoked. The manager may handle aspects such as corpse
    location tracking, resurrection spell validation, and death penalty calculations.
  parameters: []
  returns: A pointer to the DeathRecoveryManager singleton instance. Returns nullptr
    if the manager has not been initialized yet or if there is an error during initialization.
  examples:
  - title: Basic Usage in Player Death Handler
    code: "void HandlePlayerDeath(Player* player)\n{\n    DeathRecoveryManager* recoveryMgr\
      \ = sObjectAccessor->GetDeathRecoveryManager();\n    if (recoveryMgr)\n    {\n\
      \        recoveryMgr->HandlePlayerDeath(player);\n    }\n}"
    language: cpp
  notes: This method follows the singleton pattern and should be called carefully
    to avoid unnecessary overhead. The DeathRecoveryManager instance is typically
    initialized during server startup and remains active throughout the server's runtime.
    Accessing this manager from multiple threads requires proper synchronization if
    thread safety is a concern.
  warnings: Do not assume that the returned pointer is always valid. In rare initialization
    scenarios or error states, it may return nullptr. Always check for null before
    using the returned pointer to prevent crashes.
  related:
  - GetInstance
  - Initialize
  - IsInitialized
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:35:07.224447'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
