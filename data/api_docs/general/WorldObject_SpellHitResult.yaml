api:
  class: WorldObject
  method: SpellHitResult
  signature: int WorldObject::SpellHitResult(Unit * victim, const SpellInfo * spellInfo,
    bool canReflect) const
documentation:
  brief: Determines the result of a spell hit against a target unit, including critical
    hit and reflect chances
  description: The SpellHitResult method evaluates the outcome of a spell cast by
    a WorldObject against a target Unit, considering factors such as critical hit
    chance, spell reflectability, and hit probability. This method is crucial for
    determining whether a spell successfully hits its target or if it gets reflected
    back to the caster. It plays a significant role in combat mechanics and spell
    handling within TrinityCore's core gameplay system.
  parameters:
  - name: victim
    description: The target Unit that the spell is being cast against. This parameter
      determines the outcome based on the victim's resistance, armor, and other defensive
      attributes.
  - name: spellInfo
    description: Pointer to the SpellInfo structure containing details about the spell
      being cast, including its effects, duration, and damage type. This information
      is essential for calculating hit results.
  - name: canReflect
    description: Boolean flag indicating whether the spell can potentially be reflected
      back to the caster. This affects the calculation of reflect chances and determines
      if the spell might bounce back.
  returns: Returns an integer value representing the outcome of the spell hit. Possible
    values include 0 for miss, 1 for hit, 2 for critical hit, and 3 for reflect. The
    exact return value depends on the specific mechanics and conditions in effect
    during spell execution.
  examples:
  - title: Basic Spell Hit Result Calculation
    code: "int result = caster->SpellHitResult(target, spellInfo, true);\nif (result\
      \ == 2)\n{\n    // Handle critical hit\n}\nelse if (result == 3)\n{\n    //\
      \ Handle reflect\n}"
    language: cpp
  - title: Advanced Spell Hit Result with Combat Mechanics
    code: "int result = caster->SpellHitResult(target, spellInfo, false);\nswitch(result)\n\
      {\n    case 0:\n        // Miss\n        break;\n    case 1:\n        // Normal\
      \ hit\n        break;\n    case 2:\n        // Critical hit\n        break;\n\
      \    case 3:\n        // Reflect\n        break;\n}"
    language: cpp
  notes: This method is part of the core combat system and should be used carefully
    in conjunction with other spell-related methods. It requires accurate handling
    of target's defensive attributes and spell information to produce correct results.
  warnings: Improper handling of this method can lead to incorrect spell outcomes,
    potentially causing spells to miss or reflect incorrectly. The method must consider
    all relevant combat factors including critical hit chance, spell reflectability,
    and target resistance.
  related:
  - SpellHit
  - SpellCast
  - SpellHitResult
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:35:12.675798'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
