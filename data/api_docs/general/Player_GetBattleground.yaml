api:
  class: Player
  method: GetBattleground
  signature: Battleground * Player::GetBattleground() const
documentation:
  brief: Returns the battleground instance the player is currently participating in.
  description: This method retrieves the current battleground that a player is engaged
    in, returning a pointer to the Battleground object. It is commonly used to determine
    the active battleground state and to access battleground-specific functionality
    such as scoring, objectives, or player data. The method will return nullptr if
    the player is not currently in a battleground, which can occur when the player
    is in a normal zone, instance, or during a non-battleground activity. This method
    is essential for implementing battleground-related logic and is often used in
    conjunction with other battleground APIs to manage player participation and state.
  parameters: []
  returns: Returns a pointer to the Battleground object if the player is currently
    in a battleground, otherwise returns nullptr. The returned pointer may be null
    when the player is not in a battleground, such as during normal gameplay or in
    instances.
  examples:
  - title: Basic Usage Example
    code: "Battleground* bg = player->GetBattleground();\nif (bg)\n{\n    // Player\
      \ is in a battleground\n    // Access battleground data\n}\nelse\n{\n    //\
      \ Player is not in a battleground\n}"
    language: cpp
  notes: This method is thread-safe and can be safely called from any thread. It's
    important to note that the returned pointer may become invalid if the player leaves
    the battleground, so developers should avoid storing references to the Battleground
    object for extended periods.
  warnings: The method returns nullptr when the player is not in a battleground, which
    could lead to null pointer dereference errors if not properly handled. Always
    check for null before accessing methods on the returned pointer.
  related:
  - GetBattlegroundInstance
  - IsInBattleground
  - GetBattlegroundId
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:21:20.748369'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
