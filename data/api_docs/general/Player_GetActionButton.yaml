api:
  class: Player
  method: GetActionButton
  signature: const ActionButton * Player::GetActionButton(uint8 button)
documentation:
  brief: Returns the action button structure for the specified button index
  description: This method retrieves the ActionButton structure associated with a
    specific button index from the player's action bar. The returned pointer provides
    access to the button's data including spell ID, item ID, and action type. This
    method is commonly used in conjunction with GetActionButtons() to retrieve all
    action buttons for a player. The method does not validate the button index, so
    accessing invalid indices may result in undefined behavior or null pointers.
  parameters:
  - name: button
    description: The button index (0-135) representing which action button to retrieve
      from the player's action bar
  returns: Returns a pointer to the ActionButton structure for the specified button
    index, or nullptr if the button index is invalid or the action button has not
    been initialized.
  examples:
  - title: Basic Usage Example
    code: "Player* player = GetPlayer();\nActionbutton* button = player->GetActionButton(0);\n\
      if (button != nullptr)\n{\n    uint32 spellId = button->GetSpellId();\n    //\
      \ Use spellId to perform actions\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Player* player = GetPlayer();\nActionbutton* button = player->GetActionButton(10);\n\
      if (button != nullptr)\n{\n    uint32 spellId = button->GetSpellId();\n    uint32\
      \ itemId = button->GetItemId();\n    uint8 actionType = button->GetActionType();\n\
      \    // Process different types of actions based on actionType\n}"
    language: cpp
  notes: The method is implemented as a simple lookup function that accesses the player's
    action bar array. It does not perform any validation checks on the button index,
    so developers should ensure proper bounds checking before calling this method.
    Performance considerations include avoiding repeated calls to this method in tight
    loops.
  warnings: Calling this method with invalid indices (outside the range 0-135) may
    result in memory access violations or undefined behavior. The returned pointer
    should be checked for null before use, as some buttons may not have been initialized.
  related:
  - GetActionButtons
  - SetActionButton
  - GetActionButton
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:29:00.536578'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
