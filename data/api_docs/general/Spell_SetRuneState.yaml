api:
  class: Spell
  method: SetRuneState
  signature: void Spell::SetRuneState(uint8 value)
documentation:
  brief: Sets the rune state for a spell to control cooldown and usage.
  description: This method manages the rune state of a spell, typically used in conjunction
    with the Spell::SetRuneCooldown method. It controls whether runes are available
    for use or not, allowing developers to manipulate the cooldown behavior of spells
    that require runes. The method is primarily used for managing the state of runes
    in the context of class-specific abilities like Death Knight's rune system.
  parameters:
  - name: value
    description: The rune state value to set, typically 0-3 representing different
      states (0 = no cooldown, 1 = cooldown, 2 = available, 3 = used)
  returns: null
  examples:
  - title: Setting rune state for death knight abilities
    code: 'Spell* spell = new Spell();

      spell->SetRuneState(2);

      // This sets the rune to available state'
    language: cpp
  notes: 'Implementation details: This method is typically used in conjunction with
    other rune-related methods and is part of the broader spell management system.
    Performance considerations: This method should be called carefully during combat
    or cooldown periods to avoid affecting gameplay balance.'
  warnings: This method should not be used directly without proper understanding of
    the spell's internal state management. Common mistakes include setting incorrect
    values which can lead to improper rune usage and cooldown issues.
  related:
  - Spell::SetRuneCooldown
  - Spell::GetRuneState
  - Spell::GetRuneCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T14:16:08.164003'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
