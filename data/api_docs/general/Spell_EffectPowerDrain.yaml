api:
  class: Spell
  method: EffectPowerDrain
  signature: void Spell::EffectPowerDrain()
documentation:
  brief: Drains power from target to caster, transferring energy between units.
  description: The EffectPowerDrain method implements a spell effect that siphons
    power from a target unit and transfers it to the caster. This mechanism is commonly
    used in spells like Soul Leech or Life Tap where the caster gains health or mana
    while the target loses it. The method operates within the framework of TrinityCore's
    spell system, handling the mechanics of power transfer between different units
    during spell execution. It typically involves calculating the amount of power
    to drain based on spell modifiers and applying this to both source and target
    units.
  parameters: []
  returns: null
  examples:
  - title: Basic Power Drain Implementation
    code: "void Spell::EffectPowerDrain()\n{\n    if (!m_caster || !m_target)\n  \
      \      return;\n    \n    uint32 powerAmount = CalculateSpellMod();\n    m_caster->ModifyPower(PowerType::POWER_MANA,\
      \ powerAmount);\n    m_target->ModifyPower(PowerType::POWER_MANA, -powerAmount);\n\
      }\n"
    language: cpp
  notes: This method requires proper handling of target and caster units. The implementation
    involves checking for valid target conditions and ensuring that power transfer
    is correctly calculated based on spell modifiers. Performance considerations include
    avoiding unnecessary calculations when target is not valid.
  warnings: Improper handling of power transfer can lead to incorrect game balance,
    especially when dealing with different power types. Ensure that the method properly
    checks for valid target units before proceeding with power drain operations.
  related:
  - Spell::EffectHeal
  - Spell::EffectMana
  - Spell::EffectPower
  - Spell::EffectLeech
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T22:19:14.914983'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
