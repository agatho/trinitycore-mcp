api:
  class: InterruptRotationManager
  method: InterruptRotationManager
  signature: void InterruptRotationManager::InterruptRotationManager(BotAI * ai)
documentation:
  brief: Initializes an InterruptRotationManager instance with the provided BotAI
    context.
  description: The InterruptRotationManager constructor initializes a new instance
    of the InterruptRotationManager class, associating it with a specific BotAI context.
    This manager is responsible for handling interrupt-related logic during bot rotation
    behavior, particularly managing when and how interrupts should be processed based
    on the AI's current state and target conditions. The constructor sets up internal
    references to the AI system to enable proper interrupt handling throughout the
    bot's operation cycle.
  parameters:
  - name: ai
    description: Pointer to the BotAI instance that this manager will operate with.
      Must not be null.
  returns: null
  examples:
  - title: Basic Initialization
    code: 'BotAI* ai = new BotAI();

      InterruptRotationManager manager(ai);'
    language: cpp
  - title: Usage in Bot Context
    code: "class MyBot : public Bot {\npublic:\n    void Initialize() {\n        InterruptRotationManager\
      \ interruptMgr(this->GetAI());\n        // Further initialization logic\n  \
      \  }\n};"
    language: cpp
  notes: This constructor does not perform any complex initialization or setup beyond
    storing the provided BotAI pointer. The actual interrupt rotation management logic
    is handled by other methods in the class, such as Update() or ProcessInterrupts().
    Ensure that the BotAI instance remains valid for the lifetime of this manager.
  warnings: Passing a null pointer to the ai parameter will likely cause undefined
    behavior. Always ensure the BotAI instance is properly initialized before creating
    an InterruptRotationManager with it.
  related:
  - Update
  - ProcessInterrupts
  - IsInterruptible
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T03:51:38.731478'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
