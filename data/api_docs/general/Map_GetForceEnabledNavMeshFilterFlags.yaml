api:
  class: Map
  method: GetForceEnabledNavMeshFilterFlags
  signature: uint16 Map::GetForceEnabledNavMeshFilterFlags() const
documentation:
  brief: Returns the force-enabled navigation mesh filter flags for the map.
  description: This method retrieves the uint16 value representing the force-enabled
    navigation mesh filter flags that are applied to the current map. These flags
    determine which navigation mesh filters are forcibly enabled, overriding normal
    filtering behavior. The method is typically used in conjunction with navigation
    mesh data processing and pathfinding operations within the TrinityCore framework.
    It provides a way to ensure specific navigation filters are active regardless
    of standard conditions or settings.
  parameters: []
  returns: Returns a uint16 value representing the force-enabled navigation mesh filter
    flags. This value indicates which filters are forcibly enabled on the map, typically
    used for pathfinding and navigation mesh processing in World of Warcraft.
  examples:
  - title: Basic usage example
    code: "uint16 flags = map->GetForceEnabledNavMeshFilterFlags();\nif (flags & NavMeshFilterFlags::F_FLAG)\n\
      {\n    // Handle force-enabled flag\n}"
    language: cpp
  notes: This method is part of the navigation mesh system in TrinityCore and should
    be used carefully when dealing with pathfinding logic. The returned flags are
    typically set during map initialization or load operations, and may affect performance
    if not handled properly.
  warnings: Improper handling of these flags can lead to incorrect pathfinding results
    or navigation mesh issues. Ensure that the flags are properly interpreted and
    applied to avoid conflicts with standard filter settings.
  related:
  - GetNavMeshFilterFlags
  - SetForceEnabledNavMeshFilterFlags
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:21:05.152913'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
