api:
  class: Player
  method: Update
  signature: void Player::Update(uint32 time)
documentation:
  brief: Updates the player's state and handles time-based operations such as health
    regeneration, mana updates, and quest progress.
  description: The Player::Update method is a core function that processes all time-dependent
    player behaviors and state changes. It is called every game tick (typically every
    100ms) by the game loop to ensure the player's character remains synchronized
    with the server world. This method handles critical mechanics such as health and
    mana regeneration, combat timer updates, spell cooldowns, quest progress tracking,
    and other time-sensitive attributes. The update process also includes handling
    of player movement, combat state transitions, and sending necessary data to the
    client to maintain synchronization.
  parameters: []
  returns: null
  examples:
  - title: Basic Update Call
    code: "void GameLoop()\n{\n    uint32 currentTime = getMSTime();\n    // ... other\
      \ game logic ...\n    player->Update(currentTime);\n    // ... continue game\
      \ loop ...\n}"
    language: cpp
  - title: Player Update in Server Tick
    code: "class World\n{\npublic:\n    void Update(uint32 diff)\n    {\n        for\
      \ (auto& player : m_players)\n        {\n            if (player)\n         \
      \       player->Update(diff);\n        }\n    }\n};"
    language: cpp
  notes: This method should only be called from the main game thread. It performs
    numerous operations that may affect player state, so calling it outside of the
    normal game loop can cause synchronization issues. The time parameter represents
    milliseconds since last update and is used for accurate timing calculations.
  warnings: Never call Player::Update directly from combat or other time-sensitive
    code paths without proper synchronization. Improper usage can lead to race conditions
    and inconsistent player states. The method internally handles all state changes,
    so avoid modifying player attributes directly before or during an update cycle.
  related:
  - Player::UpdateTimers
  - Player::UpdateArea
  - Player::UpdateZone
  - Player::UpdateHealth
  - Player::UpdateMana
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T19:15:57.895181'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
