api:
  class: Unit
  method: SetFlightCapabilityID
  signature: void Unit::SetFlightCapabilityID(int32 flightCapabilityId, bool clientUpdate)
documentation:
  brief: Sets the flight capability ID for a unit, enabling or disabling flight-based
    gameplay mechanics.
  description: The SetFlightCapabilityID method allows developers to assign a specific
    flight capability ID to a Unit object, which determines the flight behavior and
    capabilities of that unit within the game world. This method is typically used
    in conjunction with other flight-related APIs to control how units interact with
    the environment, particularly when they are capable of flying or when they need
    to be restricted from flying. The method supports both client-side updates and
    server-side updates, allowing for flexible implementation depending on whether
    the change should be immediately visible to the player or handled internally by
    the server.
  parameters:
  - name: flightCapabilityId
    description: The identifier that defines the flight capability for the unit. This
      value typically corresponds to a specific flight path or ability in the game's
      database, and can be used to enable or disable flight behavior for the unit.
  - name: clientUpdate
    description: A boolean flag indicating whether the update should be sent to the
      client. If true, the change will be immediately visible to the player; if false,
      the update is handled internally by the server and may not be immediately apparent
      to the client.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      unit->SetFlightCapabilityID(12345, true);'
    language: cpp
  - title: Advanced usage example with conditional logic
    code: "Unit* unit = new Unit;\nif (unit->HasFlag(UnitFlags::UNIT_FLAG_FLYING))\
      \ {\n    unit->SetFlightCapabilityID(54321, false);\n} else {\n    unit->SetFlightCapabilityID(12345,\
      \ true);\n}"
    language: cpp
  notes: This method is part of the broader flight capability system in TrinityCore.
    It should be used carefully as it may affect how units interact with the world
    and can influence player experience if not handled correctly. Performance considerations
    include potential client-side updates that may require synchronization with server-side
    logic.
  warnings: Improper use of this method can lead to incorrect flight behavior or visual
    inconsistencies for players, especially when clientUpdate is set incorrectly.
    Avoid setting invalid flightCapabilityId values which could result in undefined
    behavior or crashes.
  related:
  - GetFlightCapabilityID
  - SetSpeed
  - SetFlag
  - HasFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:15:13.679217'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
