api:
  class: InterruptRotationManager
  method: IsTrackingCast
  signature: bool InterruptRotationManager::IsTrackingCast(int caster, uint32 spellId)
    const
documentation:
  brief: Checks if a specific caster is currently casting a spell that is being tracked
    by the rotation manager.
  description: The IsTrackingCast method determines whether a given caster is currently
    engaged in casting a spell that is actively monitored by the InterruptRotationManager.
    This functionality is essential for managing spell interruption logic within combat
    rotations, particularly in scenarios where certain spells need to be interrupted
    or preemptively handled based on their casting state. The method evaluates the
    internal tracking state of the rotation manager to return a boolean result indicating
    whether the specified caster's cast is currently being tracked.
  parameters:
  - name: caster
    description: The identifier of the caster entity (typically a GUID or unit reference)
      whose casting status is being checked.
  - name: spellId
    description: The unique identifier of the spell being cast, used to verify if
      this specific spell is being tracked for interruption purposes.
  returns: Returns true if the specified caster is currently casting a spell with
    the given spellId and that cast is actively tracked by the rotation manager; otherwise
    returns false.
  examples:
  - title: Basic usage to check if a player's cast is being tracked
    code: "if (rotationManager.IsTrackingCast(playerGuid, 12345)) {\n    // Handle\
      \ interruption logic\n    DoInterruptLogic();\n}"
    language: cpp
  - title: Using within a combat rotation context to prevent spell overlap
    code: "void CombatStrategy::Update() {\n    if (IsTrackingCast(playerGuid, 67890))\
      \ {\n        // Avoid casting conflicting spells\n        return;\n    }\n \
      \   // Proceed with normal spell casting logic\n}"
    language: cpp
  notes: This method relies on internal state tracking maintained by the InterruptRotationManager.
    It is important to ensure that cast tracking is properly initialized and updated
    before calling this method. The method does not perform any direct spell validation;
    it only checks if a cast is being tracked.
  warnings: Calling this method without prior initialization or update of the rotation
    manager's tracking state may lead to incorrect results. Additionally, this method
    should be used carefully in performance-critical code paths as it involves checking
    internal tracking structures.
  related:
  - InterruptRotationManager::StartTrackingCast
  - InterruptRotationManager::StopTrackingCast
  - InterruptRotationManager::IsCasting
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:19:37.203835'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
