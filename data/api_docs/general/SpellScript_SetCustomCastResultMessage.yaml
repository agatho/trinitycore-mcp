api:
  class: SpellScript
  method: SetCustomCastResultMessage
  signature: void SpellScript::SetCustomCastResultMessage(int result)
documentation:
  brief: Sets a custom cast result message for the spell script.
  description: The SetCustomCastResultMessage method allows a SpellScript to override
    the default cast result message displayed to players when a spell fails to cast.
    This method is typically used in custom spell implementations where specific failure
    conditions require custom feedback messages. The method accepts an integer result
    code that determines which predefined message will be shown, or a custom message
    can be set through other means. It should be called during the spell's execution
    flow, usually within a hook such as BeforeCast or OnCastStart to ensure proper
    behavior.
  parameters:
  - name: result
    description: An integer representing the cast result code. This value typically
      corresponds to predefined spell cast result constants defined in the TrinityCore
      API, such as SPELL_FAILED_CUSTOM_ERROR, SPELL_FAILED_TRY_AGAIN, or other custom
      values that control the message displayed to the player.
  returns: None. This method does not return any value.
  examples:
  - title: Setting a Custom Cast Result
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void BeforeCast()\
      \ override\n    {\n        // Set custom cast result to display a specific error\
      \ message\n        SetCustomCastResultMessage(SPELL_FAILED_CUSTOM_ERROR);\n\
      \    }\n};"
    language: cpp
  - title: Conditional Custom Cast Result
    code: "class ConditionalSpellScript : public SpellScript\n{\npublic:\n    void\
      \ BeforeCast() override\n    {\n        if (GetCaster()->HasAura(SPELL_AURA_STUNNED))\n\
      \        {\n            SetCustomCastResultMessage(SPELL_FAILED_TARGET_STUNNED);\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method is intended to be used within the context of a SpellScript's
    lifecycle, particularly during spell execution hooks. The result code passed must
    correspond to valid spell cast result constants defined in the TrinityCore API
    to ensure proper display and behavior. It does not affect the actual spell logic
    or casting mechanics, only the message shown to the player.
  warnings: Incorrect use of invalid result codes may lead to undefined behavior or
    no message being displayed. Ensure that any custom result values are properly
    handled by the client-side code or registered with the server to avoid silent
    failures.
  related:
  - SpellScript::SetCustomCastResult
  - SpellScript::GetSpellInfo
  - SpellScript::GetCaster
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:45:48.072249'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
