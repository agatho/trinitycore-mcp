api:
  class: WorldObject
  method: IsInRange2d
  signature: bool WorldObject::IsInRange2d(float x, float y, float minRange, float
    maxRange) const
documentation:
  brief: Checks if a given 2D coordinate is within the specified range of the WorldObject.
  description: 'The IsInRange2d method determines whether a point defined by X and
    Y coordinates falls within a circular range centered on the WorldObject. This
    method performs a 2D distance check, ignoring Z (height) differences. It''s commonly
    used in game mechanics such as spell targeting, area-of-effect checks, and NPC
    interaction range validations. The method uses squared distances internally for
    performance optimization to avoid expensive square root calculations. Precondition:
    The minRange should be less than or equal to maxRange; otherwise behavior is undefined.'
  parameters:
  - name: x
    description: The X coordinate of the point to check against the WorldObject's
      range.
  - name: y
    description: The Y coordinate of the point to check against the WorldObject's
      range.
  - name: minRange
    description: The minimum distance (inclusive) from the WorldObject's center within
      which the point must lie.
  - name: maxRange
    description: The maximum distance (inclusive) from the WorldObject's center within
      which the point must lie.
  returns: Returns true if the specified point (x, y) lies within the 2D range defined
    by minRange and maxRange from the WorldObject's current position; otherwise returns
    false.
  examples:
  - title: Basic Range Check
    code: "if (player->IsInRange2d(targetX, targetY, 0.0f, 30.0f)) {\n    // Player\
      \ is within 30 yards of the target position\n    SendSpellCastResult(SPELL_FAILED_OUT_OF_RANGE);\n\
      }"
    language: cpp
  - title: Checking for Target Within Specific Range
    code: "float playerX = player->GetPositionX();\nfloat playerY = player->GetPositionY();\n\
      float targetX = 100.0f;\nfloat targetY = 200.0f;\n\nif (player->IsInRange2d(targetX,\
      \ targetY, 5.0f, 25.0f)) {\n    // Target is between 5 and 25 yards away from\
      \ player\n    DoSomething();\n}"
    language: cpp
  notes: This method performs a fast 2D distance check using squared distances internally
    to avoid costly sqrt() operations. It does not account for object bounding boxes
    or height differences (Z-axis). For precise 3D range checking, use IsInRange3d
    instead.
  warnings: Ensure minRange is not greater than maxRange; otherwise the behavior is
    undefined. Be cautious when using this method with very large coordinate values
    as floating-point precision might affect accuracy in edge cases.
  related:
  - IsInRange3d
  - GetDistance2d
  - GetPositionX
  - GetPositionY
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:24:09.749088'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
