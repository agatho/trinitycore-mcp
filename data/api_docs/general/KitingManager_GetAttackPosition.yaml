api:
  class: KitingManager
  method: GetAttackPosition
  signature: int KitingManager::GetAttackPosition(Unit * target)
documentation:
  brief: Calculates and returns the optimal attack position for a kiting maneuver
    against the specified target unit.
  description: The GetAttackPosition method determines the best positional strategy
    for a unit to perform a kiting attack against a given target. This method evaluates
    factors such as distance, threat level, and combat mechanics to return an integer
    value representing the recommended attack position. The returned value typically
    corresponds to predefined kiting states or positions within the AI's movement
    and positioning logic. This functionality is crucial for NPC behavior in TrinityCore's
    AI system, particularly for units that employ kiting tactics to maintain optimal
    distance from enemies while dealing damage.
  parameters: []
  returns: Returns an integer value representing the calculated attack position. The
    specific meaning of this integer depends on the internal kiting state machine
    implementation but generally indicates a strategic positioning state such as 'close',
    'medium', or 'far' relative to the target, or a specific movement command for
    kiting behavior.
  examples:
  - title: Basic Usage in AI Context
    code: "class MyAI : public ScriptedAI {\npublic:\n    void UpdateAI(uint32 diff)\
      \ override {\n        if (Unit* target = SelectTarget(SELECT_TARGET_TOPAGGRO))\
      \ {\n            int position = KitingManager::GetAttackPosition(target);\n\
      \            // Use the returned position to determine movement strategy\n \
      \           switch (position) {\n                case 0: // Close range\n  \
      \                  // Move closer\n                    break;\n            \
      \    case 1: // Medium range\n                    // Maintain distance\n   \
      \                 break;\n                case 2: // Far range\n           \
      \         // Move away\n                    break;\n            }\n        }\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the kiting AI system and relies on internal threat
    calculations, target positioning, and combat mechanics. The exact implementation
    details may vary between different creature types and their specific AI configurations.
    Developers should be aware that this method might return different values based
    on dynamic factors such as target movement, spell casting, or environmental conditions.
  warnings: The return value is not guaranteed to be stable across multiple calls
    if the target's state changes rapidly. Care should be taken when using this value
    for immediate movement decisions without considering other AI context. Also, this
    method may not be thread-safe if called from different threads simultaneously.
  related:
  - KitingManager::Update
  - KitingManager::IsKiting
  - KitingManager::SetKiting
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:07:51.209067'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
