api:
  class: Player
  method: GetDrunkValue
  signature: uint8 Player::GetDrunkValue() const
documentation:
  brief: Returns the current drunk value of the player, which determines the level
    of intoxication and associated effects.
  description: The GetDrunkValue method retrieves the current drunk value of a player
    character, representing the level of intoxication from alcohol consumption. This
    value affects various game mechanics including movement speed, spell casting,
    and combat performance. The method returns a uint8 value that corresponds to the
    percentage of maximum drunk value, typically ranging from 0 to 100. It is used
    internally by TrinityCore to determine player state and apply appropriate effects
    based on intoxication level. This method does not take any parameters and is purely
    read-only.
  parameters: []
  returns: Returns a uint8 value representing the current drunk level, where 0 indicates
    no intoxication and values up to 100 indicate maximum intoxication. Values between
    0-100 are typically used for calculating effects such as reduced movement speed
    or impaired spell casting.
  examples:
  - title: Basic Usage Example
    code: "uint8 drunkValue = player->GetDrunkValue();\nif (drunkValue > 0)\n{\n \
      \   // Player is intoxicated\n    // Perform actions based on drunk level\n}"
    language: cpp
  notes: This method is part of the internal player state management system and should
    not be called directly in most cases. The value returned corresponds to the percentage
    of maximum drunk value, which is typically set by game rules or player actions.
    Implementation details include handling of alcohol effects and their impact on
    player performance.
  warnings: This method should not be used for determining player's actual intoxication
    level in combat scenarios as it may lead to incorrect gameplay behavior if used
    improperly. The returned value does not represent the full drunk state, but rather
    a normalized percentage that affects game mechanics.
  related:
  - GetDrunkValue
  - SetDrunkValue
  - AddDrunkValue
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T17:08:30.309370'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
