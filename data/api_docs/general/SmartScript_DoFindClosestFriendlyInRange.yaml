api:
  class: SmartScript
  method: DoFindClosestFriendlyInRange
  signature: Unit * SmartScript::DoFindClosestFriendlyInRange(float range, bool playerOnly)
    const
documentation:
  brief: Finds and returns the closest friendly Unit within a specified range, optionally
    limiting to players only.
  description: The DoFindClosestFriendlyInRange method searches for the nearest friendly
    Unit (either player or creature) within a given range. It evaluates all units
    in the vicinity of the SmartScript's owner and selects the one that is both friendly
    and closest to the owner. If the 'playerOnly' parameter is set to true, it will
    only consider player-controlled units. This method is commonly used in AI scripts
    to locate nearby allies for support, healing, or targeting purposes. The search
    takes into account the unit's current position and distance, ensuring accurate
    results even when units are moving. It returns a pointer to the found Unit or
    nullptr if no suitable target exists within range.
  parameters:
  - name: range
    description: The maximum distance in yards within which to search for friendly
      units. Must be a positive value.
  - name: playerOnly
    description: If true, restricts the search to player-controlled units only. If
      false, includes both players and creatures.
  returns: A pointer to the closest friendly Unit found within range. Returns nullptr
    if no friendly unit is found within the specified range.
  examples:
  - title: Basic usage to find any nearby friendly unit
    code: "Unit* target = DoFindClosestFriendlyInRange(30.0f, false);\nif (target)\n\
      {\n    // Use the found friendly unit\n    Talk(\"Found a friendly unit!\");\n\
      }"
    language: cpp
  - title: Find only nearby player allies
    code: "Unit* player = DoFindClosestFriendlyInRange(20.0f, true);\nif (player)\n\
      {\n    // Only players are considered\n    CastSpell(player, SPELL_HEAL);\n}"
    language: cpp
  notes: This method performs a spatial search using the unit's current position and
    is optimized for performance in AI scripts. It does not consider line of sight
    or obstacles between units. The range parameter is measured as a straight-line
    distance from the SmartScript owner.
  warnings: Ensure that the SmartScript owner has a valid position before calling
    this method, otherwise the search may behave unexpectedly. Be cautious with very
    large ranges as they can impact performance in crowded areas.
  related:
  - DoFindClosestEnemyInRange
  - DoFindClosestUnit
  - DoGetNearbyFriendly
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:29:41.204427'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
