api:
  class: AuraEffect
  method: HandleAuraModRangedHaste
  signature: void AuraEffect::HandleAuraModRangedHaste(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Modifies the ranged haste stat of the target based on aura application.
  description: The HandleAuraModRangedHaste method adjusts the target's ranged attack
    speed by modifying their haste rating. This is typically used in aura effects
    that increase or decrease the rate at which ranged attacks are executed. The method
    applies or removes the haste modifier depending on whether the aura is being applied
    or removed, and updates the target's statistics accordingly. It operates within
    the context of TrinityCore's aura system where each aura effect can modify various
    player attributes such as attack speed, damage, or movement speed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's state and target.
  - name: mode
    description: The mode of operation for the aura effect, typically indicating whether
      it's being applied (1) or removed (0). This parameter controls how the haste
      modification is processed.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura effect. When true, the haste modifier is added; when false, it's removed
      from the target.
  returns: null
  examples:
  - title: Applying Ranged Haste Aura
    code: 'AuraEffect* aura = new AuraEffect();

      AuraApplication* app = new AuraApplication();

      aura->HandleAuraModRangedHaste(app, 1, true); // Apply haste aura'
    language: cpp
  - title: Removing Ranged Haste Aura
    code: 'AuraEffect* aura = new AuraEffect();

      AuraApplication* app = new AuraApplication();

      aura->HandleAuraModRangedHaste(app, 0, false); // Remove haste aura'
    language: cpp
  notes: This method directly affects the target's attack speed calculations. The
    actual haste percentage is computed based on the aura's value and applied to the
    target's base ranged attack speed. This method should only be called from within
    the aura application system, not standalone.
  warnings: Improper use of this method without proper aura application context may
    lead to incorrect attack speed modifications or inconsistent gameplay behavior.
    Ensure that the aura application state is valid before calling this method.
  related:
  - HandleAuraModRangedHaste
  - HandleAuraModAttackSpeed
  - HandleAuraModHaste
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T08:59:49.004294'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
