api:
  class: Unit
  method: _addAttacker
  signature: void Unit::_addAttacker(Unit * pAttacker)
documentation:
  brief: Adds a unit to the attacker list of this unit, establishing mutual combat
    relationship.
  description: This method adds the specified Unit to the attacker list of the current
    Unit, creating a mutual combat relationship where both units will engage in combat
    with each other. The method is typically used during combat initialization or
    when a unit needs to be added to another unit's attacker list for proper game
    mechanics handling. It ensures that the attacking unit is properly registered
    as an attacker and maintains the integrity of combat system logic.
  parameters:
  - name: pAttacker
    description: Pointer to the Unit that will be added as an attacker. This parameter
      must not be null and should represent a valid Unit object that can participate
      in combat.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* pAttacker = new Unit();

      Unit* pTarget = new Unit();


      pTarget->_addAttacker(pAttacker);'
    language: cpp
  notes: This method likely involves internal tracking of attacker relationships and
    may trigger updates to combat state. It should be used carefully in combat scenarios
    where proper attacker relationship management is required.
  warnings: Improper usage can lead to invalid attacker relationships or null pointer
    exceptions if the Unit parameter is not properly initialized. Avoid calling this
    method on non-combat units unless explicitly intended for special handling.
  related:
  - Unit::_addAttacker
  - Unit::GetAttackerList
  - Unit::AddThreat
  - Unit::RemoveAttacker
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T19:57:44.022522'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
