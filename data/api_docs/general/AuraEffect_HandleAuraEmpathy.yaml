api:
  class: AuraEffect
  method: HandleAuraEmpathy
  signature: void AuraEffect::HandleAuraEmpathy(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes the empathy aura effect on a target.
  description: The HandleAuraEmpathy method manages the application and removal of
    the empathy aura effect, which allows a player to sense the emotions and health
    status of nearby friendly units. This method is called internally by the aura
    system when an empathy effect is applied or removed from a unit. It handles the
    necessary updates to the target's state and communicates changes to the client.
    The method operates based on the AuraApplication context, the mode of operation
    (apply or remove), and whether the effect is being activated or deactivated.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's properties and
      target.
  - name: mode
    description: The mode of operation indicating how the aura is being handled. Typically
      0 for apply, 1 for remove, though exact values may vary based on implementation
      details.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the empathy effect from the target.
  returns: null
  examples:
  - title: Applying Empathy Aura
    code: 'AuraApplication* app = new AuraApplication(player, target, auraInfo);

      handleAuraEmpathy(app, 0, true); // Apply empathy aura'
    language: cpp
  - title: Removing Empathy Aura
    code: 'AuraApplication* app = GetAuraApplication();

      handleAuraEmpathy(app, 1, false); // Remove empathy aura'
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    called directly by external code. The empathy effect typically affects only friendly
    units within a certain range. Implementation details may vary depending on the
    specific aura type and target's state.
  warnings: Improper usage of this method can lead to incorrect aura states or client-side
    visual glitches. Ensure that the AuraApplication object is valid before calling
    this method. Do not call this method without proper context as it may cause memory
    corruption or unexpected behavior.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - AuraApplication::GetTarget
  - AuraEffect::GetAuraType
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:33:53.081365'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
