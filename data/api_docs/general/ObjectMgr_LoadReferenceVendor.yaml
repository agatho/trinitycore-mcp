api:
  class: ObjectMgr
  method: LoadReferenceVendor
  signature: uint32 ObjectMgr::LoadReferenceVendor(int32 vendor, int32 item_id, int
    * skip_vendors)
documentation:
  brief: Loads reference vendor data for a given item and vendor, returning the number
    of loaded entries.
  description: The LoadReferenceVendor method is responsible for loading reference
    vendor data from the database into memory. It processes entries where a specific
    vendor sells a particular item, often used in conjunction with reference loot
    tables or vendor item lists. This method typically handles the loading of vendor-item
    relationships that may be referenced by other systems within TrinityCore. The
    method ensures proper initialization of vendor data structures and returns a count
    of successfully loaded entries. It is commonly invoked during server startup or
    database reload operations to populate internal vendor caches.
  parameters:
  - name: vendor
    description: The unique identifier (ID) of the vendor to load reference data for.
      This represents the npc_vendor entry in the database.
  - name: item_id
    description: The unique identifier (ID) of the item being sold by the vendor.
      This corresponds to an item_template entry in the database.
  - name: skip_vendors
    description: Pointer to an integer that may be used to skip certain vendors during
      loading. Value is typically set to 0 or 1, with 1 indicating that this vendor
      should be skipped.
  returns: Returns a uint32 value representing the number of reference vendor entries
    successfully loaded for the given vendor and item combination. A return value
    of 0 indicates no entries were found or loaded.
  examples:
  - title: Basic Usage
    code: uint32 loadedCount = sObjectMgr->LoadReferenceVendor(12345, 67890, nullptr);
    language: cpp
  - title: With Skip Vendor Flag
    code: 'int skip = 1;

      uint32 count = sObjectMgr->LoadReferenceVendor(12345, 67890, &skip);'
    language: cpp
  notes: This method is typically called during server initialization or database
    reloads. It's important to note that this function may be part of a larger vendor
    loading system and might depend on other internal data structures being properly
    initialized. The method may perform database queries internally, so performance
    could be impacted by large vendor item sets.
  warnings: Ensure that the vendor and item IDs passed are valid and exist in the
    respective database tables. Passing invalid IDs may lead to unexpected behavior
    or errors during loading. This function should not be called concurrently from
    multiple threads without proper synchronization.
  related:
  - LoadVendorItem
  - LoadNPCVendor
  - LoadReferenceLoot
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T23:01:18.988977'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
