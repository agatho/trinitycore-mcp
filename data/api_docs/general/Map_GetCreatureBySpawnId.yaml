api:
  class: Map
  method: GetCreatureBySpawnId
  signature: Creature * Map::GetCreatureBySpawnId(int spawnId) const
documentation:
  brief: Retrieves a creature object by its spawn ID from the map.
  description: This method returns a pointer to a Creature object that corresponds
    to the specified spawn ID within the current map. It is used to access specific
    creatures in the game world, allowing developers to interact with individual mob
    entities based on their unique spawn identifiers. The method performs a lookup
    in the map's creature cache using the provided spawn ID and returns NULL if no
    matching creature is found. This functionality is essential for managing dynamic
    creature spawns and implementing game mechanics that require direct creature access.
  parameters: []
  returns: Returns a pointer to the Creature object associated with the given spawn
    ID, or nullptr if no such creature exists in the map. The returned pointer may
    be used to access creature properties and methods, including their health, AI
    behavior, and movement patterns.
  examples:
  - title: Basic Usage Example
    code: "Creature* creature = map->GetCreatureBySpawnId(12345);\nif (creature !=\
      \ nullptr)\n{\n    // Use creature\n    creature->SetDisplayId(1234);\n}"
    language: cpp
  notes: This method is typically used in conjunction with other map-related methods
    to manage creature spawning and retrieval. It should be noted that the returned
    pointer may become invalid if the creature is despawned or removed from the map,
    so developers must ensure proper handling of lifetime issues. Performance-wise,
    this method involves a lookup operation within the map's internal cache, which
    can be optimized by using efficient data structures.
  warnings: Be cautious when using this method with spawn IDs that may not exist in
    the current map; attempting to dereference a nullptr can lead to crashes. Also,
    avoid calling this method during creature removal or despawn processes as it might
    cause invalid memory access.
  related:
  - GetCreatureByGuid
  - GetCreatureBySpawnId
  - GetCreature
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:09:12.417968'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
