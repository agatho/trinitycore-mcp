api:
  class: Item
  method: SetNotRefundable
  signature: void Item::SetNotRefundable(Player * owner, bool changestate, int * trans,
    bool addToCollection)
documentation:
  brief: Sets an item as not refundable, preventing it from being returned to the
    player's inventory upon destruction or disenchanting.
  description: The SetNotRefundable method marks an item as non-refundable, which
    means that when the item is destroyed or disenchanted, it will not be returned
    to the owner's inventory. This method is typically used in scenarios where items
    should remain in the player's possession even after being removed from their inventory,
    such as during quest completion or when items are bound to specific actions. The
    method accepts a Player pointer to determine the owner of the item, and can optionally
    change the state of the item's refundability, update transaction data, and add
    the item to a collection if specified.
  parameters:
  - name: owner
    description: Pointer to the Player object who owns the item. This parameter determines
      which player's inventory the item will be removed from upon destruction or disenchanting.
  - name: changestate
    description: Boolean flag indicating whether to change the refundability state
      of the item. If true, the item's refundability status is updated; if false,
      it remains unchanged.
  - name: trans
    description: Pointer to an integer representing transaction data. This parameter
      allows for updating transaction information related to the item's removal or
      modification during the process.
  - name: addToCollection
    description: Boolean flag indicating whether to add the item to a collection.
      If true, the item is added to a collection; if false, it is not added.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Item* item = new Item();

      Player* player = new Player();

      item->SetNotRefundable(player, true, nullptr, false);'
    language: cpp
  - title: Advanced usage example with transaction update
    code: 'Item* item = new Item();

      Player* player = new Player();

      int transaction = 0;

      item->SetNotRefundable(player, false, &transaction, true);'
    language: cpp
  notes: Implementation details suggest that this method is primarily used in game
    mechanics involving item destruction or disenchanting. It should be used carefully
    to ensure proper handling of item ownership and refundability status during gameplay
    events.
  warnings: This method should not be used lightly, as it may affect player inventory
    management and could lead to unintended consequences if applied incorrectly. The
    transaction data parameter must be properly initialized to avoid memory access
    errors.
  related:
  - Item::SetRefundable
  - Item::GetOwner
  - Item::GetRefundable
  - Item::RemoveFromInventory
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T04:30:58.630787'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
