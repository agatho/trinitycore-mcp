api:
  class: SpellScript
  method: GetHitUnit
  signature: Unit * SpellScript::GetHitUnit() const
documentation:
  brief: Returns the Unit object that was hit by the spell during execution.
  description: The GetHitUnit method retrieves a pointer to the Unit instance that
    was targeted and affected by the spell during its execution. This method is typically
    used within SpellScript implementations to access information about the target
    unit, such as its health, faction, or other properties. The returned Unit pointer
    can be null if no valid target was hit, which may occur in cases where the spell
    fails to find a suitable target or when the target is destroyed before the spell
    effect is applied. This method should only be called during the appropriate spell
    script phases, such as during the hit phase of spell execution.
  parameters: []
  returns: A pointer to the Unit object that was hit by the spell. Returns nullptr
    if no valid unit was hit or if the spell did not target a unit.
  examples:
  - title: Basic usage in SpellScript
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\n\
      \    {\n        Unit* target = GetHitUnit();\n        if (target)\n        {\n\
      \            // Perform actions on the hit unit\n            target->ModifyHealth(-100);\n\
      \        }\n    }\n};"
    language: cpp
  - title: Checking target faction before applying effect
    code: "class FactionBasedSpellScript : public SpellScript\n{\npublic:\n    void\
      \ HandleHit()\n    {\n        Unit* target = GetHitUnit();\n        if (target\
      \ && target->GetFaction() == 14)\n        {\n            // Apply special effect\
      \ only to creatures of faction 14\n            target->AddAura(12345, target);\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method is only valid during the spell's execution phase and should not
    be called outside of appropriate script handlers. The returned Unit pointer may
    become invalid if the target unit is removed from the world or destroyed before
    subsequent operations.
  warnings: Calling this method outside of a valid spell execution context will result
    in undefined behavior. Always check for null return values before dereferencing
    the returned Unit pointer to avoid crashes.
  related:
  - GetHitTarget
  - GetHitDamage
  - GetHitSpell
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:53:39.152545'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
