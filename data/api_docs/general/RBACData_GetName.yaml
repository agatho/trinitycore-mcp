api:
  class: RBACData
  method: GetName
  signature: const std::string & RBACData::GetName() const
documentation:
  brief: Returns the name associated with the RBAC data instance
  description: The GetName method retrieves the string name that is associated with
    the Role-Based Access Control (RBAC) data object. This name typically represents
    a role or permission set within the TrinityCore authentication and authorization
    system. The returned reference provides direct access to the internal name string
    stored in the RBACData instance, allowing for efficient retrieval without unnecessary
    copying. The method is designed to be a read-only accessor that does not modify
    the state of the object. This functionality is essential for identifying and managing
    user permissions within the game's security framework.
  parameters: []
  returns: A constant reference to a std::string containing the name associated with
    this RBAC data instance. The returned string is guaranteed to be valid and non-empty
    if the RBACData object was properly initialized.
  examples:
  - title: Basic Usage
    code: 'RBACData rbacData;

      // Assume rbacData has been populated with a name

      const std::string& roleName = rbacData.GetName();

      std::cout << "Role name: " << roleName << std::endl;'
    language: cpp
  - title: Checking Role Name in Permission System
    code: "RBACData* data = sAccountMgr->GetRBACData(accountId);\nif (data)\n{\n \
      \   const std::string& name = data->GetName();\n    if (name == \"Admin\")\n\
      \    {\n        // Grant administrative privileges\n    }\n}"
    language: cpp
  notes: The returned string reference remains valid for the lifetime of the RBACData
    object. This method is thread-safe as long as the underlying RBACData object is
    not modified concurrently by other threads. The implementation avoids copying
    the internal string data, making it efficient for frequent access.
  warnings: Ensure that the RBACData object has been properly initialized before calling
    GetName(), as accessing an uninitialized object may lead to undefined behavior.
    Since this returns a const reference, modifications to the returned string will
    not affect the RBACData's internal state.
  related:
  - GetId
  - SetId
  - SetName
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T07:41:36.705948'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
