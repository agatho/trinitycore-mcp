api:
  class: Player
  method: MoveItemToInventory
  signature: void Player::MoveItemToInventory(const ItemPosCountVec & dest, Item *
    pItem, bool update, bool in_characterInventoryDB)
documentation:
  brief: Moves an item from the player's inventory to a specified destination slot.
  description: The MoveItemToInventory method handles the transfer of an item from
    the player's current inventory to a designated destination slot, updating both
    the item's position and the player's inventory. This method is commonly used during
    item transactions, such as when acquiring items through quest rewards or when
    moving items between different inventory slots. It ensures that the item's data
    is properly updated in the database and that the player's inventory reflects the
    new state after the operation.
  parameters:
  - name: dest
    description: A vector of ItemPosCount objects specifying the destination slot(s)
      where the item should be moved. Each ItemPosCount represents a specific inventory
      slot and the number of items to move.
  - name: pItem
    description: Pointer to the Item object that is being moved. This parameter must
      not be null, as it represents the actual item being transferred.
  - name: update
    description: Boolean flag indicating whether to update the item's database record.
      If true, the item's data will be saved in the database; if false, it will remain
      in memory only.
  - name: in_characterInventoryDB
    description: Boolean flag specifying whether the item should be stored in the
      character inventory database. This parameter affects how the item is handled
      during database operations and may influence performance considerations.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = GetPlayer();

      Item* item = player->GetItemByGUID(12345);

      ItemPosCountVec dest;

      dest.push_back(ItemPosCount(0, 0));

      player->MoveItemToInventory(dest, item, true, true);'
    language: cpp
  - title: Advanced usage example with multiple items
    code: 'Player* player = GetPlayer();

      Item* item = player->GetItemByGUID(12345);

      ItemPosCountVec dest;

      dest.push_back(ItemPosCount(0, 0));

      dest.push_back(ItemPosCount(1, 1));

      player->MoveItemToInventory(dest, item, false, true);'
    language: cpp
  notes: This method is typically used in conjunction with other inventory management
    methods like AddItem or RemoveItem. It's important to note that the method does
    not validate whether the destination slots are valid or available; it simply moves
    the item to those positions. Performance considerations include database updates
    and potential memory usage if update is set to false.
  warnings: This method should not be used with null pointers for pItem, as it will
    cause a crash. Also, ensure that the destination vector contains valid ItemPosCount
    objects before calling this method, otherwise it may lead to undefined behavior
    or database corruption.
  related:
  - GetItemByGUID
  - AddItem
  - RemoveItem
  - Item::SetOwner
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T00:31:40.422643'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
