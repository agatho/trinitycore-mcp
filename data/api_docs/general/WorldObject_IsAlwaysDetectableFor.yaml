api:
  class: WorldObject
  method: IsAlwaysDetectableFor
  signature: bool WorldObject::IsAlwaysDetectableFor(const WorldObject * seer) const
documentation:
  brief: Determines whether the object is always detectable for a specific seer.
  description: This method checks if the WorldObject is always detectable for a given
    seer, meaning it will be visible regardless of normal detection mechanics. It's
    used primarily in scenarios where objects need to bypass standard detection rules,
    such as when dealing with invisible or stealthed creatures. The method returns
    true if the object is always detectable for the specified seer, false otherwise.
    This functionality is crucial for implementing special detection behaviors in
    World of Warcraft.
  parameters:
  - name: seer
    description: The WorldObject that is performing the detection check. This represents
      the entity that will be checking if the current object is detectable.
  returns: Returns true if the object is always detectable for the seer, false otherwise.
    This indicates whether the object can bypass normal detection rules and remain
    visible to the specified seer.
  examples:
  - title: Basic usage example
    code: "if (player->IsAlwaysDetectableFor(target)) {\n    // Do something\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other detection-related
    methods and may be overridden in subclasses. Performance considerations include
    checking if the object is always detectable for a specific seer, which can affect
    gameplay mechanics.
  warnings: This method should not be confused with regular detection methods. It's
    important to understand that this method does not guarantee visibility in all
    situations, but rather indicates whether an object can bypass normal detection
    rules for a given seer.
  related:
  - IsDetectable
  - IsVisible
  - IsInMap
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:02:18.483292'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
