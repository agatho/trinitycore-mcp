api:
  class: TradeData
  method: HasItem
  signature: bool TradeData::HasItem(int itemGuid) const
documentation:
  brief: Checks whether a specific item GUID exists within the trade data.
  description: The HasItem method determines if a given item GUID is present in the
    current trade data. This functionality is primarily used during trade operations
    to verify that items being offered or accepted are valid and have not been removed
    from the trade window. The method performs a lookup against internal tracking
    of items involved in the ongoing trade process, ensuring proper validation before
    completing trades. It is commonly invoked when processing trade updates or confirming
    trade validity.
  parameters:
  - name: itemGuid
    description: The unique identifier (GUID) of the item to check for presence in
      the trade data. This should be a valid item GUID that corresponds to an item
      currently in the trade window.
  returns: Returns true if the specified item GUID is found within the trade data,
    indicating that the item is part of the current trade; otherwise returns false.
  examples:
  - title: Check if an item exists in trade
    code: "if (tradeData.HasItem(123456)) {\n    // Item with GUID 123456 is present\
      \ in the trade\n    std::cout << \"Item found in trade\" << std::endl;\n} else\
      \ {\n    // Item not found in the trade\n    std::cout << \"Item not found in\
      \ trade\" << std::endl;\n}"
    language: cpp
  notes: This method assumes that item GUIDs are unique within a trade session and
    relies on internal tracking of items. The implementation likely uses efficient
    data structures such as hash maps or sets for fast lookup performance.
  warnings: null
  related:
  - TradeData::AddItem
  - TradeData::RemoveItem
  - TradeData::GetItem
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:17:46.228331'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
