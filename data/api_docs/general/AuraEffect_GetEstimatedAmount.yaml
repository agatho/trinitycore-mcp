api:
  class: AuraEffect
  method: GetEstimatedAmount
  signature: int AuraEffect::GetEstimatedAmount() const
documentation:
  brief: Calculates and returns the estimated amount of an aura effect.
  description: The GetEstimatedAmount method computes the projected value of an aura
    effect, taking into account various factors such as caster level, spell power,
    and any applicable modifiers. This value is typically used for visual feedback,
    tooltip calculations, or determining the effectiveness of a buff or debuff before
    it's fully applied. The estimation may differ from the final calculated amount
    due to randomization, rounding, or other game mechanics that are only resolved
    upon application.
  parameters: []
  returns: An integer representing the estimated amount of the aura effect. This value
    can be positive (indicating a beneficial effect) or negative (indicating a harmful
    effect), depending on the nature of the aura.
  examples:
  - title: Basic Usage in Aura Application
    code: "AuraEffect* aura = player->GetAura(12345);\nif (aura)\n{\n    int estimatedAmount\
      \ = aura->GetEstimatedAmount();\n    // Use estimatedAmount for tooltip or UI\
      \ display\n}"
    language: cpp
  - title: Using Estimated Amount for Buff Display
    code: "Unit* target = player->GetSelectedUnit();\nif (target && target->HasAura(67890))\n\
      {\n    AuraEffect* aura = target->GetAura(67890)->GetEffect(0);\n    int estimated\
      \ = aura->GetEstimatedAmount();\n    ChatHandler(player->GetSession()).PSendSysMessage(\"\
      Estimated effect: %d\", estimated);\n}"
    language: cpp
  notes: This method does not modify the actual aura state or apply any changes to
    the target. It is purely a predictive calculation meant for display purposes.
    The estimation may vary based on server-side configurations and game mechanics
    such as critical strikes, randomization, or stacking rules.
  warnings: Do not rely on this value for gameplay-critical decisions, as it's an
    estimate only. The actual effect applied may differ due to server-side randomness
    or other modifiers that are resolved during the application phase.
  related:
  - GetAmount
  - GetBaseAmount
  - GetAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:03:47.738920'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
