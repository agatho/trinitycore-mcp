api:
  class: Unit
  method: _UnregisterDynObject
  signature: void Unit::_UnregisterDynObject(DynamicObject * dynObj)
documentation:
  brief: Unregisters a dynamic object from the unit's registry.
  description: This method removes a dynamic object from the unit's internal registry,
    effectively unregistering it from the game world. It is typically used when a
    dynamic object needs to be destroyed or when the unit no longer wishes to maintain
    references to the dynamic object. The method ensures proper cleanup of resources
    and prevents memory leaks by removing the object from the unit's list of registered
    dynamic objects.
  parameters:
  - name: dynObj
    description: Pointer to the DynamicObject that needs to be unregistered. This
      parameter must not be null, as passing a null pointer would result in undefined
      behavior or potential crashes.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit();

      DynamicObject* dynObj = new DynamicObject();

      unit->_UnregisterDynObject(dynObj);'
    language: cpp
  notes: This method should only be called when the dynamic object is no longer needed
    or has been destroyed. It's important to ensure that the pointer passed is valid
    and not already deleted before calling this method.
  warnings: Calling this method with a null pointer may lead to crashes or undefined
    behavior. Also, if the dynamic object was created using new, make sure it is properly
    deleted after unregistering to avoid memory leaks.
  related:
  - Unit::RegisterDynObject
  - Unit::GetDynObject
  - Unit::HasDynObject
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:58:26.269040'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
