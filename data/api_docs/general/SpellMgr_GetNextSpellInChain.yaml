api:
  class: SpellMgr
  method: GetNextSpellInChain
  signature: uint32 SpellMgr::GetNextSpellInChain(uint32 spell_id) const
documentation:
  brief: Returns the spell ID of the next spell in a spell chain for the given spell.
  description: The GetNextSpellInChain method retrieves the identifier of the next
    spell that follows the specified spell in a spell progression or chain. This is
    commonly used in World of Warcraft to determine spell upgrades, transformations,
    or sequential spell effects. The method looks up the provided spell ID in the
    internal spell chain database and returns the next spell's ID if one exists, otherwise
    it returns zero. Spell chains are typically defined in the spell database and
    represent progression paths such as from a base spell to its improved or upgraded
    version.
  parameters: []
  returns: Returns the spell ID of the next spell in the chain. If the provided spell
    ID is not part of any chain or if it's the final spell in the chain, the method
    returns zero (0).
  examples:
  - title: Check for Next Spell in Chain
    code: "uint32 currentSpellId = 12345;\nuint32 nextSpellId = sSpellMgr->GetNextSpellInChain(currentSpellId);\n\
      if (nextSpellId != 0)\n{\n    // Process the next spell in the chain\n    printf(\"\
      Next spell in chain: %u\\n\", nextSpellId);\n}\nelse\n{\n    // No next spell\
      \ in chain\n    printf(\"No further spells in chain.\\n\");\n}"
    language: cpp
  notes: This method relies on the internal spell chain definitions stored in the
    database. Ensure that the spell ID passed to this function is valid and exists
    in the spell database, otherwise it will return zero. The spell chain data must
    be properly loaded for this method to work correctly.
  warnings: null
  related:
  - GetSpellInfo
  - IsSpellChain
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:25:31.894464'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
