api:
  class: AuraEffect
  method: HandleChannelDeathItem
  signature: void AuraEffect::HandleChannelDeathItem(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Handles the application or removal of channel death item effects for aura
    applications.
  description: The HandleChannelDeathItem method manages the behavior associated with
    channel death items when an aura is applied or removed from a target. This function
    typically controls how items that are bound to a channel (such as those used in
    certain spell effects) behave during the lifecycle of an aura application. It
    ensures proper cleanup or activation of these items based on whether the aura
    is being applied or removed. The method operates within the context of TrinityCore's
    aura system and interacts with the AuraApplication object to determine the correct
    behavior for channel death items.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that represents the aura being
      applied or removed. This parameter determines which aura's channel death item
      effects are handled.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation, typically
      representing different states or types of aura application (e.g., apply, remove,
      update).
  - name: apply
    description: Boolean flag indicating whether the aura is being applied (true)
      or removed (false). This determines the direction of the effect handling.
  returns: null
  examples:
  - title: Basic Usage in Aura Application
    code: "void MyAuraEffect::HandleChannelDeathItem(const AuraApplication* aurApp,\
      \ uint8 mode, bool apply) const {\n    if (apply) {\n        // Apply channel\
      \ death item logic\n        ApplyChannelDeathItem(aurApp);\n    } else {\n \
      \       // Remove channel death item logic\n        RemoveChannelDeathItem(aurApp);\n\
      \    }\n}"
    language: cpp
  notes: This method is part of the internal aura handling system and should not be
    directly called by external code. It is typically invoked by the core aura application
    logic during aura activation or deactivation. The method assumes that aurApp is
    a valid pointer and mode/apply parameters are correctly set according to the aura
    lifecycle.
  warnings: Improper handling of this method can lead to item corruption or unexpected
    behavior in channel-based spell effects. Ensure that all related item state changes
    are properly synchronized with the aura's application state.
  related:
  - AuraApplication::GetAura
  - AuraEffect::HandleEffect
  - AuraEffect::ApplyAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:55:13.473151'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
