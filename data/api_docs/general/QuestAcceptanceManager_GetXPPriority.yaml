api:
  class: QuestAcceptanceManager
  method: GetXPPriority
  signature: float QuestAcceptanceManager::GetXPPriority(const int * quest) const
documentation:
  brief: Calculates and returns the experience points priority value for a given quest.
  description: The GetXPPriority method determines the relative importance or weighting
    of experience points associated with a specific quest. This value is used internally
    by the QuestAcceptanceManager to prioritize quest rewards and determine how much
    XP a player should receive based on quest difficulty, level requirements, and
    other game mechanics. The method takes a pointer to a quest ID and returns a floating-point
    value representing the priority weight of that quest's experience reward. This
    priority value influences XP distribution in scenarios where multiple quests are
    available or when quest rewards are being calculated dynamically.
  parameters:
  - name: quest
    description: Pointer to an integer representing the quest identifier (Quest ID).
      The value must be a valid quest ID that exists in the game database, otherwise
      behavior is undefined.
  returns: A float value representing the experience points priority for the specified
    quest. Higher values indicate higher XP priority, which may affect reward distribution
    or quest acceptance logic within the QuestAcceptanceManager.
  examples:
  - title: Basic Usage Example
    code: 'int questId = 12345;

      const int* questPtr = &questId;

      float priority = manager->GetXPPriority(questPtr);

      printf("XP Priority for Quest %d: %.2f\n", questId, priority);'
    language: cpp
  - title: Using with Quest Acceptance Logic
    code: "void ProcessQuestAcceptance(QuestAcceptanceManager* manager, int questId)\
      \ {\n    const int* questPtr = &questId;\n    float priority = manager->GetXPPriority(questPtr);\n\
      \    if (priority > 1.0f) {\n        // High XP priority quest\n        printf(\"\
      High value quest accepted\\n\");\n    } else {\n        // Standard or low priority\
      \ quest\n        printf(\"Standard quest accepted\\n\");\n    }\n}"
    language: cpp
  notes: This method is likely used in conjunction with other quest acceptance logic
    to determine optimal reward distribution. The returned float value may be normalized
    or scaled based on game balance parameters, and should not be interpreted as raw
    XP values but rather as relative weights for XP calculation.
  warnings: The parameter 'quest' must point to a valid quest ID that exists in the
    database; otherwise, accessing invalid memory or undefined behavior may occur.
    This method does not validate the quest ID itself, so callers should ensure validity
    before invoking this function.
  related:
  - GetQuestPriority
  - CalculateQuestRewardXP
  - ValidateQuestAcceptance
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T07:53:08.517065'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
