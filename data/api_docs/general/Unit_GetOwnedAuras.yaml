api:
  class: Unit
  method: GetOwnedAuras
  signature: const AuraMap & Unit::GetOwnedAuras() const
documentation:
  brief: Returns the collection of auras owned by this unit.
  description: This method retrieves the complete set of auras that are currently
    applied to the unit. Auras represent various effects, buffs, debuffs, and status
    conditions that influence the unit's behavior. The returned AuraMap provides access
    to all active auras, including those from spells, items, and abilities. This method
    is commonly used in game mechanics to check for specific aura states or to manage
    aura applications during combat or non-combat situations.
  parameters: []
  returns: Returns a constant reference to the AuraMap containing all auras currently
    applied to this unit. The map provides access to all active auras, including those
    from spells, items, and abilities.
  examples:
  - title: Basic Usage Example
    code: Unit* target = GetOwnedAuras();
    language: cpp
  - title: Checking Aura Existence
    code: if (target->GetOwnedAuras().empty()) { // Handle empty aura list }
    language: cpp
  notes: The returned reference is immutable and should not be modified directly.
    This method is safe for use in both combat and non-combat scenarios.
  warnings: null
  related:
  - GetAuraApplication
  - GetAuraInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:52:13.797075'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
