api:
  class: ObjectMgr
  method: GetCreatureQuestInvolvedRelations
  signature: QuestRelationResult ObjectMgr::GetCreatureQuestInvolvedRelations(uint32
    entry) const
documentation:
  brief: Retrieves all quest relations associated with a specific creature entry.
  description: The GetCreatureQuestInvolvedRelations method fetches all quest relations
    linked to a given creature entry from the database. This is used internally by
    the TrinityCore server to determine which quests are involved with specific creatures,
    such as those that require killing or talking to a particular NPC. The returned
    QuestRelationResult typically contains mappings between creature entries and quest
    identifiers, allowing the game engine to track quest progress and completion conditions
    related to creature interactions.
  parameters: []
  returns: A QuestRelationResult object containing all quest relations associated
    with the specified creature entry. This structure usually holds a collection of
    quest identifiers that involve the given creature as either a quest giver or quest
    target.
  examples:
  - title: Retrieve and iterate over quest relations for a creature
    code: "QuestRelationResult relations = sObjectMgr->GetCreatureQuestInvolvedRelations(12345);\n\
      for (auto& relation : relations)\n{\n    uint32 questId = relation.first;\n\
      \    // Process each quest ID related to the creature\n    printf(\"Creature\
      \ 12345 is involved in quest %u\\n\", questId);\n}"
    language: cpp
  notes: This method accesses database tables that store quest involvement data for
    creatures. It's commonly used during quest initialization and runtime to manage
    quest state tracking. The returned result should be treated as read-only since
    it's typically cached or pre-loaded from the database.
  warnings: The method assumes that the creature entry exists in the database. If
    an invalid entry is passed, behavior may vary depending on implementation details,
    but generally no crash occurs. Ensure proper error handling when dealing with
    potentially non-existent entries.
  related:
  - GetQuestTemplate
  - GetCreatureQuestRelation
  - GetQuestRelations
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:56:40.248365'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
