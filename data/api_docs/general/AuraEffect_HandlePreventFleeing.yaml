api:
  class: AuraEffect
  method: HandlePreventFleeing
  signature: void AuraEffect::HandlePreventFleeing(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes the fleeing prevention effect from a target based on aura
    application state.
  description: The HandlePreventFleeing method manages the application of an aura
    that prevents a unit from fleeing during combat. This method is invoked internally
    by the aura system when an aura with this effect is applied or removed from a
    target. It modifies the target's ability to flee, typically used by abilities
    or spells that immobilize or control enemies, preventing them from escaping. The
    method takes into account the aura application state and mode to determine whether
    to enable or disable the fleeing prevention behavior.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about which unit is affected and
      the aura's properties.
  - name: mode
    description: The mode of application, typically indicating how the aura is being
      applied (e.g., initial application, update, removal). Used to determine specific
      behavior during effect handling.
  - name: apply
    description: Boolean flag indicating whether the effect should be applied (true)
      or removed (false) from the target unit.
  returns: null
  examples:
  - title: Basic usage in aura effect handler
    code: "void AuraEffect::HandlePreventFleeing(const AuraApplication* aurApp, uint8\
      \ mode, bool apply) const\n{\n    if (!aurApp || !aurApp->GetTarget())\n   \
      \     return;\n\n    Unit* target = aurApp->GetTarget();\n    if (apply)\n \
      \       target->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PREVENT_FLEEING);\n    else\n\
      \        target->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PREVENT_FLEEING);\n}"
    language: cpp
  notes: This method is part of the internal aura effect handling system in TrinityCore.
    It directly manipulates unit flags to control fleeing behavior and should only
    be called from within the aura application logic.
  warnings: Improper use of this method may lead to unexpected combat behavior or
    client-server desynchronization. Ensure that all related flag changes are consistent
    with game mechanics and spell effects.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::SetFlag
  - Unit::RemoveFlag
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:04:19.072804'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
