api:
  class: LfgPlayerData
  method: GetTeam
  signature: uint8 LfgPlayerData::GetTeam() const
documentation:
  brief: Returns the team ID associated with the player's LFG (Looking for Group)
    data.
  description: The GetTeam method retrieves the team identifier that a player is currently
    assigned to within the Looking for Group system. This value typically represents
    either the Alliance (0) or Horde (1) team, though it may also indicate other team
    types depending on the context of the LFG instance. The returned value is used
    internally by TrinityCore's LFG framework to manage group composition and faction-based
    matching. This method does not perform any validation or modification of the underlying
    data; it simply returns the stored team value.
  parameters: []
  returns: A uint8 value representing the player's team ID. Typically, 0 indicates
    Alliance and 1 indicates Horde, though specific values may vary based on game
    mechanics or instance types.
  examples:
  - title: Basic Usage
    code: "LfgPlayerData* playerData = ...;\nuint8 team = playerData->GetTeam();\n\
      if (team == 0)\n{\n    // Player is on Alliance team\n}\nelse if (team == 1)\n\
      {\n    // Player is on Horde team\n}"
    language: cpp
  notes: This method is a simple getter and does not involve any database or network
    calls. It returns cached data from the LfgPlayerData object, so it should be fast
    and thread-safe as long as the object itself is properly synchronized.
  warnings: null
  related:
  - SetTeam
  - GetState
  - GetRoles
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T11:22:19.183504'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
