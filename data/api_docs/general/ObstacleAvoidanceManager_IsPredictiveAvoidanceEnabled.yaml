api:
  class: ObstacleAvoidanceManager
  method: IsPredictiveAvoidanceEnabled
  signature: bool ObstacleAvoidanceManager::IsPredictiveAvoidanceEnabled() const
documentation:
  brief: Determines whether predictive obstacle avoidance is enabled for the manager.
  description: This method checks the internal state of the ObstacleAvoidanceManager
    to determine if predictive avoidance behavior is currently active. Predictive
    avoidance is a feature that allows AI-controlled units to anticipate and avoid
    obstacles in their path before collision occurs, improving navigation smoothness
    and realism. The method returns true if predictive avoidance is enabled, false
    otherwise. This functionality is typically used by the core AI system to make
    movement decisions for creatures and NPCs.
  parameters: []
  returns: A boolean value indicating whether predictive obstacle avoidance is currently
    enabled (true) or disabled (false).
  examples:
  - title: Check if Predictive Avoidance is Enabled
    code: "if (obstacleManager->IsPredictiveAvoidanceEnabled()) {\n    // Perform\
      \ actions assuming predictive avoidance is active\n    LOG_DEBUG(\"ai\", \"\
      Predictive avoidance is enabled\");\n} else {\n    // Fallback behavior when\
      \ predictive avoidance is disabled\n    LOG_DEBUG(\"ai\", \"Predictive avoidance\
      \ is disabled\");\n}"
    language: cpp
  notes: This method performs a simple state check and has minimal performance impact.
    It should be used primarily in AI decision-making loops where the behavior needs
    to adapt based on obstacle avoidance settings.
  warnings: null
  related:
  - SetPredictiveAvoidanceEnabled
  - IsObstacleAvoidanceEnabled
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T08:48:49.142859'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
