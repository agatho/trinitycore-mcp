api:
  class: ScriptMgr
  method: GetChatCommands
  signature: int ScriptMgr::GetChatCommands()
documentation:
  brief: Retrieves the total count of registered chat commands within the TrinityCore
    script manager.
  description: The GetChatCommands method returns an integer value representing the
    number of chat commands that have been registered with the ScriptMgr. This method
    is typically used during server initialization or runtime to determine how many
    custom or built-in chat commands are available for use by players. The count includes
    all command handlers that have been successfully added through the scripting system,
    whether they are defined in core code, modules, or custom scripts. It serves as
    a utility for debugging, logging, and potentially managing command availability
    dynamically.
  parameters: []
  returns: An integer value indicating the total number of registered chat commands.
    A return value of zero suggests no commands have been registered, while positive
    values indicate the actual count of available commands.
  examples:
  - title: Basic Usage to Log Command Count
    code: 'int commandCount = sScriptMgr->GetChatCommands();

      TC_LOG_INFO(LOG_FILTER_SERVER, "Registered chat commands: %d", commandCount);'
    language: cpp
  - title: Using Command Count for Debugging
    code: "void PrintCommandSummary()\n{\n    int totalCommands = sScriptMgr->GetChatCommands();\n\
      \    TC_LOG_DEBUG(LOG_FILTER_SERVER, \"Script manager reports %d chat commands\"\
      , totalCommands);\n    // Additional logic can be implemented here based on\
      \ command count\n}"
    language: cpp
  notes: This method does not return a list of command names or details about individual
    commands; it only provides the count. It's useful for verifying that expected
    commands have been loaded, especially in modded environments where multiple scripts
    may register commands. The value returned is static and reflects all registered
    commands at the time of invocation.
  warnings: Be aware that this method returns a raw count without any validation or
    filtering. If command registration fails silently, the count may not reflect actual
    usable commands. Also, calling this method repeatedly in performance-critical
    sections should be avoided as it may involve internal iteration over command lists.
  related:
  - GetCommandTable
  - AddChatCommand
  - RemoveChatCommand
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:50:54.204905'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
