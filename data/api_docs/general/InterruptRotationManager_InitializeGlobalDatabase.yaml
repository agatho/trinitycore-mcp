api:
  class: InterruptRotationManager
  method: InitializeGlobalDatabase
  signature: void InterruptRotationManager::InitializeGlobalDatabase()
documentation:
  brief: Initializes the global database for interrupt rotation management
  description: The InitializeGlobalDatabase method sets up and prepares the global
    database structures required for managing interrupt rotations within the TrinityCore
    framework. This method is typically called during server initialization or when
    the interrupt rotation system is first activated. It ensures that all necessary
    database tables, configurations, and data structures are properly initialized
    to support interrupt rotation functionality. The method may also perform validation
    checks on existing database entries and set default values for any missing configuration
    parameters.
  parameters: []
  returns: null
  examples:
  - title: Basic Initialization Call
    code: InterruptRotationManager::InitializeGlobalDatabase();
    language: cpp
  notes: This method should only be called once during server startup. Reinitialization
    may lead to data corruption or inconsistent states. The method is typically invoked
    by the core server initialization process and should not be called manually in
    most cases.
  warnings: Calling this method multiple times without proper cleanup can result in
    undefined behavior. Ensure that all interrupt rotation data is properly saved
    before calling this method.
  related:
  - InterruptRotationManager::LoadFromDatabase
  - InterruptRotationManager::SaveToDatabase
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T00:04:05.182029'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
