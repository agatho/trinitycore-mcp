api:
  class: ScriptedAI
  method: GetDifficulty
  signature: int ScriptedAI::GetDifficulty() const
documentation:
  brief: Retrieves the current difficulty level of the instance or encounter.
  description: The GetDifficulty method returns an integer representing the active
    difficulty setting for the current instance or encounter. In TrinityCore's World
    of Warcraft environment, this value corresponds to the standard difficulty identifiers
    used by the game client, such as 0 for Normal, 1 for Heroic, and 2 for Mythic.
    This method is commonly used in AI scripts to adjust behavior based on the difficulty
    level, ensuring that creatures and bosses respond appropriately to player skill
    levels. The returned value reflects the current difficulty context of the ScriptedAI
    instance's associated creature or game object.
  parameters: []
  returns: 'An integer representing the current difficulty level: 0 for Normal, 1
    for Heroic, 2 for Mythic, and potentially other values depending on custom content
    or expansion-specific difficulty settings.'
  examples:
  - title: Basic Difficulty Check
    code: "if (me->GetAI()->GetDifficulty() == 1)\n{\n    // Apply heroic-specific\
      \ behavior\n    DoSomethingHeroic();\n}"
    language: cpp
  - title: Adjusting Spawn Rates Based on Difficulty
    code: 'int difficulty = me->GetAI()->GetDifficulty();

      float spawnRate = 1.0f;

      if (difficulty == 1) spawnRate = 1.5f; // Heroic

      else if (difficulty == 2) spawnRate = 2.0f; // Mythic

      SetSpawnRate(spawnRate);'
    language: cpp
  notes: This method relies on the instance's difficulty context being properly set
    by the game system. It should only be called when the AI is attached to a creature
    or game object that exists within a valid instance with a defined difficulty level.
    The returned value may vary depending on whether the instance is in a normal,
    heroic, or mythic difficulty mode.
  warnings: Do not assume that all instances will have difficulty levels set to 0,
    1, or 2. Custom content or expansion-specific modes might introduce additional
    difficulty values. Always validate the return value if your code depends on specific
    difficulty levels.
  related:
  - GetMap
  - GetDifficultyID
  - IsHeroic
  - IsMythic
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:45:04.769623'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
