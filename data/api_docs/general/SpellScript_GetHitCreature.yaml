api:
  class: SpellScript
  method: GetHitCreature
  signature: Creature * SpellScript::GetHitCreature() const
documentation:
  brief: Returns the creature target that was hit by the spell.
  description: The GetHitCreature method retrieves a pointer to the Creature object
    that was successfully targeted and hit by the current spell effect. This method
    is typically used within SpellScript implementations to access information about
    the specific creature that was affected by the spell. The returned pointer is
    valid only during the execution of the spell's script and should not be stored
    for later use. If no creature was hit or if the spell did not target a creature,
    this method will return a null pointer.
  parameters: []
  returns: A pointer to the Creature object that was hit by the spell, or nullptr
    if no creature was targeted or hit.
  examples:
  - title: Basic usage in SpellScript
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\n\
      \    {\n        Creature* target = GetHitCreature();\n        if (target)\n\
      \        {\n            // Perform actions on the hit creature\n           \
      \ target->AI()->Talk(0);\n        }\n    }\n};"
    language: cpp
  - title: Checking for valid target before use
    code: "class HealingSpellScript : public SpellScript\n{\npublic:\n    void OnHit()\n\
      \    {\n        Creature* target = GetHitCreature();\n        if (target &&\
      \ target->IsAlive())\n        {\n            // Apply healing effect only to\
      \ alive creatures\n            GetCaster()->CastSpell(target, 12345, true);\n\
      \        }\n    }\n};"
    language: cpp
  notes: This method should only be called within the context of a SpellScript's execution.
    The returned Creature pointer is managed by the core and may become invalid if
    the creature is removed from the world or destroyed. It is recommended to check
    for null before using the returned pointer.
  warnings: Using this method outside of a spell script context will result in undefined
    behavior. Always validate the returned pointer for null before dereferencing it,
    as not all spell effects may target creatures.
  related:
  - GetHitUnit
  - GetHitPlayer
  - GetHitDest
  - GetHitGlyph
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:57:28.310852'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
