api:
  class: CinematicMgr
  method: IsOnCinematic
  signature: bool CinematicMgr::IsOnCinematic() const
documentation:
  brief: Determines whether the player is currently participating in a cinematic sequence.
  description: The IsOnCinematic method checks if the player character is currently
    involved in a cinematic event, such as a movie or cutscene that temporarily disables
    player controls. This method returns true when the player is locked into a cinematic
    state and false otherwise. The cinematic state typically occurs during quest events,
    story sequences, or other scripted gameplay moments where normal player interaction
    is suspended. This check is commonly used by game systems to prevent certain actions
    or interactions while cinematics are active.
  parameters: []
  returns: Returns true if the player is currently in a cinematic sequence and controls
    are disabled; returns false if the player has normal control over their character.
  examples:
  - title: Basic Cinematic State Check
    code: "if (sCinematicMgr->IsOnCinematic())\n{\n    // Player is in cinematic,\
      \ disable UI elements\n    player->GetSession()->SendNotification(\"Cinematic\
      \ in progress. Controls disabled.\");\n}"
    language: cpp
  - title: Preventing Action During Cinematic
    code: "void Player::HandleMovementInput()\n{\n    if (sCinematicMgr->IsOnCinematic())\n\
      \        return; // Ignore movement input during cinematics\n    \n    // Normal\
      \ movement handling code here\n}"
    language: cpp
  notes: This method is typically used in conjunction with other cinematic-related
    systems to ensure proper game state management. The cinematic state may be set
    by various triggers including quest start events, NPC dialogue sequences, or world
    event cutscenes. The implementation likely involves checking internal flags or
    state variables within the CinematicMgr class.
  warnings: This method should not be used as a substitute for proper state management
    in complex systems. Developers should ensure that all cinematic-related functionality
    properly cleans up when cinematics end to avoid unexpected behavior or memory
    leaks.
  related:
  - CinematicMgr::StartCinematic
  - CinematicMgr::StopCinematic
  - CinematicMgr::IsCinematicPlaying
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:16:17.061034'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
