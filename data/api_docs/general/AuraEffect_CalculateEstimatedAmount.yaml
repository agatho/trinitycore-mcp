api:
  class: AuraEffect
  method: CalculateEstimatedAmount
  signature: int AuraEffect::CalculateEstimatedAmount(const Unit * caster, int32 amount)
    const
documentation:
  brief: Calculates the estimated amount of an aura effect based on caster and base
    amount.
  description: The CalculateEstimatedAmount method computes the final value of an
    aura effect by applying various modifiers and calculations based on the caster's
    properties and the base amount provided. This method is typically used during
    aura application or update to determine the actual effect value that will be applied
    to a unit. The calculation may involve factors such as caster level, spell power,
    scaling coefficients, or other game mechanics specific to the aura type. It serves
    as an intermediate step in the aura processing pipeline before the final effect
    is applied to the target.
  parameters:
  - name: caster
    description: Pointer to the Unit object that is casting the aura. Can be null
      if the aura is not caster-specific or when calculating base values.
  - name: amount
    description: The base amount of the aura effect before any calculations are applied.
      This represents the initial value from spell data or aura configuration.
  returns: Returns an integer representing the calculated estimated amount after applying
    all relevant modifiers and scaling factors based on the caster and base amount.
  examples:
  - title: Basic usage in aura application
    code: 'int finalAmount = auraEffect->CalculateEstimatedAmount(caster, baseAmount);

      // Apply finalAmount to target unit''s stats or effects'
    language: cpp
  - title: Using with spell effect handling
    code: "if (AuraEffect* eff = spellInfo->GetAuraEffectByType(SPELL_AURA_MOD_STAT))\n\
      {\n    int calculatedAmount = eff->CalculateEstimatedAmount(caster, eff->GetAmount());\n\
      \    // Use calculatedAmount for further processing\n}"
    language: cpp
  notes: This method is often called during aura application or update events. It
    may perform calculations involving caster's level, spell power, and other stat
    modifiers depending on the specific aura type. The result should be cached if
    used multiple times to avoid redundant computations.
  warnings: Ensure that the caster pointer is valid before calling this method; passing
    a null caster might lead to undefined behavior or incorrect calculations. Be aware
    that this method may not account for all possible modifiers in complex scenarios
    involving multiple auras or stacking effects.
  related:
  - GetAmount
  - GetAuraType
  - GetBaseAmount
  - ApplyEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T13:42:41.488028'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
