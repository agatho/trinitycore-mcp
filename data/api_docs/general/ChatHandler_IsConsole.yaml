api:
  class: ChatHandler
  method: IsConsole
  signature: bool ChatHandler::IsConsole() const
documentation:
  brief: Determines whether the chat handler is operating in console mode.
  description: The IsConsole method checks if the current ChatHandler instance is
    associated with a console-based interface rather than a player session. This is
    commonly used to differentiate between console commands (executed via the server
    console) and player chat commands. The method returns true when the handler is
    processing console input, and false when it's handling player interactions through
    the game client. This distinction is important for command permissions and behavior
    differences between console and player contexts.
  parameters: []
  returns: Returns true if the ChatHandler is operating in console mode, false otherwise.
  examples:
  - title: Check Console Mode Before Executing Command
    code: "if (handler.IsConsole())\n{\n    handler.PSendSysMessage(\"This command\
      \ can only be executed from the game client.\");\n    return true;\n}\n// Proceed\
      \ with normal command execution"
    language: cpp
  notes: This method is typically used in command implementations to enforce different
    behaviors or permissions based on the input source. The console mode check is
    essential for server administration commands that should not be accessible through
    regular player chat.
  warnings: null
  related:
  - ChatHandler::GetSession
  - ChatHandler::IsPlayer()
  - ChatHandler::HasConsole()
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T16:17:12.758669'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
