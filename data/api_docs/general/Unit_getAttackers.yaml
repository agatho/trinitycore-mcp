api:
  class: Unit
  method: getAttackers
  signature: const AttackerSet & Unit::getAttackers() const
documentation:
  brief: Returns the set of units that are attacking this unit.
  description: The getAttackers method retrieves the collection of units currently
    engaged in combat with this unit. This method is commonly used in World of Warcraft's
    TrinityCore framework to determine which entities are targeting the current unit
    for attack. The returned AttackerSet contains all units that have initiated melee
    or ranged attacks against this unit, providing a snapshot of active combatants.
    This information is crucial for determining the unit's threat level and managing
    combat behavior.
  parameters: []
  returns: Returns a const reference to an AttackerSet containing all units currently
    attacking this unit. The set may be empty if no attackers exist, or contain multiple
    entries if several units are engaged in combat with this unit.
  examples:
  - title: Basic usage example
    code: "Unit* target = ...;\nAttackerSet const& attackers = target->getAttackers();\n\
      for (auto const& attacker : attackers)\n{\n    // Process each attacker\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. The AttackerSet
    returned is a const reference, meaning modifications to the set are not possible
    through this interface. Performance considerations include that accessing this
    set may involve iterating over all attackers, which could impact performance in
    high-frequency combat scenarios.
  warnings: Be cautious when using this method in combat situations as it may return
    multiple attackers even if only one is actively attacking. Also note that attackers
    may change during the execution of a function due to combat mechanics.
  related:
  - getAttacking
  - getThreatManager
  - getCombat
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T19:56:34.895627'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
