api:
  class: CooldownManager
  method: GetMaxCharges
  signature: uint32 CooldownManager::GetMaxCharges(uint32 spellId) const
documentation:
  brief: Retrieves the maximum number of charges allowed for a specified spell's cooldown.
  description: The GetMaxCharges method retrieves the maximum number of charges that
    a spell can have before it enters its cooldown period. This is typically used
    in conjunction with cooldown management systems to determine how many times a
    spell can be used consecutively without waiting for the cooldown to reset. The
    returned value represents the charge limit defined in the spell's database entry
    or configuration, and it may vary depending on the player's class, talents, gear,
    or other game mechanics. This method does not modify any internal state and is
    purely informational.
  parameters: []
  returns: Returns a uint32 representing the maximum number of charges allowed for
    the specified spell. If the spell ID is invalid or not found in the database,
    the method may return 0 or an undefined value depending on implementation details.
  examples:
  - title: Check Max Charges for a Spell
    code: "uint32 maxCharges = cooldownManager->GetMaxCharges(12345);\nif (maxCharges\
      \ > 0)\n{\n    printf(\"Spell can be used up to %u times before cooldown.\"\
      , maxCharges);\n}"
    language: cpp
  notes: This method relies on spell definitions stored in the game's database. It
    is expected to be called during gameplay logic where spell usage and cooldowns
    are managed, such as when checking if a player can cast a spell or how many times
    they may use it in quick succession.
  warnings: Ensure that the provided spellId is valid before calling this method;
    invalid IDs might lead to unexpected behavior or undefined results. The returned
    value should not be used directly for determining usable charges without considering
    current charge counts and cooldown timers.
  related:
  - GetChargeCount
  - IsOnCooldown
  - SetMaxCharges
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T15:44:53.857282'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
