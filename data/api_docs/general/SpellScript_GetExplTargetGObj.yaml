api:
  class: SpellScript
  method: GetExplTargetGObj
  signature: GameObject * SpellScript::GetExplTargetGObj() const
documentation:
  brief: Returns the game object target of the spell's explosion effect.
  description: The GetExplTargetGObj method retrieves the GameObject that serves as
    the target for a spell's explosion or area-of-effect impact. This is commonly
    used in spell scripts where the spell's effect needs to interact with a specific
    game object, such as a trap, door, or environmental object. The returned GameObject
    pointer represents the object at which the spell's explosion was directed, and
    can be used to perform further operations on that object within the spell script
    logic. This method is typically called during the execution of spell effects that
    involve object-based interactions.
  parameters: []
  returns: A pointer to the GameObject that was targeted by the spell's explosion
    effect, or nullptr if no valid target exists.
  examples:
  - title: Basic usage in spell script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void HandleHit()\n\
      \    {\n        GameObject* target = GetExplTargetGObj();\n        if (target)\n\
      \        {\n            // Perform action on the exploded object\n         \
      \   target->SetGoState(GO_STATE_ACTIVE);\n        }\n    }\n};"
    language: cpp
  - title: Checking for valid explosion target before interaction
    code: "class TrapSpellScript : public SpellScript\n{\npublic:\n    void OnSpellHit()\n\
      \    {\n        GameObject* trap = GetExplTargetGObj();\n        if (trap &&\
      \ trap->GetGOInfo()->type == GAMEOBJECT_TYPE_TRAP)\n        {\n            //\
      \ Activate the trap\n            trap->Use(me);\n        }\n    }\n};"
    language: cpp
  notes: This method should only be called during spell script execution when the
    explosion target is valid. The returned GameObject pointer may be null if the
    spell did not have a valid explosion target or if the target was destroyed before
    the method was called.
  warnings: Be sure to check for nullptr before dereferencing the returned GameObject
    pointer. Calling methods on a null pointer will result in undefined behavior and
    likely crash the server.
  related:
  - GetExplTargetUnit
  - GetExplTargetItem
  - GetExplTargetCorpse
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:01:56.570867'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
