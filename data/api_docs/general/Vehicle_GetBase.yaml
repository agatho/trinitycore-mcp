api:
  class: Vehicle
  method: GetBase
  signature: Unit * Vehicle::GetBase() const
documentation:
  brief: Returns the base unit associated with this vehicle
  description: The GetBase method retrieves the primary unit that serves as the foundation
    or owner of the vehicle. In World of Warcraft's TrinityCore framework, vehicles
    are often linked to a specific unit (such as a player or creature) that controls
    or embodies the vehicle. This method provides access to that base unit, which
    can be essential for determining vehicle ownership, controlling behavior, or managing
    interactions between the vehicle and its associated entity. The returned Unit
    pointer may be null if the vehicle has no valid base unit assigned.
  parameters: []
  returns: A pointer to the Unit object that represents the base of this vehicle.
    Returns nullptr if no base unit is assigned or if the vehicle is in an invalid
    state.
  examples:
  - title: Basic Usage to Check Vehicle Base
    code: "Vehicle* vehicle = player->GetVehicle();\nif (vehicle)\n{\n    Unit* baseUnit\
      \ = vehicle->GetBase();\n    if (baseUnit)\n    {\n        // Proceed with operations\
      \ on the base unit\n        sLog->outString(\"Vehicle base is: %s\", baseUnit->GetName().c_str());\n\
      \    }\n}"
    language: cpp
  notes: This method is commonly used in vehicle-related systems to determine which
    unit controls or owns a particular vehicle. It's important to verify that the
    returned pointer is not null before using it, as invalid vehicles may return nullptr.
  warnings: Never assume that the returned Unit pointer is valid without checking
    for null. Vehicles might be unlinked from their base units during certain gameplay
    events or transitions.
  related:
  - GetVehicleKit
  - GetOwner
  - IsVehicle
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:35:40.056585'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
