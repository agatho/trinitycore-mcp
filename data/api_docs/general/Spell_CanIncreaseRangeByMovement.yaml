api:
  class: Spell
  method: CanIncreaseRangeByMovement
  signature: bool Spell::CanIncreaseRangeByMovement(const Unit * unit)
documentation:
  brief: Determines whether a spell can increase its range based on movement of the
    caster.
  description: This method checks if a spell is capable of increasing its range when
    the caster moves, typically used in conjunction with spells that have dynamic
    range adjustments based on movement. It evaluates whether the spell's range can
    be extended due to movement of the unit, such as when moving closer or further
    from targets during casting. The method is commonly used in spell mechanics where
    movement affects spell targeting and range calculations.
  parameters:
  - name: unit
    description: The unit whose movement is being evaluated for spell range increase.
      This parameter represents the caster or target of the spell, depending on context.
  returns: Returns true if the spell can increase its range based on movement of the
    specified unit, false otherwise. The method may return false if the spell does
    not support range increases due to movement or if the unit is not valid for such
    adjustments.
  examples:
  - title: Basic usage example
    code: "if (spell->CanIncreaseRangeByMovement(unit)) {\n    // Spell can increase\
      \ range based on movement\n}"
    language: cpp
  notes: This method is typically used in spell processing logic where movement-based
    range adjustments are considered. Performance impact is minimal as it only evaluates
    a single condition without complex calculations.
  warnings: Care should be taken when using this method with spells that have specific
    movement-based range requirements, as incorrect usage may lead to invalid spell
    targeting or range calculations.
  related:
  - Spell::CanIncreaseRange
  - Spell::IsInFront
  - Spell::IsInBack
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:33:27.055147'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
