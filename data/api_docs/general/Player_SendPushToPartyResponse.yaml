api:
  class: Player
  method: SendPushToPartyResponse
  signature: void Player::SendPushToPartyResponse(const Player * player, int reason,
    const Quest * quest) const
documentation:
  brief: Sends a push-to-party response to a player for a quest.
  description: This method sends a response to a player indicating whether they can
    accept a quest from another player. The response includes a reason code that specifies
    why the quest cannot be accepted, such as 'quest already completed', 'quest not
    available', or 'player not in party'. It is used primarily in the context of quest
    sharing mechanics where players can push quests to party members. This method
    is part of the core World of Warcraft quest system implementation and handles
    player-to-player quest communication.
  parameters:
  - name: player
    description: The player who initiated the quest push request. This parameter must
      be a valid Player object, otherwise the method will not function properly.
  - name: reason
    description: 'The reason code indicating why the quest cannot be accepted. Valid
      values include: 0 (no reason), 1 (quest already completed), 2 (quest not available),
      3 (player not in party), 4 (quest not in inventory).'
  - name: quest
    description: The quest being pushed to the player. This parameter must be a valid
      Quest object, otherwise the method will not function properly.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Player* player = new Player();

      Quest* quest = new Quest();

      int reason = 2;

      player->SendPushToPartyResponse(player, reason, quest);'
    language: cpp
  notes: This method is typically called from within the context of quest sharing
    system and requires proper player and quest validation. The method should be called
    only when a player attempts to push a quest to another player in party, otherwise
    it may cause errors or unexpected behavior.
  warnings: The method requires valid parameters; invalid player or quest objects
    can lead to crashes or undefined behavior. This method is not thread-safe and
    should be used carefully in multi-threaded environments.
  related:
  - SendPushToParty
  - Quest::GetQuestId
  - Player::GetPlayer
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T23:37:52.973906'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
