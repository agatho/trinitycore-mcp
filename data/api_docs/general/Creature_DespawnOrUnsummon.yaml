api:
  class: Creature
  method: DespawnOrUnsummon
  signature: void Creature::DespawnOrUnsummon(int timeToDespawn, int forceRespawnTime)
documentation:
  brief: Removes the creature from the world, either despawning it immediately or
    scheduling a respawn based on provided parameters.
  description: The DespawnOrUnsummon method is used to remove a Creature object from
    the game world. It can either instantly remove the creature or schedule its removal
    with a specified delay before respawning. This method is commonly used for temporary
    creature removal, such as during quest events, scripted encounters, or when a
    creature needs to be temporarily hidden. The timeToDespawn parameter controls
    how long (in milliseconds) the creature will remain despawned before attempting
    to respawn, while forceRespawnTime determines whether the creature should be forced
    to respawn immediately if it's currently active. This method is essential for
    managing dynamic creature behavior in World of Warcraft content and ensures proper
    cleanup of NPC entities.
  parameters:
  - name: timeToDespawn
    description: The time (in milliseconds) to wait before attempting to respawn the
      creature. If set to 0, the creature will despawn immediately without scheduling
      a respawn.
  - name: forceRespawnTime
    description: If non-zero, forces an immediate respawn regardless of current state.
      If zero, allows normal respawning behavior based on timeToDespawn.
  returns: null
  examples:
  - title: Basic Despawn with Default Respawn
    code: 'Creature* creature = ...;

      creature->DespawnOrUnsummon(5000); // Despawns for 5 seconds, then respawns
      automatically'
    language: cpp
  - title: Immediate Despawn with Forced Respawn
    code: 'Creature* creature = ...;

      creature->DespawnOrUnsummon(0, 1000); // Immediately despawns and forces respawn
      after 1 second'
    language: cpp
  notes: This method internally calls the base Creature::Despawn() function and handles
    the respawn scheduling logic. It's important to note that calling this method
    on a creature that is already despawned will not cause issues, but may result
    in unexpected behavior if the respawn timing conflicts with existing schedules.
    The method does not affect creature AI or other systems directly; it only manages
    the visibility and existence of the creature in the world.
  warnings: Using a very small timeToDespawn value (like 100ms) might cause issues
    with client-side rendering and could lead to visual glitches. Avoid calling this
    method on creatures that are actively involved in combat or quest progression
    without proper safeguards, as it may break quest states or AI behavior.
  related:
  - Creature::Despawn
  - Creature::Respawn
  - Creature::IsAlive
  - Creature::IsInWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T20:40:13.325230'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
