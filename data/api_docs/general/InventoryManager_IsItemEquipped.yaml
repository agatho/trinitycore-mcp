api:
  class: InventoryManager
  method: IsItemEquipped
  signature: bool InventoryManager::IsItemEquipped(Item * item) const
documentation:
  brief: Checks whether a specified item is currently equipped by the player.
  description: The IsItemEquipped method determines if a given Item object is currently
    equipped in any of the player's inventory slots. This method examines the item's
    position within the player's equipment layout and returns true if the item is
    found in an equipped slot, or false if it is not equipped or if the item pointer
    is invalid. The check includes all possible equipment slots including main hand,
    off-hand, ranged, and other wearable slots. This functionality is commonly used
    during item interactions, inventory management, and game logic that depends on
    whether an item is actively being worn or used by the character.
  parameters: []
  returns: Returns true if the specified item is currently equipped in any valid equipment
    slot; returns false if the item is not equipped, if the item pointer is null,
    or if the item does not exist in the player's equipment layout.
  examples:
  - title: Basic Equipment Check
    code: "Item* equippedItem = player->GetItemByPos(INVENTORY_SLOT_BAG_0, EQUIPMENT_SLOT_MAINHAND);\n\
      if (player->GetInventory()->IsItemEquipped(equippedItem)) {\n    // Item is\
      \ currently equipped\n    SendSystemMessage(\"This weapon is currently equipped.\"\
      );\n}"
    language: cpp
  - title: Conditional Equipment Logic
    code: "Item* newItem = player->GetItemByPos(INVENTORY_SLOT_BAG_0, EQUIPMENT_SLOT_HEAD);\n\
      if (newItem && !player->GetInventory()->IsItemEquipped(newItem)) {\n    // Only\
      \ allow unequipping if item is not already equipped\n    player->RemoveItem(INVENTORY_SLOT_BAG_0,\
      \ EQUIPMENT_SLOT_HEAD);\n}"
    language: cpp
  notes: This method performs a lookup in the player's equipment table rather than
    checking the item's container and slot directly. It is optimized for frequent
    use during gameplay events and should not be used in performance-critical code
    paths without consideration of caching strategies. The method assumes that the
    Item pointer passed to it is valid and properly initialized.
  warnings: Passing a null Item pointer to this method will result in an immediate
    false return value, but it's recommended to validate item pointers before calling
    this function to avoid potential logic errors. This method does not verify if
    the item is actually in the correct inventory bag or slot; it only checks if it's
    marked as equipped in the player's equipment layout.
  related:
  - GetItemByPos
  - IsEquippedItem
  - EquipItem
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:12:23.792089'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
