api:
  class: Unit
  method: AddWorldEffect
  signature: void Unit::AddWorldEffect(int32 worldEffectId)
documentation:
  brief: Adds a world effect to the unit, enabling visual and gameplay effects for
    players.
  description: The AddWorldEffect method allows a unit to apply a specific world effect
    identifier, which typically corresponds to an in-game visual or gameplay effect
    such as a spell or aura. This method is commonly used in TrinityCore to trigger
    effects that modify player behavior or appearance, such as adding a visual effect
    to a player's character or applying a game mechanic like a buff or debuff. The
    method does not return any value and operates directly on the unit's internal
    state, making it an essential tool for developers working with World of Warcraft
    mechanics.
  parameters:
  - name: worldEffectId
    description: The identifier of the world effect to be added. This is typically
      a numeric value representing a specific visual or gameplay effect in the game
      database, such as a spell effect or aura that modifies player behavior.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit();

      unit->AddWorldEffect(12345);

      '
    language: cpp
  - title: Advanced usage example
    code: 'Unit* player = GetPlayer();

      player->AddWorldEffect(98765);

      // This would apply a world effect that modifies player''s visual appearance
      or gameplay mechanics

      '
    language: cpp
  notes: 'Implementation details: The method likely interacts with the World of Warcraft
    database to retrieve and apply the specified world effect. Performance considerations
    include potential memory usage when applying multiple effects simultaneously.
    Thread safety is not explicitly mentioned, but it''s recommended to ensure that
    methods are called from within appropriate thread contexts.'
  warnings: Common mistakes include using invalid worldEffectId values which may lead
    to no effect or errors. Dangerous edge cases occur when the same world effect
    is applied multiple times without proper cleanup, potentially leading to visual
    conflicts or gameplay issues.
  related:
  - AddAura
  - RemoveWorldEffect
  - GetWorldEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T21:30:47.212406'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
