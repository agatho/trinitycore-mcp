api:
  class: Player
  method: Yell
  signature: void Player::Yell(uint32 textId, const int * target)
documentation:
  brief: Player::Yell sends a yell message to nearby players with specified textId
  description: The Player::Yell method allows a player to send a yell message to nearby
    players within the same instance or zone. It uses a textId parameter to determine
    which message to send, and optionally accepts a target parameter to specify a
    specific player to whisper. This method is commonly used for communication in
    World of Warcraft instances, and can be triggered by various game events or player
    actions. The method does not return any value but sends a message to the player's
    nearby peers.
  parameters:
  - name: textId
    description: The identifier of the text message to send. This corresponds to an
      entry in the WorldText table and determines which message is displayed to nearby
      players.
  - name: target
    description: Optional pointer to a specific player target. If provided, the yell
      message will be sent only to that player instead of all nearby players. If NULL,
      the message is sent to all players within range.
  returns: null
  examples:
  - title: Basic Yell Usage
    code: 'Player* player = new Player;

      player->Yell(10001, nullptr);'
    language: cpp
  - title: Yell to Specific Target
    code: 'Player* player = new Player;

      Player* target = new Player;

      player->Yell(10002, target);'
    language: cpp
  notes: The method is implemented using the WorldText system and requires proper
    textId entries in the database. The message will only reach players within the
    same instance or zone unless specified otherwise. Performance considerations include
    the number of players affected by the yell message.
  warnings: Improper use of textId can result in incorrect messages being sent to
    players. Ensure that textId values correspond to valid entries in the WorldText
    table. The target parameter must be a valid player pointer; passing invalid pointers
    may cause crashes.
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T23:15:48.387759'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
