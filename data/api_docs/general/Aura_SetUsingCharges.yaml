api:
  class: Aura
  method: SetUsingCharges
  signature: void Aura::SetUsingCharges(bool val)
documentation:
  brief: Sets whether the aura uses charges for its duration.
  description: The SetUsingCharges method configures an aura to either use or not
    use charge-based consumption. When enabled, the aura will consume one charge each
    time it triggers its effect, typically reducing the aura's duration or effectiveness.
    This is commonly used for abilities that have limited uses before expiring. The
    method directly modifies internal aura state without triggering any additional
    events or recalculations.
  parameters: []
  returns: null
  examples:
  - title: Enable Charge Usage
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    aura->SetUsingCharges(true);\n\
      }"
    language: cpp
  - title: Disable Charge Usage
    code: "Aura* aura = player->GetAura(67890);\nif (aura)\n{\n    aura->SetUsingCharges(false);\n\
      }"
    language: cpp
  notes: This method modifies the aura's internal state flag. It does not perform
    any validation on whether the aura actually supports charges - that is determined
    by the aura's template or spell definition. The change takes effect immediately
    and affects subsequent applications of the aura's effects.
  warnings: Calling this method on an aura that doesn't support charges may result
    in unexpected behavior or silent failures. Ensure the aura type is compatible
    before calling this function. This method should not be called during active aura
    application loops to avoid potential race conditions.
  related:
  - GetUsingCharges
  - AddCharge
  - RemoveCharge
  - GetCharges
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:06:40.415347'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
