api:
  class: BattlePetMgr
  method: GetOwner
  signature: int * BattlePetMgr::GetOwner() const
documentation:
  brief: Returns a pointer to the owner identifier of the battle pet managed by this
    BattlePetMgr instance.
  description: The GetOwner method retrieves the unique identifier (GUID) of the player
    who owns the battle pet associated with this BattlePetMgr instance. This method
    is typically used in World of Warcraft's Battle Pet system to determine which
    player controls a specific battle pet. The returned pointer points to an integer
    value representing the GUID, which can be used to fetch or manipulate the owner
    player's data. The method does not perform any validation on whether the pet actually
    has an owner, and it is assumed that the BattlePetMgr instance is properly initialized
    with a valid pet context.
  parameters: []
  returns: A pointer to an integer representing the GUID of the battle pet's owner.
    If the pet has no owner or the BattlePetMgr instance is not properly initialized,
    the returned value may be NULL or point to an invalid GUID.
  examples:
  - title: Basic usage to retrieve owner GUID
    code: "BattlePetMgr* petMgr = ...; // Assume initialized\nint* ownerGuid = petMgr->GetOwner();\n\
      if (ownerGuid != nullptr)\n{\n    printf(\"Owner GUID: %d\\n\", *ownerGuid);\n\
      }"
    language: cpp
  notes: This method returns a raw pointer to an integer, so developers must ensure
    proper null checking before dereferencing the returned value. The BattlePetMgr
    instance must be properly initialized with a valid battle pet context for meaningful
    results.
  warnings: Be cautious when using the returned pointer directly without verifying
    it is not NULL. Dereferencing a NULL pointer will result in undefined behavior
    and likely crash the application.
  related:
  - SetOwner
  - HasOwner
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:56:40.191485'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
