api:
  class: Unit
  method: GetFirstMinion
  signature: Minion * Unit::GetFirstMinion() const
documentation:
  brief: Returns the first minion attached to this unit.
  description: The GetFirstMinion method retrieves the first minion that is currently
    attached to the Unit. This method is commonly used in World of Warcraft's TrinityCore
    framework to access the initial summoned creature or pet associated with a unit.
    The returned Minion pointer represents a specific entity that can be manipulated
    or queried for its properties. It typically returns nullptr if no minions are
    present, making it useful for checking the existence of minions before performing
    operations on them.
  parameters: []
  returns: Returns a pointer to the first Minion attached to this Unit, or nullptr
    if no minions exist. The returned value represents a valid Minion object that
    can be used for further operations such as querying its stats, health, or other
    properties.
  examples:
  - title: Basic Usage Example
    code: "if (Unit* unit = player->GetFirstMinion()) {\n    // Do something with\
      \ the minion\n}\nelse {\n    // No minions present\n}"
    language: cpp
  notes: This method is part of the Unit class's interface and should be used carefully
    in contexts where multiple minions may exist. The method does not guarantee that
    the returned Minion will be a valid creature or pet, but rather represents the
    first one in the list of attached minions.
  warnings: Be cautious when using this method in scenarios involving multiple minions;
    ensure proper checks are performed before accessing properties to avoid potential
    null pointer dereferences.
  related:
  - GetFirstMinion
  - GetMinion
  - GetSummonedCreature
  - GetPet
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:10:36.433666'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
