api:
  class: TradeManager
  method: GetTradeState
  signature: TradeState TradeManager::GetTradeState() const
documentation:
  brief: Retrieves the current trade state of the player's trade window.
  description: The GetTradeState method returns the current state of a trade session
    between two players. This state indicates whether the trade is in progress, accepted,
    or cancelled. The method provides essential information for managing trade interactions
    within the game, allowing systems to determine the validity and progression of
    ongoing trades. It is commonly used by the trading system to enforce trade rules
    and update user interfaces accordingly.
  parameters: []
  returns: Returns a TradeState enum value representing the current state of the trade.
    Possible values include TRADE_STATE_OPEN, TRADE_STATE_ACCEPTED, TRADE_STATE_CANCELLED,
    or TRADE_STATE_COMPLETE, depending on the current status of the trade session.
  examples:
  - title: Check trade state before accepting
    code: "if (tradeManager->GetTradeState() == TRADE_STATE_OPEN)\n{\n    // Proceed\
      \ with trade acceptance logic\n    tradeManager->AcceptTrade();\n}"
    language: cpp
  - title: Handle different trade states in a loop
    code: "TradeState state = tradeManager->GetTradeState();\nswitch (state)\n{\n\
      \    case TRADE_STATE_ACCEPTED:\n        // Update UI to show accepted trade\n\
      \        break;\n    case TRADE_STATE_CANCELLED:\n        // Clean up trade\
      \ resources\n        break;\n    default:\n        // Handle other states or\
      \ errors\n        break;\n}"
    language: cpp
  notes: This method is typically called during trade updates and should be used in
    conjunction with other trade management functions to maintain proper state consistency.
    The returned TradeState value reflects the internal state maintained by the TradeManager
    object and may change rapidly during active trade sessions.
  warnings: Be cautious when using this method outside of the appropriate game context,
    as it may return unexpected values if called on an uninitialized or improperly
    configured TradeManager instance. Always validate that a trade session exists
    before calling this method to avoid undefined behavior.
  related:
  - SetTradeState
  - AcceptTrade
  - CancelTrade
  - InitiateTrade
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:10:54.250441'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
