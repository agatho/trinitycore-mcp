api:
  class: BattlePetManager
  method: GetGlobalMetrics
  signature: const PetMetrics & BattlePetManager::GetGlobalMetrics() const
documentation:
  brief: Retrieves the global pet metrics for all battle pets in the system
  description: The GetGlobalMetrics method returns a constant reference to the global
    PetMetrics object that contains aggregate statistics and data about all battle
    pets within the TrinityCore instance. This includes overall pet counts, combat
    performance data, and system-wide battle pet statistics. The returned reference
    is immutable, ensuring that external code cannot modify the global metrics directly.
    This method is typically used by game systems that need to track or display aggregate
    battle pet information across the entire server.
  parameters: []
  returns: A constant reference to a PetMetrics object containing global battle pet
    statistics and metrics. The returned object should not be modified as it represents
    shared system data.
  examples:
  - title: Accessing Global Battle Pet Metrics
    code: 'const PetMetrics& globalMetrics = battlePetManager.GetGlobalMetrics();

      uint32 totalPets = globalMetrics.totalPets;

      uint32 activeBattles = globalMetrics.activeBattles;

      printf("Total pets: %u, Active battles: %u\n", totalPets, activeBattles);'
    language: cpp
  notes: The returned PetMetrics reference points to a singleton or shared instance
    that may be updated by other systems during runtime. This method is thread-safe
    as it only provides read access to immutable data structures.
  warnings: Do not modify the returned PetMetrics object as it represents system-wide
    shared state. Modifications could lead to inconsistent game data and unexpected
    behavior across the server.
  related:
  - GetPetMetrics
  - UpdateGlobalMetrics
  - ResetGlobalMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T18:04:53.766564'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
