api:
  class: MountManager
  method: GetDragonridingMount
  signature: const MountInfo * MountManager::GetDragonridingMount(int * player) const
documentation:
  brief: Retrieves the dragonriding mount information for a player.
  description: The GetDragonridingMount method retrieves the MountInfo structure associated
    with the player's current dragonriding mount. This method is typically used in
    the context of World of Warcraft's dragonriding feature, which allows players
    to ride dragons in certain zones. The returned MountInfo contains details about
    the specific dragon mount, such as its display ID, spell ID, and other relevant
    properties. The method operates on the player object passed as a parameter and
    returns a pointer to the corresponding mount information if the player is currently
    mounted on a dragon.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's identifier or index
      within the system. This parameter is used to locate and retrieve the specific
      player's dragonriding mount data.
  returns: A const pointer to a MountInfo structure containing details about the player's
    dragonriding mount. Returns nullptr if no valid dragonriding mount is found for
    the specified player.
  examples:
  - title: Basic Usage
    code: "const MountInfo* dragonMount = mountManager.GetDragonridingMount(&playerId);\n\
      if (dragonMount != nullptr) {\n    // Use dragonMount to access mount properties\n\
      \    printf(\"Dragon mount ID: %d\\n\", dragonMount->spellId);\n}"
    language: cpp
  - title: Checking for Valid Mount
    code: "int playerId = 12345;\nconst MountInfo* mount = mountManager.GetDragonridingMount(&playerId);\n\
      if (mount && mount->spellId > 0) {\n    // Player has a valid dragonriding mount\n\
      \    std::cout << \"Player is riding: \" << mount->displayName << std::endl;\n\
      } else {\n    // No dragonriding mount found\n    std::cout << \"Player is not\
      \ on a dragon.\" << std::endl;\n}"
    language: cpp
  notes: This method assumes that the player object passed in has been properly initialized
    and that the dragonriding state is active. It may return nullptr if the player
    is not currently mounted or if the mount data is not available in memory.
  warnings: Ensure that the player pointer is valid before calling this method, as
    passing an invalid or uninitialized pointer could lead to undefined behavior.
    Also note that this method only returns dragonriding mounts and will not provide
    information about other types of mounts.
  related:
  - GetMountBySpellId
  - IsPlayerOnMount
  - SetDragonridingMount
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:19:15.907573'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
