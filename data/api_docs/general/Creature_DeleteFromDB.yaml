api:
  class: Creature
  method: DeleteFromDB
  signature: bool Creature::DeleteFromDB(int spawnId)
documentation:
  brief: Deletes a creature from the database using its spawn ID
  description: The Creature::DeleteFromDB method removes a creature entry from the
    database based on its spawn ID. This function is typically used when a creature
    needs to be permanently removed from the world, such as during server maintenance
    or when a creature is no longer needed. The method ensures that all related database
    entries are cleared, including any creature spawn information and associated data.
    It's important to note that this operation should only be performed when the creature
    is not currently spawned in the world, as attempting to delete a creature that
    is actively spawned can lead to undefined behavior or database inconsistencies.
  parameters:
  - name: spawnId
    description: The unique identifier of the creature spawn entry to be deleted from
      the database. This ID corresponds to the spawn_id field in the creature table
      and must match the actual spawn ID of the creature being removed.
  returns: Returns true if the creature was successfully deleted from the database,
    false otherwise. A return value of false indicates that either the creature with
    the specified spawn ID does not exist in the database or an error occurred during
    the deletion process.
  examples:
  - title: Basic Delete Example
    code: "Creature* creature = new Creature();\nbool result = creature->DeleteFromDB(12345);\n\
      if (result)\n    cout << \"Creature deleted successfully\" << endl;\nelse\n\
      \    cout << \"Failed to delete creature\" << endl;"
    language: cpp
  - title: Advanced Delete with Error Handling
    code: "Creature* creature = new Creature();\nint spawnId = 12345;\nbool result\
      \ = creature->DeleteFromDB(spawnId);\nif (!result)\n{\n    // Handle error condition\n\
      \    if (creature->GetEntry() == 0)\n    {\n        cout << \"Creature not found\
      \ in database\" << endl;\n    }\n    else\n    {\n        cout << \"Database\
      \ deletion failed\" << endl;\n    }\n}\nelse\n{\n    cout << \"Creature successfully\
      \ removed from database\" << endl;\n}"
    language: cpp
  notes: This method should only be called when the creature is not currently spawned
    in the world. If a creature is deleted while still active, it may cause issues
    with database consistency and can lead to memory leaks or undefined behavior.
    The method performs a direct database operation without any additional validation
    checks beyond the spawn ID existence.
  warnings: This method should never be called on creatures that are currently spawned
    in the world as it will result in database inconsistency and potential memory
    leaks. Additionally, calling this method with an invalid spawn ID can cause database
    errors or corruption. Always ensure the creature is not active before calling
    this function.
  related:
  - Creature::SaveToDB
  - Creature::LoadFromDB
  - Creature::DeleteFromWorld
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T02:45:45.927083'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
