api:
  class: InterruptRotationManager
  method: UpdateInterrupterStatus
  signature: void InterruptRotationManager::UpdateInterrupterStatus(int bot, bool
    available, uint32 cooldownMs)
documentation:
  brief: Updates the interrupter status for a specified bot with availability and
    cooldown information.
  description: The UpdateInterrupterStatus method manages the state of an interrupter
    ability for a specific bot within the TrinityCore AI system. It sets whether the
    interrupter is currently available for use and defines a cooldown period in milliseconds
    before it can be used again. This functionality is crucial for controlling when
    bots can perform interrupt actions during combat, ensuring proper timing and resource
    management. The method updates internal tracking data that other systems rely
    on to determine if an interrupt can be executed at any given moment.
  parameters:
  - name: bot
    description: The identifier of the bot whose interrupter status is being updated.
      This typically corresponds to a unique character or AI instance within the game
      world.
  - name: available
    description: Boolean flag indicating whether the interrupter ability is currently
      available for use (true) or on cooldown (false).
  - name: cooldownMs
    description: The duration in milliseconds that the interrupter will remain unavailable
      after being used. A value of 0 indicates immediate availability.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'InterruptRotationManager manager;

      manager.UpdateInterrupterStatus(12345, true, 3000); // Makes interrupter available
      for bot 12345 with 3-second cooldown'
    language: cpp
  - title: Cooldown Reset Example
    code: 'InterruptRotationManager manager;

      manager.UpdateInterrupterStatus(67890, false, 0); // Immediately disables interrupter
      for bot 67890'
    language: cpp
  notes: This method directly modifies internal state tracking within the InterruptRotationManager
    class. It should be called whenever a bot's interrupter status changes to ensure
    accurate behavior in AI decision-making processes. The cooldown duration is stored
    as a relative time offset from the current moment, allowing for precise timing
    of interrupt usage.
  warnings: Improper use of this method may lead to incorrect interrupt timing or
    availability states, potentially causing bots to perform invalid actions during
    combat. Ensure that the bot identifier corresponds to an actual active AI instance
    to avoid undefined behavior.
  related:
  - GetInterrupterStatus
  - IsInterrupterAvailable
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T00:03:24.394496'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
