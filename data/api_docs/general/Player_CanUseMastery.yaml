api:
  class: Player
  method: CanUseMastery
  signature: bool Player::CanUseMastery() const
documentation:
  brief: Determines whether the player can use mastery abilities.
  description: This method checks if the player is eligible to use mastery abilities,
    which are special abilities that provide additional benefits based on their class
    and specialization. The method evaluates various conditions including player level,
    class restrictions, and talent requirements to determine if mastery can be activated.
    It typically returns true when the player meets all prerequisites for mastery
    usage, and false otherwise. This functionality is crucial for gameplay mechanics
    related to character progression and ability activation.
  parameters: []
  returns: Returns true if the player can use mastery abilities, false otherwise.
    The method may return false due to level requirements, class restrictions, or
    talent prerequisites that prevent mastery from being activated.
  examples:
  - title: Basic usage example
    code: "if (player->CanUseMastery()) {\n    // Player can use mastery\n}\nelse\
      \ {\n    // Player cannot use mastery\n}"
    language: cpp
  notes: This method likely involves checking player level, class restrictions, and
    talent requirements. It may be used in conjunction with other methods like GetMastery()
    or GetTalentPoints() to determine ability usage. Performance considerations include
    potential for multiple calls during combat situations.
  warnings: This method might be called frequently during combat or gameplay scenarios,
    so it's important to ensure proper caching or optimization to avoid performance
    impact. The result may vary based on player's current level and specialization.
  related:
  - Player::GetMastery
  - Player::GetTalentPoints
  - Player::CanUseSpell
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:31:28.152979'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
