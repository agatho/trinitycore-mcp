api:
  class: Unit
  method: AtEnterCombat
  signature: void Unit::AtEnterCombat()
documentation:
  brief: Invoked when a Unit enters combat state, triggering necessary combat-related
    initialization and event handling.
  description: The AtEnterCombat method is a virtual callback function in the Unit
    class that is executed whenever a unit (such as a player or creature) transitions
    into combat mode. This method is typically called internally by the game engine
    when combat begins for the unit, whether through direct engagement with an enemy
    or through scripted events. It serves as a hook for custom behavior during combat
    entry, such as initializing combat timers, triggering combat-related auras, or
    starting AI behaviors specific to combat. The method does not take any parameters
    and returns no value, acting purely as an event notification mechanism.
  parameters: []
  returns: null
  examples:
  - title: Basic Override Example
    code: "class MyCreature : public Creature\n{\npublic:\n    void AtEnterCombat()\
      \ override\n    {\n        // Custom logic when creature enters combat\n   \
      \     SendAIEventAround(AI_EVENT_COMBAT_START, nullptr);\n        Creature::AtEnterCombat();\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the Unit's virtual function table and should be overridden
    in derived classes to implement custom combat entry logic. It is automatically
    invoked by the core engine during combat initiation, so manual calls are generally
    unnecessary.
  warnings: Overriding this method without calling the base class implementation may
    prevent standard combat initialization from occurring, potentially leading to
    unexpected behavior or missing combat mechanics.
  related:
  - AtExitCombat
  - IsInCombat
  - SetInCombat
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:35:25.537059'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
