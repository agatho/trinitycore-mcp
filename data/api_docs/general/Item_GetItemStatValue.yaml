api:
  class: Item
  method: GetItemStatValue
  signature: float Item::GetItemStatValue(uint32 index, const Player * owner) const
documentation:
  brief: Retrieves the value of a specified stat for the item, considering the player's
    ownership.
  description: The GetItemStatValue method returns the numerical value of a specific
    stat associated with an item, taking into account the player who owns the item.
    This method is commonly used in World of Warcraft's TrinityCore framework to determine
    how items affect character stats such as strength, agility, intellect, or other
    attributes. It allows developers to access individual stat values from an item's
    properties for various game mechanics purposes including calculations for character
    stats, item bonuses, and performance evaluation.
  parameters:
  - name: index
    description: The index of the stat to retrieve, typically corresponding to a specific
      stat type such as strength, agility, intellect, etc. Valid values are usually
      0-4 for different stat types.
  - name: owner
    description: Pointer to the player who owns the item; this parameter is crucial
      for determining how stat values are calculated and applied based on player's
      class or race.
  returns: Returns a float value representing the stat amount for the specified index,
    which may be zero if no stat exists at that index or if the player does not own
    the item.
  examples:
  - title: Basic Usage Example
    code: float strengthValue = item->GetItemStatValue(0, player); // Retrieves the
      strength value of an item
    language: cpp
  - title: Advanced Usage Example
    code: "float statValue = item->GetItemStatValue(2, player); // Retrieves the intellect\
      \ value of an item\nif (statValue > 0)\n{\n    // Perform calculations based\
      \ on stat value\n    int totalStats = player->GetUInt32Value(PLAYER_FIELD_STAT0\
      \ + 2);\n}\n"
    language: cpp
  notes: This method is part of the Item class and should be used carefully as it
    may require checking for valid index values. It's important to note that stat
    values are calculated based on player's class, race, and other factors, making
    this method potentially dynamic depending on context.
  warnings: Be cautious when using this method with invalid indices or null pointers;
    improper usage can lead to undefined behavior or incorrect stat calculations.
    Also, ensure that the player pointer is valid before calling this method.
  related:
  - GetItemStatType
  - GetItemStatValue
  - GetItemMod
  - GetItemBonus
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:58:38.133753'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
