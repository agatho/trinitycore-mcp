api:
  class: Player
  method: HaveAtClient
  signature: bool Player::HaveAtClient(const int * u) const
documentation:
  brief: Checks if the player has a specific client-side at-client functionality enabled.
  description: This method determines whether the player object possesses a particular
    client-side at-client functionality, which is typically used in World of Warcraft's
    TrinityCore framework to verify if certain game mechanics or features are active.
    The method returns a boolean value indicating the presence or absence of this
    functionality. It is commonly used in conjunction with other player-related methods
    to validate player state or behavior within the game environment.
  parameters: []
  returns: Returns true if the player has the specified at-client functionality enabled,
    false otherwise.
  examples:
  - title: Basic usage example
    code: bool result = player->HaveAtClient(&u);
    language: cpp
  notes: Implementation details suggest that this method likely checks internal flags
    or state variables associated with the player's client-side behavior, possibly
    related to game mechanics such as movement, interaction, or specific gameplay
    features.
  warnings: This method should not be used in contexts where direct access to player
    internal state is required without proper validation. Incorrect usage may lead
    to unexpected behavior or errors in game logic.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T00:45:33.692194'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
