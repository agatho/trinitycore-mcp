api:
  class: Unit
  method: HasInterruptFlag
  signature: bool Unit::HasInterruptFlag(int flags) const
documentation:
  brief: Checks if the unit has any of the specified interrupt flags set.
  description: This method determines whether a Unit object has any of the given interrupt
    flags active, which typically indicates that the unit is currently interrupted
    or has been interrupted by an external effect. The method is commonly used in
    combat and spell mechanics to verify interrupt status during various gameplay
    scenarios such as casting spells, channeled abilities, or being affected by crowd
    control effects. It returns true if any of the specified flags are set, false
    otherwise.
  parameters: []
  returns: Returns true if any of the specified interrupt flags are active on the
    unit; false otherwise.
  examples:
  - title: Basic usage example
    code: "if (unit->HasInterruptFlag(UNIT_INTERRUPT_FLAG_STUN)) {\n    // Unit is\
      \ stunned\n}"
    language: cpp
  notes: This method is typically used in conjunction with other interrupt-related
    methods to determine the current state of a unit's interrupt status. Performance
    considerations are minimal since it simply checks flags, but care should be taken
    when using in loops or frequently called functions.
  warnings: The method may not behave as expected if used without proper understanding
    of interrupt flag semantics; ensure that the flags being checked align with intended
    gameplay mechanics.
  related:
  - Unit::HasInterruptFlag
  - Unit::GetInterruptFlags
  - Unit::SetInterruptFlag
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:20:33.194822'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
