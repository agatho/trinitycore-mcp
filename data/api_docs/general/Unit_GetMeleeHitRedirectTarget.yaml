api:
  class: Unit
  method: GetMeleeHitRedirectTarget
  signature: Unit * Unit::GetMeleeHitRedirectTarget(Unit * victim, const SpellInfo
    * spellInfo)
documentation:
  brief: Returns the target unit that a melee hit is redirected to, if any.
  description: This method retrieves the unit to which a melee attack is redirected
    when certain conditions are met. It typically applies to situations where a unit's
    melee attack is redirected due to abilities like Redirect or similar mechanics.
    The method returns nullptr if no redirection occurs or if the victim is not valid.
    This function is used primarily in combat system logic and requires proper handling
    of spell information and victim parameters.
  parameters:
  - name: victim
    description: The target unit that may be redirected from a melee attack. Must
      be a valid Unit pointer, typically representing the target of the attack.
  - name: spellInfo
    description: The spell information associated with the melee attack. This parameter
      determines whether redirection is possible based on the spell's properties and
      mechanics.
  returns: Returns a pointer to the unit that the melee hit is redirected to, or nullptr
    if no redirection occurs. The returned value may be null under specific conditions
    such as invalid victim or when the spell does not support redirection.
  examples:
  - title: Basic usage example
    code: "Unit *target = this->GetMeleeHitRedirectTarget(victim, spellInfo);\nif\
      \ (target != nullptr)\n{\n    // Handle redirected attack\n}"
    language: cpp
  - title: Advanced usage with conditional redirection
    code: "Unit *redirectedTarget = this->GetMeleeHitRedirectTarget(victim, spellInfo);\n\
      if (redirectedTarget && victim->IsPlayer())\n{\n    // Perform redirection logic\n\
      }"
    language: cpp
  notes: This method is part of the combat system and should be used carefully in
    conjunction with other melee-related functions. It requires proper handling of
    spell information and victim parameters to function correctly. Performance considerations
    include checking for valid pointers before use.
  warnings: Care must be taken when using this method as it may return nullptr under
    certain conditions, potentially leading to null pointer dereferences if not properly
    checked. Also, ensure that the spellInfo parameter is valid and relevant to the
    attack being redirected.
  related:
  - GetMeleeHitResult
  - GetSpellInfo
  - GetVictim
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T12:58:46.816449'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
