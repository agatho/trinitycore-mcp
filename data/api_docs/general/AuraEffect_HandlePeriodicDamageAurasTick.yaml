api:
  class: AuraEffect
  method: HandlePeriodicDamageAurasTick
  signature: void AuraEffect::HandlePeriodicDamageAurasTick(Unit * target, Unit *
    caster) const
documentation:
  brief: Applies periodic damage aura effects to a target unit during tick intervals.
  description: The HandlePeriodicDamageAurasTick method processes and applies damage
    effects that occur periodically over time, such as DoT (damage over time) spells.
    This function is typically invoked by the aura system when a periodic damage effect
    ticks on a target. It calculates the damage based on the aura's properties and
    applies it to the target unit, potentially triggering additional effects like
    threat generation or damage mitigation. The method handles both direct and indirect
    damage application depending on the aura's configuration and the target's state.
  parameters:
  - name: target
    description: The Unit object that is receiving the periodic damage effect. This
      can be any unit type including players, creatures, or game objects.
  - name: caster
    description: The Unit object that originally cast the aura causing the periodic
      damage. This may be null if the aura was applied without a specific caster.
  returns: null
  examples:
  - title: Basic Usage in Aura Application
    code: "void MyAuraEffect::HandlePeriodicDamageAurasTick(Unit* target, Unit* caster)\
      \ const {\n    if (!target || !caster)\n        return;\n    \n    // Apply\
      \ damage based on aura properties\n    uint32 damage = GetAmount();\n    target->DealDamage(caster,\
      \ damage, nullptr, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL);\n}"
    language: cpp
  - title: Advanced Usage with Damage Scaling
    code: "void MyAuraEffect::HandlePeriodicDamageAurasTick(Unit* target, Unit* caster)\
      \ const {\n    if (!target || !caster)\n        return;\n    \n    // Calculate\
      \ scaled damage based on caster's level and target's resistance\n    float damage\
      \ = GetAmount();\n    float scale = 1.0f + (caster->GetLevel() - target->GetLevel())\
      \ * 0.02f;\n    damage *= scale;\n    \n    // Apply the scaled damage\n   \
      \ target->DealDamage(caster, static_cast<uint32>(damage), nullptr, DIRECT_DAMAGE,\
      \ SPELL_SCHOOL_MASK_NORMAL);\n}"
    language: cpp
  notes: This method is part of the core aura tick processing system in TrinityCore.
    It should not be called directly from outside the aura framework unless you are
    implementing custom aura behavior. The method assumes that all necessary checks
    for aura validity and target eligibility have already been performed.
  warnings: Improper handling of this method can lead to incorrect damage calculations
    or game balance issues. Ensure that all damage modifiers, resistances, and mitigation
    effects are properly considered when applying damage in this function. Avoid modifying
    the aura state directly within this method unless absolutely necessary.
  related:
  - AuraEffect::HandlePeriodicHealAurasTick
  - AuraEffect::HandlePeriodicManaRegenAurasTick
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:11:33.642222'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
