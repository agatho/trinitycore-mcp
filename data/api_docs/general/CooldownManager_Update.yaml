api:
  class: CooldownManager
  method: Update
  signature: void CooldownManager::Update(uint32 diff)
documentation:
  brief: Updates the cooldown manager by processing and applying cooldown reductions
    based on the elapsed time.
  description: The Update method is responsible for managing and applying cooldown
    reductions within the CooldownManager class. It processes all active cooldowns
    for a given entity (such as a player or creature) and updates their remaining
    times based on the provided delta time. This method is typically called during
    game loop iterations to ensure that cooldowns are accurately tracked and removed
    when they expire. The method does not directly modify the cooldown state but rather
    applies the necessary time-based calculations to maintain synchronization with
    the game's internal time system.
  parameters:
  - name: diff
    description: The time difference in milliseconds since the last update call. This
      value represents how much time has passed and is used to reduce the remaining
      cooldown times of active abilities.
  returns: null
  examples:
  - title: Basic Update Call
    code: "void GameLoop()\n{\n    uint32 diff = sWorld->GetLastDiff();\n    player->GetCooldownManager()->Update(diff);\n\
      }"
    language: cpp
  - title: Creature Cooldown Update
    code: "void UpdateCreatureAI()\n{\n    if (creature->IsAlive())\n    {\n     \
      \   uint32 diff = sWorld->GetLastDiff();\n        creature->GetCooldownManager()->Update(diff);\n\
      \    }\n}"
    language: cpp
  notes: This method should be called regularly during the game loop to maintain accurate
    cooldown tracking. It's typically invoked from within the main update cycle of
    either player or NPC objects. The diff parameter is crucial for maintaining synchronization
    with the server's time system and ensuring that cooldowns behave consistently
    across different client configurations.
  warnings: Avoid calling this method outside of the main game loop context as it
    may lead to inconsistent cooldown behavior. Ensure that the diff value passed
    is accurate and represents real elapsed time, not artificial or scaled values,
    to maintain proper cooldown mechanics.
  related:
  - GetCooldown
  - AddCooldown
  - RemoveCooldown
  - HasCooldown
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:17:02.157726'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
