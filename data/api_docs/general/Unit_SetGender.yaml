api:
  class: Unit
  method: SetGender
  signature: void Unit::SetGender(int gender)
documentation:
  brief: Sets the gender of the unit to the specified value.
  description: The SetGender method allows developers to change the gender of a Unit
    object, which can be a player, NPC, or any other game entity. This method updates
    the internal gender field of the unit and reflects changes in the game world accordingly.
    The gender parameter accepts values 0 (male), 1 (female), or 2 (none). This method
    is commonly used during creature creation, player customization, or when modifying
    unit properties during gameplay.
  parameters:
  - name: gender
    description: The gender value to set for the unit. Valid values are 0 (male),
      1 (female), or 2 (none). Setting to 0 or 1 will change the unit's gender to
      male or female respectively, while setting to 2 will make the unit genderless.
  returns: null
  examples:
  - title: Setting Gender to Male
    code: 'Unit* unit = new Unit();

      unit->SetGender(0);

      // unit now has male gender'
    language: cpp
  - title: Setting Gender to Female
    code: 'Unit* unit = new Unit();

      unit->SetGender(1);

      // unit now has female gender'
    language: cpp
  notes: This method directly modifies the internal gender field of the unit and should
    be used carefully during gameplay to avoid conflicts with existing game mechanics.
    It may affect visual appearance, behavior, and interactions with other players
    or NPCs.
  warnings: Setting gender to 2 (none) may cause issues with certain game mechanics
    that require a defined gender. This method should not be used in scenarios where
    the unit's gender needs to be preserved across multiple operations.
  related:
  - GetGender
  - SetDisplayId
  - SetFaction
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:14:01.879566'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
