api:
  class: Item
  method: GetBaseDisenchantLoot
  signature: const int * Item::GetBaseDisenchantLoot(const ItemTemplate * itemTemplate,
    uint32 quality, uint32 itemLevel)
documentation:
  brief: Returns the base disenchant loot table for an item based on its template,
    quality, and item level.
  description: This method retrieves the base disenchant loot table associated with
    a specific item template, taking into account the item's quality and item level.
    It is used to determine what materials can be disenchanted from an item when it
    is disenchantable. The method returns a pointer to an array of integers representing
    the loot items that can be obtained through disenchanting, which typically includes
    materials such as enchanting dust, essence, or other components depending on the
    item's quality and level. This functionality is essential for game mechanics involving
    disenchanting, where players can extract materials from items they cannot use.
  parameters: []
  returns: Returns a pointer to an array of integers representing the base disenchant
    loot items. Each integer corresponds to a specific item or material that can be
    obtained through disenchanting, with values typically indicating item IDs or resource
    types. The array is terminated by a value of 0, indicating the end of the list.
  examples:
  - title: Basic Usage Example
    code: "const int* lootTable = item->GetBaseDisenchantLoot(itemTemplate, quality,\
      \ itemLevel);\nif (lootTable != nullptr) {\n    for (int i = 0; lootTable[i]\
      \ != 0; ++i) {\n        // Process each loot item\n        int itemId = lootTable[i];\n\
      \        // Do something with the item ID\n    }\n}"
    language: cpp
  notes: This method is typically used in conjunction with other disenchanting-related
    functions to determine what items can be disenchanted from a given item. It is
    important to note that the returned array may vary based on item quality and level,
    and it is not guaranteed to always contain valid loot items. The implementation
    relies on internal data structures and may be subject to changes in future updates.
  warnings: This method should not be used directly without proper context, as it
    requires accurate item template and quality information. Incorrect usage could
    lead to invalid loot results or runtime errors. Also, the returned pointer is
    only valid within the scope of the method call and should not be stored for later
    use.
  related:
  - GetDisenchantLoot
  - GetItemTemplate
  - GetQuality
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T05:16:20.609236'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
