api:
  class: AuraEffect
  method: HandlePeriodicHealthLeechAuraTick
  signature: void AuraEffect::HandlePeriodicHealthLeechAuraTick(Unit * target, Unit
    * caster) const
documentation:
  brief: Applies a periodic health leech effect to the target unit from the caster.
  description: 'The HandlePeriodicHealthLeechAuraTick method is responsible for executing
    the tick logic of a periodic health leech aura. This aura drains health from the
    target unit and transfers it to the caster at a regular interval. The method calculates
    the amount of health to be leeched based on the aura''s properties and applies
    the damage to the target while healing the caster accordingly. It is typically
    invoked by the aura system during periodic tick events, ensuring that the leech
    effect occurs consistently over time. This functionality is commonly used in abilities
    such as Drain Life or Shadow Word: Pain in World of Warcraft.'
  parameters:
  - name: target
    description: The unit that is being leeched from. Must be a valid Unit pointer
      and cannot be null.
  - name: caster
    description: The unit receiving the leached health. Must be a valid Unit pointer
      and cannot be null.
  returns: null
  examples:
  - title: Basic Usage in Aura Tick Handler
    code: "void MyAura::HandleTick(Unit* target, Unit* caster)\n{\n    HandlePeriodicHealthLeechAuraTick(target,\
      \ caster);\n}"
    language: cpp
  - title: Custom Leech Effect with Damage Calculation
    code: "void CustomLeechAura::HandlePeriodicHealthLeechAuraTick(Unit* target, Unit*\
      \ caster)\n{\n    if (!target || !caster)\n        return;\n\n    uint32 leechAmount\
      \ = GetBaseAmount();\n    int32 damage = target->CalculateDamage(leechAmount);\n\
      \    target->ModifyHealth(-damage);\n    caster->ModifyHealth(damage);\n}"
    language: cpp
  notes: This method is part of the aura tick system and should only be called during
    periodic aura updates. The leech effect does not bypass damage mitigation or healing
    reduction effects. Ensure that both target and caster are valid units before calling
    this function to prevent undefined behavior.
  warnings: Calling this method with null pointers for either target or caster will
    result in undefined behavior. This method modifies the health of both units directly,
    so it must be used carefully in scenarios where health modifications are already
    in progress to avoid race conditions or double application.
  related:
  - AuraEffect::HandlePeriodicTick
  - AuraEffect::GetBaseAmount
  - Unit::ModifyHealth
  - Unit::CalculateDamage
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:09:06.495384'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
