api:
  class: MotionMaster
  method: DirectAdd
  signature: void MotionMaster::DirectAdd(MovementGenerator * movement, MovementSlot
    slot)
documentation:
  brief: Adds a movement generator directly to the motion master's slot without any
    additional processing.
  description: The DirectAdd method is used to immediately insert a MovementGenerator
    into a specified slot of the MotionMaster. This bypasses any normal queueing or
    state management logic, allowing for direct control over the movement behavior.
    It is typically used when immediate execution of a movement is required, such
    as during initialization or in response to specific game events. The method does
    not perform any validation on whether the slot is already occupied, so care must
    be taken to avoid conflicts. This function is part of TrinityCore's AI and movement
    system, which manages how creatures and players move within the game world.
  parameters:
  - name: movement
    description: Pointer to the MovementGenerator object to be added. Must not be
      null. The movement generator defines the behavior for how an entity should move.
  - name: slot
    description: The MovementSlot index where the movement generator will be placed.
      Valid values are typically 0-4, representing different priority levels or movement
      types (e.g., idle, walk, run, flight, custom).
  returns: null
  examples:
  - title: Adding a Walk Movement Generator
    code: 'MovementGenerator* walkGen = new WalkMovementGenerator();

      MotionMaster* mm = creature->GetMotionMaster();

      mm->DirectAdd(walkGen, MOTION_SLOT_IDLE);'
    language: cpp
  - title: Adding a Custom Movement Generator
    code: 'CustomMovementGenerator* customGen = new CustomMovementGenerator(targetPosition);

      MotionMaster* mm = player->GetMotionMaster();

      mm->DirectAdd(customGen, MOTION_SLOT_ACTIVE);'
    language: cpp
  notes: This method should be used cautiously as it directly manipulates the motion
    state. It does not trigger any internal callbacks or notifications that normally
    occur during movement changes. Developers should ensure that the MovementGenerator
    is properly initialized before calling this method.
  warnings: Using DirectAdd can lead to inconsistent movement states if not handled
    carefully. It's important to understand the existing movement stack and avoid
    overwriting critical slots like MOTION_SLOT_CONTROLLED which may be used for player-controlled
    movement or AI-driven behaviors.
  related:
  - Add
  - Remove
  - Clear
  - UpdateMotion
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T10:26:53.831525'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
