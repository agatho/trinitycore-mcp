api:
  class: InstanceScript
  method: GetEncounterCount
  signature: uint32 InstanceScript::GetEncounterCount() const
documentation:
  brief: Returns the total number of encounters defined in the instance script.
  description: The GetEncounterCount method retrieves the count of all encounters
    that have been registered within the instance script. This value typically corresponds
    to the number of boss encounters or significant combat events defined for a specific
    dungeon or raid instance. The method is commonly used during instance initialization,
    encounter state management, and tracking progress through the instance's content.
    It provides a way to determine how many distinct encounters are expected or have
    been configured within the instance.
  parameters: []
  returns: A uint32 value representing the total number of encounters defined in this
    instance script. This count typically corresponds to the number of bosses or major
    combat encounters that can be tracked during the instance's lifecycle.
  examples:
  - title: Basic Usage for Encounter Tracking
    code: "class BossEncounterScript : public InstanceScript\n{\npublic:\n    void\
      \ OnPlayerEnter(Player* player) override\n    {\n        uint32 encounterCount\
      \ = GetEncounterCount();\n        // Use encounterCount to initialize tracking\
      \ variables or UI elements\n        sLog->outString(\"Instance has %u encounters\"\
      , encounterCount);\n    }\n};"
    language: cpp
  - title: Using Encounter Count for Progress Validation
    code: "class MyInstanceScript : public InstanceScript\n{\npublic:\n    void Update(uint32\
      \ diff) override\n    {\n        uint32 totalEncounters = GetEncounterCount();\n\
      \        uint32 completedEncounters = GetEncounterState(ENCOUNTER_STATE_COMPLETED);\n\
      \        \n        if (completedEncounters >= totalEncounters)\n        {\n\
      \            // All encounters completed, handle instance completion\n     \
      \       CompleteInstance();\n        }\n    }\n};"
    language: cpp
  notes: This method is typically implemented by derived classes that define specific
    encounter logic. The actual implementation may vary depending on how encounters
    are registered and tracked within the instance. It's important to note that this
    count might not include all possible encounters if some are dynamically added
    or removed during runtime.
  warnings: null
  related:
  - GetEncounterState
  - SetEncounterState
  - GetBossState
  - SetBossState
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T12:50:11.137188'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
