api:
  class: Unit
  method: isInBackInMap
  signature: bool Unit::isInBackInMap(const Unit * target, float distance, float arc)
    const
documentation:
  brief: Determines whether a target unit is behind the current unit within a specified
    distance and arc.
  description: This method checks if a given target unit is located behind the calling
    unit within a defined distance and arc, which is commonly used in game mechanics
    to determine line of sight or positioning relative to the unit's facing direction.
    It evaluates whether the target unit falls within the back arc of the current
    unit, making it useful for determining if an enemy is positioned behind cover
    or if a player is in a specific orientation relative to another unit.
  parameters:
  - name: target
    description: A pointer to the Unit object that is being checked for position relative
      to the current unit. This parameter must not be null.
  - name: distance
    description: The maximum distance within which the target unit should be located
      behind the current unit. This value represents a radius from the current unit's
      position.
  - name: arc
    description: The angle in radians that defines the back arc of the current unit.
      This determines the range of angles where the target unit must be positioned
      to be considered behind the unit.
  returns: Returns true if the target unit is located behind the current unit within
    the specified distance and arc; otherwise returns false.
  examples:
  - title: Basic usage example
    code: "if (unit->isInBackInMap(targetUnit, 5.0f, M_PI / 2)) {\n    // Target is\
      \ behind within 5 yards and within 90 degree arc\n}"
    language: cpp
  notes: This method relies on the unit's facing direction and position to determine
    whether a target unit is behind it. It may be used in combat or movement logic
    for determining positioning, such as when checking if an enemy is behind cover
    or if a player is in a specific orientation relative to another unit.
  warnings: The method assumes that both units are in the same map and that the target
    unit is not null. If the target unit is null, it may result in undefined behavior
    or crashes. Also, this method does not account for obstacles or terrain that might
    block line of sight.
  related:
  - Unit::isInFrontInMap
  - Unit::isInFrontInMap
  - Unit::isInBackInMap
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:54:23.689610'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
