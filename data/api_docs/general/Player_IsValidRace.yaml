api:
  class: Player
  method: IsValidRace
  signature: bool Player::IsValidRace(uint8 Race)
documentation:
  brief: Determines whether the specified race is valid for player characters in World
    of Warcraft.
  description: The IsValidRace method checks if a given race ID is valid for character
    creation within the TrinityCore framework. This method verifies that the race
    parameter corresponds to an existing playable race in the game database, ensuring
    that players cannot select invalid or non-existent races when creating their characters.
    The function performs validation against the game's race database and returns
    true for valid races while false for invalid ones. This is particularly important
    for character creation systems where race selection must be validated before allowing
    character creation to proceed.
  parameters:
  - name: Race
    description: The race ID to validate, which should correspond to a valid playable
      race in the game database. Valid values include 1-11 for Alliance races and
      12-13 for Horde races. Values outside this range will return false.
  returns: Returns true if the specified race is valid for character creation, false
    otherwise. The method returns false for invalid race IDs or non-playable races.
  examples:
  - title: Basic Usage Example
    code: "Player* player = new Player();\nuint8 race = 1;\nbool isValid = player->IsValidRace(race);\n\
      if (isValid)\n{\n    // Proceed with character creation\n}"
    language: cpp
  - title: Complete Race Validation
    code: "Player* player = new Player();\nuint8 race = 12;\nbool isValid = player->IsValidRace(race);\n\
      if (isValid)\n{\n    // Character creation is allowed\n}\nelse\n{\n    // Invalid\
      \ race, prevent character creation\n}"
    language: cpp
  notes: This method is typically used during character creation process to validate
    race selection before allowing character creation to proceed. Implementation relies
    on database validation rather than runtime checks. Performance considerations
    are minimal as this method performs simple database lookups.
  warnings: This method should not be used for validating non-playable races or races
    that are not part of the standard game progression. Using invalid race IDs may
    cause unexpected behavior in character creation systems.
  related:
  - Player::IsValidClass
  - Player::IsValidFaction
  - Player::IsValidRace
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T15:35:18.948206'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
