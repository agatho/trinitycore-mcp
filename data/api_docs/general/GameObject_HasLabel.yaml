api:
  class: GameObject
  method: HasLabel
  signature: bool GameObject::HasLabel(int32 gameobjectLabel) const
documentation:
  brief: Determines whether a GameObject possesses a specific label.
  description: The HasLabel method checks if a GameObject has a particular label assigned
    to it. This functionality is commonly used in World of Warcraft's game object
    system to identify and categorize objects based on their labels, which can be
    useful for various gameplay mechanics such as quest objectives, event triggers,
    or custom scripting. The method returns true if the specified label exists on
    the GameObject, otherwise false. It is typically used in conjunction with other
    GameObject methods to manage object states or to implement conditional logic within
    scripts.
  parameters: []
  returns: Returns true if the GameObject has the specified label; otherwise false.
  examples:
  - title: Basic Usage Example
    code: "if (gameobject->HasLabel(12345)) {\n    // Do something\n}\n"
    language: cpp
  - title: Advanced Usage Example
    code: "GameObject* target = GetGameObject();\nif (target->HasLabel(1001)) {\n\
      \    // Perform action based on label\n}\n"
    language: cpp
  notes: This method is part of the GameObject's internal labeling system and may
    be used in conjunction with other methods like SetLabel or GetLabel. Performance
    considerations are minimal as this is a simple lookup operation, but it should
    be used judiciously in loops where performance matters.
  warnings: Be cautious when using labels that might conflict with other game objects
    or systems; ensure label uniqueness to avoid unintended behavior.
  related:
  - GameObject::GetLabel
  - GameObject::SetLabel
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:15:48.878026'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
