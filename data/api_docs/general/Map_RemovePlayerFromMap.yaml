api:
  class: Map
  method: RemovePlayerFromMap
  signature: void Map::RemovePlayerFromMap(Player * param0, bool param1)
documentation:
  brief: Removes a player from the map, updating internal tracking and cleaning up
    associated data.
  description: The RemovePlayerFromMap method is responsible for removing a Player
    object from the Map's internal tracking systems. This includes removing the player
    from the map's player list, clearing any references to the player within the map's
    data structures, and potentially triggering cleanup routines for player-related
    resources. The method ensures that the player is properly disassociated from the
    map context, which is essential when a player leaves a zone or changes maps. It
    also handles optional cleanup behavior based on the boolean parameter.
  parameters:
  - name: param0
    description: Pointer to the Player object that needs to be removed from the map.
      This must be a valid pointer to an existing player instance.
  - name: param1
    description: Boolean flag indicating whether additional cleanup operations should
      be performed. When true, extra cleanup steps may be executed; when false, only
      basic removal is done.
  returns: null
  examples:
  - title: Basic Player Removal
    code: 'Map* map = player->GetMap();

      map->RemovePlayerFromMap(player, false);'
    language: cpp
  - title: Player Removal with Cleanup
    code: 'Map* map = player->GetMap();

      map->RemovePlayerFromMap(player, true);'
    language: cpp
  notes: This method is typically called internally by the core game loop when a player
    changes zones or disconnects. It's important to ensure that the Player pointer
    passed is valid and that the player is actually on the map before calling this
    method. The boolean parameter controls whether additional cleanup steps are performed,
    such as removing player-owned objects or updating visibility lists.
  warnings: Calling this method with an invalid player pointer can lead to undefined
    behavior or crashes. Always verify that the player exists on the map before attempting
    removal. Additionally, ensure that no other systems are actively using the player
    object after calling this method, as it may invalidate references.
  related:
  - Map::AddPlayerToMap
  - Map::GetPlayers
  - Player::GetMap
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:59:02.749781'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
