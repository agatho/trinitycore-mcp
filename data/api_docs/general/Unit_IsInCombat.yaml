api:
  class: Unit
  method: IsInCombat
  signature: bool Unit::IsInCombat() const
documentation:
  brief: Determines whether the unit is currently in combat with an enemy.
  description: The IsInCombat method checks if a Unit object is actively engaged in
    combat with any hostile target. This method is commonly used to determine the
    current state of a unit's engagement, which is essential for various gameplay
    mechanics including AI behavior, movement restrictions, and combat-related actions.
    The method returns true when the unit has an active combat state, indicating that
    the unit is currently fighting or being attacked by enemies. It is typically used
    in conjunction with other combat-related methods to manage unit behavior during
    combat situations.
  parameters: []
  returns: Returns true if the unit is currently in combat with an enemy, false otherwise.
    The method will return false if the unit has no active combat state or if the
    unit is not engaged in combat with any hostile targets.
  examples:
  - title: Basic Combat Check
    code: "if (unit->IsInCombat()) {\n    // Unit is currently in combat\n    // Perform\
      \ combat-related actions\n}"
    language: cpp
  - title: Combat State Monitoring
    code: "Unit* target = unit->GetVictim();\nif (target && unit->IsInCombat()) {\n\
      \    // Unit is in combat with target\n    // Handle combat state properly\n\
      }"
    language: cpp
  notes: This method relies on the internal combat state tracking of the unit. It
    should be used carefully as it may not reflect immediate changes in combat status
    if the unit's combat state is updated asynchronously. Performance considerations
    include checking this method frequently during combat situations, as it may impact
    performance if used excessively.
  warnings: This method should not be used to determine if a unit is in combat with
    specific targets, as it only indicates general combat state. It does not distinguish
    between different types of combat or enemy relationships, and may return false
    positives in certain edge cases where combat is active but not properly tracked.
  related:
  - Unit::GetVictim
  - Unit::IsInCombat
  - Unit::SetInCombat
  - Unit::CombatState
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T12:02:55.926554'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
