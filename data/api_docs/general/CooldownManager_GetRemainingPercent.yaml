api:
  class: CooldownManager
  method: GetRemainingPercent
  signature: float CooldownManager::GetRemainingPercent(uint32 spellId) const
documentation:
  brief: Calculates and returns the remaining cooldown time as a percentage for the
    specified spell.
  description: The GetRemainingPercent method retrieves the current cooldown status
    of a given spell by calculating what percentage of its total cooldown time remains.
    This is useful for UI elements that display cooldown progress, such as spell bars
    or action buttons. The method takes a spell identifier and returns a float value
    between 0.0 and 100.0, where 0.0 indicates the spell is fully cooled down and
    100.0 indicates the spell is at the start of its cooldown period. If the spell
    has no active cooldown or does not exist in the manager's tracking, it will return
    0.0. This method does not modify any internal state and is safe for repeated calls
    during gameplay.
  parameters: []
  returns: A float value representing the percentage of remaining cooldown time for
    the specified spell. Returns 0.0 if the spell has no active cooldown or is not
    tracked, otherwise returns a value between 0.0 and 100.0 inclusive.
  examples:
  - title: Basic Usage Example
    code: "float remainingPercent = cooldownManager.GetRemainingPercent(12345);\n\
      if (remainingPercent > 0.0f)\n{\n    // Spell is on cooldown, update UI accordingly\n\
      \    std::cout << \"Spell cooldown: \" << remainingPercent << \"%\" << std::endl;\n\
      }"
    language: cpp
  - title: UI Update Example
    code: "void UpdateSpellBar(uint32 spellId)\n{\n    float percent = cooldownManager.GetRemainingPercent(spellId);\n\
      \    if (percent > 0.0f)\n    {\n        // Update progress bar to show remaining\
      \ cooldown\n        SetProgressBarValue(percent);\n    }\n    else\n    {\n\
      \        // Enable the spell button\n        EnableSpellButton();\n    }\n}"
    language: cpp
  notes: This method relies on the internal tracking of cooldowns within the CooldownManager.
    It assumes that all relevant cooldown data is properly initialized and maintained.
    The returned percentage value is calculated based on the current time and the
    spell's base cooldown duration, so it should be called frequently to provide accurate
    real-time updates.
  warnings: Be cautious when using this method in performance-critical sections of
    code as it may involve time calculations and internal lookups. Also, ensure that
    the spellId provided is valid and corresponds to an actual spell in the game's
    database to avoid unexpected behavior or incorrect results.
  related:
  - GetRemainingTime
  - IsOnCooldown
  - StartCooldown
  - ResetCooldown
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:42:58.766625'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
