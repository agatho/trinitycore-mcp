api:
  class: AuraEffect
  method: HandlePeriodicTriggerSpellAuraTick
  signature: void AuraEffect::HandlePeriodicTriggerSpellAuraTick(Unit * target, Unit
    * caster) const
documentation:
  brief: Triggers a spell effect when a periodic aura tick occurs, applying the spell's
    impact to the target unit.
  description: The HandlePeriodicTriggerSpellAuraTick method is responsible for executing
    the spell effect associated with a periodic aura tick. This method is invoked
    during the execution of periodic aura effects such as DoTs (Damage over Time)
    or HoTs (Heal over Time), where a spell is triggered at regular intervals. It
    ensures that the specified spell is applied to the target unit, potentially causing
    damage, healing, or other effects based on the aura's configuration. The method
    takes into account both the target and caster units for proper spell application
    and context handling.
  parameters:
  - name: target
    description: The Unit object that is affected by the periodic aura tick. This
      represents the unit receiving the spell effect.
  - name: caster
    description: The Unit object that cast the aura. This represents the source of
      the spell effect and may influence how the spell is applied.
  returns: null
  examples:
  - title: Basic usage in aura tick handler
    code: "void MyAuraEffect::HandlePeriodicTriggerSpellAuraTick(Unit* target, Unit*\
      \ caster) const {\n    if (!target || !caster)\n        return;\n    \n    //\
      \ Trigger spell effect\n    SpellInfo const* spellInfo = sSpellMgr->GetSpellInfo(12345);\n\
      \    if (spellInfo)\n        caster->CastSpell(target, spellInfo, true);\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    during periodic tick processing. Developers should ensure that the target and
    caster units are valid before calling this method to prevent crashes or undefined
    behavior.
  warnings: Improper handling of target or caster parameters can lead to null pointer
    dereferences. Ensure that both parameters are validated before use, especially
    in custom aura implementations.
  related:
  - AuraEffect::HandlePeriodicTick
  - AuraEffect::HandlePeriodicDummy
  - AuraEffect::ApplyAura
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:07:35.093978'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
