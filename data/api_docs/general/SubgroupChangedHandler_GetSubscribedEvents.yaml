api:
  class: SubgroupChangedHandler
  method: GetSubscribedEvents
  signature: int SubgroupChangedHandler::GetSubscribedEvents() const
documentation:
  brief: Returns the bitmask of events this handler is subscribed to for subgroup
    changes
  description: The GetSubscribedEvents method retrieves the event subscription mask
    for a SubgroupChangedHandler instance. This bitmask indicates which specific subgroup
    change events the handler wishes to receive notifications for. In TrinityCore's
    event-driven architecture, handlers register for specific events by setting bits
    in a mask, and this method returns that configured mask. The returned value is
    typically used internally by the game system to determine which handlers should
    be notified when subgroup changes occur, such as when players join or leave a
    group, or when group leadership changes.
  parameters: []
  returns: An integer bitmask representing the subscribed events. Each bit in the
    integer corresponds to a specific subgroup change event type. Common values might
    include flags for player joining, player leaving, leader changes, or loot settings
    updates within a subgroup.
  examples:
  - title: Retrieve subscribed events mask
    code: "SubgroupChangedHandler* handler = new SubgroupChangedHandler();\nint subscribedEvents\
      \ = handler->GetSubscribedEvents();\n// Use the bitmask to determine which events\
      \ are handled\nif (subscribedEvents & SUBGROUP_EVENT_PLAYER_JOINED)\n{\n   \
      \ // Handle player join event\n}"
    language: cpp
  notes: This method is typically called during event system initialization or when
    the handler needs to verify its subscription status. The bitmask format follows
    standard TrinityCore event handling conventions where each bit represents a unique
    event type. The implementation should be thread-safe as it's likely accessed from
    multiple threads during event processing.
  warnings: The returned integer value should not be modified directly, as it represents
    a configuration state. Modifying the bitmask externally could lead to inconsistent
    event handling behavior and unexpected results in group management systems.
  related:
  - SetSubscribedEvents
  - HandleSubgroupChanged
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T05:39:36.041002'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
