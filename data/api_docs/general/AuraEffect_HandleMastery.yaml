api:
  class: AuraEffect
  method: HandleMastery
  signature: void AuraEffect::HandleMastery(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes mastery effect from the target based on aura application
    state
  description: The HandleMastery method manages the application and removal of mastery
    effects associated with an aura. Mastery is a passive ability that increases the
    effectiveness of certain spells or abilities. This method is invoked during aura
    application or removal events, adjusting the target's mastery statistics accordingly.
    The method takes into account the aura application state, mode flags, and whether
    the effect is being applied or removed to properly modify the target's mastery
    attributes.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. Contains information about which aura is affecting the target.
  - name: mode
    description: Mode flag indicating the context of the aura application. Used to
      determine how the mastery effect should be handled during application/removal.
  - name: apply
    description: Boolean flag indicating whether the mastery effect is being applied
      (true) or removed (false) from the target.
  returns: null
  examples:
  - title: Basic mastery aura application
    code: "void ApplyMasteryAura(Unit* target, AuraType type)\n{\n    if (AuraEffect*\
      \ auraEff = target->GetAuraEffect(type, 0))\n    {\n        auraEff->HandleMastery(nullptr,\
      \ 0, true);\n    }\n}"
    language: cpp
  - title: Removing mastery effect from target
    code: "void RemoveMasteryAura(Unit* target)\n{\n    if (AuraEffect* auraEff =\
      \ target->GetAuraEffect(SPELL_AURA_MASTERY, 0))\n    {\n        auraEff->HandleMastery(nullptr,\
      \ 1, false);\n    }\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system.
    Developers should not directly invoke this method unless implementing custom aura
    handling logic. The method modifies player statistics and may affect combat calculations.
  warnings: Incorrect usage of the mode parameter can lead to unexpected mastery stat
    modifications. Always ensure proper aura application context when calling this
    method.
  related:
  - AuraEffect::HandleEffect
  - AuraEffect::ApplyEffect
  - AuraEffect::RemoveEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:46:30.547347'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
