api:
  class: Battleground
  method: GetPlayersSize
  signature: int Battleground::GetPlayersSize() const
documentation:
  brief: Returns the total number of players currently participating in the battleground.
  description: The GetPlayersSize method retrieves the count of all players currently
    present in the battleground instance. This includes both teams and accounts for
    any players who may have joined or left during the match. The value returned is
    an integer representing the current player population, which can be used to determine
    if the battleground has reached its minimum or maximum capacity. This method is
    commonly used in battleground logic to enforce team balance, check for sufficient
    players to start a match, or manage player queues.
  parameters: []
  returns: An integer value representing the total number of players currently participating
    in the battleground instance. Returns 0 if no players are present.
  examples:
  - title: Check if battleground has minimum players
    code: "if (bg->GetPlayersSize() >= bg->GetMinPlayersPerTeam() * 2)\n{\n    //\
      \ Start the battleground\n    bg->StartBattleground();\n}"
    language: cpp
  - title: Monitor player count during match
    code: "void UpdateBattlegroundStatus(Battleground* bg)\n{\n    int playerCount\
      \ = bg->GetPlayersSize();\n    if (playerCount < 2)\n    {\n        // End the\
      \ battleground early\n        bg->Reset();\n    }\n}"
    language: cpp
  notes: This method provides a real-time count of players in the battleground and
    is updated dynamically as players join or leave. The value returned does not include
    spectators or non-participating NPCs. This method is thread-safe and can be safely
    called from any context where the battleground object is accessible.
  warnings: Be aware that the player count may change rapidly during active gameplay,
    so calling this method in a tight loop could lead to performance issues. Additionally,
    this method does not distinguish between different teams or roles; it simply returns
    the total number of players.
  related:
  - GetPlayerByGUID
  - GetPlayers
  - AddPlayer
  - RemovePlayer
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T17:10:37.077912'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
