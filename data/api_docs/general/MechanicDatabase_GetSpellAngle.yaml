api:
  class: MechanicDatabase
  method: GetSpellAngle
  signature: float MechanicDatabase::GetSpellAngle(uint32 spellId) const
documentation:
  brief: Retrieves the angle associated with a specified spell from the mechanic database.
  description: The GetSpellAngle method retrieves the angular parameter for a given
    spell ID from the mechanic database. This value typically represents the directional
    spread or angle of effect for spells that have a specific angular range, such
    as cone attacks or area-of-effect spells with directional components. The method
    performs a lookup in an internal database structure that maps spell identifiers
    to their corresponding angular parameters. It is commonly used during spell execution
    to determine how wide or narrow the spell's area of effect should be in terms
    of degrees or radians.
  parameters: []
  returns: Returns a float value representing the angle associated with the specified
    spell ID. This value typically represents the angular extent (in degrees) of the
    spell's effect area, such as the width of a cone or the spread of a directional
    blast. Returns 0.0f if no angle data is found for the given spell ID.
  examples:
  - title: Retrieve Angle for a Spell
    code: "float angle = mechanicDatabase.GetSpellAngle(12345);\nif (angle > 0.0f)\n\
      {\n    // Use the angle to calculate cone direction or effect area\n    std::cout\
      \ << \"Spell angle: \" << angle << \" degrees\" << std::endl;\n}"
    language: cpp
  notes: This method assumes that spell angle data is pre-loaded in the mechanic database
    and indexed by spell ID. The internal implementation likely uses a map or lookup
    table for efficient retrieval. Performance is generally O(1) for valid spell IDs,
    but may involve a database lookup if not cached.
  warnings: Ensure that the spell ID passed to this method corresponds to an actual
    spell in the game database, otherwise the return value will be 0.0f which might
    be misinterpreted as a valid zero-degree angle. This could lead to incorrect spell
    behavior if not properly validated.
  related:
  - GetSpellInfo
  - GetSpellRange
  - GetSpellDuration
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:34:23.073490'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
