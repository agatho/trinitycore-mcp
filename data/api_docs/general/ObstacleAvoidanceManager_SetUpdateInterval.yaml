api:
  class: ObstacleAvoidanceManager
  method: SetUpdateInterval
  signature: void ObstacleAvoidanceManager::SetUpdateInterval(uint32 interval)
documentation:
  brief: Sets the update interval for obstacle avoidance calculations in milliseconds.
  description: The SetUpdateInterval method configures how frequently the ObstacleAvoidanceManager
    performs obstacle detection and path adjustment calculations. This interval determines
    the frequency at which the AI evaluates potential obstacles in the unit's movement
    path and adjusts its behavior accordingly. The update interval is crucial for
    balancing performance and responsiveness in NPC movement, particularly in complex
    environments with many static or dynamic obstacles. A smaller interval provides
    more responsive avoidance but increases CPU usage, while a larger interval reduces
    performance impact but may result in less smooth movement.
  parameters:
  - name: interval
    description: The update interval in milliseconds. Valid values are typically between
      50-500ms for optimal performance and responsiveness. Values below 10ms may cause
      excessive CPU usage, while values above 1000ms may result in noticeable lag
      in obstacle avoidance.
  returns: null
  examples:
  - title: Basic Usage
    code: "ObstacleAvoidanceManager* manager = unit->GetMotionMaster()->GetMotionByType(MOTION_TYPE_OBSTACLE_AVOIDANCE);\n\
      if (manager)\n{\n    manager->SetUpdateInterval(100); // Update every 100ms\n\
      }"
    language: cpp
  - title: Performance Tuning
    code: "ObstacleAvoidanceManager* manager = unit->GetMotionMaster()->GetMotionByType(MOTION_TYPE_OBSTACLE_AVOIDANCE);\n\
      if (manager)\n{\n    // For high-performance scenarios with many NPCs\n    manager->SetUpdateInterval(200);\
      \ \n    \n    // For critical pathfinding scenarios\n    // manager->SetUpdateInterval(50);\n\
      }"
    language: cpp
  notes: This method directly affects the AI's movement behavior and should be used
    carefully in performance-critical scenarios. The interval setting is applied immediately
    to the active obstacle avoidance manager, but may not take effect until the next
    update cycle. For optimal results, set this value during initialization or when
    transitioning between different movement contexts.
  warnings: Setting very small intervals (less than 50ms) can cause significant performance
    degradation in high-density areas with many moving units. Setting intervals too
    large (over 1000ms) may result in units appearing to 'teleport' around obstacles
    or fail to react to dynamic changes in the environment.
  related:
  - GetUpdateInterval
  - EnableObstacleAvoidance
  - DisableObstacleAvoidance
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T21:19:31.983575'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
