api:
  class: BotPriorityManager
  method: GetBotCountByPriority
  signature: uint32 BotPriorityManager::GetBotCountByPriority(BotPriority priority)
    const
documentation:
  brief: Returns the total count of bots assigned to a specific priority level.
  description: The GetBotCountByPriority method retrieves the number of bots currently
    assigned to a given priority level within the bot management system. This method
    is used to monitor and manage bot distribution across different priority tiers,
    which can affect how bots are processed, updated, or utilized in various game
    systems such as questing, combat, or resource allocation. The method operates
    on a read-only basis and does not modify any internal state. It assumes that the
    BotPriority enum values are valid and that the internal tracking of bot priorities
    is consistent.
  parameters: []
  returns: A uint32 value representing the total number of bots assigned to the specified
    priority level. Returns zero if no bots are assigned to that priority or if an
    invalid priority is provided.
  examples:
  - title: Get bot count for high priority
    code: "uint32 highPriorityCount = botPriorityManager->GetBotCountByPriority(BotPriority::HIGH);\n\
      if (highPriorityCount > 0)\n{\n    std::cout << \"There are \" << highPriorityCount\
      \ << \" high-priority bots active.\" << std::endl;\n}"
    language: cpp
  notes: This method performs a lookup operation based on an internal map or list
    of bot priorities. The performance is expected to be O(1) if using a hash-based
    container, or O(n) in worst-case scenarios with linear search. Ensure that the
    BotPriority enum values are properly initialized and consistent across all bot
    instances.
  warnings: null
  related:
  - GetBotCountByPriority
  - SetBotPriority
  - GetAllBotCounts
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:56:47.064783'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
