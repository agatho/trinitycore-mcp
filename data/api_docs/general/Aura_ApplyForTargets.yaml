api:
  class: Aura
  method: ApplyForTargets
  signature: void Aura::ApplyForTargets()
documentation:
  brief: Applies the aura effect to all target units associated with the aura.
  description: The ApplyForTargets method is responsible for applying the aura's effects
    to all currently valid targets. This method iterates through the aura's target
    list and invokes the appropriate application logic for each target, ensuring that
    the aura's visual effects, stat modifications, and other game mechanics are properly
    activated for each affected unit. The method typically called internally by the
    aura system during aura application or reapplication events, and it ensures that
    all targets receive consistent and synchronized aura effects. This process may
    involve updating unit states, modifying attributes, triggering spell effects,
    or applying debuffs/ buffs depending on the aura type.
  parameters: []
  returns: null
  examples:
  - title: Basic Aura Application
    code: "Aura* aura = player->GetAura(12345);\nif (aura)\n{\n    aura->ApplyForTargets();\n\
      }"
    language: cpp
  notes: This method should only be called when the aura is in an active state and
    has valid targets. It's typically invoked automatically by the TrinityCore aura
    system during aura activation or refresh cycles. The method may perform multiple
    iterations over target lists, so performance considerations are important for
    auras affecting many units simultaneously.
  warnings: Calling this method directly on inactive or invalid auras may result in
    undefined behavior or crashes. Ensure that the aura object is valid and has targets
    before invoking this method. Avoid calling this method from within target iteration
    loops to prevent potential infinite recursion or modification during enumeration.
  related:
  - Aura::RemoveTarget
  - Aura::AddTarget
  - Aura::HasTarget
  - Aura::GetTargets
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:20:46.879506'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
