api:
  class: LineOfSightManager
  method: GetMetrics
  signature: const LoSMetrics & LineOfSightManager::GetMetrics() const
documentation:
  brief: Returns the line-of-sight metrics collected by the LineOfSightManager instance.
  description: The GetMetrics method provides access to performance and statistical
    data gathered during line-of-sight calculations performed by the LineOfSightManager.
    This includes timing information, hit counts, and other relevant metrics that
    help monitor and optimize the efficiency of visibility checks in the game world.
    The returned LoSMetrics object is read-only and reflects the state of metrics
    at the time of the call. This method is typically used for debugging, performance
    analysis, or monitoring the behavior of the line-of-sight system during runtime.
  parameters: []
  returns: A constant reference to a LoSMetrics object containing collected statistics
    and timing data from line-of-sight computations performed by this manager instance.
  examples:
  - title: Accessing Line-of-Sight Metrics
    code: 'LineOfSightManager* losManager = ...;

      const LoSMetrics& metrics = losManager->GetMetrics();

      std::cout << "Total rays cast: " << metrics.raysCast << std::endl;

      std::cout << "Average time per ray: " << metrics.avgRayTime.count() << " ms"
      << std::endl;'
    language: cpp
  notes: The returned reference is valid only until the next call to a mutating method
    on LineOfSightManager or until the manager instance is destroyed. The metrics
    are updated incrementally during line-of-sight operations and may not reflect
    real-time values if the system is under heavy load.
  warnings: null
  related:
  - LineOfSightManager::UpdateMetrics
  - LineOfSightManager::ResetMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T11:09:37.632501'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
