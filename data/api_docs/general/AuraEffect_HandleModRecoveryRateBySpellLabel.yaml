api:
  class: AuraEffect
  method: HandleModRecoveryRateBySpellLabel
  signature: void AuraEffect::HandleModRecoveryRateBySpellLabel(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the recovery rate of a spell label effect based on aura application
    state.
  description: The HandleModRecoveryRateBySpellLabel method adjusts the cooldown or
    recovery rate of spells associated with a specific spell label when an aura is
    applied or removed. This method is typically invoked during aura application or
    removal events to dynamically modify how quickly spells can be cast again. It
    operates on the aura's application context and modifies spell recovery mechanics
    in real-time, affecting gameplay balance and ability usage timing.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the specific aura instance
      and its target.
  - name: mode
    description: Specifies the mode of operation, typically indicating whether the
      effect is being applied (1) or removed (0). This parameter controls the direction
      of the recovery rate modification.
  - name: apply
    description: Boolean flag that determines if the effect should be applied (true)
      or removed (false). When true, the recovery rate is modified to increase casting
      speed; when false, it reverts back to normal.
  returns: null
  examples:
  - title: Applying Recovery Rate Modification
    code: "void MyAuraEffect::HandleModRecoveryRateBySpellLabel(const AuraApplication*\
      \ aurApp, uint8 mode, bool apply) const {\n    if (apply) {\n        // Increase\
      \ spell recovery rate by 20%\n        aurApp->GetTarget()->ModifySpellRecoveryRate(1.2f);\n\
      \    } else {\n        // Restore normal recovery rate\n        aurApp->GetTarget()->ResetSpellRecoveryRate();\n\
      \    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore and
    is used to modify spell recovery mechanics dynamically. It should only be called
    from within the aura application lifecycle, typically during OnApply or OnRemove
    callbacks.
  warnings: Improper use of this method may lead to inconsistent cooldown behavior
    or unexpected gameplay effects. Ensure that all recovery rate modifications are
    properly synchronized with the spell system and do not cause conflicts with existing
    cooldowns.
  related:
  - AuraEffect::HandleModSpellRecoveryRate
  - AuraApplication::GetTarget
  - Unit::ModifySpellRecoveryRate
  - Unit::ResetSpellRecoveryRate
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:25:12.934442'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
