api:
  class: ExampleManager
  method: HasPendingTasks
  signature: bool ExampleManager::HasPendingTasks() const
documentation:
  brief: Checks whether the ExampleManager has any pending tasks that require processing.
  description: The HasPendingTasks method determines if there are any outstanding
    tasks within the ExampleManager's task queue or processing pipeline. This method
    is typically used to evaluate whether further action is needed, such as triggering
    a background processing loop or determining if a task scheduler should continue
    running. The check is performed in a non-blocking manner and does not modify the
    internal state of the manager. It is commonly used in game loop integration to
    ensure that tasks are processed efficiently without unnecessary overhead.
  parameters: []
  returns: Returns true if there are pending tasks waiting for processing, false otherwise.
  examples:
  - title: Basic Usage in Game Loop
    code: "if (exampleManager.HasPendingTasks()) {\n    exampleManager.ProcessPendingTasks();\n\
      }"
    language: cpp
  - title: Integration with Task Scheduler
    code: "void GameLoop() {\n    while (running) {\n        if (exampleManager.HasPendingTasks())\
      \ {\n            exampleManager.ExecuteNextTask();\n        } else {\n     \
      \       std::this_thread::sleep_for(std::chrono::milliseconds(10));\n      \
      \  }\n    }\n}"
    language: cpp
  notes: This method performs a lightweight check on the internal task queue and is
    optimized for frequent calls. It does not lock or block, making it safe to call
    from multiple threads, though the underlying task state should be thread-safe.
  warnings: Do not assume that calling this method guarantees that tasks will remain
    pending after the check; concurrent modifications to the task queue may change
    the result between the time of the check and when tasks are actually processed.
  related:
  - ExampleManager::AddTask
  - ExampleManager::ProcessPendingTasks
  - ExampleManager::ExecuteNextTask
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:50:08.276803'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
