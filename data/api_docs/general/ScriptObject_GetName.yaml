api:
  class: ScriptObject
  method: GetName
  signature: const std::string & ScriptObject::GetName() const
documentation:
  brief: Returns the name of the script object instance
  description: The GetName method retrieves the human-readable name associated with
    a ScriptObject instance. In TrinityCore's scripting system, this name typically
    corresponds to the unique identifier or label used to register and reference the
    script within the game world. This method is commonly used for debugging purposes,
    logging, or identifying specific script instances during runtime. The returned
    string is immutable and represents the canonical name of the object as defined
    during its initialization or registration process.
  parameters: []
  returns: A constant reference to a std::string containing the name of the script
    object. This string is guaranteed to be valid and non-empty for properly initialized
    ScriptObject instances.
  examples:
  - title: Basic Usage
    code: 'ScriptObject* obj = ...;

      std::string name = obj->GetName();

      TC_LOG_INFO("scripts", "Script object name: {}", name);'
    language: cpp
  - title: Debugging Script Registration
    code: "void OnStartup() {\n    ScriptObject* script = sScriptMgr->GetScriptObject(\"\
      MyCustomScript\");\n    if (script) {\n        TC_LOG_DEBUG(\"scripts\", \"\
      Registered script: {}\", script->GetName());\n    }\n}"
    language: cpp
  notes: The method is implemented as a simple getter that returns a cached string
    value. It's safe to call multiple times and does not perform any expensive operations.
    The name is typically set during the script's registration process with the ScriptMgr.
  warnings: null
  related:
  - GetScriptId
  - IsScriptValid
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T06:46:03.250468'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
