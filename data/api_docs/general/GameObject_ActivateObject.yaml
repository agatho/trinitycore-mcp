api:
  class: GameObject
  method: ActivateObject
  signature: void GameObject::ActivateObject(GameObjectActions action, int32 param,
    int * spellCaster, uint32 spellId, int32 effectIndex)
documentation:
  brief: Activates a game object with specified action and parameters, potentially
    triggering associated scripts or effects.
  description: The ActivateObject method is used to trigger specific actions on a
    GameObject instance based on provided parameters. It allows for dynamic interaction
    with game objects such as doors, switches, chests, or other interactive elements
    by specifying an action type and related data. The method supports various GameObjectActions
    which determine how the object responds to activation, including triggering spells,
    changing states, or executing custom scripts. The spellCaster parameter can be
    used to specify the entity that initiated the activation, while spellId and effectIndex
    allow for detailed spell-based interactions. This method is essential for implementing
    complex game mechanics involving interactive world objects.
  parameters:
  - name: action
    description: The GameObjectActions enum value specifying the type of activation
      to perform. Common values include ACTIVATE, DEACTIVATE, USE, and others depending
      on object type.
  - name: param
    description: An integer parameter that provides additional context or configuration
      for the activation action. Its meaning varies based on the action type.
  - name: spellCaster
    description: Pointer to an integer representing the spell caster's identifier.
      Can be NULL if no specific caster is provided.
  - name: spellId
    description: The ID of the spell to be cast during activation, or 0 if no spell
      should be triggered.
  - name: effectIndex
    description: The index of the spell effect to apply, or -1 if all effects should
      be considered.
  returns: null
  examples:
  - title: Activate a door with a specific spell
    code: 'GameObject* door = ...;

      int32 casterId = 12345;

      int32 spellId = 123456;

      door->ActivateObject(ACTIVATE, 0, &casterId, spellId, -1);'
    language: cpp
  - title: Deactivate a switch object
    code: 'GameObject* switchObj = ...;

      switchObj->ActivateObject(DEACTIVATE, 1, nullptr, 0, -1);'
    language: cpp
  notes: This method is typically called internally by the game engine when an object
    is interacted with or when scripted events occur. It's important to ensure that
    the GameObject is properly initialized before calling this method. The spellCaster
    parameter should point to a valid identifier if spell effects are intended to
    be triggered.
  warnings: Calling ActivateObject on a null GameObject pointer will result in undefined
    behavior. Ensure all parameters are valid and compatible with the target object
    type. Incorrect use of spellId or effectIndex may cause unexpected spell behavior
    or crashes.
  related:
  - GameObject::SetGoState
  - GameObject::GetGoState
  - GameObject::Use
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T08:50:27.763654'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
