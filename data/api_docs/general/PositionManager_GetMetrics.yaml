api:
  class: PositionManager
  method: GetMetrics
  signature: const PositionMetrics & PositionManager::GetMetrics() const
documentation:
  brief: Returns the current position metrics for the managed object.
  description: The GetMetrics method retrieves a constant reference to the PositionMetrics
    structure that contains detailed information about the current position state.
    This includes coordinates, orientation, and other spatial data relevant to the
    object's location within the game world. The returned metrics are typically used
    for debugging, performance monitoring, or synchronization purposes across different
    subsystems. The method does not modify any internal state and is safe to call
    from multiple threads concurrently.
  parameters: []
  returns: A constant reference to a PositionMetrics object containing the current
    position data including x, y, z coordinates, orientation, and other spatial attributes.
  examples:
  - title: Basic Usage
    code: 'const PositionMetrics& metrics = positionManager.GetMetrics();

      std::cout << "X: " << metrics.x << ", Y: " << metrics.y << ", Z: " << metrics.z
      << std::endl;'
    language: cpp
  - title: Debugging Position Data
    code: "const PositionMetrics& metrics = positionManager.GetMetrics();\nif (metrics.IsValid())\
      \ {\n    LOG_DEBUG(\"world\", \"Position: X={} Y={} Z={} Orientation={}\", \n\
      \              metrics.x, metrics.y, metrics.z, metrics.orientation);\n}"
    language: cpp
  notes: The returned PositionMetrics reference is valid only until the next call
    to a non-const method on PositionManager. This method is designed to be lightweight
    and should not cause performance bottlenecks in normal usage.
  warnings: null
  related:
  - SetPosition
  - GetPosition
  - UpdateMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:17:21.430050'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
