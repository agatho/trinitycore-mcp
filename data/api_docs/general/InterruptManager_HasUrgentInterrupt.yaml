api:
  class: InterruptManager
  method: HasUrgentInterrupt
  signature: bool InterruptManager::HasUrgentInterrupt() const
documentation:
  brief: Checks if there is an urgent interrupt pending in the interrupt manager.
  description: The HasUrgentInterrupt method determines whether the InterruptManager
    currently holds a high-priority interrupt that requires immediate handling. This
    typically relates to combat situations where an interruption, such as a spell
    cast or ability usage, needs to be processed before other operations can proceed.
    The method is used internally by the core game loop to ensure timely processing
    of urgent interrupts and maintain proper game state consistency during active
    combat scenarios.
  parameters: []
  returns: Returns true if there is an urgent interrupt currently pending in the manager;
    otherwise returns false.
  examples:
  - title: Basic Usage Check
    code: "if (interruptManager.HasUrgentInterrupt()) {\n    // Handle urgent interrupt\
      \ logic here\n    interruptManager.ProcessUrgentInterrupt();\n}"
    language: cpp
  notes: This method is typically called during the game's main update loop to determine
    if any high-priority interrupts need immediate attention. It may be used in conjunction
    with other interrupt management functions to ensure proper sequencing and handling
    of combat events.
  warnings: null
  related:
  - InterruptManager::AddUrgentInterrupt
  - InterruptManager::RemoveUrgentInterrupt
  - InterruptManager::ProcessUrgentInterrupt
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:31:26.670007'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
