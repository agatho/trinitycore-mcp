api:
  class: DungeonScript
  method: GetPlayerRole
  signature: DungeonRole DungeonScript::GetPlayerRole(int * player) const
documentation:
  brief: Retrieves the dungeon role assigned to a player within the dungeon script
    context.
  description: The GetPlayerRole method determines and returns the specific role that
    a player has been assigned within a dungeon environment. This role typically defines
    the player's responsibilities, such as being a tank, healer, or damage dealer,
    which can influence gameplay mechanics like loot distribution, quest progression,
    and group coordination. The method takes a pointer to an integer representing
    the player and returns a DungeonRole enum value indicating their assigned role.
    It is commonly used in dungeon scripts to tailor behavior based on player roles,
    ensuring proper group dynamics and adherence to class-specific responsibilities.
  parameters:
  - name: player
    description: A pointer to an integer representing the player's unique identifier
      (GUID). This parameter must point to a valid player object within the dungeon
      context; otherwise, the behavior is undefined.
  returns: Returns a DungeonRole enum value indicating the assigned role of the specified
    player. Possible values may include DUNGEON_ROLE_TANK, DUNGEON_ROLE_HEALER, DUNGEON_ROLE_DAMAGE,
    or DUNGEON_ROLE_NONE if no role is assigned.
  examples:
  - title: Basic Usage Example
    code: "DungeonRole role = dungeonScript->GetPlayerRole(&playerGuid);\nif (role\
      \ == DUNGEON_ROLE_TANK)\n{\n    // Handle tank-specific logic\n}"
    language: cpp
  - title: Advanced Role-Based Logic
    code: "int playerGuid = 12345;\nDungeonRole role = dungeonScript->GetPlayerRole(&playerGuid);\n\
      switch (role)\n{\n    case DUNGEON_ROLE_TANK:\n        // Apply tank-specific\
      \ buffs or restrictions\n        break;\n    case DUNGEON_ROLE_HEALER:\n   \
      \     // Enable healing mechanics\n        break;\n    case DUNGEON_ROLE_DAMAGE:\n\
      \        // Activate damage dealer features\n        break;\n    default:\n\
      \        // Default behavior for unassigned roles\n        break;\n}"
    language: cpp
  notes: This method assumes that the player GUID passed is valid and corresponds
    to an active player within the dungeon instance. The implementation relies on
    internal tracking of player roles during dungeon initialization or assignment.
    It is recommended to verify the player's presence in the dungeon before calling
    this method to prevent undefined behavior.
  warnings: Passing an invalid or null pointer for the player parameter may result
    in undefined behavior or crashes. Ensure that the player GUID refers to a valid,
    active player within the current dungeon instance.
  related:
  - SetPlayerRole
  - GetDungeonDifficulty
  - IsPlayerInDungeon
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:11:37.693903'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
