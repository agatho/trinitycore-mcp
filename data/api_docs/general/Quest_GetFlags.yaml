api:
  class: Quest
  method: GetFlags
  signature: uint32 Quest::GetFlags() const
documentation:
  brief: Returns the flags associated with a quest object, determining its type and
    behavior within the game system.
  description: The GetFlags method retrieves the bitmask flags that define various
    properties and behaviors of a quest within the TrinityCore framework. These flags
    control how the quest is processed, displayed, and handled by the game engine,
    including aspects like quest completion conditions, reward types, and whether
    the quest is daily, repeatable, or requires specific player conditions. Understanding
    these flags is essential for developers working with quest systems to properly
    implement quest logic and ensure correct behavior in-game.
  parameters: []
  returns: Returns a uint32 value representing the bitmask flags associated with the
    quest. Each bit in the returned value corresponds to a specific flag that defines
    the quest's properties, such as whether it is daily, repeatable, or requires specific
    conditions for completion.
  examples:
  - title: Basic Usage Example
    code: "uint32 flags = quest->GetFlags();\nif (flags & QUEST_FLAGS daily)\n{\n\
      \    // Quest is a daily quest\n}"
    language: cpp
  - title: Advanced Usage Example
    code: "Quest* quest = sObjectAccessor->GetObjectByType<Quest>(player, questId);\n\
      uint32 flags = quest->GetFlags();\n// Check for multiple flags\nif (flags &\
      \ QUEST_FLAGS_REPEATABLE && flags & QUEST_FLAGS daily)\n{\n    // Quest is both\
      \ repeatable and daily\n}"
    language: cpp
  notes: This method is commonly used in conjunction with other quest-related methods
    to determine how a quest should be handled by the game engine. The flags returned
    are typically defined in the quest database table and may vary depending on the
    specific quest's configuration.
  warnings: Improper handling of quest flags can lead to incorrect quest behavior
    or failure to complete quests properly. Developers must ensure that flag checks
    align with expected quest behavior to avoid game-breaking issues.
  related:
  - GetQuestId
  - GetQuestLevel
  - GetQuestType
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T03:46:14.432142'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
