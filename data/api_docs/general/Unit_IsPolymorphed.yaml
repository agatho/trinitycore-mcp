api:
  class: Unit
  method: IsPolymorphed
  signature: bool Unit::IsPolymorphed() const
documentation:
  brief: Determines whether the unit is under a polymorph effect.
  description: This method checks if the unit is currently affected by a polymorph
    spell or similar mechanism that transforms the unit into a different form. It
    returns true if the unit is in a polymorphed state, false otherwise. The method
    is commonly used in game logic to determine if a unit's current form has been
    altered by a spell or effect. This functionality is essential for handling various
    game mechanics such as combat, movement, and interaction with other players or
    NPCs.
  parameters: []
  returns: Returns true if the unit is currently polymorphed, false otherwise. The
    method may return false if the unit is not in a polymorphed state or if the polymorph
    effect has expired.
  examples:
  - title: Basic usage example
    code: "if (unit->IsPolymorphed()) {\n    // Handle polymorphed unit\n}\n"
    language: cpp
  notes: 'Implementation details: This method likely checks internal state flags or
    spell effects applied to the unit. Performance considerations: The method should
    be fast and not involve complex calculations, as it may be called frequently during
    combat or movement logic.'
  warnings: This method does not account for all possible polymorph effects; some
    spells may have special handling or additional conditions that are not covered
    by this simple check. Care should be taken when using this in conjunction with
    other state checks to avoid incorrect assumptions about unit behavior.
  related:
  - Unit::IsInCombat
  - Unit::HasAura
  - Unit::GetTypeId
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T11:57:06.311604'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
