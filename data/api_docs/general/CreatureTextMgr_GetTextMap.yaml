api:
  class: CreatureTextMgr
  method: GetTextMap
  signature: const CreatureTextMap & CreatureTextMgr::GetTextMap() const
documentation:
  brief: Returns a constant reference to the internal map of creature texts managed
    by the CreatureTextMgr.
  description: The GetTextMap method provides access to the complete collection of
    creature text entries stored within the CreatureTextMgr. This map typically contains
    all dialogue and text responses associated with creatures in the game world, organized
    by creature entry IDs or other identifying keys. The returned reference allows
    read-only access to this data structure without copying the entire map, making
    it efficient for querying creature-specific text content during runtime. This
    method is commonly used by AI systems, quest handlers, or dialogue managers that
    need to retrieve predefined text responses for creatures.
  parameters: []
  returns: A constant reference to the internal CreatureTextMap data structure containing
    all registered creature texts. The map allows efficient lookup of text entries
    based on creature identifiers and other keys without exposing internal mutability.
  examples:
  - title: Accessing Creature Text Map for Dialogue
    code: "CreatureTextMgr& ctm = sCreatureTextMgr;\nconst CreatureTextMap& textMap\
      \ = ctm.GetTextMap();\n// Iterate through all creature texts\nfor (const auto&\
      \ entry : textMap)\n{\n    // Process each creature's text entries\n    uint32\
      \ creatureId = entry.first;\n    const CreatureTextGroup& group = entry.second;\n\
      \    // Use group for AI or quest logic\n}"
    language: cpp
  notes: The returned reference points to an internal data structure that should not
    be modified directly. Modifications to the text map should be done through dedicated
    manager methods rather than direct access. The map is typically populated at server
    startup from database entries and remains static during runtime.
  warnings: Do not attempt to modify the contents of the returned map reference as
    it may cause undefined behavior or data corruption. Always use proper manager
    APIs for adding or removing text entries. This method returns a constant reference,
    so any attempt to modify through this reference will result in compilation errors.
  related:
  - CreatureTextMgr::AddCreatureText
  - CreatureTextMgr::GetCreatureText
  - CreatureTextMgr::LoadCreatureTexts
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:32:05.197778'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
