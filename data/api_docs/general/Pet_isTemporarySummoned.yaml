api:
  class: Pet
  method: isTemporarySummoned
  signature: bool Pet::isTemporarySummoned() const
documentation:
  brief: Determines whether the pet is a temporary summoned creature.
  description: This method checks if the pet has been summoned temporarily, typically
    through spells like Summon Pet or similar mechanics. Temporary summoned pets are
    usually bound to a specific duration or condition and may behave differently from
    regular pets in terms of AI, ownership, and lifecycle management. The method returns
    true if the pet's summoning type indicates a temporary summon, and false otherwise.
    This is useful for determining how the pet should be handled in various game systems
    such as combat, loot distribution, or removal logic.
  parameters: []
  returns: A boolean value indicating whether the pet is a temporary summoned creature.
    Returns true if the pet was summoned temporarily (e.g., via a spell with a limited
    duration), and false if it's a permanent or regular summoned pet.
  examples:
  - title: Check if Pet is Temporary Summoned
    code: "if (pet->isTemporarySummoned()) {\n    // Handle temporary summon logic\n\
      \    sLog->outString(\"Pet is temporarily summoned.\");\n} else {\n    // Handle\
      \ regular pet logic\n    sLog->outString(\"Pet is not temporarily summoned.\"\
      );\n}"
    language: cpp
  notes: This method relies on internal flags or summoning state tracking within the
    Pet class. It's commonly used in conjunction with other pet-related systems to
    manage behavior differences between temporary and permanent summons.
  warnings: null
  related:
  - Pet::isSummoned
  - Pet::isControlled
  - Pet::GetSummonSpellId
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T21:05:44.777592'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
