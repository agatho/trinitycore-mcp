api:
  class: Unit
  method: IsAlwaysVisibleFor
  signature: bool Unit::IsAlwaysVisibleFor(const int * seer) const
documentation:
  brief: Determines whether a unit is always visible for a specific player.
  description: This method checks if a unit (such as a creature or player) is always
    visible to a particular player, regardless of distance or visibility conditions.
    It is commonly used in World of Warcraft's TrinityCore framework to determine
    visibility behavior for players in various scenarios including combat, questing,
    and world events. The method returns true when the unit is always visible for
    the specified player, false otherwise.
  parameters:
  - name: seer
    description: Pointer to the player object whose visibility is being checked. This
      parameter represents the observer or viewer who may or may not see the unit.
  returns: Returns true if the unit is always visible for the specified player, false
    otherwise.
  examples:
  - title: Basic Usage Example
    code: 'Unit* targetUnit = ...;

      Player* player = ...;

      bool isVisible = targetUnit->IsAlwaysVisibleFor(&player);'
    language: cpp
  notes: This method is typically used in conjunction with visibility checks and may
    be part of a larger system for determining unit visibility. Performance considerations
    are minimal as it involves simple pointer checks.
  warnings: Be cautious when using this method, as incorrect usage can lead to visibility
    issues or incorrect behavior in game mechanics. Ensure that the player pointer
    is valid before calling this method.
  related:
  - IsVisibleFor
  - IsInMap
  - IsVisible
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T03:05:48.021215'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
