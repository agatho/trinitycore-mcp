api:
  class: SpellMgr
  method: GetSpellEnchantProcEvent
  signature: const SpellEnchantProcEntry * SpellMgr::GetSpellEnchantProcEvent(uint32
    enchId) const
documentation:
  brief: Retrieves the spell enchant proc event entry associated with a given enchant
    identifier.
  description: The GetSpellEnchantProcEvent method fetches the SpellEnchantProcEntry
    structure that defines how a specific enchantment triggers spell procs. This is
    used internally by the TrinityCore server to determine the conditions and effects
    of enchantment-based spell triggers, such as those found on weapons or armor.
    The method takes an enchantment ID (enchId) as input and returns a pointer to
    the corresponding SpellEnchantProcEntry structure if it exists, or nullptr if
    no matching entry is found. This functionality is essential for implementing proper
    enchantment behavior in World of Warcraft-style gameplay mechanics.
  parameters: []
  returns: A const pointer to a SpellEnchantProcEntry structure that contains the
    proc event data for the specified enchantment ID, or nullptr if no such enchantment
    proc entry exists.
  examples:
  - title: Basic Usage Example
    code: "const SpellEnchantProcEntry* entry = sSpellMgr->GetSpellEnchantProcEvent(1234);\n\
      if (entry)\n{\n    // Process the enchant proc event data\n    printf(\"Proc\
      \ chance: %f\\n\", entry->procChance);\n}"
    language: cpp
  notes: This method performs a lookup in an internal data structure that maps enchantment
    IDs to their corresponding proc event definitions. The SpellEnchantProcEntry structure
    typically contains fields such as proc chance, spell ID, and trigger conditions.
    This lookup is optimized for performance but should be used judiciously in performance-critical
    code paths.
  warnings: null
  related:
  - GetSpellInfo
  - GetEnchantmentId
  - IsSpellHaveAura
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:18:46.028972'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
