api:
  class: PathfindingManager
  method: ~PathfindingManager
  signature: void PathfindingManager::~PathfindingManager()
documentation:
  brief: Destroys the PathfindingManager instance and cleans up associated resources.
  description: The destructor for the PathfindingManager class is responsible for
    releasing all memory and resources that were allocated during the object's lifetime.
    This includes cleaning up internal data structures used for pathfinding calculations,
    freeing any cached navigation meshes or waypoints, and ensuring no memory leaks
    occur when the manager is removed from memory. In the context of TrinityCore's
    World of Warcraft server implementation, this destructor ensures proper cleanup
    of AI pathfinding components that are essential for NPC movement and player navigation
    within the game world.
  parameters: []
  returns: void
  examples:
  - title: Automatic destruction of PathfindingManager
    code: "void Cleanup()\n{\n    // PathfindingManager instance goes out of scope\n\
      \    // Destructor is automatically called\n    PathfindingManager* manager\
      \ = new PathfindingManager();\n    // ... use manager ...\n    delete manager;\
      \ // Triggers destructor\n}"
    language: cpp
  notes: The destructor should not be called manually unless the object was allocated
    on the heap. In TrinityCore, PathfindingManager instances are typically managed
    by the server's core systems and destroyed automatically during shutdown or when
    the associated map is unloaded.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:31:53.194398'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
