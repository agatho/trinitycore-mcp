api:
  class: SpellScriptLoader
  method: SpellScriptLoader
  signature: void SpellScriptLoader::SpellScriptLoader(const char * name)
documentation:
  brief: Initializes a new spell script loader with the specified name for registering
    spell scripts in TrinityCore.
  description: The SpellScriptLoader constructor initializes a new instance of the
    SpellScriptLoader class, associating it with a specific spell script name. This
    is used internally by the TrinityCore framework to manage and register spell scripts
    during server initialization. The name parameter typically corresponds to the
    spell identifier or script name that will be linked to this loader instance. This
    method does not perform any complex operations but sets up the necessary internal
    state for spell script registration within the game's scripting system.
  parameters:
  - name: name
    description: A null-terminated character string representing the name of the spell
      script to be registered. This should match the spell identifier or script name
      used in the database or script definitions.
  returns: null
  examples:
  - title: Basic SpellScriptLoader Initialization
    code: "class MySpellScriptLoader : public SpellScriptLoader\n{\npublic:\n    MySpellScriptLoader()\
      \ : SpellScriptLoader(\"spell_my_custom_spell\") {}\n};"
    language: cpp
  notes: This constructor is typically called from derived class constructors when
    implementing custom spell scripts. It's important to ensure that the name parameter
    matches exactly with the spell entry in the database or script registry to avoid
    registration failures.
  warnings: null
  related: []
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:01:29.177134'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
