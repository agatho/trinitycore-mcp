api:
  class: ObjectMgr
  method: GetGameObjectTemplateAddon
  signature: const int * ObjectMgr::GetGameObjectTemplateAddon(uint32 entry) const
documentation:
  brief: Retrieves the addon data for a specified game object template entry.
  description: The GetGameObjectTemplateAddon method fetches addon-related data associated
    with a specific game object template identified by its entry ID. This data typically
    includes additional properties or configurations that extend the base game object
    definition, such as custom spawn conditions, interaction behaviors, or visual
    enhancements. The method returns a pointer to an array of integers representing
    these addon values, which may be used during runtime to modify how the game object
    behaves or appears in the world. It is commonly used by the core engine when initializing
    or updating game objects based on their template definitions.
  parameters: []
  returns: A const pointer to an array of integers containing addon data for the specified
    game object template entry. Returns nullptr if no addon data exists for the given
    entry.
  examples:
  - title: Retrieve and use addon data for a game object
    code: "const int* addonData = sObjectMgr->GetGameObjectTemplateAddon(12345);\n\
      if (addonData != nullptr)\n{\n    // Use addonData[0], addonData[1], etc. to\
      \ access addon properties\n    uint32 spawnCondition = static_cast<uint32>(addonData[0]);\n\
      \    // Process the addon data further\n}"
    language: cpp
  notes: This method accesses internal caches and should be used carefully in performance-critical
    sections. The returned pointer is valid only as long as the object manager's internal
    data structures remain unchanged, typically throughout server runtime. Ensure
    that any access to the returned data does not cause race conditions if multiple
    threads are involved.
  warnings: Do not modify the contents of the returned array directly; doing so may
    corrupt internal data structures. Always check for null before dereferencing the
    returned pointer to avoid segmentation faults.
  related:
  - GetGameObjectTemplate
  - GetObjectTemplate
  - GetGameEventInfo
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T09:41:05.822485'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
