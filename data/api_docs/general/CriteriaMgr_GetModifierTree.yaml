api:
  class: CriteriaMgr
  method: GetModifierTree
  signature: const ModifierTreeNode * CriteriaMgr::GetModifierTree(uint32 modifierTreeId)
    const
documentation:
  brief: Retrieves a modifier tree node by its unique identifier from the criteria
    manager's internal collection.
  description: The GetModifierTree method fetches a const ModifierTreeNode pointer
    corresponding to the specified modifierTreeId. This method is used within the
    TrinityCore framework to access predefined modifier trees that define how criteria
    are evaluated or modified during quest progression, achievement tracking, or other
    game mechanics involving conditional logic. The returned node represents a hierarchical
    structure of modifiers that can be applied to criteria checks. It's important
    to note that this method does not perform any validation on the input ID; it assumes
    the provided ID is valid and corresponds to an existing modifier tree in the system.
    If the ID is invalid or no modifier tree exists for that ID, the method may return
    a null pointer or undefined behavior depending on internal implementation details.
  parameters: []
  returns: A const pointer to a ModifierTreeNode object if a valid modifierTreeId
    is provided and corresponds to an existing tree in the system. Returns nullptr
    if the specified modifierTreeId does not exist or if there's an error during lookup.
  examples:
  - title: Basic Usage Example
    code: "const ModifierTreeNode* tree = criteriaMgr->GetModifierTree(12345);\nif\
      \ (tree != nullptr)\n{\n    // Process the modifier tree\n    // e.g., traverse\
      \ its children or apply modifiers\n}"
    language: cpp
  - title: Safe Access with Error Handling
    code: "uint32 treeId = 54321;\nconst ModifierTreeNode* node = criteriaMgr->GetModifierTree(treeId);\n\
      if (node == nullptr)\n{\n    // Handle invalid modifier tree ID\n    sLog->outError(LOG_FILTER_GENERAL,\
      \ \"Invalid modifier tree ID: %u\", treeId);\n}\nelse\n{\n    // Proceed with\
      \ processing the valid node\n}"
    language: cpp
  notes: This method is typically used internally by the criteria system to resolve
    modifier trees during quest or achievement evaluation. The returned pointer should
    be treated as read-only since it points to internal data structures managed by
    CriteriaMgr. Performance-wise, this lookup operation is expected to be fast due
    to internal indexing mechanisms, but repeated calls with different IDs may incur
    overhead if not cached appropriately.
  warnings: Do not modify the returned ModifierTreeNode object directly as it's part
    of the system's internal state. Accessing invalid modifierTreeId values can lead
    to undefined behavior or crashes. Ensure proper null checking before dereferencing
    the returned pointer.
  related:
  - GetCriteria
  - GetCriteriaTree
  - AddCriteria
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T15:26:27.988040'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
