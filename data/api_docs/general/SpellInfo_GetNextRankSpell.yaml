api:
  class: SpellInfo
  method: GetNextRankSpell
  signature: const SpellInfo * SpellInfo::GetNextRankSpell() const
documentation:
  brief: Returns the next higher rank spell in the spell chain for the current spell.
  description: This method retrieves the SpellInfo structure of the next higher rank
    spell in the spell chain, if one exists. It is commonly used in spell progression
    systems where spells are linked by rank, such as in the case of arcane spells
    or other multi-rank spell families. The method returns a pointer to the SpellInfo
    of the next rank spell, which can be null if no higher rank exists or if the current
    spell is already at the highest rank available in the game data. This functionality
    is essential for implementing spell advancement mechanics and spell chain logic
    within TrinityCore's spell system.
  parameters: []
  returns: Returns a pointer to the SpellInfo structure of the next rank spell, or
    nullptr if no higher rank exists. The returned pointer may be null when the current
    spell is already at its maximum rank or when the spell chain has been exhausted.
  examples:
  - title: Basic usage example
    code: "const SpellInfo* nextRank = spellInfo->GetNextRankSpell();\nif (nextRank)\n\
      {\n    // Process the next rank spell\n    std::cout << \"Next rank: \" << nextRank->Id\
      \ << std::endl;\n}\nelse\n{\n    // No higher rank available\n    std::cout\
      \ << \"No next rank available\" << std::endl;\n}"
    language: cpp
  notes: The method is typically used in conjunction with spell progression logic
    and should be used carefully when checking for valid spell chains. Implementation
    relies on the spell database structure and may not always return a valid next
    rank depending on how the spell chain was defined in the database.
  warnings: This method can return nullptr if the current spell is already at its
    maximum rank or if no higher rank exists in the spell chain. Care should be taken
    when using this method to avoid accessing invalid memory, especially when checking
    for null pointers before dereferencing.
  related:
  - GetSpellInfo
  - GetNextRankSpell
  - IsSpellRank
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:05:55.240249'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
