api:
  class: InterruptManager
  method: GetAssignedInterrupter
  signature: int InterruptManager::GetAssignedInterrupter(const InterruptTarget &
    target)
documentation:
  brief: Retrieves the identifier of the player who is currently assigned to interrupt
    the specified target.
  description: The GetAssignedInterrupter method returns the unique identifier (GUID)
    of the player who has been assigned to interrupt a specific target within the
    game world. This functionality is typically used in combat scenarios where multiple
    players may be attempting to interrupt an enemy's spell casting or ability usage.
    The method checks the internal state of the InterruptManager to determine which
    player holds the active interrupt assignment for the given target. It is commonly
    utilized by the TrinityCore framework to manage and coordinate interrupt mechanics
    between players and NPCs during combat encounters.
  parameters: []
  returns: Returns an integer representing the GUID of the player assigned to interrupt
    the target, or -1 if no interrupter is currently assigned.
  examples:
  - title: Basic Usage Example
    code: "InterruptTarget target;\ntarget.guid = 12345;\nint interrupterGuid = interruptManager.GetAssignedInterrupter(target);\n\
      if (interrupterGuid != -1)\n{\n    // A player is assigned to interrupt this\
      \ target\n    std::cout << \"Interrupter GUID: \" << interrupterGuid << std::endl;\n\
      }"
    language: cpp
  notes: This method assumes that the InterruptTarget structure contains valid data
    and that the InterruptManager has been properly initialized with interrupt assignments.
    The returned GUID can be used to retrieve player information from the game world
    context.
  warnings: Ensure that the target parameter is properly initialized before calling
    this method, as invalid or uninitialized targets may lead to unexpected behavior.
    This method should not be called during critical sections where interrupt assignments
    are being modified concurrently.
  related:
  - SetAssignedInterrupter
  - ClearAssignedInterrupter
  - IsInterrupterAssigned
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:37:55.663905'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
