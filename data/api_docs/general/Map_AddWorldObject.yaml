api:
  class: Map
  method: AddWorldObject
  signature: void Map::AddWorldObject(WorldObject * obj)
documentation:
  brief: Adds a WorldObject to the map, making it visible and interactive within the
    game world.
  description: The AddWorldObject method integrates a WorldObject into the map's internal
    data structures, ensuring that the object is properly managed and updated during
    server ticks. This includes adding the object to spatial partitioning systems
    for efficient collision detection and visibility calculations. The method is typically
    called when spawning creatures, game objects, or players onto a map. It performs
    necessary setup such as initializing object state, registering with the map's
    update system, and ensuring proper positioning within the world hierarchy. The
    object becomes fully functional and visible to players in the same map instance
    once this method completes successfully.
  parameters:
  - name: obj
    description: Pointer to the WorldObject to be added to the map. Must not be null.
      The object must be properly initialized before calling this method.
  returns: null
  examples:
  - title: Adding a Creature to a Map
    code: 'Creature* creature = new Creature();

      // Initialize creature properties...

      map->AddWorldObject(creature);'
    language: cpp
  - title: Adding a GameObject to a Map
    code: 'GameObject* go = new GameObject();

      // Initialize game object properties...

      go->SetMap(map);

      map->AddWorldObject(go);'
    language: cpp
  notes: This method is typically invoked internally by the core engine when objects
    are spawned or loaded. Developers should ensure that the WorldObject has been
    properly initialized before adding it to a map. The method may perform internal
    locking for thread safety in multi-threaded environments.
  warnings: Calling AddWorldObject with a null pointer will result in undefined behavior.
    Ensure that all required object initialization steps have been completed before
    calling this method. Improper use can lead to memory corruption or inconsistent
    game state.
  related:
  - RemoveWorldObject
  - GetWorldObject
  - HasWorldObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T11:14:19.039645'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
