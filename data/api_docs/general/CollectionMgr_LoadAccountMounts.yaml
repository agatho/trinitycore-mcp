api:
  class: CollectionMgr
  method: LoadAccountMounts
  signature: void CollectionMgr::LoadAccountMounts(int result)
documentation:
  brief: Loads account-mounted creatures and their associated data from the database
    into memory for use in the game world.
  description: The LoadAccountMounts method retrieves all mount records associated
    with player accounts from the database and populates internal collections within
    the CollectionMgr class. This method is typically invoked during server startup
    or when a player logs in to ensure that their collected mounts are available for
    display and usage. It processes the database results to construct in-memory representations
    of mounts, including their appearance, availability status, and any associated
    flags or requirements. The method handles the mapping between database entries
    and internal mount structures, ensuring that players can access their collection
    seamlessly during gameplay.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage During Server Initialization
    code: "void WorldSession::HandlePlayerLogin()\n{\n    // ... other login logic\
      \ ...\n    sCollectionMgr->LoadAccountMounts();\n    // ... continue with session\
      \ setup ...\n}"
    language: cpp
  notes: This method is usually called asynchronously or as part of a larger initialization
    sequence. It's important to ensure that the database connection is valid before
    calling this method, and that proper error handling is in place for cases where
    mount data might be corrupted or missing. The method may perform significant I/O
    operations depending on the number of players and mounts stored in the database.
  warnings: Improper handling of database errors during this load process could result
    in incomplete mount collections for players, leading to unexpected behavior when
    they attempt to use mounts. Additionally, if this method is called too frequently
    or without proper synchronization, it may cause performance degradation or race
    conditions in multi-threaded environments.
  related:
  - CollectionMgr::SaveAccountMounts
  - CollectionMgr::AddMountToAccount
  - CollectionMgr::HasMount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:25:37.303490'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
