api:
  class: ObjectMgr
  method: LoadPlayerInfo
  signature: void ObjectMgr::LoadPlayerInfo()
documentation:
  brief: Initializes and loads all player-related information from the database into
    memory.
  description: The LoadPlayerInfo method is responsible for loading essential player
    data from the database into the ObjectMgr's internal structures. This includes
    character information, race, class, and other static player attributes that are
    required for proper game functionality. The method typically executes during server
    startup or when the object manager needs to refresh its cached player data. It
    ensures that all players in the database are properly registered within the server's
    memory space, allowing for efficient lookup and access during gameplay operations.
  parameters: []
  returns: null
  examples:
  - title: Basic usage during server initialization
    code: "void World::OnServerInit()\n{\n    ObjectMgr::Instance()->LoadPlayerInfo();\n\
      \    // Player data is now loaded and available\n}"
    language: cpp
  notes: This method should only be called once during server initialization or when
    player data needs to be refreshed from the database. It performs a full load of
    all players, which can be resource-intensive on large servers with many characters.
    The method is typically invoked by the core server initialization process and
    should not be called manually in most cases.
  warnings: Calling LoadPlayerInfo multiple times without proper cleanup may result
    in duplicate entries or memory leaks. This method blocks execution until all player
    data is loaded, which could cause noticeable delays on servers with large player
    bases.
  related:
  - LoadAllData
  - GetPlayerInfo
  - ReloadPlayerInfo
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T23:07:06.311480'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
