api:
  class: CollectionMgr
  method: GetAccountToys
  signature: const ToyBoxContainer & CollectionMgr::GetAccountToys() const
documentation:
  brief: Returns a constant reference to the account's toy collection container.
  description: The GetAccountToys method retrieves the complete collection of toys
    owned by the account. This method provides access to the ToyBoxContainer which
    holds all unlocked toys for the player's account. The returned container is read-only,
    ensuring that modifications to the toy collection must be performed through dedicated
    setter methods or game mechanics. This method is typically used in conjunction
    with UI systems to display available toys or during gameplay logic to check toy
    ownership status.
  parameters: []
  returns: A constant reference to a ToyBoxContainer object containing all toys associated
    with the account. The container can be iterated over to access individual toy
    entries, but direct modification of its contents is not permitted through this
    interface.
  examples:
  - title: Accessing Account Toys for Display
    code: "const ToyBoxContainer& toys = collectionMgr->GetAccountToys();\nfor (const\
      \ auto& toy : toys)\n{\n    std::cout << \"Toy ID: \" << toy.first << \" - Name:\
      \ \" << toy.second << std::endl;\n}"
    language: cpp
  - title: Checking Toy Ownership
    code: "const ToyBoxContainer& toys = collectionMgr->GetAccountToys();\nuint32\
      \ toyId = 12345;\nif (toys.find(toyId) != toys.end())\n{\n    // Toy is owned\
      \ by the account\n    std::cout << \"Player owns toy ID: \" << toyId << std::endl;\n\
      }"
    language: cpp
  notes: The returned ToyBoxContainer reference remains valid only as long as the
    CollectionMgr instance exists. This method does not perform any lazy loading or
    database queries; it returns pre-loaded data from memory. The container is thread-safe
    for read operations, but modifications should be done through appropriate synchronization
    mechanisms.
  warnings: Do not attempt to modify the returned ToyBoxContainer directly, as it's
    a const reference. Any attempts to modify its contents will result in compilation
    errors. Be cautious when iterating over large toy collections, as this may impact
    performance in high-frequency scenarios.
  related:
  - SetAccountToys
  - AddAccountToy
  - RemoveAccountToy
  - HasAccountToy
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:12:06.719330'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
