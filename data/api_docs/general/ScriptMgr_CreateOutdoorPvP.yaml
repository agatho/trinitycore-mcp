api:
  class: ScriptMgr
  method: CreateOutdoorPvP
  signature: OutdoorPvP * ScriptMgr::CreateOutdoorPvP(uint32 scriptId, Map * map)
documentation:
  brief: Creates and returns a new OutdoorPvP instance for the specified script ID
    and map.
  description: The CreateOutdoorPvP method is responsible for instantiating a new
    OutdoorPvP object based on a given script identifier and map reference. This method
    is typically invoked during the initialization phase of outdoor PvP systems within
    the TrinityCore framework. It allows for dynamic creation of different types of
    outdoor PvP areas, such as those controlling territories like Wintergrasp or Silithus.
    The method relies on internal script registration to determine which specific
    OutdoorPvP subclass should be instantiated. This enables modders and developers
    to extend the game's PvP mechanics by implementing custom OutdoorPvP logic while
    maintaining compatibility with the core TrinityCore architecture.
  parameters:
  - name: scriptId
    description: Unique identifier for the outdoor PvP script to be created. This
      ID corresponds to registered scripts in the script registry and determines which
      specific OutdoorPvP implementation will be instantiated.
  - name: map
    description: Pointer to the Map object where the outdoor PvP area will be initialized.
      The map instance must be valid and already loaded for the method to succeed.
  returns: Returns a pointer to the newly created OutdoorPvP instance if successful,
    or nullptr if the script ID is invalid or the creation fails. The returned object
    can be used to manage the outdoor PvP area's behavior, events, and state.
  examples:
  - title: Basic Usage
    code: "OutdoorPvP* pvp = sScriptMgr->CreateOutdoorPvP(1234, map);\nif (pvp)\n\
      {\n    // Successfully created outdoor PvP area\n    // Add it to the map's\
      \ PvP system\n}"
    language: cpp
  - title: Error Handling
    code: "OutdoorPvP* pvp = sScriptMgr->CreateOutdoorPvP(9999, map);\nif (!pvp)\n\
      {\n    // Handle invalid script ID case\n    sLog->outError(LOG_FILTER_GENERAL,\
      \ \"Failed to create OutdoorPvP with script ID %u\", 9999);\n}\nelse\n{\n  \
      \  // Proceed with initialization\n}"
    language: cpp
  notes: This method is part of the TrinityCore's scripting system and is typically
    called during map loading or server startup. The script ID must correspond to
    a registered OutdoorPvP script in the database or script registry. Developers
    should ensure that the map parameter is valid and loaded before calling this method.
    The returned OutdoorPvP object must be properly managed and cleaned up when no
    longer needed.
  warnings: Calling this method with an invalid script ID or null map pointer will
    result in a nullptr return value. Always check for null returns before using the
    created OutdoorPvP instance. Improper handling of the returned pointer can lead
    to memory leaks or crashes if not managed correctly.
  related:
  - GetOutdoorPvP
  - RegisterOutdoorPvP
  - RemoveOutdoorPvP
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T20:37:08.782854'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
