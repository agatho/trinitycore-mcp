api:
  class: Unit
  method: GetCharmInfo
  signature: CharmInfo * Unit::GetCharmInfo()
documentation:
  brief: Returns the charm information object for the unit, allowing access to charm-related
    data and functionality.
  description: The GetCharmInfo method retrieves the CharmInfo object associated with
    a Unit, which contains information about the unit's charm status and related properties.
    This method is essential for accessing charm-specific data such as the charm's
    owner, summoned creature, or control state. The returned CharmInfo object provides
    access to various charm-related functionalities including tracking the charm's
    target, managing the charm's behavior, and handling the charm's relationship with
    its owner. It is commonly used in scenarios involving pet management, summoning
    mechanics, and character control systems.
  parameters: []
  returns: Returns a pointer to the CharmInfo object associated with this unit. If
    the unit is not currently charmed, or if no charm information exists, the method
    returns nullptr. The returned object can be used to access charm-related properties
    such as the charm's owner, target, and control status.
  examples:
  - title: Basic Usage Example
    code: "Unit* unit = new Unit();\nCharmInfo* charmInfo = unit->GetCharmInfo();\n\
      if (charmInfo != nullptr)\n{\n    // Access charm properties\n    Player* owner\
      \ = charmInfo->GetOwner();\n    Creature* summoned = charmInfo->GetSummoned();\n\
      }"
    language: cpp
  - title: Advanced Usage Example
    code: "Unit* unit = new Unit();\nCharmInfo* charmInfo = unit->GetCharmInfo();\n\
      if (charmInfo != nullptr)\n{\n    // Handle charm control\n    if (charmInfo->IsControlled())\n\
      \    {\n        // Manage charm behavior\n        charmInfo->SetControlled(true);\n\
      \    }\n}\nelse\n{\n    // Handle no charm case\n    // Do something else\n}"
    language: cpp
  notes: This method is typically used in conjunction with other charm-related methods
    like GetOwner(), GetSummoned, and GetControlled. Performance considerations include
    checking if the unit is charmed before calling this method to avoid unnecessary
    overhead. The method is thread-safe as long as the unit object itself is properly
    synchronized.
  warnings: The method may return nullptr for non-charmed units, so developers should
    always check for null before accessing charm properties. Improper handling of
    the returned CharmInfo object can lead to memory access violations or crashes.
    Avoid calling this method on units that are not charmed without proper validation.
  related:
  - GetOwner
  - GetSummoned
  - GetControlled
  - GetCharm
  - GetCharmer
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:24:43.927233'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
