api:
  class: PhasingHandler
  method: IsPersonalPhase
  signature: bool PhasingHandler::IsPersonalPhase(uint32 phaseId)
documentation:
  brief: Determines whether a specified phase ID represents a personal phase for the
    current player.
  description: The IsPersonalPhase method checks if a given phase ID is classified
    as a personal phase within the phasing system. In World of Warcraft's TrinityCore
    implementation, phases are used to control which areas and objects are visible
    to players based on quest progress, events, or other game mechanics. Personal
    phases are typically associated with individual player progress and may not be
    shared with other players in the same area. This method is commonly used by the
    core engine to determine visibility and interaction rules for various game elements
    such as NPCs, GameObjects, and world events.
  parameters:
  - name: phaseId
    description: The unique identifier of the phase to check. This value should correspond
      to a valid phase defined in the game's phase system, typically retrieved from
      phase definitions, quest data, or event triggers.
  returns: Returns true if the specified phase ID is classified as a personal phase;
    otherwise returns false. A personal phase usually means that this phase is specific
    to the player and not shared with others in the same zone.
  examples:
  - title: Basic Usage
    code: "if (PhasingHandler::IsPersonalPhase(12345))\n{\n    // Handle logic for\
      \ personal phase\n    sLog->outString(\"Phase 12345 is a personal phase.\");\n\
      }"
    language: cpp
  - title: Integration with Quest System
    code: "uint32 playerPhase = player->GetPhaseMask();\nif (PhasingHandler::IsPersonalPhase(playerPhase))\n\
      {\n    // Apply personal phase-specific logic\n    player->SendNotification(\"\
      You are in a personal phase.\");\n}"
    language: cpp
  notes: This method likely relies on internal phase definitions and may be optimized
    for performance by caching known personal phases. It is recommended to use this
    method when checking visibility or interaction rules that depend on player-specific
    phasing.
  warnings: null
  related:
  - GetPhaseMask
  - IsInPhase
  - UpdateVisibility
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T08:28:32.238250'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
