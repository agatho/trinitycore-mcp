api:
  class: GameEventMgr
  method: Update
  signature: uint32 GameEventMgr::Update()
documentation:
  brief: Updates and processes active game events, returning the number of events
    that were activated or deactivated.
  description: The Update method in GameEventMgr is responsible for managing the lifecycle
    of game events within the TrinityCore server. It iterates through all registered
    game events and checks their current state against the server's time and conditions.
    When an event's activation time has passed, it triggers the event start logic;
    when an event's end time has passed, it triggers the event stop logic. The method
    returns the number of events that were modified during this update cycle, which
    can be useful for logging or performance monitoring purposes. This method is typically
    called periodically by the server's main loop to ensure events are properly managed.
  parameters: []
  returns: Returns a uint32 value representing the count of game events that were
    activated or deactivated during this update cycle. A return value of zero indicates
    no events changed state, while a positive number indicates how many events were
    processed.
  examples:
  - title: Basic Usage in Server Update Loop
    code: "void WorldServer::Update()\n{\n    // ... other updates ...\n    uint32\
      \ eventCount = sGameEventMgr->Update();\n    if (eventCount > 0)\n    {\n  \
      \      sLog->outInfo(LOG_FILTER_SERVER, \"Processed %u game events\", eventCount);\n\
      \    }\n    // ... more updates ...\n}"
    language: cpp
  notes: This method is typically invoked from the main server update loop and should
    not be called directly by other systems unless specifically required. The method
    performs time-based checks against the server's current time, so it's important
    that the server clock is accurate for proper event management.
  warnings: Calling this method too frequently can cause performance issues if there
    are many active events. It's recommended to only call this method at appropriate
    intervals rather than every tick. Additionally, modifying game events during an
    update cycle may lead to unexpected behavior or race conditions.
  related:
  - GetActiveEventList
  - IsActiveEvent
  - StartEvent
  - StopEvent
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T01:04:21.843316'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
