api:
  class: ZoneScript
  method: OnFlagStateChange
  signature: void ZoneScript::OnFlagStateChange(GameObject * flagInBase, FlagState
    oldValue, FlagState newValue, Player * player)
documentation:
  brief: Handles the event when a flag's state changes in a zone script.
  description: The OnFlagStateChange method is invoked when a game object representing
    a flag transitions between different states within a zone script context. This
    typically occurs in battlegrounds or similar game modes where flags are captured,
    returned, or dropped. The method provides the old and new flag states along with
    the player who initiated the change, allowing custom logic to be executed based
    on these events. It is part of the ZoneScript class which manages game object
    behaviors and interactions within specific zones.
  parameters:
  - name: flagInBase
    description: Pointer to the GameObject representing the flag that has changed
      state. This can be null if the flag is not in its base location.
  - name: oldValue
    description: The previous state of the flag, represented as a FlagState enum value
      indicating whether it was at base, being carried, or captured.
  - name: newValue
    description: The new state of the flag after the change, also represented as a
      FlagState enum value.
  - name: player
    description: Pointer to the Player object who caused the flag state change. May
      be null if the change was not initiated by a player (e.g., automatic reset).
  returns: void
  examples:
  - title: Basic Implementation Example
    code: "class MyZoneScript : public ZoneScript {\npublic:\n    void OnFlagStateChange(GameObject*\
      \ flagInBase, FlagState oldValue, FlagState newValue, Player* player) override\
      \ {\n        if (newValue == FLAG_STATE_CAPTURED && player) {\n            ChatHandler(player->GetSession()).SendSysMessage(\"\
      You captured the flag!\");\n        }\n    }\n};"
    language: cpp
  notes: This method is called from within the core game loop and should avoid heavy
    computations or blocking operations to prevent performance degradation. The flagInBase
    parameter may be null if the flag is not currently in its base location, such
    as when it's being carried by a player.
  warnings: Ensure that any modifications made to the flag state or player data within
    this method do not cause race conditions or inconsistencies with the game's authoritative
    state. Avoid calling methods that might recursively trigger additional flag state
    changes.
  related:
  - OnFlagCapture
  - OnFlagReturn
  - OnFlagDrop
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:00:32.365709'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
