api:
  class: ResourceManager
  method: GetResourceIn
  signature: uint32 ResourceManager::GetResourceIn(ResourceType type, uint32 timeMs)
documentation:
  brief: Calculates and returns the amount of resource that will be generated within
    a specified time period for a given resource type.
  description: The GetResourceIn method determines how much of a specific resource
    type will be generated over a given time interval (in milliseconds). This method
    is typically used in World of Warcraft's TrinityCore to manage resource generation
    systems such as mana, rage, energy, or focus regeneration. It takes into account
    the current state of the resource and any modifiers that may affect generation
    rates. The method does not modify the actual resource values but rather computes
    what would be generated under normal conditions. This functionality is essential
    for calculating regen rates in combat scenarios and UI displays showing expected
    resource recovery.
  parameters:
  - name: type
    description: The ResourceType enum value specifying which type of resource to
      calculate generation for (e.g., MANA, RAGE, ENERGY, FOCUS)
  - name: timeMs
    description: The time interval in milliseconds over which to calculate resource
      generation
  returns: Returns a uint32 value representing the amount of resource that would be
    generated within the specified time period. The value represents the actual quantity
    of resource units (not percentages or multipliers).
  examples:
  - title: Calculate mana regeneration over 5 seconds
    code: uint32 manaRegen = resourceManager->GetResourceIn(ResourceType::MANA, 5000);
      // Calculates mana generated in 5 seconds
    language: cpp
  - title: Determine energy regeneration for combat calculation
    code: "uint32 energyRegen = resourceManager->GetResourceIn(ResourceType::ENERGY,\
      \ 1000); // Calculates energy generated in 1 second\nif (energyRegen > 0)\n\
      {\n    // Apply regeneration to player's energy\n    player->AddEnergy(energyRegen);\n\
      }"
    language: cpp
  notes: This method is typically used in conjunction with resource update systems
    and should be called before applying any modifications to the actual resource
    values. The implementation may consider various factors such as player class,
    talents, buffs, debuffs, and environmental effects that influence resource generation
    rates.
  warnings: The returned value represents only theoretical generation under normal
    conditions. Actual resource generation may vary due to active effects, modifiers,
    or game state changes occurring during the time period. This method should not
    be used for real-time resource updates but rather for calculations and UI display
    purposes.
  related:
  - GetResource
  - SetResource
  - AddResource
  - UpdateResource
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T07:16:25.910546'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
