api:
  class: SmartScript
  method: OnInitialize
  signature: void SmartScript::OnInitialize(WorldObject * obj, const AreaTriggerEntry
    * at, const SceneTemplate * scene, const Quest * qst, uint32 evnt)
documentation:
  brief: Initializes the SmartScript with provided context objects for event handling.
  description: The OnInitialize method prepares a SmartScript instance for execution
    by setting up its internal state using the provided WorldObject, AreaTriggerEntry,
    SceneTemplate, Quest, and event ID. This method is typically called during script
    activation or when a smart event needs to be triggered with specific contextual
    data. It ensures that all necessary references are correctly assigned before any
    script actions are executed. The method does not return any value but modifies
    the internal state of the SmartScript object to reflect the current context.
  parameters:
  - name: obj
    description: Pointer to the WorldObject that this SmartScript is associated with.
      This can be a creature, game object, or player depending on where the script
      is applied.
  - name: at
    description: Pointer to the AreaTriggerEntry that defines the area trigger context
      for this script execution.
  - name: scene
    description: Pointer to the SceneTemplate that provides scene-related data and
      configuration for the script.
  - name: qst
    description: Pointer to the Quest object representing the quest context in which
      this script is running.
  - name: evnt
    description: The event ID that triggered this initialization, used to determine
      which actions should be executed.
  returns: null
  examples:
  - title: Basic SmartScript Initialization
    code: 'SmartScript* script = new SmartScript();

      WorldObject* target = player;

      AreaTriggerEntry* areaTrigger = sAreaTriggerStore.LookupEntry(1234);

      SceneTemplate* scene = sSceneMgr.GetSceneTemplate(5678);

      Quest* quest = sObjectMgr.GetQuestTemplate(9012);

      script->OnInitialize(target, areaTrigger, scene, quest, SMART_EVENT_UPDATE_INFORM);

      // Script is now initialized with context'
    language: cpp
  notes: This method should only be called once per SmartScript instance during its
    lifecycle. It's important to ensure that all pointers passed are valid and not
    null before calling this function. The initialization process sets up internal
    references that are used throughout the script execution cycle.
  warnings: Passing invalid or null pointers for any of the parameters may lead to
    undefined behavior or crashes. Ensure that all objects referenced by the pointers
    are alive and valid during the lifetime of the SmartScript instance.
  related:
  - SmartScript::OnReset
  - SmartScript::OnUpdate
  - SmartScript::ExecuteEvent
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T18:03:18.704953'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
