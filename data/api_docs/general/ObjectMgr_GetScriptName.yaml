api:
  class: ObjectMgr
  method: GetScriptName
  signature: const std::string & ObjectMgr::GetScriptName(uint32 id) const
documentation:
  brief: Retrieves the script name associated with a given identifier from the object
    manager's script registry.
  description: The GetScriptName method retrieves the script name string that corresponds
    to a specified numeric identifier within the ObjectMgr's internal script mapping.
    This is commonly used in TrinityCore to associate game objects, creatures, or
    other entities with their corresponding scripted behaviors defined in the database.
    The method performs a lookup in an internal map structure and returns a constant
    reference to the stored string. It is typically called during server initialization
    or when dynamically loading scripts for game entities. The identifier usually
    maps to entries in the creature_template, gameobject_template, or similar tables
    that define which script should be attached to specific objects.
  parameters: []
  returns: A constant reference to a std::string containing the script name associated
    with the given identifier. If no script is registered for the provided ID, an
    empty string may be returned depending on implementation details.
  examples:
  - title: Retrieve Script Name for Creature
    code: "uint32 creatureEntry = 12345;\nconst std::string& scriptName = sObjectMgr->GetScriptName(creatureEntry);\n\
      if (!scriptName.empty())\n{\n    printf(\"Creature %u has script: %s\\n\", creatureEntry,\
      \ scriptName.c_str());\n}"
    language: cpp
  notes: This method is part of the ObjectMgr singleton and assumes that scripts have
    been properly loaded into memory during server startup. The internal map structure
    used for lookups may be thread-safe depending on how it's implemented, but direct
    access should be considered carefully in multi-threaded environments.
  warnings: Ensure that the identifier passed to this method is valid and corresponds
    to an actual entry in the database; otherwise, unexpected behavior or empty string
    returns might occur. Avoid modifying the returned string reference as it points
    to internal storage managed by ObjectMgr.
  related:
  - GetCreatureTemplate
  - GetGameObjectTemplate
  - LoadScriptNames
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T09:11:24.593799'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
