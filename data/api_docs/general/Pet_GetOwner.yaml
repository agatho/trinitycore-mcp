api:
  class: Pet
  method: GetOwner
  signature: Player * Pet::GetOwner() const
documentation:
  brief: Returns a pointer to the Player object that owns this Pet.
  description: The GetOwner method retrieves the Player instance that is the owner
    of the current Pet. In World of Warcraft's TrinityCore implementation, pets are
    associated with players through a ownership relationship. This method provides
    access to the owning player object, which can then be used to perform operations
    such as checking the player's level, inventory, or other player-specific properties.
    The returned pointer may be null if the pet has no owner, which typically occurs
    in special circumstances like a pet being summoned without an owner or after the
    owner has been removed from the game world.
  parameters: []
  returns: A pointer to the Player object that owns this Pet, or nullptr if the pet
    has no owner.
  examples:
  - title: Basic Usage
    code: "Pet* myPet = ...; // Assume we have a valid pet pointer\nPlayer* owner\
      \ = myPet->GetOwner();\nif (owner)\n{\n    // Pet has an owner, proceed with\
      \ operations\n    sLog->outString(\"Pet's owner is: %s\", owner->GetName().c_str());\n\
      }"
    language: cpp
  - title: Checking Owner Level
    code: "Pet* myPet = ...;\nPlayer* owner = myPet->GetOwner();\nif (owner && owner->GetLevel()\
      \ >= 80)\n{\n    // Owner is high level, perhaps grant special pet behavior\n\
      \    sLog->outString(\"High-level player owns this pet.\");\n}"
    language: cpp
  notes: This method performs a simple member variable access and should be very fast.
    The returned Player pointer is only valid as long as the owner player object exists
    in memory, so developers must ensure proper lifetime management to avoid dangling
    pointers.
  warnings: Be cautious when using the returned pointer without checking for null.
    If the pet has no owner (which can happen during certain game events or if the
    pet was summoned incorrectly), dereferencing a null pointer will cause a crash.
    Always validate the return value before use.
  related:
  - GetOwnerGUID
  - SetOwner
  - IsOwnedBy
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T14:53:02.674752'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
