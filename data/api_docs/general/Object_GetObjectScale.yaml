api:
  class: Object
  method: GetObjectScale
  signature: float Object::GetObjectScale() const
documentation:
  brief: Returns the scale factor of the object, which determines its size in the
    game world.
  description: The GetObjectScale method retrieves the current scale factor applied
    to an object within the TrinityCore framework. This scale value affects how the
    object appears visually in the game world, influencing its size relative to other
    objects. The method is commonly used for determining visual representation of
    creatures, players, or game objects. It's particularly useful when implementing
    custom scaling behaviors or when working with object-specific visual effects.
    The scale factor is typically set during object creation and can be modified through
    various game mechanics such as buffs, debuffs, or special abilities.
  parameters: []
  returns: Returns a float value representing the current scale factor of the object.
    A value of 1.0f indicates normal size, while values less than 1.0f indicate smaller
    size and greater than 1.0f indicate larger size. The method returns 0.0f if the
    object has no scale applied.
  examples:
  - title: Basic usage example
    code: "float scale = obj->GetObjectScale();\nif (scale > 1.0f)\n{\n    // Object\
      \ is larger than normal\n}\nelse if (scale < 1.0f)\n{\n    // Object is smaller\
      \ than normal\n}\nelse\n{\n    // Object is normal size\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread context. Performance
    impact is minimal as it simply retrieves a stored value. The scale factor is typically
    set during object initialization and may be modified by game effects or abilities.
  warnings: Care should be taken when modifying scale factors, as improper scaling
    can lead to visual inconsistencies in the game world. This method does not account
    for dynamic scaling changes that might occur due to buffs or debuffs.
  related:
  - GetObjectScale
  - SetObjectScale
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T17:59:41.231366'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
