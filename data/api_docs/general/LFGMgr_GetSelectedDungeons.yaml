api:
  class: LFGMgr
  method: GetSelectedDungeons
  signature: const LfgDungeonSet & LFGMgr::GetSelectedDungeons(int guid)
documentation:
  brief: Retrieves the set of selected dungeons for a player's LFG group
  description: The GetSelectedDungeons method returns a constant reference to a set
    of dungeon identifiers that have been selected by a player's LFG (Looking For
    Group) group. This method is used within the TrinityCore framework to manage and
    retrieve the current dungeon selection state for players participating in LFG
    activities. The returned LfgDungeonSet contains all the dungeons that the player
    has chosen or been assigned to participate in during their current LFG session.
    This information is crucial for determining which dungeons are available for a
    group, handling dungeon matching logic, and managing player participation in various
    LFG activities such as raids, dungeons, and other group content.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the player whose selected dungeons
      are being retrieved. This is typically a 32-bit integer representing the player's
      database ID or in-game object GUID.
  returns: A constant reference to an LfgDungeonSet containing all dungeon identifiers
    that have been selected by the specified player for their current LFG group. The
    set may be empty if no dungeons have been selected yet, or if the player is not
    currently in an LFG group.
  examples:
  - title: Basic usage to retrieve selected dungeons
    code: "uint32 playerId = 12345;\nLfgDungeonSet const& dungeons = sLFGMgr->GetSelectedDungeons(playerId);\n\
      for (auto const& dungeon : dungeons)\n{\n    printf(\"Selected dungeon ID: %u\\\
      n\", dungeon);\n}"
    language: cpp
  - title: Checking if player has selected any dungeons
    code: "uint32 playerId = 12345;\nLfgDungeonSet const& dungeons = sLFGMgr->GetSelectedDungeons(playerId);\n\
      if (dungeons.empty())\n{\n    printf(\"Player has not selected any dungeons\
      \ yet\\n\");\n}\nelse\n{\n    printf(\"Player has selected %zu dungeons\\n\"\
      , dungeons.size());\n}"
    language: cpp
  notes: This method is part of the LFG system and requires that the player is currently
    in an LFG group. The returned reference points to internal data structures managed
    by the LFG manager, so modifications to the set should not be made directly through
    this interface. The method may return an empty set if no dungeons have been selected
    or if the player is not part of a valid LFG group.
  warnings: Do not modify the returned LfgDungeonSet directly as it points to internal
    managed data. If you need to modify dungeon selections, use appropriate LFG manager
    methods such as AddSelectedDungeon or RemoveSelectedDungeon instead. This method
    may return an empty set if called on a player who is not currently in an LFG group.
  related:
  - LFGMgr::AddSelectedDungeon
  - LFGMgr::RemoveSelectedDungeon
  - LFGMgr::GetPlayerGroup
  - LFGMgr::IsPlayerInLFGGroup
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T11:44:17.909289'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
