api:
  class: KitingManager
  method: GetMetrics
  signature: const KitingMetrics & KitingManager::GetMetrics() const
documentation:
  brief: Returns the current kiting metrics collected by the KitingManager instance.
  description: The GetMetrics method provides access to the accumulated kiting performance
    data tracked by the KitingManager. This method returns a constant reference to
    a KitingMetrics structure that contains various statistics related to the player's
    kiting behavior, such as distance traveled, time spent kiting, and other relevant
    performance indicators. The returned metrics are updated dynamically as the kiting
    manager processes player movement events during gameplay. This method is typically
    used for monitoring player performance, generating reports, or integrating with
    game analytics systems.
  parameters: []
  returns: A constant reference to a KitingMetrics object containing the current kiting
    statistics and performance data collected by this KitingManager instance.
  examples:
  - title: Accessing Kiting Metrics
    code: 'KitingManager* manager = player->GetKitingManager();

      const KitingMetrics& metrics = manager->GetMetrics();

      float distance = metrics.GetTotalDistance();

      uint32 time = metrics.GetTotalTime();'
    language: cpp
  - title: Logging Kiting Performance
    code: "void LogKitingStats(Player* player)\n{\n    KitingManager* manager = player->GetKitingManager();\n\
      \    if (manager)\n    {\n        const KitingMetrics& metrics = manager->GetMetrics();\n\
      \        LOG_INFO(\"player\", \"Player {} kiting stats - Distance: {} yards,\
      \ Time: {} seconds\",\n                 player->GetName(), metrics.GetTotalDistance(),\
      \ metrics.GetTotalTime());\n    }\n}"
    language: cpp
  notes: The returned KitingMetrics reference is valid only as long as the KitingManager
    instance exists. This method does not perform any locking or synchronization internally,
    so accessing it from multiple threads requires external synchronization if needed.
    The metrics are updated incrementally during gameplay and may not reflect real-time
    changes immediately after movement events.
  warnings: Do not modify the returned KitingMetrics object directly as it's a constant
    reference. Modifications to the underlying data structure could lead to inconsistent
    state or undefined behavior. Ensure that the KitingManager instance is properly
    initialized before calling this method, otherwise accessing metrics may result
    in invalid data.
  related:
  - KitingManager::UpdateMetrics
  - KitingManager::ResetMetrics
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:03:44.250600'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
