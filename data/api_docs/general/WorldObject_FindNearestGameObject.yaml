api:
  class: WorldObject
  method: FindNearestGameObject
  signature: GameObject * WorldObject::FindNearestGameObject(uint32 entry, float range,
    bool spawnedOnly) const
documentation:
  brief: Finds and returns the nearest GameObject within a specified range.
  description: This method searches for the nearest GameObject with a specific entry
    ID within a given range. It is commonly used in World of Warcraft scripting to
    locate game objects near a player or creature. The method considers only spawned
    game objects by default, but can be configured to include unspawned ones. This
    functionality is essential for quest completion, NPC interaction, and object-based
    gameplay mechanics.
  parameters:
  - name: entry
    description: The entry ID of the GameObject to search for. This represents the
      unique identifier used by the game server to distinguish different types of
      game objects.
  - name: range
    description: The maximum distance within which to search for the GameObject. This
      defines the radius around the WorldObject where GameObjects will be considered.
  - name: spawnedOnly
    description: When true, only considers game objects that are currently spawned
      and visible in the world. When false, includes unspawned game objects which
      may not be visible but still exist in the database.
  returns: Returns a pointer to the GameObject found nearest to this WorldObject,
    or nullptr if no suitable GameObject is found within range. The returned GameObject
    is valid only for the duration of the current frame unless explicitly stored.
  examples:
  - title: Basic usage example
    code: "GameObject* nearestGO = player->FindNearestGameObject(176234, 5.0f, true);\n\
      if (nearestGO)\n{\n    // Use the GameObject\n}"
    language: cpp
  - title: Advanced usage example with multiple entries
    code: "GameObject* nearestGO = player->FindNearestGameObject(176234, 10.0f, false);\n\
      if (nearestGO)\n{\n    // Check if it's a specific type\n    if (nearestGO->GetEntry()\
      \ == 176234)\n    {\n        // Proceed with interaction\n    }\n}"
    language: cpp
  notes: This method performs a search using the WorldObject's position as the center,
    and can be computationally expensive if used frequently or with large ranges.
    It is recommended to use this method sparingly in performance-critical code.
  warnings: Be cautious when using unspawned objects as they may not be visible but
    still exist in memory, potentially causing unexpected behavior or crashes if not
    properly handled.
  related:
  - FindNearestCreature
  - FindNearestPlayer
  - GetGameObject
  - GetCreature
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T19:46:25.824007'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
