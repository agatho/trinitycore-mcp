api:
  class: Spell
  method: MovePosition
  signature: void Spell::MovePosition(int & pos, const WorldObject * from, float dist,
    float angle) const
documentation:
  brief: Moves a position in the specified direction from a given object at a set
    distance.
  description: The MovePosition method calculates and sets a new position at a specified
    distance and angle from a source object, which is commonly used in spell effects
    to determine where a spell should be cast or where a projectile should travel.
    This method is typically used in conjunction with other positioning methods to
    establish target locations for spells or effects. It operates on the principle
    of trigonometric calculations using the source object's orientation and the provided
    angle to compute the destination coordinates.
  parameters:
  - name: pos
    description: Reference to an integer that will store the calculated position index.
      This parameter is modified in place to indicate which position was computed.
  - name: from
    description: Pointer to the WorldObject from which the position calculation begins.
      This object provides the reference point and orientation for calculating the
      new position.
  - name: dist
    description: Float value representing the distance from the source object to move.
      This determines how far away from the source the new position should be calculated.
  - name: angle
    description: Float value representing the angle in radians from the source object's
      orientation. This determines the direction of movement relative to the source
      object's facing.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Spell* spell = new Spell();

      WorldObject* source = new WorldObject();

      int positionIndex;

      spell->MovePosition(positionIndex, source, 10.0f, 0.5f);'
    language: cpp
  - title: Advanced usage example with angle calculation
    code: 'Spell* spell = new Spell();

      WorldObject* source = new WorldObject();

      int positionIndex;

      float angle = M_PI_2; // 90 degrees in radians

      spell->MovePosition(positionIndex, source, 15.0f, angle);'
    language: cpp
  notes: This method is typically used in spell calculations and projectile movement
    logic. It's important to note that the position index may be modified based on
    the input parameters, and care must be taken when using this method with different
    coordinate systems or angles to ensure accurate positioning.
  warnings: The method modifies the pos parameter, so developers should be careful
    not to use it in contexts where the original value needs to be preserved. Also,
    angle calculations may vary depending on coordinate system conventions used by
    TrinityCore.
  related: []
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T21:59:35.561876'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
