api:
  class: AuraEffect
  method: HandleAuraMounted
  signature: void AuraEffect::HandleAuraMounted(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes the mounted aura effect on a unit.
  description: The HandleAuraMounted method manages the application and removal of
    the mounted aura effect on a target unit. This method is invoked during aura application
    or removal events, determining whether the unit should be mounted or dismounted
    based on the aura's state. It interacts with the unit's movement and animation
    systems to visually represent the mounted state. The method ensures proper synchronization
    between the aura's active state and the unit's physical representation in the
    game world.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed.
  - name: mode
    description: The mode of the aura application, typically indicating how the aura
      is being applied (e.g., initial application, update, or removal).
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the mounted aura effect.
  returns: null
  examples:
  - title: Basic Mount Aura Application
    code: "void ApplyMountAura(Unit* target)\n{\n    AuraApplication* aurApp = new\
      \ AuraApplication(target, target, SpellInfo);\n    AuraEffect* auraEffect =\
      \ new AuraEffect(SpellInfo, 0, nullptr);\n    auraEffect->HandleAuraMounted(aurApp,\
      \ 0, true);\n}"
    language: cpp
  - title: Unmounting a Unit
    code: "void RemoveMountAura(Unit* target)\n{\n    AuraApplication* aurApp = new\
      \ AuraApplication(target, target, SpellInfo);\n    AuraEffect* auraEffect =\
      \ new AuraEffect(SpellInfo, 0, nullptr);\n    auraEffect->HandleAuraMounted(aurApp,\
      \ 0, false);\n}"
    language: cpp
  notes: This method is part of the TrinityCore's aura system and integrates with
    the unit's movement and visual state management. It should only be called from
    within the aura application context to ensure proper synchronization.
  warnings: Improper usage may lead to incorrect visual states or movement behavior
    for units. Ensure that the aura application object passed is valid and properly
    initialized before calling this method.
  related:
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
  - Unit::SetMounted
  - Unit::Unmount
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:01:33.196483'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
