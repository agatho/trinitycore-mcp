api:
  class: ObjectMgr
  method: GetMapObjectGuids
  signature: const CellObjectGuidsMap * ObjectMgr::GetMapObjectGuids(uint32 mapid,
    int spawnMode)
documentation:
  brief: Retrieves the object GUIDs for a specified map and spawn mode.
  description: The GetMapObjectGuids method returns a pointer to a map of cell-specific
    object GUIDs for the given map ID and spawn mode. This allows access to all objects
    (creatures, game objects, etc.) that are present in specific cells of the requested
    map. The returned data structure is typically used by the core's grid management
    system to efficiently iterate over objects within a particular area. The method
    does not perform any modification or spawning of objects; it simply retrieves
    existing data structures from memory.
  parameters:
  - name: mapid
    description: The unique identifier of the map for which object GUIDs are requested.
      Valid values correspond to valid map IDs in the game world.
  - name: spawnMode
    description: The spawn mode flag indicating the type of objects to retrieve. This
      typically corresponds to different spawn states like normal, respawn, or active
      spawns.
  returns: A pointer to a constant CellObjectGuidsMap which contains mappings from
    cell coordinates to lists of object GUIDs. Returns nullptr if no data is available
    for the specified map and spawn mode.
  examples:
  - title: Retrieve creature GUIDs for a specific map
    code: "const CellObjectGuidsMap* guidMap = sObjectMgr->GetMapObjectGuids(0, SPAWN_MODE_NORMAL);\n\
      if (guidMap)\n{\n    for (auto& pair : *guidMap)\n    {\n        const CellGuids&\
      \ guids = pair.second;\n        // Process each GUID in the cell\n    }\n}"
    language: cpp
  notes: This method accesses internal data structures managed by ObjectMgr and should
    be used carefully to avoid race conditions. It's primarily intended for internal
    core use, such as grid loading/unloading or object management routines.
  warnings: Do not modify the returned CellObjectGuidsMap directly as it may lead
    to undefined behavior. The returned pointer is only valid while the ObjectMgr
    instance remains alive and the map data has not changed.
  related:
  - GetMap
  - LoadMapObjects
  - GetCreatureData
  - GetGameObjectData
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T09:28:49.654763'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
