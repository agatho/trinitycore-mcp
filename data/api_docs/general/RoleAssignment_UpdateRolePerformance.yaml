api:
  class: RoleAssignment
  method: UpdateRolePerformance
  signature: void RoleAssignment::UpdateRolePerformance(uint32 playerGuid, GroupRole
    role, bool wasSuccessful, float effectiveness)
documentation:
  brief: Updates the performance metrics for a player's role assignment within a group.
  description: The UpdateRolePerformance method records and updates the effectiveness
    of a player's assigned role in a group context. It tracks whether the role assignment
    was successful and how effective the player was in fulfilling that role. This
    method is typically used during group activities such as dungeons, raids, or battlegrounds
    to maintain performance statistics for role-based gameplay mechanics. The data
    updated by this method may be used for loot distribution, achievement tracking,
    or performance analysis within the game.
  parameters:
  - name: playerGuid
    description: The unique identifier (GUID) of the player whose role performance
      is being updated. Must be a valid player GUID in the game world.
  - name: role
    description: The group role that was assigned to the player. This should be one
      of the predefined GroupRole values such as TANK, HEALER, or DAMAGE.
  - name: wasSuccessful
    description: A boolean flag indicating whether the role assignment and execution
      was successful. True if the player successfully fulfilled their role, false
      otherwise.
  - name: effectiveness
    description: A float value representing how effectively the player performed in
      their assigned role, typically ranging from 0.0 (ineffective) to 1.0 (perfect
      performance).
  returns: null
  examples:
  - title: Basic Role Performance Update
    code: 'RoleAssignment ra;

      ra.UpdateRolePerformance(12345, GroupRole::TANK, true, 0.95f);'
    language: cpp
  - title: Failed Role Assignment Recording
    code: 'RoleAssignment ra;

      ra.UpdateRolePerformance(67890, GroupRole::HEALER, false, 0.0f);'
    language: cpp
  notes: This method likely updates internal performance statistics that are used
    for various game systems including loot distribution algorithms and player performance
    tracking. The effectiveness value should be validated to ensure it falls within
    a reasonable range before being passed to this method.
  warnings: Ensure that the playerGuid corresponds to an active player in the group,
    as invalid GUIDs may cause undefined behavior or errors. The effectiveness parameter
    should be clamped between 0.0 and 1.0 to maintain data integrity.
  related:
  - GetRolePerformance
  - SetPlayerRole
  - ResetRoleAssignments
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T23:28:10.693194'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
