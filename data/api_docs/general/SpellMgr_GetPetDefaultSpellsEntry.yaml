api:
  class: SpellMgr
  method: GetPetDefaultSpellsEntry
  signature: const PetDefaultSpellsEntry * SpellMgr::GetPetDefaultSpellsEntry(int32
    id) const
documentation:
  brief: Retrieves the default spells entry for a pet by its ID.
  description: The GetPetDefaultSpellsEntry method fetches the PetDefaultSpellsEntry
    structure associated with a specific pet ID from the spell manager's internal
    data structures. This entry typically contains information about the default spells
    that a pet should know upon summoning or creation, including spell IDs and their
    levels. The method is used primarily during pet initialization to populate the
    pet's spellbook with predefined abilities. It performs a lookup in an internal
    container indexed by pet ID, returning a pointer to the corresponding entry if
    found, or nullptr if no entry exists for the given ID.
  parameters: []
  returns: A pointer to a const PetDefaultSpellsEntry structure if an entry exists
    for the specified pet ID; otherwise, returns nullptr. The returned structure contains
    spell data such as spell IDs and levels that define the default abilities of the
    pet.
  examples:
  - title: Retrieve default spells for a pet
    code: "const PetDefaultSpellsEntry* entry = sSpellMgr->GetPetDefaultSpellsEntry(12345);\n\
      if (entry)\n{\n    // Process the pet's default spells\n    for (int i = 0;\
      \ i < MAX_PET_SPELLS; ++i)\n    {\n        if (entry->spell[i] != 0)\n     \
      \       printf(\"Pet spell ID: %d\\n\", entry->spell[i]);\n    }\n}"
    language: cpp
  notes: This method is typically used during pet creation or loading from database.
    The internal data structure is populated at server startup from dbc files or database
    entries. The returned pointer should not be modified as it points to read-only
    data managed by the SpellMgr.
  warnings: The returned pointer may be null if no default spells entry exists for
    the given ID, so always check for null before dereferencing. Avoid storing references
    to the returned structure beyond the scope of the current function unless you
    are certain about its lifetime.
  related:
  - GetPetSpellList
  - LoadPetDefaultSpells
  - GetSpellInfo
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:24:31.006351'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
