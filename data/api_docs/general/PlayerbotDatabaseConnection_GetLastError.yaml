api:
  class: PlayerbotDatabaseConnection
  method: GetLastError
  signature: const std::string & PlayerbotDatabaseConnection::GetLastError() const
documentation:
  brief: Retrieves the last error message that occurred during database operations.
  description: The GetLastError method returns a constant reference to a string containing
    the most recent error message generated by the PlayerbotDatabaseConnection. This
    method is typically used after a failed database operation to obtain diagnostic
    information about what went wrong. The returned string may contain details such
    as SQL syntax errors, connection failures, or constraint violations that occurred
    during the last database interaction. It's important to note that this method
    does not clear the error state; subsequent calls will continue to return the same
    error message until a successful operation occurs or the connection is reset.
  parameters: []
  returns: A constant reference to a std::string containing the most recent database
    error message. If no error has occurred since the last successful operation, this
    may return an empty string.
  examples:
  - title: Basic Error Retrieval
    code: "PlayerbotDatabaseConnection* db = new PlayerbotDatabaseConnection();\n\
      // ... perform some database operation that fails ...\nconst std::string& lastError\
      \ = db->GetLastError();\nif (!lastError.empty()) {\n    std::cout << \"Database\
      \ error: \" << lastError << std::endl;\n}"
    language: cpp
  - title: Error Handling in Playerbot Context
    code: "class MyPlayerbotAI {\npublic:\n    void ExecuteQuery(const std::string&\
      \ query) {\n        if (!database->Execute(query)) {\n            LOG_ERROR(\"\
      playerbot\", \"Query failed: {}\", database->GetLastError());\n        }\n \
      \   }\n};"
    language: cpp
  notes: This method is thread-safe as long as the underlying database connection
    is not shared between threads without proper synchronization. The error string
    is valid only until the next database operation or until the connection object
    is destroyed. It's recommended to copy the returned string if you need to store
    it for later use.
  warnings: Do not assume that a non-empty return value always indicates a fatal error
    - some operations might return informational messages. Also, calling this method
    after a successful operation may return an empty string or previous errors if
    the connection state wasn't properly reset.
  related:
  - Execute
  - Query
  - Ping
  - IsConnected
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T08:27:04.020493'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
