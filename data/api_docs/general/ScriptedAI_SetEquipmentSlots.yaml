api:
  class: ScriptedAI
  method: SetEquipmentSlots
  signature: void ScriptedAI::SetEquipmentSlots(bool loadDefault, int mainHand, int
    offHand, int ranged)
documentation:
  brief: Sets the equipment slots for a creature's main hand, off-hand, and ranged
    weapons.
  description: The SetEquipmentSlots method configures the equipment slots for a creature's
    weapon inventory. It allows developers to specify which items should appear in
    the main hand, off-hand, and ranged slots of a creature. When loadDefault is true,
    it will load the default equipment as defined in the creature's database entry.
    The parameters mainHand, offHand, and ranged accept item template IDs or -1 to
    indicate no item in that slot. This method is typically used in AI scripts to
    customize a creature's weapon loadout during combat or specific events.
  parameters:
  - name: loadDefault
    description: If true, loads the default equipment as defined in the creature's
      database entry. If false, uses the provided item IDs for each slot.
  - name: mainHand
    description: Item template ID for the main hand weapon. Use -1 to indicate no
      item in this slot.
  - name: offHand
    description: Item template ID for the off-hand weapon. Use -1 to indicate no item
      in this slot.
  - name: ranged
    description: Item template ID for the ranged weapon. Use -1 to indicate no item
      in this slot.
  returns: null
  examples:
  - title: Set default equipment with custom weapons
    code: "void OnCombatEnter(Unit* /*who*/) override\n{\n    SetEquipmentSlots(true,\
      \ 12345, 12346, -1);\n}"
    language: cpp
  - title: Force specific weapon loadout
    code: "void OnReset() override\n{\n    SetEquipmentSlots(false, 98765, 98764,\
      \ 98763);\n}"
    language: cpp
  notes: This method directly affects the creature's visual appearance and combat
    behavior. Changes made using this function are not persistent across resets or
    reloads unless explicitly saved in the database. The method should be called during
    appropriate AI events like entering combat or reset conditions.
  warnings: Incorrect item template IDs can cause client-side errors or visual glitches.
    Using invalid IDs may result in missing weapons or incorrect animations. Ensure
    all item IDs exist in the database to avoid runtime issues.
  related:
  - GetEquipmentSlot
  - SetEquipmentSlot
  - LoadEquipment
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T06:39:01.682874'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
