api:
  class: GameObject
  method: SetGoArtKit
  signature: void GameObject::SetGoArtKit(uint32 artkit, GameObject * go, int lowguid)
documentation:
  brief: Sets the game object art kit for a specified GameObject.
  description: The SetGoArtKit method assigns an art kit to a GameObject, which determines
    the visual appearance and animation of the game object. This method is used primarily
    in the context of World of Warcraft's game object system where different art kits
    can represent various visual states or effects. The method operates on the GameObject's
    internal data structure and modifies its visual representation based on the provided
    art kit value.
  parameters:
  - name: artkit
    description: The art kit identifier that defines the visual appearance of the
      game object. This typically corresponds to a specific animation or visual effect
      in the game's database.
  - name: go
    description: Pointer to the GameObject instance whose art kit is being set. This
      parameter allows for direct manipulation of the specified GameObject.
  - name: lowguid
    description: The low GUID identifier of the GameObject, used for internal tracking
      and identification within the game system.
  returns: null
  examples:
  - title: Basic usage example
    code: 'GameObject* go = new GameObject();

      uint32 artkit = 12345;

      int lowguid = 67890;


      // Set the art kit for the game object

      go->SetGoArtKit(artkit, go, lowguid);'
    language: cpp
  - title: Advanced usage example
    code: 'GameObject* go = ObjectAccessor::GetObjectByTypeMask("player", 12345);

      uint32 artkit = 54321;

      int lowguid = 98765;


      // Set the art kit for the game object

      go->SetGoArtKit(artkit, go, lowguid);'
    language: cpp
  notes: This method is typically used in conjunction with other GameObject-related
    methods to manage visual states. It may be called during initialization or update
    processes of game objects. Performance considerations include the need for proper
    synchronization when multiple threads access the same GameObject instance.
  warnings: Improper use of this method can lead to incorrect visual representation
    of game objects, potentially causing display issues or unexpected behavior in-game.
    Care should be taken when setting art kits to ensure compatibility with existing
    game object states and animations.
  related:
  - SetGoState
  - GetGoArtKit
  - SetGoFlags
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T18:09:18.252547'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
