api:
  class: ThreatManager
  method: AddThreat
  signature: void ThreatManager::AddThreat(Unit * target, float amount, const SpellInfo
    * spell, bool ignoreModifiers, bool ignoreRedirects)
documentation:
  brief: Adds threat to a target unit based on specified amount and optional spell
    context.
  description: The AddThreat method increases the threat level of a specified target
    unit within the ThreatManager. This is commonly used in combat scenarios where
    a unit's actions (such as damage dealt or spells cast) influence their aggro status.
    The method supports optional parameters to modify how threat is calculated, including
    ignoring spell modifiers and redirect effects. Threat management is crucial for
    controlling mob behavior and ensuring proper encounter mechanics in World of Warcraft-style
    gameplay.
  parameters:
  - name: target
    description: Pointer to the Unit object that will receive the threat. Must be
      a valid unit within the current combat context.
  - name: amount
    description: The base amount of threat to add to the target. Can be positive or
      negative depending on whether it's increasing or decreasing threat.
  - name: spell
    description: Optional pointer to a SpellInfo structure that defines the spell
      context for threat calculation. If null, standard threat rules apply.
  - name: ignoreModifiers
    description: If true, ignores any spell-based modifiers when calculating threat.
      Defaults to false.
  - name: ignoreRedirects
    description: If true, prevents threat redirection effects from altering the threat
      amount. Defaults to false.
  returns: null
  examples:
  - title: Basic Threat Addition
    code: 'Unit* target = ...;

      float threatAmount = 100.0f;

      ThreatManager::AddThreat(target, threatAmount);'
    language: cpp
  - title: Adding Threat with Spell Context and Modifiers
    code: 'Unit* target = ...;

      SpellInfo* spellInfo = sSpellMgr->GetSpellInfo(12345);

      ThreatManager::AddThreat(target, 200.0f, spellInfo, true, false);'
    language: cpp
  notes: This method directly manipulates the internal threat table of the ThreatManager
    and may trigger updates to the unit's aggro list. It should only be called during
    active combat or when a valid threat context exists. Performance is generally
    low, but frequent calls in high-frequency combat situations may require optimization.
  warnings: Calling this method with an invalid target pointer can lead to undefined
    behavior or crashes. Ensure that all units involved are properly initialized and
    within the same map/instance before calling AddThreat.
  related:
  - GetThreat
  - RemoveThreat
  - ClearThreatList
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:47:38.559422'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
