api:
  class: Unit
  method: MeleeDamageBonusDone
  signature: int32 Unit::MeleeDamageBonusDone(Unit * pVictim, int32 damage, int attType,
    DamageEffectType damagetype, const SpellInfo * spellProto, const SpellEffectInfo
    * spellEffectInfo, int mechanic, int damageSchoolMask, Spell * spell, const AuraEffect
    * aurEff)
documentation:
  brief: Calculates melee damage bonus applied to a target unit.
  description: This method computes the total melee damage bonus that is applied to
    a victim unit during melee attacks. It considers various factors including attack
    type, damage type, spell effects, mechanics, and damage school mask to determine
    the final damage value. The method is used internally by the game engine to calculate
    damage bonuses for physical attacks in combat situations.
  parameters:
  - name: pVictim
    description: Pointer to the target unit that receives the damage bonus. This parameter
      defines the victim of the attack.
  - name: damage
    description: Base damage amount being modified by this bonus calculation. This
      represents the initial damage value before applying bonuses.
  - name: attType
    description: Attack type identifier (e.g., melee, ranged) used to determine how
      damage is calculated. Valid values include different attack types like normal,
      off-hand, etc.
  - name: damagetype
    description: Damage effect type that determines how damage is applied. This includes
      effects like normal, fire, frost, etc. which affects the calculation.
  - name: spellProto
    description: Pointer to the spell information structure used for calculating bonuses.
      This defines the spell being used for damage calculation.
  - name: spellEffectInfo
    description: Pointer to the spell effect information structure that determines
      how damage is calculated. This includes effects like damage over time, direct
      damage, etc.
  - name: mechanic
    description: Mechanic type identifier used for calculating bonuses. This represents
      the mechanic associated with the attack (e.g., bleed, poison, etc.).
  - name: damageSchoolMask
    description: Damage school mask that determines which damage types are affected
      by this bonus calculation. This includes various damage types like physical,
      fire, frost, etc.
  - name: spell
    description: Pointer to the spell being used for damage calculation. This defines
      the specific spell being applied to calculate damage bonuses.
  - name: aurEff
    description: Pointer to the aura effect that determines how damage is calculated.
      This includes effects like damage bonus, damage reduction, etc.
  returns: Returns an integer value representing the total damage bonus applied to
    the victim unit. This value can be positive or negative depending on the calculation
    and may be zero if no bonuses are applied.
  examples:
  - title: Basic usage example
    code: int32 damageBonus = unit->MeleeDamageBonusDone(targetUnit, baseDamage, ATTACK_TYPE_NORMAL,
      SPELL_EFFECT_NORMAL, spellInfo, spellEffectInfo, mechanic, damageSchoolMask,
      spell, auraEffect);
    language: cpp
  - title: Advanced usage example
    code: int32 bonus = unit->MeleeDamageBonusDone(targetUnit, 100, ATTACK_TYPE_RANGED,
      SPELL_EFFECT_Fire, nullptr, nullptr, 1, DAMAGE_SCHOOL_MASK_FIRE, nullptr, nullptr);
    language: cpp
  notes: This method is typically used in combat calculations and requires proper
    initialization of parameters. The method may be called multiple times during a
    single attack depending on the game mechanics. Performance considerations include
    potential for multiple calls during combat processing.
  warnings: The method requires careful handling of null pointers and should not be
    used without proper validation of input parameters. Incorrect usage can lead to
    invalid damage calculations or crashes.
  related:
  - MeleeDamageBonusDone
  - MeleeDamageTaken
  - SpellDamageBonusDone
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:58:48.981855'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
