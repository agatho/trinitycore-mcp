api:
  class: Unit
  method: AtEngage
  signature: void Unit::AtEngage(Unit * param0)
documentation:
  brief: Invoked when a unit enters combat engagement with another unit.
  description: The AtEngage method is called when a Unit begins combat engagement
    with another Unit. This method is typically invoked by the game's AI system or
    combat mechanics to notify the unit that it has entered an active combat state.
    It serves as a hook for custom behavior during combat initiation, such as triggering
    specific actions, sending messages, or modifying unit states. The method does
    not take any parameters and is used purely for event notification purposes.
  parameters: []
  returns: null
  examples:
  - title: Basic Override Example
    code: "class MyCustomUnit : public Unit {\npublic:\n    void AtEngage(Unit* target)\
      \ override {\n        // Custom behavior when unit enters combat\n        SendChatMessage(\"\
      I'm in combat!\");\n        Unit::AtEngage(target);\n    }\n};"
    language: cpp
  notes: This method is part of the Unit's AI and combat system. It should not be
    called directly unless implementing custom combat behavior. The method may be
    invoked multiple times during a single engagement if the unit re-engages with
    the same target.
  warnings: Avoid modifying core unit properties or calling combat-related functions
    within this method that could cause stack overflow or infinite recursion. Ensure
    proper base class invocation if overriding.
  related:
  - Unit::EnterCombat
  - Unit::CombatStart
  - Unit::IsInCombat
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T09:35:44.012078'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
