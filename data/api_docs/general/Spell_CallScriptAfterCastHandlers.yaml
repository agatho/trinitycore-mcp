api:
  class: Spell
  method: CallScriptAfterCastHandlers
  signature: void Spell::CallScriptAfterCastHandlers()
documentation:
  brief: Invokes all registered script handlers after a spell has been cast.
  description: The CallScriptAfterCastHandlers method is responsible for executing
    any script-defined callbacks that are registered to run after a spell completes
    its casting process. This method ensures that custom spell behaviors, such as
    additional effects or modifications, are properly triggered following the completion
    of a spell's primary execution. It typically operates within the context of the
    spell's lifecycle and is called automatically by the core spell system once the
    cast has finished. The method does not take any parameters and does not return
    a value, serving purely as a notification mechanism for script handlers.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage in Spell Script
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void Register()\
      \ override\n    {\n        OnAfterCast += SpellScriptHookProc(&MySpellScript::HandleAfterCast);\n\
      \    }\n\nprivate:\n    void HandleAfterCast(Spell* spell)\n    {\n        //\
      \ Custom logic after spell cast\n    }\n};"
    language: cpp
  notes: This method is typically invoked internally by the TrinityCore spell system
    and should not be called directly in most cases. It is part of the scriptable
    spell lifecycle and relies on proper registration of script handlers to function
    correctly.
  warnings: null
  related:
  - Spell::CallScriptBeforeCastHandlers
  - Spell::CallScriptOnCastStart
  - Spell::CallScriptOnCastFinish
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:00:54.103555'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
