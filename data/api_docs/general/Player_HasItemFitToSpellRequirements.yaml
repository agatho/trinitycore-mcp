api:
  class: Player
  method: HasItemFitToSpellRequirements
  signature: bool Player::HasItemFitToSpellRequirements(const int * spellInfo, const
    Item * ignoreItem) const
documentation:
  brief: Checks if player has items that fit spell requirements
  description: This method determines whether a player has the necessary items to
    cast a spell, considering all item requirements such as item classes, subclasses,
    and other constraints. It evaluates the player's inventory and equipped items
    against the specified spell requirements, including any required items or consumables.
    The method is commonly used in spell validation logic to ensure that players can
    properly cast spells without violating item requirements or restrictions.
  parameters:
  - name: spellInfo
    description: Pointer to the spell information structure containing requirements
      such as item classes, subclasses, and other constraints. This parameter defines
      what items are required for the spell.
  - name: ignoreItem
    description: Optional pointer to an item that should be ignored during the check,
      typically used when checking against a specific item that might be excluded
      from the validation process.
  returns: Returns true if all required items are present in player's inventory or
    equipped, false otherwise. The method will return false if any required item is
    missing or if item requirements are not met.
  examples:
  - title: Basic Usage Example
    code: "if (player->HasItemFitToSpellRequirements(spellInfo, nullptr)) {\n    //\
      \ Player has all required items\n    // Proceed with spell casting\n}\nelse\
      \ {\n    // Player lacks required items\n    // Prevent spell casting\n}"
    language: cpp
  notes: This method is typically used in conjunction with other spell validation
    methods to ensure proper spell casting. It performs checks on both equipped and
    inventory items, making it essential for determining whether a player can cast
    a spell without violating item requirements. Performance-wise, this method may
    involve multiple item checks depending on the number of requirements defined by
    the spell.
  warnings: This method does not validate item quality or level requirements beyond
    what is specified in the spellInfo structure. It only checks for presence of required
    items, so players may still be able to cast spells even if they have items that
    do not meet quality or level standards.
  related:
  - Spell::CheckCast
  - Player::HasItemForSpell
  - Player::CanUseItem
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T16:05:17.426537'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
