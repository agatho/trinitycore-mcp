api:
  class: MotionMaster
  method: ResolveDelayedActions
  signature: void MotionMaster::ResolveDelayedActions()
documentation:
  brief: Processes and executes any delayed movement actions queued within the MotionMaster.
  description: The ResolveDelayedActions method is responsible for executing movement
    actions that have been scheduled for later execution due to timing constraints
    or game state conditions. This method is typically invoked during the AI update
    cycle to ensure that delayed movements are processed in a timely manner. It handles
    actions such as pathfinding, movement interruptions, or queued motion commands
    that were not immediately executable when originally issued. The method ensures
    proper sequencing and execution of these delayed actions without causing conflicts
    with currently active motions.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage in AI Update Loop
    code: "void CustomAI::UpdateAI(uint32 diff)\n{\n    // ... other AI logic ...\n\
      \    if (m_MotionMaster)\n        m_MotionMaster->ResolveDelayedActions();\n\
      }"
    language: cpp
  notes: This method should be called regularly during the update cycle to prevent
    delayed actions from accumulating. It is commonly invoked by the AI system after
    processing other behaviors but before allowing new commands to be issued.
  warnings: null
  related:
  - MotionMaster::MoveIdle
  - MotionMaster::MoveTo
  - MotionMaster::MoveFollow
  - MotionMaster::Clear
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T10:23:47.349133'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
