api:
  class: DiseaseManager
  method: HasBothDiseases
  signature: bool DiseaseManager::HasBothDiseases(Unit * target)
documentation:
  brief: Checks if the target unit has both disease effects active.
  description: The HasBothDiseases method determines whether a specified Unit object
    currently has two distinct disease effects applied to it. This functionality is
    typically used in World of Warcraft's combat system to evaluate character status
    and apply game mechanics such as spell interactions, damage over time effects,
    or ability restrictions. The method evaluates the unit's current aura state and
    returns true if exactly two disease debuffs are present, false otherwise. It is
    commonly invoked during combat calculations or when assessing a unit's vulnerability
    to certain spells or abilities that require specific disease states.
  parameters: []
  returns: Returns true if the target unit has exactly two active disease effects;
    otherwise returns false. The method does not distinguish between different types
    of diseases, only that two are present.
  examples:
  - title: Basic Usage in Combat Logic
    code: "if (diseaseManager->HasBothDiseases(victim)) {\n    // Apply additional\
      \ damage or effects\n    attacker->DealDamage(victim, baseDamage * 1.5);\n}"
    language: cpp
  - title: Checking Disease State Before Spell Cast
    code: "if (player->HasBothDiseases(target)) {\n    // Trigger special spell effect\n\
      \    SpellInfo* spell = sSpellMgr->GetSpellInfo(12345);\n    player->CastSpell(target,\
      \ spell, true);\n}"
    language: cpp
  notes: This method relies on the internal aura tracking system of TrinityCore. It
    may not account for custom disease implementations or non-standard debuff types
    unless they are properly registered with the game's aura system. Performance is
    generally low impact as it only checks existing aura states.
  warnings: Ensure that the target Unit pointer is valid before calling this method
    to avoid crashes. The method assumes that diseases are tracked through standard
    aura application and may not work correctly with custom or third-party disease
    implementations.
  related:
  - HasDisease
  - GetDiseaseCount
  - ApplyDisease
  - RemoveDisease
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T14:14:45.157660'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
