api:
  class: Spell
  method: SendChannelStart
  signature: void Spell::SendChannelStart(uint32 duration)
documentation:
  brief: Initiates channeling spell effect and sends channel start packet to client
  description: This method is responsible for sending the channel start packet to
    the client when a spell begins channeling. It handles the communication of channel
    duration information to the player's client, allowing them to properly display
    the channeling visual effects and countdown timer. The method typically gets called
    during spell execution when a spell requires channeling, such as with certain
    damage-over-time spells or healing spells that require sustained casting. This
    method is part of the core spell handling mechanism in TrinityCore and should
    not be called directly by other methods without proper context.
  parameters: []
  returns: null
  examples:
  - title: Basic Channel Start Example
    code: 'Spell* spell = new Spell(player, spellInfo);

      spell->SendChannelStart(5000); // 5 second channel duration'
    language: cpp
  notes: This method should only be called when the spell actually begins channeling.
    It's typically invoked during the spell's initial cast phase, not during the final
    execution phase. The method sends a packet to the client that includes the channel
    duration in milliseconds, which is used by the client to display the channeling
    visual effects.
  warnings: Improper use of this method can cause client-side visual glitches or incorrect
    channeling behavior. This method should only be called when the spell actually
    begins channeling, not during other phases of spell execution.
  related:
  - SendChannelUpdate
  - SendChannelStop
  - Spell::SendCastResult
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:49:42.533249'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
