api:
  class: Unit
  method: IsUnderWater
  signature: bool Unit::IsUnderWater() const
documentation:
  brief: Determines whether the unit is currently submerged underwater.
  description: This method checks if a unit (player or creature) is currently located
    beneath the surface of a water body. The function returns true when the unit's
    position is below the water level, indicating that the unit is underwater. This
    functionality is essential for determining game state and behavior during underwater
    interactions, such as swimming, diving, or entering water zones. It is commonly
    used in conjunction with other movement and collision detection methods to accurately
    determine a unit's physical state within the game world.
  parameters: []
  returns: Returns true if the unit is currently submerged under water, false otherwise.
    The method does not distinguish between different types of water bodies (ocean,
    lake, river) but rather checks if the unit's position is below any water surface.
  examples:
  - title: Basic Usage Example
    code: "if (unit->IsUnderWater()) {\n    // Do something\n}\nelse {\n    // Do\
      \ something else\n}"
    language: cpp
  notes: Implementation relies on the unit's current position relative to water level.
    The method may not be reliable in cases where units are near water boundaries
    or when water level changes dynamically during gameplay.
  warnings: This method should not be used as a sole indicator for underwater combat
    mechanics, as it does not account for various water types or depth variations.
    Also, the method might return false positives if the unit's position is incorrectly
    calculated due to server-side issues.
  related:
  - IsInWater
  - IsOnGround
  - GetPosition
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T08:21:39.605740'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
