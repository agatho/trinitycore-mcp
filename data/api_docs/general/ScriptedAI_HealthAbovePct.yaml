api:
  class: ScriptedAI
  method: HealthAbovePct
  signature: bool ScriptedAI::HealthAbovePct(int pct) const
documentation:
  brief: Checks if the AI's current health percentage is above a specified threshold.
  description: The HealthAbovePct method evaluates whether the ScriptedAI instance's
    current health percentage exceeds a given threshold. This is commonly used in
    AI behavior logic to trigger actions based on health conditions, such as casting
    spells or switching to different combat strategies when health drops below certain
    levels. The method performs a simple comparison between the current health and
    maximum health of the AI entity to compute the percentage and then compares it
    against the provided threshold value.
  parameters: []
  returns: Returns true if the AI's current health percentage is strictly greater
    than the specified threshold; otherwise, returns false.
  examples:
  - title: Basic Usage for Health-Based Trigger
    code: "if (me->GetAI()->HealthAbovePct(50))\n{\n    // Cast healing spell or use\
      \ defensive ability\n    DoCast(SPELL_HEALING_POTION);\n}"
    language: cpp
  - title: Using in Combat Decision Making
    code: "if (me->GetAI()->HealthAbovePct(30))\n{\n    // Switch to aggressive stance\n\
      \    DoCast(SPELL_ENRAGE);\n}\nelse\n{\n    // Retreat or use defensive cooldown\n\
      \    DoCast(SPELL_RETREAT);\n}"
    language: cpp
  notes: This method relies on the AI's current health and maximum health values being
    properly maintained by the core engine. It is typically used within periodic AI
    update loops or event handlers to make dynamic decisions based on the entity's
    health status.
  warnings: Ensure that the AI entity has valid health data before calling this method,
    as it may produce unexpected results if health values are not initialized correctly.
    Also note that this method does not account for temporary health modifiers like
    shields or buffs.
  related:
  - GetHealth
  - GetMaxHealth
  - HealthBelowPct
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T21:45:40.878391'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
