api:
  class: Unit
  method: _RemoveNoStackAurasDueToAura
  signature: void Unit::_RemoveNoStackAurasDueToAura(Aura * aura, bool owned)
documentation:
  brief: Removes aura effects that are not stackable, typically used for handling
    non-stackable aura effects during aura removal.
  description: This method removes aura effects that are not stackable from a unit's
    aura list. It is primarily used in the context of World of Warcraft's aura system
    where certain aura effects cannot coexist on a unit, such as those with the same
    spell ID but different stacks. The method ensures that only one instance of such
    an aura remains on the unit at any given time. It is commonly invoked when a new
    aura is applied or when an existing aura is removed to prevent conflicts between
    similar aura effects.
  parameters:
  - name: aura
    description: The aura object to be removed from the unit's aura list. This represents
      the specific aura that will be removed due to its non-stackable nature.
  - name: owned
    description: A boolean flag indicating whether the aura is owned by the unit or
      not. If true, the method will remove the aura from the unit's aura list; if
      false, it will only remove the aura from the unit's aura list without affecting
      ownership.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit;

      Aura* aura = new Aura;

      unit->_RemoveNoStackAurasDueToAura(aura, true);'
    language: cpp
  - title: Advanced usage example with stack handling
    code: 'Unit* unit = new Unit;

      Aura* aura = new Aura;

      unit->_RemoveNoStackAurasDueToAura(aura, false);

      // This removes the aura from the unit''s aura list without ownership

      unit->RemoveAuraFromUnit(aura);'
    language: cpp
  notes: This method is typically used in conjunction with other aura-related methods
    to maintain proper aura management. It is important to note that this method does
    not directly remove the aura from the unit's list but rather handles removal of
    non-stackable aura effects, which may require careful handling of ownership and
    stack counts.
  warnings: This method should be used carefully as it can lead to incorrect aura
    removal if not properly handled. It is crucial to ensure that the aura being removed
    is indeed non-stackable before calling this method, as improper usage could result
    in loss of important aura effects or incorrect stack management.
  related:
  - Unit::RemoveAuraFromUnit
  - Unit::AddAuraToUnit
  - Unit::GetAura
  - Unit::HasAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:00:04.179892'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
