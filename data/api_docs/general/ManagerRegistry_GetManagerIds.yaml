api:
  class: ManagerRegistry
  method: GetManagerIds
  signature: int ManagerRegistry::GetManagerIds() const
documentation:
  brief: Retrieves the list of registered manager identifiers from the ManagerRegistry
    instance.
  description: The GetManagerIds method returns an integer value representing a bitmask
    or identifier set of all currently registered managers within the ManagerRegistry.
    This method is typically used to determine which types of managers are active
    or available in the system. The returned value may represent a combination of
    flags or a unique identifier depending on how the registry is implemented internally.
    It's commonly used during initialization, state checking, or when managing multiple
    subsystems that require coordination through manager registration.
  parameters: []
  returns: An integer value representing the bitmask or set of registered manager
    identifiers. Each bit in the returned integer may correspond to a specific manager
    type, allowing for efficient checking of which managers are currently active or
    registered.
  examples:
  - title: Basic Usage Example
    code: "int managerIds = registry->GetManagerIds();\nif (managerIds & MANAGER_TYPE_AI)\n\
      {\n    // AI manager is registered\n}"
    language: cpp
  - title: Checking Specific Manager Registration
    code: 'int allManagers = registry->GetManagerIds();

      bool hasWorldManager = (allManagers & MANAGER_WORLD) != 0;

      bool hasPlayerManager = (allManagers & MANAGER_PLAYER) != 0;

      // Use flags to determine which managers are active'
    language: cpp
  notes: This method is typically a read-only operation that does not modify any internal
    state. The exact meaning of the returned integer depends on the implementation
    details of ManagerRegistry and how it assigns identifiers to different manager
    types. It's recommended to use predefined constants or flags when interpreting
    the result.
  warnings: The return value should not be modified directly as it represents a snapshot
    of current registry state. If managers are added or removed during runtime, subsequent
    calls to GetManagerIds will reflect those changes. Avoid relying on specific bit
    positions unless they are explicitly documented.
  related:
  - RegisterManager
  - UnregisterManager
  - HasManager
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T10:55:58.929088'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
