api:
  class: BotAccountMgr
  method: CreateBotAccountsBatch
  signature: void BotAccountMgr::CreateBotAccountsBatch(uint32 count, std::function<void
    (int)> callback)
documentation:
  brief: Creates a batch of bot accounts with the specified count and executes a callback
    for each created account.
  description: The CreateBotAccountsBatch method is responsible for generating multiple
    bot accounts in bulk, typically used for testing or automation purposes within
    the TrinityCore framework. It accepts a count parameter to specify how many accounts
    should be created and a callback function that will be invoked for each individual
    account creation. This allows developers to track progress or perform additional
    operations as each bot account is successfully created. The method operates synchronously
    and may block execution until all accounts are processed, depending on implementation
    details. It's commonly used in bot management systems where large numbers of simulated
    player accounts are needed for server testing or gameplay simulation.
  parameters:
  - name: count
    description: The number of bot accounts to create in the batch. Must be a positive
      integer value representing how many accounts should be generated.
  - name: callback
    description: A std::function object that will be called for each created account.
      The callback receives an integer parameter indicating the index or identifier
      of the current account being processed.
  returns: null
  examples:
  - title: Basic Usage Example
    code: "BotAccountMgr::instance()->CreateBotAccountsBatch(10, [](int index) {\n\
      \    std::cout << \"Created bot account #\" << index << std::endl;\n});"
    language: cpp
  - title: Advanced Usage with Account Data Processing
    code: "BotAccountMgr::instance()->CreateBotAccountsBatch(50, [](int index) {\n\
      \    // Simulate account creation and data processing\n    std::string username\
      \ = \"bot_\" + std::to_string(index);\n    // Perform additional setup or validation\
      \ here\n    if (index % 10 == 0) {\n        std::cout << \"Progress: \" << index\
      \ << \"/50 accounts created\" << std::endl;\n    }\n});"
    language: cpp
  notes: This method is designed for batch processing and may have performance implications
    when creating large numbers of accounts. It's recommended to use this method during
    server initialization or maintenance windows rather than in high-traffic gameplay
    scenarios. The callback function should be lightweight to avoid blocking the main
    thread.
  warnings: Calling this method with very large count values might cause significant
    resource consumption and could potentially block the game loop if not properly
    managed. Ensure that the callback does not perform heavy I/O operations or database
    queries that could slow down account creation.
  related:
  - GetBotAccountCount
  - DeleteBotAccountsBatch
  - IsBotAccount
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T01:56:47.074618'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
