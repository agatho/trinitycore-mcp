api:
  class: Pet
  method: CreateBaseAtCreature
  signature: bool Pet::CreateBaseAtCreature(int * creature)
documentation:
  brief: Initializes a pet's base creature data using the provided creature information.
  description: The CreateBaseAtCreature method sets up the foundational creature attributes
    for a pet based on input creature data. This method is typically used during pet
    creation or when transferring creature properties to a pet instance. It validates
    the provided creature data and configures internal pet state accordingly. The
    method ensures that the pet inherits essential characteristics from the source
    creature, such as display ID, faction, and other core attributes required for
    proper gameplay behavior. This function is crucial for maintaining consistency
    between summoned pets and their base creature templates within the TrinityCore
    framework.
  parameters:
  - name: creature
    description: Pointer to an integer representing the creature template ID or index
      used to initialize the pet's base attributes. This parameter determines which
      creature data will be applied to the pet instance.
  returns: Returns true if the pet was successfully initialized with the provided
    creature data, false otherwise. A return value of false may indicate invalid creature
    data, memory allocation failure, or other initialization errors.
  examples:
  - title: Basic Pet Creation Using Creature Template
    code: "Pet* myPet = new Pet();\nint creatureTemplateId = 416; // Example: Wolf\
      \ creature template\nbool success = myPet->CreateBaseAtCreature(&creatureTemplateId);\n\
      if (success)\n{\n    // Pet initialized successfully with wolf attributes\n\
      \    printf(\"Pet created with creature template %d\\n\", creatureTemplateId);\n\
      }\nelse\n{\n    // Handle initialization failure\n    printf(\"Failed to create\
      \ pet from creature template %d\\n\", creatureTemplateId);\n}"
    language: cpp
  notes: This method should only be called during pet instantiation or when explicitly
    changing a pet's base creature type. The method assumes that the provided creature
    parameter points to valid creature data within the game's internal database. It
    is recommended to validate the creature ID before calling this method to prevent
    runtime errors.
  warnings: Calling this method with an invalid creature pointer or non-existent creature
    template ID will likely result in undefined behavior or crashes. Always ensure
    proper validation of input parameters before invoking CreateBaseAtCreature. This
    method modifies internal pet state and should not be called during active combat
    or critical game operations without proper synchronization.
  related:
  - Pet::LoadFromDB
  - Pet::SaveToDB
  - Pet::SetCreatureTemplate
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T10:22:04.867177'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
