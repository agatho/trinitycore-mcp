api:
  class: Spell
  method: SummonGuardian
  signature: void Spell::SummonGuardian(const SpellEffectInfo * effect, uint32 entry,
    const SummonPropertiesEntry * properties, uint32 numSummons, int privateObjectOwner)
documentation:
  brief: Summons a guardian creature based on spell effect and summon properties.
  description: The SummonGuardian method creates and spawns a guardian creature in
    the game world. It utilizes the provided spell effect information, creature entry
    ID, summon properties, number of summons, and private object owner to determine
    how and where the guardian is summoned. This method is typically used for spells
    that create temporary or permanent guardians such as spirit wolves, guardians,
    or other summoned creatures. The summoned creature will be associated with the
    caster and may have specific behaviors or durations based on the summon properties
    provided.
  parameters:
  - name: effect
    description: Pointer to the SpellEffectInfo structure containing information about
      the spell effect that triggered the summon. This includes effect parameters,
      target types, and other relevant data.
  - name: entry
    description: The creature entry ID (creature_template.entry) of the guardian to
      be summoned. This determines what type of creature will be created and spawned
      in the world.
  - name: properties
    description: Pointer to the SummonPropertiesEntry structure that defines how the
      summon behaves, including duration, faction, position, and other summon-specific
      properties.
  - name: numSummons
    description: The number of guardians to summon. This can be used to summon multiple
      creatures with the same parameters in a single call.
  - name: privateObjectOwner
    description: Identifier for the private object owner, typically used to associate
      the summoned creature with a specific caster or controller. May be used for
      ownership tracking or cleanup purposes.
  returns: null
  examples:
  - title: Basic Guardian Summon
    code: 'SpellEffectInfo effect;

      // ... populate effect data

      SummonPropertiesEntry properties;

      // ... populate properties data

      uint32 entry = 12345; // Example guardian creature ID

      uint32 numSummons = 1;

      int privateObjectOwner = 0;

      spell->SummonGuardian(&effect, entry, &properties, numSummons, privateObjectOwner);'
    language: cpp
  - title: Multiple Guardians with Custom Properties
    code: 'SpellEffectInfo effect;

      // ... populate effect data

      SummonPropertiesEntry properties;

      properties.Duration = 30000; // 30 seconds duration

      properties.Faction = 14; // Alliance faction

      uint32 entry = 98765; // Example guardian creature ID

      uint32 numSummons = 3;

      int privateObjectOwner = spell->GetCaster()->GetGUID().GetCounter();

      spell->SummonGuardian(&effect, entry, &properties, numSummons, privateObjectOwner);'
    language: cpp
  notes: This method internally handles the creation of GameObject or Creature instances
    depending on summon type. It respects faction settings and duration parameters
    from the SummonPropertiesEntry. The summoned creature will be added to the spell's
    list of summons for cleanup purposes.
  warnings: Ensure that the provided entry ID corresponds to a valid creature template
    in the database, otherwise the summon may fail silently or create an invalid entity.
    Be cautious when using large values for numSummons as it can impact performance
    and server stability.
  related:
  - Spell::SummonCreature
  - Spell::DoSummon
  - Spell::GetCaster
  - Spell::GetEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T09:49:50.671889'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
