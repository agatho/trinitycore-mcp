api:
  class: Unit
  method: IsImmunedToAuraPeriodicTick
  signature: bool Unit::IsImmunedToAuraPeriodicTick(const int * caster, const SpellInfo
    * spellInfo, const SpellEffectInfo * spellEffectInfo) const
documentation:
  brief: Determines whether a unit is immune to periodic aura tick effects.
  description: This method checks if a unit is immuned to periodic aura tick effects,
    which occur when a spell applies a periodic effect (such as damage over time or
    healing over time) that can be resisted or mitigated. The method evaluates the
    immunity based on caster, spell info, and spell effect info parameters, allowing
    developers to determine if specific units are immune to such effects. It is commonly
    used in combat mechanics to prevent certain spells from affecting a target when
    they should be immune to periodic tick effects.
  parameters:
  - name: caster
    description: Pointer to the caster's GUID or nullptr for no caster. If not nullptr,
      this parameter determines whether the caster is immune to the periodic effect.
  - name: spellInfo
    description: Pointer to the SpellInfo structure that defines the spell being applied.
      This parameter specifies which spell is being evaluated for periodic tick immunity.
  - name: spellEffectInfo
    description: Pointer to the SpellEffectInfo structure that defines the specific
      effect of the spell. This parameter determines which effect is being checked
      for immunity.
  returns: Returns true if the unit is immune to the periodic aura tick effects, false
    otherwise.
  examples:
  - title: Basic usage example
    code: "if (unit->IsImmunedToAuraPeriodicTick(nullptr, spellInfo, spellEffectInfo))\
      \ {\n    // Unit is immune\n}\nelse {\n    // Unit is not immune\n}"
    language: cpp
  notes: This method is typically used in conjunction with other immunity checks and
    should be called carefully during combat situations. Performance considerations
    are minimal as it only involves checking a few conditions, but it's important
    to ensure that the parameters are correctly set for accurate results.
  warnings: The method may not behave as expected if parameters are not properly initialized
    or if the spell effects do not match the intended behavior. Care should be taken
    when using this method in complex combat scenarios where multiple immunity checks
    are involved.
  related:
  - IsImmunedToSpell
  - IsImmunedToDamage
  - IsImmunedToHeal
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:04:53.311882'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
