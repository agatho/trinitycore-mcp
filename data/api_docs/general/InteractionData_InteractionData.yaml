api:
  class: InteractionData
  method: InteractionData
  signature: void InteractionData::InteractionData(InteractionData && other)
documentation:
  brief: Moves an InteractionData object, transferring its resources to a new instance.
  description: The InteractionData move constructor transfers all resources from another
    InteractionData object to this one. This operation is typically used when an InteractionData
    object needs to be moved rather than copied, improving performance by avoiding
    unnecessary deep copies. The source object becomes invalid after the move and
    should not be used. In the context of TrinityCore's World of Warcraft server implementation,
    this constructor supports efficient handling of interaction data structures such
    as those related to game objects or NPC interactions.
  parameters: []
  returns: null
  examples:
  - title: Move an InteractionData object
    code: 'InteractionData data1;

      // ... initialize data1 ...

      InteractionData data2 = std::move(data1); // Move constructor called

      // data1 is now in a valid but unspecified state'
    language: cpp
  notes: This is a move constructor, which means it's part of C++'s move semantics.
    It should only be used when transferring ownership of resources from one object
    to another. After calling this constructor, the source object must not be accessed.
  warnings: Using the moved-from object after this constructor is called results in
    undefined behavior. Ensure that no other code attempts to use the original object
    after it has been moved.
  related:
  - InteractionData::InteractionData(const InteractionData&)
  - InteractionData::~InteractionData
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T03:53:54.047333'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
