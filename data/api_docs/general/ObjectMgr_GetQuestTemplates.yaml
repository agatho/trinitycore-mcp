api:
  class: ObjectMgr
  method: GetQuestTemplates
  signature: const int & ObjectMgr::GetQuestTemplates() const
documentation:
  brief: Returns a reference to the internal container holding all quest templates
    in the game world.
  description: The GetQuestTemplates method provides access to the internal collection
    of all quest templates loaded into the TrinityCore server. This method returns
    a constant reference to an integer-based container (likely a map or vector) that
    stores quest data indexed by quest ID. The returned reference allows read-only
    access to the complete set of available quests without copying the entire data
    structure. This is commonly used during quest system initialization, validation,
    and lookup operations within the game world.
  parameters: []
  returns: A constant reference to an integer container representing all loaded quest
    templates in the game world. The exact type is typically std::map<uint32, QuestTemplate*>
    or similar structure that maps quest IDs to their corresponding template data
    structures.
  examples:
  - title: Accessing Quest Templates for Validation
    code: "void ValidateQuests()\n{\n    const auto& questTemplates = sObjectMgr->GetQuestTemplates();\n\
      \    for (const auto& pair : questTemplates)\n    {\n        uint32 questId\
      \ = pair.first;\n        QuestTemplate* questTemplate = pair.second;\n     \
      \   // Perform validation logic here\n        if (!questTemplate)\n        \
      \    continue;\n        // Process quest template data\n    }\n}"
    language: cpp
  notes: This method provides a read-only view of the quest templates and should not
    be modified directly. The returned reference is only valid while the ObjectMgr
    instance exists and the server is running. Accessing this data structure concurrently
    from multiple threads may require synchronization if modifications are made elsewhere
    in the codebase.
  warnings: Do not modify the quest templates through this reference as it provides
    a constant view. Modifying the underlying container directly could lead to undefined
    behavior or crashes. This method should be used primarily for read-only operations
    such as validation, lookup, or iteration over all available quests.
  related:
  - GetQuestTemplate
  - LoadQuests
  - AddQuest
  - RemoveQuest
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:15:41.687478'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
