api:
  class: Spell
  method: AddGOTarget
  signature: void Spell::AddGOTarget(GameObject * target, uint32 effectMask)
documentation:
  brief: Adds a GameObject target to the spell's target list for the specified effect
    mask.
  description: The AddGOTarget method registers a GameObject as a target for the current
    spell, associating it with a specific effect mask. This allows the spell system
    to properly handle GameObject interactions during spell execution, such as triggering
    traps, activating doors, or affecting interactive world objects. The effectMask
    parameter determines which effects of the spell should target this GameObject.
    This method is typically called internally by the spell system when processing
    spell effects that involve GameObjects.
  parameters:
  - name: target
    description: Pointer to the GameObject that will be added as a target for this
      spell. Must not be null.
  - name: effectMask
    description: Bitmask specifying which spell effects should target this GameObject.
      Each bit corresponds to a specific effect index in the spell.
  returns: null
  examples:
  - title: Adding a Door as Spell Target
    code: "GameObject* door = player->FindNearestGameObject(GO_DOOR_ID, 5.0f);\nif\
      \ (door)\n{\n    spell->AddGOTarget(door, 1 << EFFECT_0);\n}"
    language: cpp
  - title: Adding Multiple GameObject Targets
    code: "for (auto& target : gameObjects)\n{\n    if (target && target->GetGOInfo()->type\
      \ == GAMEOBJECT_TYPE_TRAP)\n    {\n        spell->AddGOTarget(target, 1 << EFFECT_1);\n\
      \    }\n}"
    language: cpp
  notes: This method does not validate whether the GameObject is within range or valid
    for the spell. The actual targeting logic and validation occurs during spell processing.
    The effectMask parameter should be constructed using bit shifts (e.g., 1 << EFFECT_0)
    to specify which effects target this object.
  warnings: Passing a null GameObject pointer will likely cause undefined behavior
    or crashes. Ensure that the GameObject is valid and exists before calling this
    method. The effectMask must correctly correspond to the spell's effect indices,
    otherwise the target may not be processed as expected.
  related:
  - Spell::AddUnitTarget
  - Spell::AddItemTarget
  - Spell::AddTarget
  - Spell::GetGOTargets
metadata:
  confidence: 0.92
  generated_at: '2025-10-31T10:02:53.226180'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
