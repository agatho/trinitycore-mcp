api:
  class: GameObject
  method: AddUniqueUse
  signature: void GameObject::AddUniqueUse(int * player)
documentation:
  brief: Adds a unique use identifier to the GameObject for tracking purposes.
  description: The AddUniqueUse method is used to register a unique identifier for
    a GameObject, typically related to player interaction or usage tracking. This
    method allows developers to monitor how many times a specific GameObject has been
    interacted with by players, which is useful for quest tracking, achievement systems,
    or game mechanics that require unique interactions. The method takes an integer
    pointer representing the player's unique identifier and adds it to the GameObject's
    internal tracking system.
  parameters:
  - name: player
    description: Pointer to an integer representing the unique identifier of the player
      who is using the GameObject. This value is typically used to track which players
      have interacted with this specific GameObject.
  returns: null
  examples:
  - title: Basic usage example
    code: 'GameObject* go = new GameObject();

      int playerID = 12345;


      go->AddUniqueUse(&playerID);'
    language: cpp
  notes: This method is typically used in conjunction with other GameObject interaction
    methods to track player usage. It may be called multiple times per player, and
    the implementation likely stores these identifiers in a set or similar data structure
    for efficient lookup.
  warnings: Care should be taken when using this method, as improper handling of player
    identifiers can lead to incorrect tracking of interactions. Ensure that the pointer
    passed is valid and not null before calling this method.
  related:
  - GameObject::GetGUID
  - GameObject::AddUse
  - GameObject::SetOwner
  - GameObject::GetOwner
  - GameObject::IsInUse
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T02:29:00.144071'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
