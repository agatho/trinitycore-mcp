api:
  class: WorldStateScript
  method: OnValueChange
  signature: void WorldStateScript::OnValueChange(int32 worldStateId, int32 oldValue,
    int32 newValue, const Map * map)
documentation:
  brief: Invoked when a world state value changes on a specific map.
  description: The OnValueChange method is a callback function that gets triggered
    whenever a world state value is modified within a particular map. This method
    allows scripts to react to dynamic changes in game world state, which can include
    UI elements, quest progress, or other server-side variables that are tracked per-map.
    It provides the old and new values of the changed world state, enabling developers
    to implement logic based on the transition between these states.
  parameters:
  - name: worldStateId
    description: The unique identifier of the world state that has changed. This ID
      corresponds to a specific game variable or UI element tracked by the server.
  - name: oldValue
    description: The previous value of the world state before the change occurred.
  - name: newValue
    description: The new value of the world state after the change has been applied.
  - name: map
    description: Pointer to the Map object where the world state change took place.
      This allows scripts to determine which map context the change occurred in.
  returns: null
  examples:
  - title: Basic World State Change Handler
    code: "class MyWorldStateScript : public WorldStateScript\n{\npublic:\n    void\
      \ OnValueChange(int32 worldStateId, int32 oldValue, int32 newValue, const Map*\
      \ map) override\n    {\n        if (worldStateId == 12345)\n        {\n    \
      \        // Handle change in a specific world state\n            sLog->outString(\"\
      World state %d changed from %d to %d on map %u\", worldStateId, oldValue, newValue,\
      \ map->GetId());\n        }\n    }\n};"
    language: cpp
  notes: This method is called synchronously during the game loop and should avoid
    heavy computations or blocking operations to prevent performance degradation.
    The 'map' parameter may be null in certain edge cases, so it's recommended to
    check for validity before dereferencing.
  warnings: Do not modify world state values directly within this handler unless you
    are certain of the implications; doing so could lead to infinite recursion or
    unexpected behavior. Be cautious when using the map pointer as it might not always
    be valid depending on the context of the change.
  related:
  - WorldStateScript::OnOpen
  - WorldStateScript::OnClose
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:05:19.176549'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
