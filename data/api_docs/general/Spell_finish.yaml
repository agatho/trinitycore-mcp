api:
  class: Spell
  method: finish
  signature: void Spell::finish(SpellCastResult result)
documentation:
  brief: Completes spell casting process and handles result
  description: The Spell::finish method finalizes the spell casting process by handling
    the specified SpellCastResult. It ensures proper cleanup of spell resources, updates
    player state, and manages the spell's outcome based on the provided result. This
    method is crucial for maintaining game mechanics integrity during spell execution
    and prevents potential resource leaks or incorrect state handling.
  parameters:
  - name: result
    description: The SpellCastResult that determines how the spell casting should
      be concluded. Valid values include SUCCESS, FAILED, CANCELLED, etc., which affect
      the spell's behavior and player state.
  returns: null
  examples:
  - title: Basic spell completion example
    code: 'Spell* spell = new Spell(player, spellInfo);

      spell->finish(SPELL_CAST_SUCCESS);'
    language: cpp
  - title: Advanced spell completion with error handling
    code: "Spell* spell = new Spell(player, spellInfo);\nif (spell->IsSpellReady())\
      \ {\n    spell->finish(SPELL_CAST_FAILED);\n} else {\n    spell->finish(SPELL_CAST_CANCELLED);\n\
      }"
    language: cpp
  notes: The method should only be called after spell initialization and before any
    cleanup. It's important to ensure that the result parameter is valid for proper
    handling of spell states.
  warnings: Improper use of this method can lead to resource leaks or incorrect player
    state updates. Always verify that the spell has been properly initialized before
    calling finish.
  related:
  - Spell::cast
  - Spell::cancel
  - Spell::IsSpellReady
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T21:44:17.933023'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
