api:
  class: GuildBankManager
  method: GetRemainingWithdraws
  signature: uint32 GuildBankManager::GetRemainingWithdraws(int * player, uint32 tabId)
documentation:
  brief: Returns the number of remaining guild bank item withdrawals for a player
  description: The GetRemainingWithdraws method retrieves the count of how many more
    times a player can withdraw items from a specific guild bank tab. This functionality
    is part of the guild bank system's withdrawal limits, which restrict players from
    withdrawing items too frequently to prevent abuse. The method takes into account
    the player's current withdrawal history and the configured limits for the specified
    tab. It returns zero if the player has exceeded their allowed withdrawals or if
    the tab ID is invalid.
  parameters:
  - name: player
    description: Pointer to an integer representing the player's GUID (Global Unique
      Identifier). This identifies which player's withdrawal count is being queried.
  - name: tabId
    description: The ID of the guild bank tab for which to check remaining withdrawals.
      Must be a valid tab index between 0 and the maximum number of tabs in the guild
      bank.
  returns: Returns a uint32 value indicating the number of remaining withdrawals allowed
    for the specified player and tab. A return value of 0 indicates that no more withdrawals
    are permitted, or an error occurred (e.g., invalid parameters).
  examples:
  - title: Check Remaining Withdrawals for Player
    code: "uint32 remaining = guildBankManager->GetRemainingWithdraws(&playerGuid,\
      \ 0);\nif (remaining > 0)\n{\n    // Allow withdrawal\n    printf(\"Player can\
      \ withdraw %u more times from tab 0\\n\", remaining);\n}\nelse\n{\n    // Deny\
      \ withdrawal\n    printf(\"Player has exceeded withdrawal limit for this tab\\\
      n\");\n}"
    language: cpp
  notes: This method is typically used in conjunction with guild bank transaction
    logic to enforce withdrawal limits. The actual limit configuration may vary per
    server settings and can be adjusted via game masters or configuration files.
  warnings: Ensure that the player GUID passed is valid and that the tab ID corresponds
    to an existing tab; otherwise, the result may be undefined or incorrect.
  related:
  - GetGuildBankTab
  - WithdrawItemFromGuildBank
  - DepositItemToGuildBank
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T13:06:22.933413'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
