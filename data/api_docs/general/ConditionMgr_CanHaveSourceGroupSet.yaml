api:
  class: ConditionMgr
  method: CanHaveSourceGroupSet
  signature: bool ConditionMgr::CanHaveSourceGroupSet(ConditionSourceType sourceType)
documentation:
  brief: Determines whether a given condition source type can have a source group
    set assigned to it.
  description: The CanHaveSourceGroupSet method checks if a specific ConditionSourceType
    is allowed to use source group sets in the condition system. In TrinityCore's
    condition management, certain types of conditions require or support grouping
    mechanisms that allow multiple conditions to be evaluated together as a logical
    unit. This method acts as a validation check to ensure that only appropriate condition
    source types can utilize source group functionality. The method is typically used
    internally by the ConditionMgr class when processing or validating condition data
    to maintain system integrity and prevent invalid configurations.
  parameters: []
  returns: Returns true if the specified ConditionSourceType supports source group
    sets, false otherwise. This indicates whether the condition type can be part of
    a grouped condition set where multiple conditions are evaluated together.
  examples:
  - title: Checking if a condition source type supports source groups
    code: "ConditionMgr* mgr = sConditionMgr;\nif (mgr->CanHaveSourceGroupSet(CONDITION_SOURCE_TYPE_GOSSIP))\
      \ {\n    // This source type can use source group sets\n    printf(\"Gossip\
      \ conditions support source groups\\n\");\n} else {\n    // This source type\
      \ cannot use source group sets\n    printf(\"Gossip conditions do not support\
      \ source groups\\n\");\n}"
    language: cpp
  notes: This method is primarily used internally by the ConditionMgr class to validate
    condition configurations during loading and processing. It helps maintain consistency
    in how different types of conditions are handled within the TrinityCore system,
    particularly when dealing with complex conditional logic involving multiple related
    conditions.
  warnings: null
  related:
  - ConditionMgr::AddCondition
  - ConditionMgr::HasCondition
  - ConditionMgr::CheckCondition
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T16:03:14.087177'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
