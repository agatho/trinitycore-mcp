api:
  class: SpellInfo
  method: CanBeInterrupted
  signature: bool SpellInfo::CanBeInterrupted(const WorldObject * interruptCaster,
    const Unit * interruptTarget, bool ignoreImmunity) const
documentation:
  brief: Determines whether a spell can be interrupted by an interrupting effect.
  description: The CanBeInterrupted method evaluates whether a spell can be interrupted
    by external factors such as casting interruption or immunity effects. It checks
    if the spell's properties allow for interruption based on the provided parameters,
    including whether the caster and target are valid for interruption, and whether
    immunity should be ignored. This method is crucial for determining spell behavior
    during combat and handling of interruptible spells in World of Warcraft mechanics.
  parameters:
  - name: interruptCaster
    description: Pointer to the object that is attempting to interrupt the spell.
      This could be a unit or game object that initiates the interruption.
  - name: interruptTarget
    description: Pointer to the unit that is being interrupted. This represents the
      target of the spell being interrupted.
  - name: ignoreImmunity
    description: Boolean flag indicating whether immunity should be ignored during
      interruption check. If true, immunity effects are bypassed; if false, immunity
      prevents interruption.
  returns: Returns true if the spell can be interrupted by the specified conditions,
    false otherwise. The method evaluates based on spell properties and interrupting
    factors.
  examples:
  - title: Basic Usage Example
    code: "if (spellInfo->CanBeInterrupted(caster, target, false)) {\n    // Spell\
      \ can be interrupted\n}"
    language: cpp
  - title: Advanced Usage with Immunity Check
    code: "bool result = spellInfo->CanBeInterrupted(caster, target, true);\nif (result)\
      \ {\n    // Spell can be interrupted even with immunity\n}"
    language: cpp
  notes: This method is typically used in spell interruption logic during combat.
    It may involve checking against various spell properties and flags to determine
    if interruption is allowed. Performance considerations include checking against
    valid object pointers and ensuring proper handling of immunity flags.
  warnings: Care must be taken when using this method as it involves complex interactions
    between spell properties, caster, and target objects. Incorrect usage can lead
    to improper spell interruption behavior during combat.
  related:
  - SpellInfo::IsInterruptible
  - SpellInfo::CanCast
  - SpellInfo::HasEffect
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:15:33.425900'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
