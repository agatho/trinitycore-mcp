api:
  class: Unit
  method: SetCanFly
  signature: bool Unit::SetCanFly(bool enable)
documentation:
  brief: Enables or disables flying capability for the unit.
  description: The SetCanFly method allows a unit to either enable or disable its
    flying state, which affects movement capabilities and gameplay mechanics. When
    enabled, the unit can fly above ground level, allowing it to bypass terrain obstacles
    and move through air. This method is commonly used in game scripting to control
    unit behavior during specific events or phases. The operation requires that the
    unit's movement flags be updated accordingly, and may involve additional checks
    for valid flight states depending on the context.
  parameters:
  - name: enable
    description: A boolean value indicating whether to enable (true) or disable (false)
      flying capability for the unit.
  returns: Returns true if the operation was successful, false otherwise. The method
    may return false if the unit cannot fly due to restrictions or invalid state conditions.
  examples:
  - title: Basic usage example
    code: "Unit* target = GetTarget();\nbool result = target->SetCanFly(true);\nif\
      \ (result) {\n    // Unit now can fly\n}"
    language: cpp
  - title: Advanced usage with conditional logic
    code: "Unit* player = GetPlayer();\nif (player->GetTypeId() == TYPEID_PLAYER)\
      \ {\n    bool success = player->SetCanFly(false);\n    // Disable flying for\
      \ player\n}\nelse {\n    // Handle non-player unit\n}"
    language: cpp
  notes: Implementation details include updating the unit's movement flags and potentially
    triggering visual effects or animation updates. Performance considerations are
    minimal, but may involve synchronization with client-side movement updates. Thread
    safety depends on the context of use; if used in a multithreaded environment,
    proper locking mechanisms should be applied.
  warnings: Care must be taken when enabling flight for units that may not have valid
    flight state conditions. Improper usage can lead to unexpected behavior or visual
    glitches. Avoid calling this method during critical gameplay events without proper
    validation.
  related:
  - SetCanFly
  - GetCanFly
  - IsFlying
  - SetMovementFlag
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:28:28.985421'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
