api:
  class: Player
  method: RemoveCurrency
  signature: void Player::RemoveCurrency(uint32 id, int32 amount, int destroyReason)
documentation:
  brief: Removes currency from the player's inventory based on specified ID and amount
  description: The RemoveCurrency method removes a specified amount of currency from
    the player's inventory. It takes a currency ID and quantity as parameters, and
    can optionally destroy the currency based on a destroy reason. This method is
    commonly used in game mechanics where players need to spend or lose currency items,
    such as during quest completion, item purchases, or when applying penalties for
    certain actions. The method ensures proper handling of currency removal and updates
    the player's inventory accordingly.
  parameters:
  - name: id
    description: The currency ID representing the type of currency to remove. This
      corresponds to the CurrencyType field in the database.
  - name: amount
    description: The quantity of currency to remove from the player's inventory. Can
      be positive or negative, with negative values indicating removal of currency.
  - name: destroyReason
    description: Optional parameter that determines how the currency should be destroyed.
      If set to 0, no destruction occurs; if non-zero, it may trigger specific game
      mechanics for currency removal.
  returns: null
  examples:
  - title: Basic Currency Removal Example
    code: 'Player* player = GetPlayer();

      player->RemoveCurrency(1234, 100, 0);'
    language: cpp
  - title: Advanced Currency Removal with Destruction
    code: 'Player* player = GetPlayer();

      player->RemoveCurrency(5678, -50, 1);

      // This removes 50 currency units and triggers destruction logic'
    language: cpp
  notes: Implementation details include checking for sufficient currency in inventory
    before removal, handling of negative amounts (which may indicate removal rather
    than addition), and ensuring proper synchronization with the database. Performance
    considerations involve potential database updates and inventory checks during
    removal operations.
  warnings: The method may cause issues if the currency ID does not exist or if the
    amount exceeds available currency. Care should be taken when using negative amounts
    as they might lead to unexpected behavior in currency addition logic.
  related:
  - AddCurrency
  - GetCurrency
  - HasCurrency
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T00:24:53.713813'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
