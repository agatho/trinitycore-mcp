api:
  class: Map
  method: SendRemoveTransports
  signature: void Map::SendRemoveTransports(Player * player)
documentation:
  brief: Removes all transport objects from the specified player's client view
  description: The SendRemoveTransports method is responsible for instructing a specific
    player's client to remove all currently displayed transport objects (such as boats,
    zeppelins, or other moving platforms) from their game world view. This typically
    occurs when a player leaves an area where transports are active, or when the transport
    system needs to be reset for a particular player. The method ensures that the
    client's rendering and networking state is synchronized with the server's understanding
    of which transports should be visible to that player. It operates at the map level,
    affecting only the specified player rather than all players on the map.
  parameters:
  - name: player
    description: A pointer to the Player object whose client will have transport objects
      removed from their view. Must not be null.
  returns: null
  examples:
  - title: Removing transports when player leaves transport zone
    code: "void Player::OnMapChanged()\n{\n    if (GetMap()->IsTransportMap())\n \
      \   {\n        GetMap()->SendRemoveTransports(this);\n    }\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore framework when
    managing player transitions between different map types or zones. It may be invoked
    during player logout, zone changes, or when a transport becomes inactive for a
    specific player. The implementation likely sends a series of network packets to
    the client to remove transport-related GameObjects from the player's client-side
    object cache.
  warnings: Calling this method with a null player pointer will result in undefined
    behavior and likely crash the server. Ensure that the player pointer is valid
    before invoking this method. Additionally, calling this method frequently or unnecessarily
    may cause performance overhead due to network packet generation.
  related:
  - Map::SendInitTransports
  - Map::SendUpdateTransports
  - Player::AddToVisibleTransports
  - Player::RemoveFromVisibleTransports
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:55:25.097547'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
