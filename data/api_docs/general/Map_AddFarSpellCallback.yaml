api:
  class: Map
  method: AddFarSpellCallback
  signature: void Map::AddFarSpellCallback(FarSpellCallback && callback)
documentation:
  brief: Registers a callback function to be invoked when a far spell effect occurs
    on this map.
  description: The AddFarSpellCallback method allows subsystems or scripts to register
    a callable object that will be executed whenever a 'far spell' event is triggered
    within the map context. This mechanism is typically used for handling spells or
    effects that have global impact across large distances, such as area-of-effect
    abilities or world-triggered events. The callback function receives information
    about the spell and its target, enabling complex game logic to respond dynamically
    to these occurrences. The method does not validate the callback itself but stores
    it for later invocation by the map's event system.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage of AddFarSpellCallback
    code: "void MySpellHandler(Map* map, uint32 spellId, WorldObject* target) {\n\
      \    // Handle the far spell event\n    sLog->outString(\"Far spell %u triggered\
      \ on %s\", spellId, target ? target->GetName().c_str() : \"unknown\");\n}\n\n\
      // Registering the callback\nmap->AddFarSpellCallback([=](uint32 spellId, WorldObject*\
      \ target) {\n    MySpellHandler(map, spellId, target);\n});"
    language: cpp
  notes: This method is part of the map's event handling system and should be used
    carefully to avoid performance bottlenecks. Callbacks registered here are invoked
    synchronously during the map's update cycle, so long-running operations within
    the callback may impact overall server performance.
  warnings: Ensure that callbacks registered via this method do not cause infinite
    loops or race conditions. Also, be aware that the callback will be invoked from
    within a potentially multi-threaded environment depending on how the map is updated.
  related:
  - RemoveFarSpellCallback
  - GetFarSpellCallbacks
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T11:16:35.713008'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
