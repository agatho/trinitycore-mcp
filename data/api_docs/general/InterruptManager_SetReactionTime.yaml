api:
  class: InterruptManager
  method: SetReactionTime
  signature: void InterruptManager::SetReactionTime(uint32 reactionTimeMs)
documentation:
  brief: Sets the reaction time for the interrupt manager to a specified value in
    milliseconds.
  description: The SetReactionTime method configures the reaction time threshold used
    by the InterruptManager class. This value determines how quickly the system responds
    to interrupts or events within the game context, typically affecting AI behavior
    and event handling timing. The method accepts a uint32 parameter representing
    the desired reaction time in milliseconds. This setting can influence performance
    and responsiveness of various subsystems that rely on timely interrupt processing.
  parameters:
  - name: reactionTimeMs
    description: The reaction time value in milliseconds to set for the interrupt
      manager. Valid values are typically positive integers, with higher values resulting
      in slower response times. This parameter controls timing sensitivity for interrupt
      handling within the TrinityCore framework.
  returns: null
  examples:
  - title: Setting Reaction Time to 500ms
    code: 'InterruptManager* manager = new InterruptManager();

      manager->SetReactionTime(500); // Sets reaction time to 500 milliseconds'
    language: cpp
  - title: Dynamic Reaction Time Adjustment
    code: "void AdjustReactionTime(Player* player, uint32 newTimeMs) {\n    if (player\
      \ && player->GetInterruptManager()) {\n        player->GetInterruptManager()->SetReactionTime(newTimeMs);\n\
      \    }\n}"
    language: cpp
  notes: This method likely affects internal timing mechanisms used by the interrupt
    system. It may be called during initialization or runtime configuration changes.
    The exact impact on performance depends on how other systems utilize this reaction
    time value.
  warnings: Setting extremely low values (e.g., below 10ms) might cause excessive
    CPU usage or system instability. Ensure that the reaction time is appropriate
    for your specific use case and does not conflict with other timing-sensitive operations.
  related:
  - GetReactionTime
  - ResetReactionTime
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:26:50.761567'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
