api:
  class: ScenarioMgr
  method: LoadDBData
  signature: void ScenarioMgr::LoadDBData()
documentation:
  brief: Loads scenario-related data from the database into memory for active scenarios.
  description: The LoadDBData method initializes and loads all scenario definitions
    and associated data from the game's database tables into memory. This method is
    typically called during server startup or when scenario systems need to be refreshed.
    It retrieves information about scenario templates, criteria, rewards, and other
    related metadata necessary for scenario handling in TrinityCore. The loaded data
    is used by the scenario system to determine which scenarios are available, their
    requirements, and how they should behave during execution.
  parameters: []
  returns: null
  examples:
  - title: Basic usage during server initialization
    code: ScenarioMgr::instance()->LoadDBData();
    language: cpp
  notes: This method should only be called once during server initialization or when
    database content is updated and needs to be reloaded. The method performs database
    queries and may cause temporary performance impact during execution. It's typically
    invoked by the core system automatically during startup.
  warnings: Calling this method multiple times without proper cleanup can lead to
    memory leaks or duplicate data loading. Avoid calling this method in high-frequency
    loops or during active gameplay as it may disrupt ongoing scenarios.
  related:
  - GetScenario
  - CreateScenario
  - UpdateScenario
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T20:41:26.361010'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
