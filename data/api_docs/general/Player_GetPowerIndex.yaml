api:
  class: Player
  method: GetPowerIndex
  signature: uint32 Player::GetPowerIndex(int power) const
documentation:
  brief: Returns the power index for a specified power type.
  description: The GetPowerIndex method retrieves the index associated with a specific
    power type from the player's power types. This index is used to identify and access
    different power types such as mana, rage, focus, energy, and others within the
    game system. The method is essential for determining which power type corresponds
    to which index in the player's power management system, allowing for accurate
    power tracking and manipulation during gameplay.
  parameters:
  - name: power
    description: The power type value to retrieve the index for. Valid values include
      mana (0), rage (1), focus (2), energy (3), and other power types defined in
      the game system.
  returns: Returns the index of the specified power type, which is used to identify
    the power type within the player's power management system. The return value represents
    a uint32 that corresponds to the index of the power type, typically ranging from
    0 to 4 for standard power types.
  examples:
  - title: Basic usage example
    code: uint32 powerIndex = player->GetPowerIndex(0); // Returns index for mana
    language: cpp
  - title: Advanced usage example
    code: "Player* player = ObjectAccessor::GetPlayer(\"playerName\");\nuint32 index\
      \ = player->GetPowerIndex(player->GetPowerType());\nif (index == POWER_MANA)\n\
      {\n    // Handle mana power type\n}"
    language: cpp
  notes: The method is part of the Player class and is used in conjunction with other
    power-related methods. It should be noted that the index returned corresponds
    to the player's power type, not necessarily the actual power value. The method
    is typically used for internal game mechanics and may not be directly exposed
    to players.
  warnings: This method should be used carefully as it can lead to incorrect indexing
    if the power type is not correctly specified. Incorrect usage could result in
    invalid power types being accessed or manipulated.
  related:
  - GetPowerType
  - GetPower
  - SetPower
  - GetMaxPower
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T16:42:21.706318'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
