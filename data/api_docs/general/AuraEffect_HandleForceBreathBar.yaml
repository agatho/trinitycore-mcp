api:
  class: AuraEffect
  method: HandleForceBreathBar
  signature: void AuraEffect::HandleForceBreathBar(const AuraApplication * aurApp,
    uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a force breath bar aura effect on the target.
  description: The HandleForceBreathBar method is responsible for managing the application
    and removal of a force breath bar aura effect, typically used in combat scenarios
    where a character's breath is being forcibly controlled or restricted. This method
    is invoked during aura application or removal events and adjusts the target's
    state accordingly. It handles the visual and mechanical aspects of the aura, such
    as updating breath bars or disabling certain actions while the effect is active.
    The method operates within the TrinityCore framework and interacts with the AuraApplication
    system to ensure proper synchronization of the aura's effects on the affected
    unit.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter provides context for the aura
      effect, including the target unit and aura properties.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation. This
      value typically determines how the aura effect should be processed, such as
      whether it's being applied (1) or removed (0).
  - name: apply
    description: A boolean flag that specifies whether to apply (true) or remove (false)
      the aura effect. When true, the method applies the force breath bar effect;
      when false, it removes it.
  returns: null
  examples:
  - title: Applying a Force Breath Bar Aura
    code: 'AuraApplication* app = new AuraApplication(target, caster, auraInfo);

      AuraEffect* effect = new AuraEffect();

      effect->HandleForceBreathBar(app, 1, true); // Apply the aura'
    language: cpp
  - title: Removing a Force Breath Bar Aura
    code: 'AuraApplication* app = GetAuraApplication();

      AuraEffect* effect = GetAuraEffect();

      effect->HandleForceBreathBar(app, 0, false); // Remove the aura'
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    and should not be invoked directly unless implementing custom aura logic. It relies
    on the AuraApplication context to determine how to modify the target's state and
    may interact with client-side visual updates for the breath bar.
  warnings: Improper use of this method or incorrect parameters can lead to unexpected
    behavior in combat mechanics, such as incorrect breath bar display or unintended
    restrictions on player actions. Ensure that all aura applications are properly
    initialized before calling this method.
  related:
  - AuraEffect::ApplyAura
  - AuraEffect::RemoveAura
  - AuraApplication::GetTarget
  - AuraApplication::GetCaster
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:49:49.408176'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
