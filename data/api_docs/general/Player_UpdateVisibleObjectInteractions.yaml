api:
  class: Player
  method: UpdateVisibleObjectInteractions
  signature: void Player::UpdateVisibleObjectInteractions(bool allUnits, bool onlySpellClicks,
    bool gameObjectQuestGiverStatus, bool questObjectiveGameObjects)
documentation:
  brief: Updates the visibility state of objects in the player's interaction range,
    including units and game objects.
  description: The UpdateVisibleObjectInteractions method refreshes the set of visible
    game objects and units that a player can interact with. It determines which objects
    should be shown to the player based on various criteria such as proximity, quest
    status, and spell click interactions. This method is typically invoked when the
    player's view changes or when object visibility needs to be recalculated. The
    method considers multiple flags to control what types of interactions are updated,
    including all units, only spell-click interactions, game object quest giver status,
    and quest objective game objects.
  parameters:
  - name: allUnits
    description: When true, includes all visible units in the interaction update.
      When false, only updates specific unit types.
  - name: onlySpellClicks
    description: When true, updates only objects that have spell click interactions
      enabled. When false, ignores this filter.
  - name: gameObjectQuestGiverStatus
    description: When true, updates the quest giver status of game objects. When false,
      skips this update.
  - name: questObjectiveGameObjects
    description: When true, includes game objects that are part of active quest objectives.
      When false, excludes them.
  returns: null
  examples:
  - title: Basic usage to update all visible interactions
    code: player->UpdateVisibleObjectInteractions(true, false, true, true);
    language: cpp
  - title: Update only spell click interactions
    code: player->UpdateVisibleObjectInteractions(false, true, false, false);
    language: cpp
  notes: This method is usually called internally by the core engine when a player
    moves or enters a new area. It's important to understand that this method does
    not directly send packets to the client; instead, it updates internal state which
    may later be synchronized with the client. Performance-wise, this method can be
    expensive if many objects are in range and need updating.
  warnings: Calling this method manually should be done with caution as improper usage
    might lead to incorrect visibility states or performance issues. The flags passed
    to this method must be carefully considered to avoid unintended behavior in quest
    or interaction systems.
  related:
  - Player::UpdateVisibility
  - Player::UpdateObjectVisibility
  - Player::AddToVisibleObjects
  - Player::RemoveFromVisibleObjects
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T17:07:25.487267'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
