api:
  class: Aura
  method: HasEffect
  signature: bool Aura::HasEffect(uint8 effIndex) const
documentation:
  brief: Checks if the aura has an effect at the specified index.
  description: The HasEffect method determines whether a specific effect index is
    active within the aura. This method is commonly used in World of Warcraft's TrinityCore
    to verify the presence of a particular aura effect before performing operations
    or applying additional logic. It allows developers to conditionally execute code
    based on the existence of an effect, which is crucial for implementing complex
    spell behaviors and mechanics. The method performs a simple lookup within the
    aura's internal effect array and returns true if the effect exists at the given
    index, false otherwise.
  parameters: []
  returns: Returns true if the aura has an effect at the specified index; otherwise,
    returns false.
  examples:
  - title: Basic Usage
    code: "if (aura->HasEffect(0)) {\n    // Handle the first effect of the aura\n\
      }"
    language: cpp
  - title: Conditional Spell Logic
    code: "Aura* aura = unit->GetAura(12345);\nif (aura && aura->HasEffect(EFFECT_0))\
      \ {\n    // Apply additional logic when effect 0 is present\n}"
    language: cpp
  notes: This method does not validate the index range, so calling it with an invalid
    effect index may lead to undefined behavior. It's recommended to ensure that the
    effect index is within valid bounds before invoking this method.
  warnings: Using an invalid effect index can result in memory access violations or
    unexpected behavior. Always verify that the effect index corresponds to a valid
    effect within the aura before calling this method.
  related:
  - GetEffect
  - HasEffectType
  - GetAuraEffect
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:13:38.228504'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
