api:
  class: AuraEffect
  method: HandleSetCantSwim
  signature: void AuraEffect::HandleSetCantSwim(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Applies or removes the cant swim aura effect on a unit.
  description: The HandleSetCantSwim method manages the application or removal of
    an aura that prevents a unit from swimming. This method is typically invoked by
    the aura system when an aura with the cant swim effect is applied or removed from
    a target. It modifies the unit's movement flags to disable swimming capabilities
    and ensures proper synchronization with the client. The method operates based
    on the provided aura application context, mode, and apply flag to determine the
    appropriate action.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object that contains information about
      the aura being applied or removed. This parameter specifies which aura is affecting
      the target unit.
  - name: mode
    description: The mode of operation for the aura effect, typically indicating whether
      this is a passive or active application. Valid values are usually 0 or 1, where
      0 indicates passive and 1 indicates active application.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the cant swim effect. When true, the unit loses swimming capability; when false,
      it regains swimming capability.
  returns: null
  examples:
  - title: Applying Cant Swim Aura
    code: 'AuraApplication* app = new AuraApplication();

      app->SetAuraType(AURA_TYPE_CANT_SWIM);

      HandleSetCantSwim(app, 1, true); // Apply cant swim effect'
    language: cpp
  - title: Removing Cant Swim Aura
    code: "AuraApplication* app = GetAuraApplicationByType(AURA_TYPE_CANT_SWIM);\n\
      if (app)\n{\n    HandleSetCantSwim(app, 0, false); // Remove cant swim effect\n\
      }"
    language: cpp
  notes: This method directly manipulates the unit's movement flags and should only
    be called from within the aura application system. The implementation relies on
    the underlying movement system to enforce swimming restrictions. Ensure that the
    AuraApplication object passed is valid and properly initialized before calling
    this method.
  warnings: Calling this method with an invalid or null AuraApplication pointer will
    result in undefined behavior. Always verify that the aura context is valid before
    invoking this function. Improper use may cause client desynchronization or movement-related
    bugs.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::SetCanSwim
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T08:59:00.754248'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
