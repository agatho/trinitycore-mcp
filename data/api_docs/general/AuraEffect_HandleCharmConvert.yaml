api:
  class: AuraEffect
  method: HandleCharmConvert
  signature: void AuraEffect::HandleCharmConvert(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Handles the conversion of a charm aura application when it is applied or
    removed from a target.
  description: The HandleCharmConvert method manages the behavior associated with
    charm effects in World of Warcraft, specifically handling the conversion process
    when a charm aura is applied or removed from a target. This method is part of
    the AuraEffect class and is invoked during aura application or removal events.
    It ensures proper state transitions for charm-related mechanics, such as updating
    the target's unit flags, modifying AI behavior, and managing the relationship
    between the charmer and the charmee. The method takes into account the mode (application
    or removal) and whether the effect is being applied or removed to determine appropriate
    actions.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about which unit is affected and
      the aura's properties.
  - name: mode
    description: The mode of operation indicating how the aura is being handled. Typically
      0 for application and 1 for removal, though exact values may depend on internal
      TrinityCore implementation.
  - name: apply
    description: Boolean flag indicating whether the aura is being applied (true)
      or removed (false). This determines the direction of the charm conversion process.
  returns: null
  examples:
  - title: Basic usage in aura handling
    code: "void MyCharmAura::HandleCharmConvert(const AuraApplication* aurApp, uint8\
      \ mode, bool apply) const {\n    if (apply) {\n        // Apply charm conversion\
      \ logic\n        aurApp->GetTarget()->SetCharmedBy(GetCaster(), CHARM_TYPE_NORMAL);\n\
      \    } else {\n        // Remove charm conversion logic\n        aurApp->GetTarget()->RemoveCharmedBy();\n\
      \    }\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    when charm effects are applied or removed. Developers should not call this directly
    unless implementing custom aura handling logic. The method modifies unit flags
    and AI states, so it's important to ensure proper synchronization with other systems.
  warnings: Improper handling of charm conversions can lead to unexpected behavior
    in NPC AI or player control. Ensure that all related units are properly synchronized
    when applying or removing charm effects.
  related:
  - AuraEffect::HandleApply
  - AuraEffect::HandleRemove
  - Unit::SetCharmedBy
  - Unit::RemoveCharmedBy
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T12:54:45.701285'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
