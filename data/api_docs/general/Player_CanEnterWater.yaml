api:
  class: Player
  method: CanEnterWater
  signature: bool Player::CanEnterWater() const
documentation:
  brief: Determines whether the player can enter water.
  description: The CanEnterWater method checks if a player is allowed to enter water,
    typically used for determining if a player can swim or enter water zones. This
    method evaluates various conditions including player state, aura effects, and
    movement restrictions that prevent entry into water areas. It returns true if
    the player can enter water and false otherwise, making it essential for handling
    player movement in aquatic environments.
  parameters: []
  returns: Returns true if the player can enter water, false otherwise. The method
    may return false due to various conditions such as being in a state that prevents
    water entry, having specific aura effects that restrict movement, or being in
    a restricted zone.
  examples:
  - title: Basic usage example
    code: "if (player->CanEnterWater()) {\n    // Player can enter water\n    // Do\
      \ something\n}\nelse {\n    // Player cannot enter water\n    // Handle accordingly\n\
      }"
    language: cpp
  notes: Implementation details include checking player state, movement restrictions,
    and aura effects. This method is often used in conjunction with other movement-related
    functions to determine whether a player can swim or move into water areas. Performance
    considerations are minimal as this method typically involves simple checks.
  warnings: This method may return false even if the player is not in a restricted
    state, due to specific aura effects that prevent water entry. Care should be taken
    when using this method in combination with other movement functions to avoid incorrect
    assumptions about player capabilities.
  related:
  - Player::CanEnterWater
  - Player::IsInWater
  - Player::HasAura
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T17:49:52.186832'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
