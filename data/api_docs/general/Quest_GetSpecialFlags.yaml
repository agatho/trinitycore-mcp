api:
  class: Quest
  method: GetSpecialFlags
  signature: uint32 Quest::GetSpecialFlags() const
documentation:
  brief: Returns the special flags associated with a quest, indicating unique quest
    properties or behaviors.
  description: The GetSpecialFlags method retrieves the special flags set for a specific
    quest within the TrinityCore database. These flags define unique characteristics
    and behaviors of the quest that may not be represented by standard quest flags.
    The method is commonly used in quest scripts and quest-related logic to determine
    if a quest has certain special properties, such as being a daily quest, requiring
    specific conditions, or having unique mechanics like being a repeatable quest
    or having special quest givers. This information is crucial for developers working
    with quest systems to understand how quests behave within the game environment.
  parameters: []
  returns: Returns a uint32 value representing the special flags set for the quest.
    Each bit in this value corresponds to a specific flag that defines unique properties
    of the quest, such as whether it is a daily quest, repeatable, or has special
    mechanics. The value can be combined with other flag values using bitwise operations
    to determine multiple properties simultaneously.
  examples:
  - title: Basic usage example
    code: "uint32 flags = quest->GetSpecialFlags();\nif (flags & QUEST_SPECIAL_FLAG_DAILY)\n\
      {\n    // Quest is a daily quest\n}"
    language: cpp
  - title: Advanced usage example
    code: "Quest::QuestInfo* questInfo = sObjectMgr->GetQuestTemplate(12345);\nuint32\
      \ flags = questInfo->GetSpecialFlags();\nif (flags & QUEST_SPECIAL_FLAG_REPEATable)\n\
      {\n    // Quest is repeatable\n}\nelse if (flags & QUEST_SPECIAL_FLAG_DAILY)\n\
      {\n    // Quest is daily\n}"
    language: cpp
  notes: This method is typically used in conjunction with other quest-related methods
    to determine quest properties. The special flags are defined in the database and
    may vary between different quest types. Performance considerations should be taken
    into account when using this method in frequently executed code, as it involves
    a database lookup.
  warnings: Care must be taken when interpreting the flags, as they may have overlapping
    meanings or specific combinations that indicate unique behaviors. Incorrect use
    of bitwise operations can lead to misinterpretation of quest properties.
  related:
  - GetQuestFlags
  - GetQuestType
  - GetQuestLevel
  - GetQuestSpecialFlags
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T03:27:48.538257'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
