api:
  class: Spell
  method: GetPowerCost
  signature: const int & Spell::GetPowerCost() const
documentation:
  brief: Returns the power cost of the spell
  description: The GetPowerCost method retrieves the amount of power (such as mana,
    rage, or energy) required to cast a specific spell. This value is typically used
    in conjunction with other spell-related functions to determine if a player has
    sufficient resources to cast the spell. The method returns a constant reference
    to an integer representing the power cost, which can vary depending on the spell's
    properties and the player's class. This function is essential for game mechanics
    involving resource management and spell casting validation.
  parameters: []
  returns: Represents the power cost required to cast the spell, typically expressed
    as an integer value indicating the amount of mana, rage, or energy needed. The
    return value may be zero for spells that do not require any power or negative
    values for spells with special mechanics like mana regeneration.
  examples:
  - title: Basic Usage Example
    code: "int powerCost = spell->GetPowerCost();\nif (powerCost > 0)\n{\n    // Check\
      \ if player has sufficient power\n    std::cout << \"Spell requires \" << powerCost\
      \ << \" units of power.\" << std::endl;\n}"
    language: cpp
  notes: This method is part of the Spell class and is commonly used in spell validation
    logic. It should be called carefully during spell execution or resource checking,
    as it may involve multiple calculations depending on the spell's implementation.
    Performance considerations are minimal since this function simply returns a stored
    value.
  warnings: Be cautious when using this method with spells that have dynamic power
    costs; some spells may modify their power cost based on player state or other
    factors. Also, ensure proper handling of negative values if they occur in certain
    special cases.
  related:
  - GetSpellInfo
  - IsSpellValid
  - GetPowerType
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T14:25:35.541330'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
