api:
  class: Unit
  method: GetClass
  signature: uint8 Unit::GetClass() const
documentation:
  brief: Returns the class identifier of the unit.
  description: The GetClass method retrieves the class type of a Unit object, which
    represents a character or creature in the game. This method is commonly used to
    determine the type of unit, such as player, pet, creature, or vehicle, and is
    essential for various game mechanics including combat calculations, spell effects,
    and AI behavior. The returned value corresponds to the standard class identifiers
    used in World of Warcraft, where 1 represents Warrior, 2 represents Paladin, 3
    represents Hunter, 4 represents Rogue, 5 represents Priest, 6 represents Death
    Knight, 7 represents Shaman, 8 represents Mage, 9 represents Warlock, 10 represents
    Druid, and 11 represents Demon Hunter. This method is particularly useful for
    determining the class of a unit when performing actions that require class-specific
    behavior or when checking if a unit belongs to a specific class.
  parameters: []
  returns: Returns a uint8 value representing the class identifier of the unit. The
    value ranges from 1 to 11, where each number corresponds to a specific class type
    in the game. For example, 1 represents Warrior, 2 represents Paladin, and so on.
    If the unit is not a player or creature with a valid class, the method may return
    0 or an invalid value.
  examples:
  - title: Basic usage example
    code: "uint8 class = unit->GetClass();\nif (class == 1)\n{\n    // Unit is a Warrior\n\
      }\nelse if (class == 2)\n{\n    // Unit is a Paladin\n}"
    language: cpp
  - title: Class checking example
    code: "Unit* unit = player->GetPet();\nuint8 class = unit->GetClass();\nif (class\
      \ == 1)\n{\n    // Check if pet is a Warrior\n}\nelse\n{\n    // Handle other\
      \ classes\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. Performance-wise,
    it's a lightweight operation that simply returns a cached value from the unit's
    class member variable. Developers should note that this method only applies to
    units with valid class information, such as players or creatures, and not to non-player
    characters or objects without a class.
  warnings: This method may return 0 or invalid values if the unit does not have a
    valid class assigned. It's important to verify that the unit is a player or creature
    before calling this method, as calling it on non-class units will result in undefined
    behavior. Additionally, the returned value should be used carefully when checking
    against specific class numbers, as some game mechanics may require additional
    validation.
  related:
  - GetTypeId
  - GetRace
  - GetGender
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T13:22:28.923050'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
