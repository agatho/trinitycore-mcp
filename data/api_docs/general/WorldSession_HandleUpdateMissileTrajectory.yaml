api:
  class: WorldSession
  method: HandleUpdateMissileTrajectory
  signature: void WorldSession::HandleUpdateMissileTrajectory(WorldPackets::Spells::UpdateMissileTrajectory
    & packet)
documentation:
  brief: Processes incoming missile trajectory update packets from clients for spell
    effects.
  description: The HandleUpdateMissileTrajectory method is responsible for handling
    client-side updates to missile trajectory data during spell casting. This method
    processes WorldPackets::Spells::UpdateMissileTrajectory packets which contain
    information about the movement path and positioning of spell projectiles, particularly
    those involving guided or moving attacks. It ensures that server-side spell mechanics
    align with client expectations and maintains synchronization between player actions
    and game physics. The method typically validates incoming trajectory data and
    applies necessary corrections or updates to spell effects in progress.
  parameters:
  - name: packet
    description: The UpdateMissileTrajectory packet containing missile trajectory
      data including position, orientation, and movement information for spell projectiles.
  returns: null
  examples:
  - title: Basic packet handling example
    code: "void WorldSession::HandleUpdateMissileTrajectory(WorldPackets::Spells::UpdateMissileTrajectory&\
      \ packet)\n{\n    // Validate packet data\n    if (!packet.Target.IsGuidValid())\n\
      \        return;\n    \n    // Process missile trajectory update\n    Player*\
      \ player = GetPlayer();\n    if (player && player->HasUnitState(UNIT_STATE_CASTING))\n\
      \    {\n        player->UpdateSpellCast(packet);\n    }\n}"
    language: cpp
  notes: This method is part of the spell casting system and should only be called
    when a player is actively casting spells with missile projectiles. The packet
    data may contain client-side predictions that need server validation to prevent
    cheating or desynchronization.
  warnings: Improper handling of trajectory updates can lead to spell desynchronization
    between clients, causing visual glitches or incorrect spell behavior. Always validate
    packet data before applying changes to active spell effects.
  related:
  - HandleSpellCastRequest
  - HandleSpellGo
  - UpdateSpellCast
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:14:42.088949'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
