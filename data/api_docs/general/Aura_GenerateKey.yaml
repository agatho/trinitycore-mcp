api:
  class: Aura
  method: GenerateKey
  signature: AuraKey Aura::GenerateKey(uint32 & recalculateMask) const
documentation:
  brief: Generates a unique key for the aura based on its properties and recalculation
    mask.
  description: The GenerateKey method creates and returns an AuraKey object that uniquely
    identifies this aura instance within the TrinityCore framework. This key is typically
    used for internal tracking, lookup, and management of active auras on units. The
    method takes into account various aura attributes such as spell ID, caster GUID,
    and application time to construct a unique identifier. The recalculateMask parameter
    is updated with flags indicating which properties were considered during key generation,
    allowing for efficient recalculation when necessary. This functionality is crucial
    for maintaining accurate aura state tracking in World of Warcraft mechanics.
  parameters: []
  returns: An AuraKey object that uniquely identifies this aura instance, containing
    information such as spell ID, caster GUID, and application time to ensure uniqueness
    within the system.
  examples:
  - title: Basic Usage Example
    code: 'AuraKey key = aura->GenerateKey(recalculateMask);

      // Use key for aura lookup or tracking purposes'
    language: cpp
  notes: This method is typically called internally by the aura management system
    when a new aura needs to be registered or when an existing aura's properties change.
    The recalculateMask parameter should be checked after calling this method to determine
    which fields require recalculation in subsequent operations.
  warnings: null
  related:
  - GetAuraKey
  - SetAuraKey
  - IsAffectingUnit
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:56:44.004157'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
