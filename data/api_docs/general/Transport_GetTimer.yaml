api:
  class: Transport
  method: GetTimer
  signature: int Transport::GetTimer() const
documentation:
  brief: Returns the current timer value of the transport, indicating time until next
    movement or action.
  description: The GetTimer method retrieves the internal timer value associated with
    a Transport object. This timer is typically used to control the timing of transport
    movements, such as ship travel times or elevator operations. The returned value
    represents milliseconds remaining before the transport performs its next scheduled
    action. In World of Warcraft's TrinityCore implementation, this method is commonly
    used for managing transport animations, movement synchronization, and ensuring
    proper timing of passenger boarding and alighting. The timer value decreases over
    time as the transport progresses through its cycle.
  parameters: []
  returns: An integer representing the remaining time in milliseconds until the next
    transport action occurs. A value of 0 typically indicates that the transport is
    ready to perform its next scheduled movement or action.
  examples:
  - title: Check Transport Timer Before Movement
    code: "Transport* transport = player->GetTransport();\nif (transport)\n{\n   \
      \ int timeRemaining = transport->GetTimer();\n    if (timeRemaining <= 0)\n\
      \    {\n        // Transport ready for next action\n        transport->MoveToNextWaypoint();\n\
      \    }\n    else\n    {\n        // Wait for timer to expire\n        sWorld->SendWorldText(LANG_TRANSPORT_WAITING,\
      \ timeRemaining / 1000);\n    }\n}"
    language: cpp
  notes: The timer value is updated by the transport's update loop and reflects real-time
    progression. This method should be called frequently to maintain accurate timing
    of transport operations. The timer may be reset or modified during transport movement,
    so calling this method at different points in a transport's lifecycle will yield
    different values.
  warnings: Do not assume that a zero return value always means the transport is idle
    - it could indicate that the next action is scheduled to occur immediately. Be
    cautious when using this timer for critical game mechanics that require precise
    timing, as the timer may be affected by server load or other factors.
  related:
  - SetTimer
  - Update
  - GetNextWaypoint
  - IsMoving
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:40:19.307724'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
