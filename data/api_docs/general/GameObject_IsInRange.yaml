api:
  class: GameObject
  method: IsInRange
  signature: bool GameObject::IsInRange(float x, float y, float z, float radius) const
documentation:
  brief: Determines whether a game object is within a specified radius of a given
    position.
  description: The IsInRange method checks if a GameObject is located within a certain
    radius from a specific coordinate position. This method is commonly used in game
    mechanics to determine proximity between objects and player characters or other
    game entities. It performs a simple distance calculation using Euclidean geometry
    to assess whether the object's coordinates fall within the specified radius. The
    method returns true if the object is within range, false otherwise. This functionality
    is essential for various gameplay scenarios including quest triggers, NPC interactions,
    and area of effect spells.
  parameters:
  - name: x
    description: The X coordinate of the position to check against
  - name: y
    description: The Y coordinate of the position to check against
  - name: z
    description: The Z coordinate of the position to check against
  - name: radius
    description: The maximum distance allowed from the position to consider the object
      in range
  returns: Returns true if the GameObject is within the specified radius of the given
    coordinates, false otherwise.
  examples:
  - title: Basic usage example
    code: "if (GameObject->IsInRange(x, y, z, radius)) {\n    // Do something\n}\n"
    language: cpp
  - title: Using with quest triggers
    code: "if (GameObject->IsInRange(player->GetPositionX(), player->GetPositionY(),\
      \ player->GetPositionZ(), 5.0f)) {\n    // Trigger quest event\n}\n"
    language: cpp
  notes: This method uses Euclidean distance calculation and may not account for terrain
    or obstacles in the game world. Performance considerations include frequent calls
    to this method during gameplay, which could impact frame rate if used excessively.
    Thread safety is not an issue as this method does not modify any internal state.
  warnings: The radius parameter should be carefully considered when using this method,
    as it may produce unexpected results if the radius is negative or extremely large.
    This method does not account for Z-axis differences in terrain height variations,
    which could lead to inaccurate results in some cases.
  related:
  - IsInMap
  - IsWithinDist
  - GetPosition
  - GetDistance
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:13:15.538398'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
