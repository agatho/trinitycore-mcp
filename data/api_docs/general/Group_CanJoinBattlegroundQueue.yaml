api:
  class: Group
  method: CanJoinBattlegroundQueue
  signature: int Group::CanJoinBattlegroundQueue(const BattlegroundTemplate * bgOrTemplate,
    int bgQueueTypeId, int MinPlayerCount, int MaxPlayerCount, bool isRated, int arenaSlot,
    int & errorGuid) const
documentation:
  brief: Checks if a group can join a battleground queue with specified parameters.
  description: The CanJoinBattlegroundQueue method evaluates whether a group is eligible
    to join a specific battleground queue. It verifies various conditions such as
    player count limits, arena slot validity, and rated battleground requirements.
    The method returns an error code indicating the reason for failure or success.
    This function is crucial for maintaining proper queue management in World of Warcraft's
    battleground system, ensuring that groups meet all necessary criteria before being
    allowed to enter a queue.
  parameters:
  - name: bgOrTemplate
    description: Pointer to the BattlegroundTemplate structure defining the battleground
      type. Must not be null.
  - name: bgQueueTypeId
    description: Identifier for the specific battleground queue type. Used to differentiate
      between various battleground modes (e.g., normal, rated, arena).
  - name: MinPlayerCount
    description: Minimum number of players required in the group to join this queue.
      Must be a positive integer.
  - name: MaxPlayerCount
    description: Maximum number of players allowed in the group for this queue type.
      Must be greater than or equal to MinPlayerCount.
  - name: isRated
    description: Boolean flag indicating whether the battleground is rated (e.g.,
      for competitive play). True for rated queues, false otherwise.
  - name: arenaSlot
    description: Arena slot identifier used for arena queue management. Valid values
      depend on the specific arena type and queue configuration.
  - name: errorGuid
    description: Reference to an integer that will be set with a GUID value indicating
      the reason for failure if the method returns a non-zero code.
  returns: Returns an integer code representing the result of the eligibility check.
    Zero indicates success, while non-zero values represent specific error conditions
    such as insufficient players, invalid queue type, or other restrictions.
  examples:
  - title: Basic usage to check group eligibility for a battleground
    code: "Group* group = player->GetGroup();\nconst BattlegroundTemplate* bgTemplate\
      \ = sBattlegroundMgr->GetBattlegroundTemplate(BATTLEGROUND_AV);\nint errorGuid\
      \ = 0;\nint result = group->CanJoinBattlegroundQueue(bgTemplate, BATTLEGROUND_AV,\
      \ 10, 15, false, -1, errorGuid);\nif (result == 0) {\n    // Group can join\
      \ the queue\n} else {\n    // Handle error based on errorGuid value\n}"
    language: cpp
  notes: This method performs internal validation checks including group size limits,
    player eligibility, and battleground-specific rules. The errorGuid parameter is
    only populated when the return code indicates a failure. This function is typically
    called before attempting to add a group to a battleground queue.
  warnings: Ensure that the BattlegroundTemplate pointer passed is valid and not null.
    Incorrect usage of MinPlayerCount and MaxPlayerCount parameters can lead to unexpected
    behavior or denial of entry to valid groups.
  related:
  - Group::AddToBattlegroundQueue
  - Group::IsInBattlegroundQueue
  - Group::GetMembers
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T16:53:47.004096'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
