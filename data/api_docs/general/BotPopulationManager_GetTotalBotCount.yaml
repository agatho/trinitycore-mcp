api:
  class: BotPopulationManager
  method: GetTotalBotCount
  signature: uint32 BotPopulationManager::GetTotalBotCount() const
documentation:
  brief: Retrieves the total count of all active bot characters within the server
    population.
  description: The GetTotalBotCount method provides a cumulative tally of all bot
    characters currently present in the game world. This includes bots that are actively
    spawned, logged in, and participating in various game activities such as questing,
    combat, or exploration. The count is maintained by the BotPopulationManager class
    which tracks bot instances across all realms and zones. This method does not differentiate
    between bot types or roles; it simply returns the aggregate number of bot characters.
    The value returned reflects the current state of the server's bot population at
    the time of the call.
  parameters: []
  returns: A uint32 value representing the total number of active bot characters in
    the server's population. Returns zero if no bots are currently active or if the
    BotPopulationManager has not been initialized.
  examples:
  - title: Basic Usage to Display Bot Count
    code: 'uint32 totalBots = sBotPopulationManager->GetTotalBotCount();

      TC_LOG_INFO(LOG_FILTER_GENERAL, "Current bot population: %u", totalBots);'
    language: cpp
  - title: Using Bot Count for Server Load Monitoring
    code: "uint32 botCount = sBotPopulationManager->GetTotalBotCount();\nif (botCount\
      \ > 1000)\n{\n    TC_LOG_WARN(LOG_FILTER_GENERAL, \"High bot population detected:\
      \ %u bots active\", botCount);\n}"
    language: cpp
  notes: This method is typically called frequently by server monitoring systems and
    may have performance implications if used excessively in tight loops. The returned
    count includes all bot types including those that are currently idle or in offline
    mode, as long as they remain registered with the BotPopulationManager.
  warnings: The returned value may fluctuate rapidly during peak activity times when
    bots are being spawned or despawned. Avoid using this method in performance-critical
    code paths without proper caching mechanisms to prevent unnecessary overhead.
  related:
  - GetActiveBotCount
  - GetBotCountByType
  - IsBotPopulationManagerInitialized
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T17:00:49.044604'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
