api:
  class: ArenaTeamMgr
  method: SetNextArenaTeamId
  signature: void ArenaTeamMgr::SetNextArenaTeamId(uint32 Id)
documentation:
  brief: Sets the next available arena team identifier to the specified value
  description: This method updates the internal counter used to generate unique identifiers
    for new arena teams. It directly modifies the next arena team ID that will be
    assigned when a new arena team is created. This is typically used during server
    initialization, database synchronization, or administrative operations where specific
    arena team IDs need to be reserved or set. The method does not validate the input
    ID against existing arena teams, so care must be taken to ensure uniqueness and
    avoid conflicts with already-existing teams.
  parameters:
  - name: Id
    description: The new value to set as the next arena team identifier. This should
      be a positive integer representing the next sequential ID that will be assigned
      to newly created arena teams.
  returns: null
  examples:
  - title: Setting Next Arena Team ID During Server Initialization
    code: "void InitializeArenaTeams()\n{\n    // Set the next arena team ID to start\
      \ from 10000\n    sArenaTeamMgr->SetNextArenaTeamId(10000);\n}"
    language: cpp
  - title: Reserving IDs for Specific Arena Teams
    code: "void ReserveArenaTeamIds()\n{\n    // Reserve first 500 arena team IDs\n\
      \    uint32 currentId = sArenaTeamMgr->GetNextArenaTeamId();\n    sArenaTeamMgr->SetNextArenaTeamId(currentId\
      \ + 500);\n}"
    language: cpp
  notes: This method modifies a global state variable that affects all future arena
    team creations. It should only be called during server startup or administrative
    operations, not during normal gameplay. The internal ID counter is typically managed
    by the server and should generally not be modified unless there's a specific requirement
    for ID management.
  warnings: Modifying this value can cause conflicts if existing arena teams already
    use IDs in the range being set. This method should only be used when you have
    full control over arena team creation or are performing database synchronization
    operations. Incorrect usage may lead to duplicate IDs or unexpected behavior in
    arena team management.
  related:
  - GetNextArenaTeamId
  - ArenaTeamMgr::AddArenaTeam
  - ArenaTeamMgr::RemoveArenaTeam
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T18:34:50.308039'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
