api:
  class: Player
  method: CheckLoadedRaidDifficultyID
  signature: int Player::CheckLoadedRaidDifficultyID(int difficulty)
documentation:
  brief: Checks and returns the loaded raid difficulty ID for the player
  description: The CheckLoadedRaidDifficultyID method verifies whether a raid difficulty
    has been properly loaded for the player and returns the corresponding difficulty
    identifier. This method is typically used in the context of raid instances to
    ensure that the player's current difficulty setting matches what is expected or
    loaded in the game world. It helps maintain consistency between client-side difficulty
    selections and server-side raid configurations. The method may perform internal
    validation to confirm that the specified difficulty level is valid and accessible
    for the player's current zone or instance.
  parameters:
  - name: difficulty
    description: The difficulty ID to check against the loaded raid settings. Valid
      values typically correspond to standard World of Warcraft raid difficulties
      such as 1 (Normal), 2 (Heroic), 3 (Mythic), etc., though exact values may vary
      based on game version and expansion.
  returns: Returns an integer representing the difficulty ID if it is successfully
    loaded and valid for the player. Returns -1 or another negative value if the difficulty
    is not loaded, invalid, or inaccessible to the player.
  examples:
  - title: Check raid difficulty before entering instance
    code: "int difficulty = player->CheckLoadedRaidDifficultyID(2);\nif (difficulty\
      \ == 2) {\n    // Proceed with heroic raid entry\n    player->SendNotification(\"\
      Entering Heroic Raid\");\n} else {\n    player->SendNotification(\"Invalid raid\
      \ difficulty\");\n}"
    language: cpp
  - title: Validate player's current raid difficulty setting
    code: "uint32 currentDifficulty = player->CheckLoadedRaidDifficultyID(player->GetRaidDifficulty());\n\
      if (currentDifficulty < 0) {\n    // Handle invalid difficulty case\n    player->SetRaidDifficulty(1);\
      \ // Reset to normal\n    player->SendNotification(\"Difficulty reset to Normal\"\
      );\n}"
    language: cpp
  notes: This method is primarily used internally by TrinityCore's instance management
    system. Developers should be aware that the difficulty ID values may differ between
    expansions and game versions. The method may also perform checks against player
    permissions or raid group status before returning a result.
  warnings: Ensure that the difficulty parameter passed to this method corresponds
    to valid raid difficulties supported by the current game version. Passing invalid
    difficulty IDs may cause unexpected behavior or return incorrect results.
  related:
  - GetRaidDifficulty
  - SetRaidDifficulty
  - IsRaidDifficultyValid
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T19:51:03.339629'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
