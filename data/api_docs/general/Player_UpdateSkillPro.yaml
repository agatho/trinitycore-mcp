api:
  class: Player
  method: UpdateSkillPro
  signature: bool Player::UpdateSkillPro(uint16 skillId, int32 chance, uint32 step)
documentation:
  brief: Updates a player's skill progress for the specified skill ID with the given
    chance and step values.
  description: The UpdateSkillPro method is used to modify a player's skill progression
    in the game. It takes a skill identifier, a chance value that determines the probability
    of skill advancement, and a step value that defines how much the skill should
    progress. This method is typically invoked during gameplay when actions related
    to a specific skill are performed, such as crafting, mining, or fishing. The method
    returns true if the skill update was successful, and false otherwise. It's an
    integral part of the skill system in TrinityCore, ensuring that player skills
    evolve realistically based on their actions and the game mechanics.
  parameters:
  - name: skillId
    description: The unique identifier for the skill to be updated. This corresponds
      to the skill type defined in the game's database.
  - name: chance
    description: A value that determines the probability of skill advancement. Higher
      values increase the likelihood of successful progression.
  - name: step
    description: The amount by which the skill should progress. This is typically
      a positive integer representing the increment in skill level.
  returns: Returns true if the skill update was processed successfully, false otherwise.
    A return value of false may indicate invalid parameters or an error during processing.
  examples:
  - title: Update a player's mining skill
    code: "Player* player = ...; // Assume player is initialized\nuint16 miningSkillId\
      \ = 171; // Mining skill ID\nint32 chance = 50; // 50% chance of success\nuint32\
      \ step = 1; // Increase by one step\nbool result = player->UpdateSkillPro(miningSkillId,\
      \ chance, step);\nif (result) {\n    // Skill updated successfully\n}"
    language: cpp
  - title: Update a crafting skill with variable chance
    code: "Player* player = ...;\nuint16 blacksmithingSkillId = 164; // Blacksmithing\
      \ skill ID\nint32 chance = 75; // 75% chance of success\nuint32 step = 5; //\
      \ Increase by five steps\nbool result = player->UpdateSkillPro(blacksmithingSkillId,\
      \ chance, step);\nif (result) {\n    // Crafting skill updated successfully\n\
      }"
    language: cpp
  notes: This method is part of the core skill progression system in TrinityCore.
    It interacts with internal skill tracking mechanisms and may trigger updates to
    the player's UI or database records. The chance parameter is often used in conjunction
    with random number generation to determine whether a skill should advance.
  warnings: Ensure that skillId corresponds to a valid skill in the game's database,
    otherwise the method might fail silently or return false. Also, be cautious when
    using large step values as they can cause unexpected behavior if not properly
    validated.
  related:
  - GetSkillValue
  - SetSkill
  - AddSkill
  - UpdateSkill
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T17:15:12.624782'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
