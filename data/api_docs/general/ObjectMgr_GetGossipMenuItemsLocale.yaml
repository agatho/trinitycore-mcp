api:
  class: ObjectMgr
  method: GetGossipMenuItemsLocale
  signature: const GossipMenuItemsLocale * ObjectMgr::GetGossipMenuItemsLocale(uint32
    menuId, uint32 optionId) const
documentation:
  brief: Retrieves localized gossip menu item data for a specified menu and option
    ID.
  description: The GetGossipMenuItemsLocale method fetches the localized version of
    a gossip menu item based on the provided menu ID and option ID. This function
    is used in World of Warcraft's TrinityCore server to retrieve translated text
    and other locale-specific properties associated with gossip options displayed
    to players. The returned structure contains strings and data that are specific
    to the player's current locale, ensuring proper localization of NPC dialogues
    and interactions. This method typically operates on internal data structures that
    store gossip menu item translations, which are loaded during server startup or
    database initialization.
  parameters:
  - name: menuId
    description: The unique identifier of the gossip menu to retrieve localized data
      for. This corresponds to the MenuID field in the gossip_menu table.
  - name: optionId
    description: The unique identifier of the specific option within the gossip menu.
      This corresponds to the OptionID field in the gossip_menu_option table.
  returns: A pointer to a GossipMenuItemsLocale structure containing the localized
    data for the specified menu and option, or nullptr if no matching entry exists
    in the database.
  examples:
  - title: Retrieve localized gossip menu item
    code: "GossipMenuItemsLocale const* localeData = sObjectMgr->GetGossipMenuItemsLocale(1234,\
      \ 5678);\nif (localeData)\n{\n    // Use the localized strings from localeData\n\
      \    printf(\"Localized Text: %s\\n\", localeData->OptionText.c_str());\n}"
    language: cpp
  - title: Safe usage with null checking
    code: "uint32 menuId = 1001;\nuint32 optionId = 1;\nconst GossipMenuItemsLocale*\
      \ locale = sObjectMgr->GetGossipMenuItemsLocale(menuId, optionId);\nif (locale\
      \ != nullptr)\n{\n    // Process localized data\n    std::string text = locale->OptionText;\n\
      \    // ... further processing\n}\nelse\n{\n    // Handle missing localization\
      \ case\n    sLog->outError(\"No locale data found for menu %u, option %u\",\
      \ menuId, optionId);\n}"
    language: cpp
  notes: This method accesses internal caches that are populated during server initialization
    from the database. The returned pointer is valid only as long as the ObjectMgr
    instance remains active and should not be stored for extended periods. Performance
    is optimized through hash-based lookups in internal containers.
  warnings: Do not assume that all menu/option combinations have localized data; always
    check for nullptr return values. Accessing this method outside of proper server
    initialization context may result in undefined behavior or crashes.
  related:
  - GetGossipMenuItems
  - LoadGossipMenuItems
  - GetGossipMenuOption
  - GetGossipMenu
metadata:
  confidence: 0.92
  generated_at: '2025-11-01T09:37:21.594397'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
