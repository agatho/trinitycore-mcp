api:
  class: Player
  method: SetBaseModPctValue
  signature: void Player::SetBaseModPctValue(int modGroup, float val)
documentation:
  brief: Sets the percentage value of a base modifier for the player.
  description: This method allows setting a specific base modifier percentage value
    for a player character. The base modifier group determines which type of modification
    is being set, such as critical strike chance or mastery. This method is typically
    used in conjunction with other base modifier methods to manage player statistics
    and gameplay mechanics during various game events or effects.
  parameters:
  - name: modGroup
    description: The base modifier group identifier that specifies which type of base
      modifier is being set. Valid values include different modifier types like critical
      strike, mastery, etc., depending on the implementation.
  - name: val
    description: The percentage value to set for the specified base modifier group.
      This value represents a percentage and typically ranges from 0 to 100, though
      negative values may be allowed in some cases.
  returns: null
  examples:
  - title: Setting Critical Strike Percentage
    code: 'Player* player = new Player();

      player->SetBaseModPctValue(BASE_MOD_CRITICAL_STRIKE, 15.0f);

      // Sets critical strike percentage to 15%'
    language: cpp
  - title: Setting Mastery Percentage
    code: 'Player* player = new Player();

      player->SetBaseModPctValue(BASE_MOD_MASTERY, 25.0f);

      // Sets mastery percentage to 25%'
    language: cpp
  notes: This method is part of the base modifier system in TrinityCore and should
    be used carefully when modifying player stats. It's often used in conjunction
    with other methods like SetBaseModValue or GetBaseModPctValue to manage player
    statistics effectively.
  warnings: Improper use of this method can lead to incorrect player statistics, especially
    if used without proper understanding of the base modifier groups and their effects
    on gameplay mechanics. Always ensure that the modGroup parameter corresponds to
    valid modifier types.
  related:
  - GetBaseModPctValue
  - SetBaseModValue
  - GetBaseModValue
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T15:21:19.323504'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
