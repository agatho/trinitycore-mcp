api:
  class: Item
  method: GetPlayedTime
  signature: uint32 Item::GetPlayedTime() const
documentation:
  brief: Returns the total play time of the item in seconds.
  description: The GetPlayedTime method retrieves the accumulated play time for an
    item, which represents how long the item has been in the player's inventory or
    bank. This value is typically used to track item usage and determine when items
    might expire or become eligible for certain game mechanics such as auction house
    expiration. The method returns a uint32 value representing seconds of play time,
    with values being zero if the item has not yet been played or if the item is not
    a valid type that tracks play time.
  parameters: []
  returns: Returns a uint32 value representing the total play time in seconds. Zero
    indicates no play time has been recorded or the item does not track play time.
  examples:
  - title: Basic usage example
    code: "Item* item = player->GetItemByPos(0, 0);\nuint32 playTime = item->GetPlayedTime();\n\
      if (playTime > 0)\n{\n    // Item has been played\n    printf(\"Item has been\
      \ played for %u seconds\\n\", playTime);\n}\nelse\n{\n    // Item hasn't been\
      \ played or is not valid\n    printf(\"Item has no play time recorded\\n\");\n\
      }"
    language: cpp
  notes: The method may return zero if the item is not a valid type that tracks play
    time, such as consumables or non-tracked items. This method is part of the Item
    class and should be used carefully in conjunction with other methods like GetUInt32Value
    to ensure proper handling of item data.
  warnings: This method does not account for time spent in the bank or mail. It only
    tracks play time within the player's inventory, making it useful for tracking
    usage but not for determining total item lifetime.
  related:
  - Item::GetUInt32Value
  - Item::SetUInt32Value
  - Item::GetGuid
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T04:55:37.739387'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
