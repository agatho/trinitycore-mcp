api:
  class: ObjectMgr
  method: GetInstanceTemplates
  signature: const InstanceTemplateContainer & ObjectMgr::GetInstanceTemplates() const
documentation:
  brief: Returns a constant reference to the container holding all instance templates
    in the game world.
  description: The GetInstanceTemplates method provides access to the global container
    that stores all instance template definitions loaded by the ObjectMgr. These templates
    define the structure, settings, and properties of different dungeon and raid instances
    within the game world. The returned reference is constant, ensuring that external
    code cannot modify the internal template data directly. This method is typically
    used during server initialization or when validating instance-related operations
    such as player entry into dungeons or raids. The container holds information about
    instance difficulty levels, required items, spawn restrictions, and other instance-specific
    configurations.
  parameters: []
  returns: A constant reference to an InstanceTemplateContainer object which contains
    all loaded instance templates. This container provides access to instance data
    through various lookup methods but should not be modified directly.
  examples:
  - title: Accessing Instance Templates for Validation
    code: "const auto& instanceTemplates = sObjectMgr->GetInstanceTemplates();\nfor\
      \ (const auto& pair : instanceTemplates)\n{\n    uint32 mapId = pair.first;\n\
      \    const InstanceTemplate* instanceTemplate = pair.second;\n    if (instanceTemplate)\n\
      \    {\n        // Process instance template data\n        sLog->outString(\"\
      Map %u has template: %s\", mapId, instanceTemplate->name.c_str());\n    }\n}"
    language: cpp
  notes: The InstanceTemplateContainer is populated during server startup when loading
    instance data from database tables. This method returns a reference to a static
    container that persists throughout the server's runtime. Accessing this container
    is thread-safe as it's read-only, but modifications should never be attempted
    through this interface.
  warnings: Do not attempt to modify the returned InstanceTemplateContainer directly
    as it's const. Any changes to instance templates should be made through proper
    database updates or dedicated template modification functions rather than direct
    container manipulation.
  related:
  - GetInstanceTemplate
  - LoadInstanceTemplates
  - GetMapTemplate
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:34:16.235833'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
