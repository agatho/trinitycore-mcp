api:
  class: WorldObject
  method: GetFaction
  signature: uint32 WorldObject::GetFaction() const
documentation:
  brief: Retrieves the faction ID associated with the WorldObject.
  description: The GetFaction method returns the faction identifier (FactionID) assigned
    to a WorldObject. This value determines the object's relationship with other entities
    in the game world, such as whether it is friendly, hostile, or neutral. The faction
    ID is used by the game engine to handle interactions like combat, questing, and
    NPC dialogue. For creatures and players, this value typically corresponds to an
    entry in the `faction_template` table within the TrinityCore database. This method
    is commonly used for determining AI behavior, combat eligibility, and interaction
    rules.
  parameters: []
  returns: A uint32 value representing the faction ID of the WorldObject. This ID
    maps to a specific faction definition in the game's faction template system, which
    defines how the object interacts with others based on their own faction IDs.
  examples:
  - title: Basic Usage to Check Faction
    code: "Creature* creature = ...;\nuint32 factionId = creature->GetFaction();\n\
      if (factionId == 14)\n{\n    // This is a hostile faction\n}"
    language: cpp
  - title: Using Faction for AI Decision Making
    code: "WorldObject* target = ...;\nuint32 targetFaction = target->GetFaction();\n\
      if (targetFaction != GetFaction())\n{\n    // Target is not from the same faction,\
      \ possible combat\n}"
    language: cpp
  notes: The returned faction ID is directly tied to the object's entry in the database.
    For dynamic objects or those created at runtime, ensure that their faction is
    properly initialized before calling this method. This method is thread-safe as
    long as the WorldObject itself is not being modified concurrently.
  warnings: Be cautious when comparing faction IDs directly without verifying if they
    are valid entries in the faction template table. Some factions may have special
    handling or be marked as neutral, which could lead to unexpected behavior if not
    properly accounted for.
  related:
  - SetFaction
  - GetFactionTemplate
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T22:12:48.141226'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
