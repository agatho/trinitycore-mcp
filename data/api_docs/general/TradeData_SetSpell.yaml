api:
  class: TradeData
  method: SetSpell
  signature: void TradeData::SetSpell(int spell_id, Item * castItem)
documentation:
  brief: Sets the spell ID and cast item for a trade transaction
  description: The SetSpell method assigns a spell identifier and associated item
    to a trade data object, typically used during trade operations in World of Warcraft.
    This method allows the trade system to track which spell is being cast during
    a trade, such as enchanting or crafting spells, and the item on which it is being
    cast. The spell ID corresponds to a valid spell entry in the game's database,
    while the castItem parameter references the specific item object involved in the
    spell casting process. This method is commonly invoked when processing trades
    that involve spell-based interactions like enchanting items or applying temporary
    effects during trading.
  parameters:
  - name: spell_id
    description: The unique identifier of the spell to be set for this trade transaction.
      Must correspond to a valid spell entry in the game's database.
  - name: castItem
    description: Pointer to the Item object on which the spell is being cast during
      the trade. Can be nullptr if no item is involved in the spell casting.
  returns: null
  examples:
  - title: Setting a spell for an enchanting trade
    code: 'TradeData* trade = new TradeData(player1, player2);

      Item* enchantItem = player1->GetItemByPos(INVENTORY_SLOT_BAG_0, 0);

      trade->SetSpell(13262, enchantItem); // Enchanting spell ID'
    language: cpp
  - title: Setting a spell with null item reference
    code: 'TradeData* trade = new TradeData(player1, player2);

      trade->SetSpell(22906, nullptr); // Spell that doesn''t require an item'
    language: cpp
  notes: This method is typically called internally by the trade system when processing
    spell-based trades. The spell_id parameter must be validated against the game's
    spell database to ensure it exists and is usable in a trading context. The castItem
    parameter should be verified to ensure it belongs to one of the traders involved
    in the trade.
  warnings: Passing an invalid spell_id can lead to undefined behavior or crashes
    within the trade system. Ensure that the castItem pointer is valid and not already
    deleted before calling this method, as accessing a freed item object will cause
    memory corruption.
  related:
  - GetSpell
  - GetCastItem
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T05:14:21.566236'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
