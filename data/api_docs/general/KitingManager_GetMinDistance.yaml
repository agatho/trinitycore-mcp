api:
  class: KitingManager
  method: GetMinDistance
  signature: float KitingManager::GetMinDistance() const
documentation:
  brief: Returns the minimum distance threshold used for kiting behavior calculations.
  description: The GetMinDistance method retrieves the configured minimum distance
    value that determines when a creature or unit should begin or cease kiting movement
    patterns. This distance is typically used in AI logic to control how close an
    enemy must be before initiating kiting behavior, and how far away the unit should
    maintain from its target during combat. The returned value represents a floating-point
    distance in yards, which may vary depending on the specific creature type, difficulty
    settings, or custom AI configurations. This method is commonly called during AI
    update cycles to make dynamic movement decisions based on current positioning
    relative to the target.
  parameters: []
  returns: A float value representing the minimum distance threshold in yards used
    for kiting behavior calculations. This value typically defines how close an enemy
    must be before kiting begins, and is used internally by the AI system to determine
    appropriate movement patterns during combat.
  examples:
  - title: Basic Usage in AI Update
    code: "void MyCreatureAI::UpdateAI(uint32 diff)\n{\n    if (Unit* target = SelectTarget(SELECT_TARGET_TOPAGGRO))\n\
      \    {\n        float minDist = kitingManager->GetMinDistance();\n        float\
      \ currentDist = me->GetDistance(target);\n        \n        if (currentDist\
      \ < minDist)\n        {\n            // Initiate kiting behavior\n         \
      \   DoKite(target);\n        }\n    }\n}"
    language: cpp
  notes: This method is part of the KitingManager class which handles AI movement
    behaviors for creatures that employ kiting tactics. The returned value may be
    influenced by creature templates, difficulty settings, or server configuration
    parameters related to AI behavior. This method should be called frequently during
    AI update cycles as it's used in real-time decision making.
  warnings: null
  related:
  - KitingManager::SetMinDistance
  - KitingManager::GetMaxDistance
  - KitingManager::IsKiting
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:03:13.413464'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
