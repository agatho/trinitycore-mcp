api:
  class: AchievementMgr
  method: CompletedAchievement
  signature: void AchievementMgr::CompletedAchievement(const AchievementEntry * entry,
    Player * referencePlayer)
documentation:
  brief: Marks an achievement as completed for a player and handles related reward
    distribution.
  description: The CompletedAchievement method is responsible for processing the completion
    of a specific achievement for a given player. It updates the player's achievement
    progress, triggers any associated rewards or bonuses, and ensures that the achievement
    is properly recorded in the player's achievement log. This method typically gets
    invoked when a player meets all the criteria required to earn an achievement.
    The method handles internal state management and may interact with the database
    to persist the completion status. It also manages potential notifications or visual
    feedback to the player upon achievement unlock.
  parameters:
  - name: entry
    description: Pointer to the AchievementEntry structure that defines the achievement
      being completed. This contains metadata about the achievement such as its ID,
      criteria, rewards, and display information.
  - name: referencePlayer
    description: Pointer to the Player object for whom the achievement is being marked
      as completed. This player's progress and rewards will be updated accordingly.
  returns: null
  examples:
  - title: Basic Achievement Completion
    code: 'AchievementEntry const* entry = sAchievementMgr->GetAchievement(12345);

      Player* player = ...; // obtained from some context

      sAchievementMgr->CompletedAchievement(entry, player);'
    language: cpp
  - title: Handling Achievement Completion with Error Checking
    code: "if (entry && player)\n{\n    sAchievementMgr->CompletedAchievement(entry,\
      \ player);\n    // Additional logic for handling post-achievement effects\n}"
    language: cpp
  notes: This method is typically called internally by the game engine when achievement
    criteria are met. Developers should not directly invoke this method unless implementing
    custom achievement logic or testing. The method may perform database writes and
    send packets to the client, so it's important to ensure it's called at appropriate
    times during gameplay.
  warnings: Direct usage of this method without proper validation of the entry and
    player parameters can lead to crashes or undefined behavior. Ensure that the AchievementEntry
    is valid and the Player object is properly initialized before calling this function.
  related:
  - GetAchievement
  - CanCompleteAchievement
  - CheckAchievementCriteria
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T02:43:15.094606'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
