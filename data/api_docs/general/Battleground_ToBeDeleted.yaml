api:
  class: Battleground
  method: ToBeDeleted
  signature: bool Battleground::ToBeDeleted() const
documentation:
  brief: Checks whether the battleground is marked for deletion.
  description: The ToBeDeleted method determines if a battleground instance has been
    flagged for removal from the game world. This typically occurs when a battleground
    has finished its active phase and is awaiting cleanup, or when it's being destroyed
    due to inactivity or server shutdown. The method returns true if the battleground
    is scheduled for deletion, and false otherwise. This check is crucial for preventing
    operations on invalid battleground instances and ensuring proper resource management
    during battleground lifecycle events.
  parameters: []
  returns: Returns true if the battleground is marked for deletion, false if it is
    still active and valid for use.
  examples:
  - title: Checking if battleground is scheduled for deletion
    code: "if (bg->ToBeDeleted())\n{\n    // Handle cleanup or skip operations\n \
      \   return;\n}"
    language: cpp
  - title: Using ToBeDeleted in battleground update loop
    code: "void Battleground::Update(uint32 diff)\n{\n    if (ToBeDeleted())\n   \
      \     return; // Skip updates for deleted battlegrounds\n    \n    // Normal\
      \ update logic here\n}"
    language: cpp
  notes: This method is typically used internally by the battleground system to prevent
    operations on battlegrounds that are in the process of being removed. It's important
    to check this flag before performing any operations that might affect the battleground's
    state or resources.
  warnings: null
  related:
  - Battleground::SetToBeDeleted
  - Battleground::IsArena
  - Battleground::IsActive
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T02:08:15.203288'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
