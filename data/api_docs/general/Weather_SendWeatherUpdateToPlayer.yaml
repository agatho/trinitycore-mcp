api:
  class: Weather
  method: SendWeatherUpdateToPlayer
  signature: void Weather::SendWeatherUpdateToPlayer(Player * player)
documentation:
  brief: Sends a weather update packet to the specified player.
  description: The SendWeatherUpdateToPlayer method is responsible for transmitting
    the current weather conditions in the player's zone to that specific player client.
    This method is typically invoked when a player enters a new zone or when weather
    conditions change, ensuring that the client displays accurate environmental effects
    such as rain, snow, or fog. The method operates within the TrinityCore's weather
    system and integrates with the game's networking layer to deliver real-time updates.
    It does not require any parameters beyond the target player object, and it directly
    interacts with the player's network connection to send the appropriate weather
    data packet.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage
    code: "Weather* weather = sWorld->GetWeatherMap()->GetWeather(player->GetZoneId());\n\
      if (weather)\n{\n    weather->SendWeatherUpdateToPlayer(player);\n}"
    language: cpp
  notes: This method is part of the core weather system implementation in TrinityCore.
    It directly sends a packet to the player's client and should only be called when
    weather conditions have actually changed or when a new player enters a zone. The
    method does not perform any validation on whether the player is in the correct
    zone or if weather updates are enabled, so callers should ensure proper context
    before invoking it.
  warnings: null
  related:
  - Weather::SendWeatherUpdate
  - Weather::SetWeather
  - Weather::GetWeather
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:35:49.348413'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
