api:
  class: Map
  method: CanUnload
  signature: bool Map::CanUnload(uint32 diff)
documentation:
  brief: Determines whether the map can be unloaded based on elapsed time and player
    activity.
  description: The CanUnload method checks if a map instance can be safely unloaded
    from memory. It evaluates whether the map has been inactive for a specified duration,
    typically used to determine when a map should be removed from memory to free resources.
    This method is crucial for managing memory usage in World of Warcraft instances
    and is often used in conjunction with other map lifecycle methods. The method
    considers both time-based conditions and player activity to make this determination.
  parameters: []
  returns: Returns true if the map can be unloaded, false otherwise. The return value
    indicates whether the map meets the criteria for unloading based on time and activity
    thresholds.
  examples:
  - title: Basic usage example
    code: "if (map->CanUnload(30000))\n{\n    // Map can be unloaded\n}\nelse\n{\n\
      \    // Map cannot be unloaded\n}"
    language: cpp
  notes: This method is typically used in conjunction with other map lifecycle management
    methods. The exact threshold for unloading may vary based on game mechanics and
    map type. Implementation details include checking player activity and time elapsed
    since last player interaction.
  warnings: This method should not be called directly by developers, as it's usually
    invoked automatically during map management processes. Misusing this method could
    lead to premature unloading of maps or memory leaks.
  related:
  - Map::IsInstance
  - Map::IsBattleground
  - Map::IsWorld
  - Map::Update
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T04:27:12.567741'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
