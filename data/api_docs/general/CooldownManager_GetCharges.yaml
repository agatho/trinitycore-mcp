api:
  class: CooldownManager
  method: GetCharges
  signature: uint32 CooldownManager::GetCharges(uint32 spellId) const
documentation:
  brief: Retrieves the current number of charges remaining for a specified spell's
    cooldown.
  description: The GetCharges method returns the number of usable charges remaining
    for a given spell that has a charge-based cooldown system. In World of Warcraft,
    certain abilities or spells can be used multiple times before entering a cooldown
    period, with each use consuming one charge. This method allows scripts and systems
    to query how many charges are currently available for a specific spell ID. The
    returned value represents the count of charges that can still be consumed before
    the spell enters its full cooldown state. This functionality is commonly used
    in conjunction with cooldown management systems to enforce usage limits on abilities
    like trinkets, heroic abilities, or other spells with limited charge mechanics.
  parameters: []
  returns: Returns a uint32 value representing the number of charges remaining for
    the specified spell. If the spell does not have a charge-based cooldown system
    or is not found in the cooldown manager, this method typically returns 0.
  examples:
  - title: Check Available Charges for a Spell
    code: "uint32 charges = cooldownManager->GetCharges(12345);\nif (charges > 0)\n\
      {\n    // Use the spell\n    // ...\n}"
    language: cpp
  - title: Implement Charge-Based Spell Usage
    code: "uint32 spellId = 98765;\nuint32 availableCharges = cooldownManager->GetCharges(spellId);\n\
      if (availableCharges > 0)\n{\n    // Consume one charge\n    // ... perform\
      \ spell logic ...\n    // Note: Actual charge deduction would typically be handled\
      \ by the cooldown manager internally\n}"
    language: cpp
  notes: This method is part of the CooldownManager class which handles all cooldown-related
    logic for spells and abilities. It's important to note that this method only returns
    the current charge count; it does not modify or consume charges. Charge consumption
    is typically handled separately by other methods in the same class, such as those
    responsible for applying cooldowns or reducing charges after spell usage.
  warnings: Be aware that calling GetCharges on a spell ID that has never been registered
    with the cooldown manager will likely return 0. Additionally, this method should
    not be used to determine if a spell is ready to use; instead, use methods like
    IsReady() or similar cooldown state checks. The returned value may also be affected
    by game mechanics such as haste effects or charge regeneration.
  related:
  - IsReady
  - GetCooldown
  - AddCharge
  - RemoveCharge
  - ResetCharges
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T15:46:46.936394'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
