api:
  class: MapManager
  method: GetMapUpdater
  signature: MapUpdater * MapManager::GetMapUpdater()
documentation:
  brief: Returns the map updater instance used for managing map-related updates and
    operations.
  description: The GetMapUpdater method retrieves a pointer to the MapUpdater singleton
    instance that handles all map-related update operations within the TrinityCore
    server. This includes processing map data, managing map objects, and coordinating
    asynchronous map operations. The returned MapUpdater instance is responsible for
    maintaining the integrity of map states and ensuring proper synchronization between
    different map components. This method is typically called during server initialization
    or when map-specific operations need to be performed.
  parameters: []
  returns: A pointer to the MapUpdater instance, or nullptr if the updater has not
    been initialized yet.
  examples:
  - title: Basic Usage
    code: "MapUpdater* updater = sMapMgr->GetMapUpdater();\nif (updater)\n{\n    //\
      \ Use the map updater for operations\n    updater->Update(1000); // Update maps\
      \ with 1000ms delta\n}"
    language: cpp
  - title: Thread-Safe Map Update
    code: "MapUpdater* updater = sMapMgr->GetMapUpdater();\nif (updater)\n{\n    //\
      \ Ensure thread safety when accessing map updater\n    std::lock_guard<std::mutex>\
      \ lock(updater->GetUpdateMutex());\n    updater->ProcessPendingUpdates();\n}"
    language: cpp
  notes: The MapUpdater instance is typically initialized during server startup and
    managed by the MapManager. This method returns a singleton instance, so multiple
    calls will return the same pointer. The returned pointer should be checked for
    null before use, especially during early server initialization phases.
  warnings: Never assume that the MapUpdater is always valid - check for null returns,
    particularly in early server startup code. Improper handling of the returned pointer
    may lead to undefined behavior or crashes if the updater has not been initialized
    yet.
  related:
  - MapManager::CreateMap
  - MapManager::GetMap
  - MapManager::Initialize
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T23:46:26.659981'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
