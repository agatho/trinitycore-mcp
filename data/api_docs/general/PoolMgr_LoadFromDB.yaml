api:
  class: PoolMgr
  method: LoadFromDB
  signature: void PoolMgr::LoadFromDB()
documentation:
  brief: Loads all game object and creature pools from the database into memory.
  description: The LoadFromDB method initializes and populates all pool templates
    and instances from the database tables. It retrieves data about game object and
    creature pools, including their spawn rates, conditions, and linking relationships.
    This method is typically called during server startup or when reloading pool data
    dynamically. The method processes all entries in the pool_template, pool_gameobject,
    and pool_creature tables to build internal pool structures that are used for dynamic
    spawning and despawning of game objects and creatures based on configured pool
    rules.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage During Server Startup
    code: "void InitializePoolManager()\n{\n    sPoolMgr->LoadFromDB();\n}"
    language: cpp
  notes: This method is typically called once during server initialization. It should
    not be invoked repeatedly during runtime unless pool data needs to be reloaded
    from the database. The method performs database queries and populates internal
    structures, so it may cause a temporary performance impact during execution.
  warnings: Calling this method while the server is running may cause unexpected behavior
    with existing spawned objects or creatures that are managed by pools. It's recommended
    to use this only during server startup or in controlled reload scenarios.
  related:
  - LoadPool
  - ReloadPools
  - GetPoolForGameObject
  - GetPoolForCreature
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T20:51:50.250104'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
