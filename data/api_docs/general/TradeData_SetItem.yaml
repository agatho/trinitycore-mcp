api:
  class: TradeData
  method: SetItem
  signature: void TradeData::SetItem(TradeSlots slot, Item * item, bool update)
documentation:
  brief: Sets an item in the specified trade slot of a TradeData object.
  description: The SetItem method assigns an Item pointer to a specific trade slot
    within a TradeData instance. This method is typically used during the trading
    process in World of Warcraft to update the state of items being offered for trade
    between two players. The update parameter controls whether the trade window should
    be refreshed or not, which affects client-side synchronization and validation.
    When update is true, the method may trigger UI updates and state checks to ensure
    the trade remains valid.
  parameters:
  - name: slot
    description: The trade slot index (TradeSlots enum) where the item will be placed.
      Valid values are typically 0-6 representing the 7 available trade slots.
  - name: item
    description: Pointer to the Item object to be set in the specified trade slot.
      Can be nullptr to clear the slot.
  - name: update
    description: Boolean flag indicating whether to update the trade window state
      and notify clients of changes. If true, client UI will refresh and validation
      may occur.
  returns: null
  examples:
  - title: Setting an item in a trade slot
    code: 'Item* myItem = player->GetItemByPos(INVENTORY_SLOT_BAG_0, 5);

      tradeData->SetItem(TRADE_SLOT_NONTRADE, myItem, true);'
    language: cpp
  - title: Clearing a trade slot
    code: tradeData->SetItem(TRADE_SLOT_TRADE, nullptr, false);
    language: cpp
  notes: This method is part of the core trading system in TrinityCore and interacts
    with both server-side state management and client synchronization. The TradeSlots
    enum typically includes values like TRADE_SLOT_TRADE, TRADE_SLOT_NONTRADE, etc.,
    each representing a specific slot in the trade window UI. When update is true,
    this method may trigger additional validation checks to ensure the trade remains
    valid according to game rules.
  warnings: Calling SetItem with an invalid TradeSlots value can lead to undefined
    behavior or crashes. Always validate that the item pointer is not null before
    setting it if your code depends on its validity. Using update=true when not in
    a proper trading context may cause unexpected UI updates or synchronization issues.
  related:
  - GetItem
  - ClearTradeData
  - ValidateTrade
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T05:15:37.945808'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
