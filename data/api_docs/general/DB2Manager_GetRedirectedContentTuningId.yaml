api:
  class: DB2Manager
  method: GetRedirectedContentTuningId
  signature: uint32 DB2Manager::GetRedirectedContentTuningId(uint32 contentTuningId,
    uint32 redirectFlag) const
documentation:
  brief: Returns the redirected ContentTuningId for a given content tuning ID and
    redirect flag.
  description: The GetRedirectedContentTuningId method retrieves the adjusted or redirected
    ContentTuningId based on the provided contentTuningId and redirectFlag parameters.
    This functionality is typically used in World of Warcraft to handle content tuning
    adjustments, such as when certain zones or difficulties should redirect to alternative
    content tuning IDs for balancing or compatibility purposes. The method allows
    the game engine to dynamically map one content tuning ID to another depending
    on various conditions defined by the redirectFlag. It is commonly utilized during
    zone loading or difficulty selection to ensure players are matched with appropriate
    content tuning data.
  parameters:
  - name: contentTuningId
    description: The original ContentTuningId that may be redirected. This ID typically
      corresponds to a specific content tuning entry in the game's database.
  - name: redirectFlag
    description: A flag that determines how the redirection logic should be applied.
      The exact meaning of this flag depends on internal game logic and is used to
      select the appropriate redirect behavior.
  returns: Returns the redirected ContentTuningId if a mapping exists for the given
    contentTuningId and redirectFlag; otherwise, returns the original contentTuningId
    if no redirection is applied.
  examples:
  - title: Basic usage of GetRedirectedContentTuningId
    code: 'uint32 redirectedId = sDB2Manager->GetRedirectedContentTuningId(12345,
      1);

      // Returns the redirected ContentTuningId for ID 12345 with redirect flag 1.'
    language: cpp
  - title: Using the result to determine adjusted content tuning
    code: "uint32 originalId = 1001;\nuint32 flag = 2;\nuint32 adjustedId = sDB2Manager->GetRedirectedContentTuningId(originalId,\
      \ flag);\nif (adjustedId != originalId)\n{\n    // Apply adjusted content tuning\
      \ logic\n    printf(\"Redirected from %u to %u\\n\", originalId, adjustedId);\n\
      }"
    language: cpp
  notes: This method is part of the DB2Manager class and relies on internal data structures
    that map content tuning IDs to their redirected equivalents. The redirectFlag
    parameter controls which redirection rules are applied, and its exact values should
    be determined from TrinityCore's source code or documentation. This function is
    likely used in conjunction with dynamic difficulty adjustment systems.
  warnings: Ensure that the contentTuningId and redirectFlag values passed are valid
    and within expected ranges to avoid unexpected behavior or invalid mappings. Incorrect
    usage may lead to incorrect content tuning being applied, affecting gameplay balance
    or progression.
  related:
  - GetContentTuningId
  - LoadDB2Files
  - GetContentTuningMap
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:46:12.410773'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
