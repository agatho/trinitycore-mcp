api:
  class: InterruptRotationManager
  method: ShouldInterrupt
  signature: bool InterruptRotationManager::ShouldInterrupt(uint32 spellId) const
documentation:
  brief: Determines whether a spell should interrupt the current rotation based on
    configured rules.
  description: The ShouldInterrupt method evaluates if a given spell ID should cause
    an interruption of the active combat rotation. This is typically used in AI behavior
    systems to decide when to halt ongoing actions such as casting spells or performing
    attacks in response to incoming hostile abilities. The decision is based on internal
    configuration rules that define which spells are considered interruptible or non-interruptible.
    The method does not modify any state but returns a boolean value indicating whether
    interruption should occur.
  parameters: []
  returns: Returns true if the specified spell ID should interrupt the current rotation;
    otherwise, returns false.
  examples:
  - title: Basic Usage in AI Logic
    code: "if (rotationManager->ShouldInterrupt(spellId)) {\n    // Cancel current\
      \ action and respond to incoming threat\n    unit->InterruptNonMeleeSpells(false);\n\
      }"
    language: cpp
  notes: This method relies on internal spell configuration data that defines which
    spells are considered interruptible. It is commonly used within AI decision-making
    loops where spell casting or attack sequences need to be preempted by incoming
    threats.
  warnings: null
  related:
  - InterruptRotationManager::AddInterruptSpell
  - InterruptRotationManager::RemoveInterruptSpell
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T12:18:36.706847'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
