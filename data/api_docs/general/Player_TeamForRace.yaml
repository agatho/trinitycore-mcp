api:
  class: Player
  method: TeamForRace
  signature: int Player::TeamForRace(uint8 race)
documentation:
  brief: Returns the team identifier associated with a specific race in the game.
  description: The TeamForRace method retrieves the team identifier (Alliance or Horde)
    that is associated with a given race in World of Warcraft. This function is crucial
    for determining which faction a player belongs to based on their race, and is
    often used in conjunction with other methods like GetTeamId() or GetFaction()
    to establish player's faction relationship. The method operates by mapping race
    values to their corresponding team identifiers, where 0 represents Alliance and
    1 represents Horde. This functionality is essential for game mechanics involving
    faction-based content, player versus player activities, and character creation.
  parameters:
  - name: race
    description: The race identifier (uint8) for which to retrieve the team. Valid
      values include 0-11 representing various races such as Human, Dwarf, Night Elf,
      Undead, Tauren, Gnome, Draenei, Blood Elf, Worgen, and Pandaren.
  returns: The return value represents the team identifier associated with the given
    race. For example, if race is 1 (Dwarf), the method returns 0 for Alliance; if
    race is 4 (Undead), the method returns 1 for Horde. The method returns 0 for Alliance
    and 1 for Horde in all cases, indicating that the return value is a binary representation
    of the team.
  examples:
  - title: Basic usage example
    code: 'int team = player->TeamForRace(4);

      // Returns 1 for Undead race

      // This indicates the player belongs to Horde faction'
    language: cpp
  - title: Advanced usage example
    code: "uint8 race = player->GetRace();\nint team = player->TeamForRace(race);\n\
      if (team == 1)\n{\n    // Player belongs to Horde faction\n}\nelse\n{\n    //\
      \ Player belongs to Alliance faction\n}"
    language: cpp
  notes: The method is implemented as a simple lookup table in the TrinityCore codebase,
    mapping race values to team identifiers. It's important to note that this method
    only works for races that have a defined team relationship in the game. The implementation
    assumes that all races are either Alliance or Horde, and does not consider other
    potential team types like Neutral.
  warnings: This method should be used carefully when dealing with race-specific faction
    mechanics, as incorrect usage can lead to improper faction assignment. Also, this
    method does not account for race-specific changes in faction relationships (like
    Worgen or Pandaren), which may require additional logic to handle properly.
  related:
  - GetTeamId
  - GetFaction
  - GetRace
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T23:23:17.316899'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
