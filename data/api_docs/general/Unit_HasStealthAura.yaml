api:
  class: Unit
  method: HasStealthAura
  signature: bool Unit::HasStealthAura() const
documentation:
  brief: Checks if the unit has an active stealth aura.
  description: This method determines whether the Unit object currently possesses
    a stealth aura, which is typically applied when a character enters stealth mode.
    The method returns true if any stealth-related aura is present on the unit, false
    otherwise. This functionality is commonly used in game logic to detect if a unit
    is currently invisible or hidden, particularly for NPCs or players who may be
    affected by stealth abilities. It's important to note that this method checks
    for the presence of a stealth aura specifically, rather than just any invisibility
    effect.
  parameters: []
  returns: Returns true if the unit has an active stealth aura, false otherwise. This
    indicates whether the unit is currently in a stealth state.
  examples:
  - title: Basic Usage Example
    code: "if (unit->HasStealthAura()) {\n    // Do something\n}\n"
    language: cpp
  notes: The method internally checks the unit's aura list for stealth-related effects.
    Performance considerations are minimal as this is a simple lookup operation, but
    it should be used judiciously in frequently called functions.
  warnings: This method does not distinguish between different types of stealth auras;
    it simply returns true if any stealth aura is present. Be cautious when using
    this in conjunction with other visibility checks to avoid unexpected behavior.
  related:
  - Unit::HasAura
  - Unit::HasStealth
  - Unit::IsInStealth
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:17:49.131502'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
