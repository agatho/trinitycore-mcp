api:
  class: AuraEffect
  method: HandleModOffhandDamagePercent
  signature: void AuraEffect::HandleModOffhandDamagePercent(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the percentage of off-hand weapon damage for the affected unit.
  description: The HandleModOffhandDamagePercent method is a handler function used
    within the AuraEffect class to adjust the damage percentage of a unit's off-hand
    weapon. This method is typically invoked when an aura application is applied or
    removed, modifying the character's off-hand damage output based on the aura's
    effect. The modification affects the overall damage calculation for off-hand attacks,
    which can be either increased or decreased depending on the aura's properties.
    It is part of TrinityCore's aura system that dynamically alters player or creature
    attributes during combat.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter provides context about which aura is affecting
      the unit and contains information about the application state.
  - name: mode
    description: An unsigned 8-bit integer indicating the mode of operation for the
      aura effect. This value typically determines how the effect should be processed,
      such as whether it's being applied (1) or removed (0).
  - name: apply
    description: A boolean flag that indicates whether the effect is being applied
      (true) or removed (false). This parameter controls the direction of the modification
      to the off-hand damage percentage.
  returns: null
  examples:
  - title: Applying Off-Hand Damage Modifier Aura
    code: "void ApplyOffhandDamageAura(Unit* target, float modifier)\n{\n    AuraApplication*\
      \ aurApp = new AuraApplication(target, target, SpellInfo::GetSpellInfo(12345));\n\
      \    AuraEffect* auraEffect = new AuraEffect();\n    auraEffect->HandleModOffhandDamagePercent(aurApp,\
      \ 1, true);\n}"
    language: cpp
  - title: Removing Off-Hand Damage Modifier Aura
    code: "void RemoveOffhandDamageAura(Unit* target)\n{\n    AuraApplication* aurApp\
      \ = target->GetAuraApplication(12345);\n    if (aurApp)\n    {\n        AuraEffect*\
      \ auraEffect = aurApp->GetEffect(0);\n        auraEffect->HandleModOffhandDamagePercent(aurApp,\
      \ 1, false);\n    }\n}"
    language: cpp
  notes: This method is part of the TrinityCore's internal aura handling system and
    should not be called directly by external code unless implementing custom aura
    effects. The method modifies unit attributes through the AuraApplication context,
    which may involve recalculating damage values and updating combat statistics.
  warnings: Improper usage of this method can lead to incorrect damage calculations
    or unexpected behavior in combat. Ensure that the aura application and mode parameters
    are correctly set before calling this function to avoid unintended modifications
    to off-hand damage.
  related:
  - AuraEffect::HandleModDamagePercent
  - AuraEffect::HandleModAttackPower
  - AuraApplication::GetEffect
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:31:50.503514'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
