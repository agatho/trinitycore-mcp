api:
  class: Pet
  method: learnSpell
  signature: bool Pet::learnSpell(uint32 spell_id)
documentation:
  brief: Teaches a pet a new spell by its ID.
  description: The learnSpell method attempts to add a new spell to the pet's spell
    book. It checks if the spell can be learned by the pet's type and class, verifies
    that the pet has sufficient spell slots available, and updates the pet's spell
    list accordingly. This method is typically used when a pet gains new abilities
    through training or quest completion. The method returns true if the spell was
    successfully added to the pet's spell book, or false if the operation failed due
    to invalid spell ID, insufficient resources, or other constraints.
  parameters:
  - name: spell_id
    description: The unique identifier of the spell to be learned by the pet. This
      must correspond to a valid spell entry in the game's spell database.
  returns: Returns true if the spell was successfully added to the pet's spell book,
    or false if the operation failed due to invalid spell ID, insufficient resources,
    or other constraints.
  examples:
  - title: Basic usage of learnSpell
    code: "Pet* myPet = ...; // Assume pet is already initialized\nuint32 fireballSpellId\
      \ = 133;\nif (myPet->learnSpell(fireballSpellId)) {\n    printf(\"Pet learned\
      \ Fireball spell\\n\");\n} else {\n    printf(\"Failed to teach Fireball to\
      \ pet\\n\");\n}"
    language: cpp
  - title: Learn multiple spells in sequence
    code: "Pet* myPet = ...;\nuint32 spellIds[] = {133, 200, 300}; // Fireball, Frostbolt,\
      \ Shadow Bolt\nfor (int i = 0; i < 3; ++i) {\n    if (!myPet->learnSpell(spellIds[i]))\
      \ {\n        printf(\"Failed to learn spell ID %u\\n\", spellIds[i]);\n    }\n\
      }"
    language: cpp
  notes: This method modifies the pet's spell book directly and may trigger updates
    to the client UI. It does not validate whether the spell is actually usable by
    the pet type (e.g., a warlock pet learning a warrior's ability). The method assumes
    that the spell ID is valid and corresponds to an existing spell in the database.
  warnings: Calling this method with an invalid spell_id may result in undefined behavior
    or silent failures. Ensure that the spell exists in the game's spell database
    before calling this method. Also, be aware that pets have limited spell slots,
    so repeated calls may fail once those slots are exhausted.
  related:
  - Pet::removeSpell
  - Pet::hasSpell
  - Pet::getSpellList
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T21:05:24.954245'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
