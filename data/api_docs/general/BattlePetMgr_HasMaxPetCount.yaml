api:
  class: BattlePetMgr
  method: HasMaxPetCount
  signature: bool BattlePetMgr::HasMaxPetCount(const BattlePetSpeciesEntry * battlePetSpecies,
    int ownerGuid) const
documentation:
  brief: Checks whether a player has reached the maximum allowed battle pet count
    for a specific species
  description: The HasMaxPetCount method determines if a player has already acquired
    the maximum number of battle pets allowed for a given species. This check is typically
    performed before allowing a player to capture or add a new battle pet of that
    species. The method evaluates both the player's current pet count and the maximum
    limit defined by the battle pet species entry. It considers the owner's GUID to
    ensure proper player-specific validation, making it suitable for multi-character
    scenarios where players might have different pet limits per species.
  parameters:
  - name: battlePetSpecies
    description: Pointer to the BattlePetSpeciesEntry structure defining the species
      properties and maximum allowed count
  - name: ownerGuid
    description: Integer representing the GUID of the player who owns the pets being
      checked
  returns: Returns true if the player has reached or exceeded the maximum allowed
    pet count for the specified species, false otherwise. This indicates that no more
    pets of this species can be added to the player's collection.
  examples:
  - title: Check if Player Can Add Another Pet
    code: "if (!battlePetMgr.HasMaxPetCount(speciesEntry, playerGuid)) {\n    // Allow\
      \ adding new pet\n    battlePetMgr.AddBattlePet(speciesEntry, playerGuid);\n\
      } else {\n    // Notify player they've reached the limit\n    SendSystemMessage(\"\
      You have reached the maximum number of this pet type.\");\n}"
    language: cpp
  notes: This method likely performs database queries or cached lookups to determine
    current pet counts. It's important for maintaining game balance and preventing
    players from accumulating unlimited pets of rare species. The implementation may
    cache results for performance reasons in active sessions.
  warnings: Ensure that the battlePetSpecies parameter is not null before calling
    this method, as dereferencing a null pointer will cause undefined behavior. Also,
    verify that ownerGuid corresponds to an actual player character to avoid incorrect
    validation results.
  related:
  - AddBattlePet
  - GetBattlePetCount
  - CanCaptureBattlePet
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:52:53.918970'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
