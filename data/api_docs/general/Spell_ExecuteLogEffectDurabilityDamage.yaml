api:
  class: Spell
  method: ExecuteLogEffectDurabilityDamage
  signature: void Spell::ExecuteLogEffectDurabilityDamage(int effect, Unit * victim,
    int32 itemId, int32 amount)
documentation:
  brief: Logs durability damage effect for a spell on a target unit.
  description: This method handles the logging of durability damage effects that occur
    when a spell is executed against a target unit. It specifically records the damage
    applied to an item's durability during combat, which is crucial for maintaining
    game balance and tracking player equipment degradation. The method ensures proper
    logging of damage events while considering the victim's current state and the
    item being affected.
  parameters:
  - name: effect
    description: The effect index that triggered the durability damage. This typically
      corresponds to a specific spell effect in the spell database.
  - name: victim
    description: The target unit receiving the durability damage. This could be either
      a player or creature, and represents the entity whose equipment is being affected.
  - name: itemId
    description: The identifier of the item that suffered durability damage. This
      is typically an item's ID from the game database, not just a random number.
  - name: amount
    description: The amount of durability damage applied to the item. This represents
      the actual damage value, which may be negative or positive depending on the
      context.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Spell* spell = new Spell();

      spell->ExecuteLogEffectDurabilityDamage(0, player, 12345, -10);

      '
    language: cpp
  - title: Advanced usage example
    code: 'Spell* spell = new Spell();

      Unit* target = GetTarget();

      int32 itemID = GetItemID();

      int32 damageAmount = GetDamageValue();

      spell->ExecuteLogEffectDurabilityDamage(1, target, itemID, damageAmount);

      '
    language: cpp
  notes: This method is part of the spell execution logic and should be called only
    during active spell processing. It requires valid parameters to function correctly;
    invalid parameters may cause errors or unexpected behavior.
  warnings: Improper handling of this method can lead to incorrect durability tracking,
    potentially causing game balance issues or player complaints about equipment degradation.
    Ensure that all parameters are properly validated before calling this method.
  related:
  - Spell::ExecuteLogEffect
  - Spell::LogEffect
  - Spell::GetEffect
  - Spell::SetEffect
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T22:03:56.653278'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
