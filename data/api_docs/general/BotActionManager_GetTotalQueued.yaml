api:
  class: BotActionManager
  method: GetTotalQueued
  signature: uint64 BotActionManager::GetTotalQueued() const
documentation:
  brief: Returns the total number of queued bot actions in the manager
  description: The GetTotalQueued method retrieves the cumulative count of all bot
    actions currently queued within the BotActionManager instance. This value represents
    the sum of all pending actions across all bots managed by this action manager,
    including both immediate and scheduled tasks. The method provides a snapshot of
    the current workload of the bot system and is useful for monitoring queue sizes,
    performance tuning, and determining when to process or clear queued actions. This
    count includes all action types and states within the queue, making it a comprehensive
    measure of pending work.
  parameters: []
  returns: A uint64 value representing the total number of queued bot actions across
    all managed bots. Returns zero if no actions are currently queued.
  examples:
  - title: Basic Usage to Check Queue Size
    code: "uint64 queuedCount = botActionManager->GetTotalQueued();\nif (queuedCount\
      \ > 1000)\n{\n    sLog->outString(\"Warning: Bot queue size is %llu\", queuedCount);\n\
      }"
    language: cpp
  - title: Monitoring Queue Growth Over Time
    code: 'uint64 initialQueued = botActionManager->GetTotalQueued();

      // ... perform some bot actions ...

      uint64 finalQueued = botActionManager->GetTotalQueued();

      uint64 difference = finalQueued - initialQueued;

      sLog->outString("Queue grew by %llu actions", difference);'
    language: cpp
  notes: This method performs a simple summation of all queued actions and is generally
    fast. The returned value is thread-safe for reading but may change immediately
    after the call if other threads are adding or removing actions. The implementation
    likely uses atomic operations or locking mechanisms to ensure consistency.
  warnings: The returned value represents a snapshot at the time of the call and may
    be outdated immediately afterward. If used for critical decisions, consider using
    the value in conjunction with other synchronization methods or polling intervals.
  related:
  - GetQueuedActions
  - AddAction
  - ClearQueue
  - ProcessQueuedActions
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T17:29:08.856546'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
