api:
  class: Unit
  method: SetChannelSpellData
  signature: void Unit::SetChannelSpellData(uint32 startTimeMs, uint32 durationMs)
documentation:
  brief: Sets the channel spell data for a unit, specifying start time and duration
    in milliseconds.
  description: This method configures the channel spell data for a Unit object, establishing
    the timing parameters for spell channeling. It sets the start time and duration
    in milliseconds for the channel spell, which is crucial for managing spell casting
    mechanics and synchronization within the TrinityCore framework. The method directly
    affects how channel spells are processed and tracked during gameplay, particularly
    for units that are actively channeling spells.
  parameters:
  - name: startTimeMs
    description: The start time in milliseconds for the channel spell. This parameter
      determines when the spell channeling begins relative to the current game time.
  - name: durationMs
    description: The duration in milliseconds for the channel spell. This parameter
      specifies how long the spell will continue channeling, affecting the timing
      of spell completion and synchronization.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* unit = new Unit;

      unit->SetChannelSpellData(1000, 3000);

      // Sets channel spell data with start time at 1000ms and duration of 3000ms'
    language: cpp
  - title: Advanced Usage Example
    code: 'Unit* unit = new Unit;

      uint32 startTime = GetGameTime();

      uint32 duration = 5000;

      unit->SetChannelSpellData(startTime, duration);

      // Sets channel spell data with current game time as start time and 5 seconds
      duration'
    language: cpp
  notes: This method is typically used in conjunction with other spell-related functions
    to properly manage channeling behavior. It should be called when setting up a
    channel spell for a unit, ensuring that the timing parameters are correctly established
    before the spell begins. Performance considerations include avoiding frequent
    calls to this method during active gameplay, as it may impact synchronization
    of spell mechanics.
  warnings: This method should only be used when dealing with channel spells, and
    not for regular spell casting. Incorrect usage can lead to improper spell synchronization
    or timing issues in gameplay. Avoid calling this method multiple times without
    proper validation to prevent potential conflicts or inconsistencies in spell tracking.
  related:
  - Unit::GetChannelSpellData
  - Unit::SetSpellData
  - Unit::SetChannelSpell
  - Unit::GetChannelSpell
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:26:09.149377'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
