api:
  class: Spell
  method: IsNeedSendToClient
  signature: bool Spell::IsNeedSendToClient() const
documentation:
  brief: Determines whether the spell requires client-side transmission for proper
    functionality.
  description: This method checks if a spell needs to be sent to the client for processing,
    typically used during spell activation or when determining if a spell should be
    displayed in the player's action bar. The method evaluates various conditions
    including spell flags, visual effects, and client-side requirements. It is commonly
    used in conjunction with other spell-related methods to ensure proper synchronization
    between server and client states. This functionality is essential for maintaining
    accurate spell behavior and preventing client-side discrepancies during gameplay.
  parameters: []
  returns: Returns true if the spell requires client-side transmission, false otherwise.
    A true return indicates that the spell must be sent to the client for proper processing,
    while a false return suggests that the spell can be handled server-side without
    client interaction.
  examples:
  - title: Basic usage example
    code: "if (spell->IsNeedSendToClient()) {\n    // Send spell to client\n}\n"
    language: cpp
  - title: Advanced usage with spell activation
    code: "Spell* spell = player->GetSpellInfo(12345);\nif (spell && spell->IsNeedSendToClient())\
      \ {\n    // Send to client and update action bar\n    player->SendSpellToClient(spell);\n\
      }\n"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related methods
    like IsVisible() or IsSpellVisible() to determine if a spell should be displayed
    on the client side. The method may return true even when the spell has no visual
    effects, indicating that the spell requires client-side processing for proper
    functionality.
  warnings: This method should not be used as a standalone check for spell visibility.
    It's important to consider other factors like spell flags and client-side requirements
    before making final decisions about spell transmission. Using this method incorrectly
    can lead to client-side desync issues.
  related:
  - Spell::IsVisible
  - Spell::IsSpellVisible
  - Spell::SendToClient
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T14:20:00.305755'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
