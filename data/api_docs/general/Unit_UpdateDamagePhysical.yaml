api:
  class: Unit
  method: UpdateDamagePhysical
  signature: void Unit::UpdateDamagePhysical(int attType)
documentation:
  brief: Updates the physical damage statistics for the unit based on the specified
    attack type.
  description: The UpdateDamagePhysical method recalculates and updates the physical
    damage values associated with a Unit object, typically in response to changes
    in weapon stats, enchantments, or combat state. This method is integral to the
    combat system as it ensures that damage calculations reflect current equipment
    and status effects. It takes an attack type parameter to determine which specific
    physical damage components should be updated, such as main hand, off-hand, or
    ranged attacks. The method usually triggers internal recalculations of damage
    bonuses, weapon speed, and other relevant combat modifiers.
  parameters:
  - name: attType
    description: Specifies the attack type for which physical damage should be updated.
      Valid values typically correspond to melee attack types (main hand, off-hand)
      or ranged attacks. The exact enum values depend on TrinityCore's internal attack
      type definitions.
  returns: null
  examples:
  - title: Update main hand physical damage
    code: 'Unit* player = ...;

      player->UpdateDamagePhysical(BASE_ATTACK);'
    language: cpp
  - title: Update both main and off-hand physical damage
    code: 'Unit* player = ...;

      player->UpdateDamagePhysical(BASE_ATTACK);

      player->UpdateDamagePhysical(OFF_ATTACK);'
    language: cpp
  notes: This method is typically called internally by the combat system when weapon
    or stat changes occur. It may trigger additional recalculations of attack speed,
    damage multipliers, and other derived stats. Developers should be aware that calling
    this method frequently can impact performance in high-frequency combat scenarios.
  warnings: Calling UpdateDamagePhysical with an invalid attType value may lead to
    undefined behavior or incorrect damage calculations. Always ensure the parameter
    corresponds to valid attack types defined within the TrinityCore framework. This
    method modifies internal unit state and should not be called during critical sections
    of combat processing without proper synchronization.
  related:
  - GetWeaponDamage
  - SetDamage
  - CalculateDamage
  - UpdateAttackPower
metadata:
  confidence: 0.85
  generated_at: '2025-10-29T16:26:25.359604'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
