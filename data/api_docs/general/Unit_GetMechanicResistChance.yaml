api:
  class: Unit
  method: GetMechanicResistChance
  signature: int32 Unit::GetMechanicResistChance(const SpellInfo * spellInfo) const
documentation:
  brief: Calculates the chance for a unit to resist a specific spell's mechanic.
  description: This method determines the probability that a unit will resist a given
    spell's mechanical effects, such as stun, root, or silence. It considers various
    factors including the unit's resistance to specific mechanics, spell properties,
    and game mechanics like the player's level difference or target's armor. The method
    is commonly used in combat calculations and spell resistance systems within TrinityCore.
  parameters: []
  returns: Returns an integer value representing the percentage chance of resisting
    a spell's mechanic. Values can range from 0 to 100, where 0 indicates no resistance
    and 100 indicates full resistance. Negative values may indicate that the unit
    is more likely to be affected by the spell than to resist it.
  examples:
  - title: Basic Usage Example
    code: "int32 resistChance = unit->GetMechanicResistChance(spellInfo);\nif (resistChance\
      \ > 50) {\n    // Unit has over 50% chance to resist\n}"
    language: cpp
  notes: This method is typically used in conjunction with other resistance calculations
    and may be affected by buffs, debuffs, or specific game mechanics such as level
    differences or armor values. Performance considerations include the need for accurate
    spell information and unit state handling.
  warnings: The method may return negative values if the unit's resistance is less
    than the base chance of the spell's mechanic. Care should be taken when interpreting
    results in combat situations, as this could indicate that a unit is more likely
    to be affected by the spell rather than resist it.
  related:
  - GetSpellMechanic
  - GetSpellResist
  - GetUnitSpellResist
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:59:40.888781'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
