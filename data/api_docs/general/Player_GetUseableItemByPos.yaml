api:
  class: Player
  method: GetUseableItemByPos
  signature: Item * Player::GetUseableItemByPos(uint8 bag, uint8 slot) const
documentation:
  brief: Returns a usable item from the specified bag and slot position.
  description: This method retrieves an item from a specific bag and slot position
    on the player's character. It is commonly used in game mechanics to access items
    that are currently usable, such as weapons or armor, which may be equipped or
    in the player's inventory. The method checks if the item exists at the specified
    location and returns a pointer to it if found, otherwise returning nullptr. This
    functionality is essential for handling item interactions, equipment management,
    and various game systems that require access to specific items.
  parameters:
  - name: bag
    description: The bag number where the item is located. Valid values range from
      0 to 119, with 0 representing the main backpack and higher numbers representing
      other bags like equipped items or inventory slots.
  - name: slot
    description: The slot number within the specified bag. Valid values range from
      0 to 36, where 0 represents the first slot in the bag and higher numbers represent
      subsequent slots.
  returns: Returns a pointer to an Item object if an item exists at the specified
    position, otherwise returns nullptr. This indicates that either no item exists
    at that location or the item is not usable.
  examples:
  - title: Basic usage example
    code: "Item* item = player->GetUseableItemByPos(0, 0);\nif (item != nullptr)\n\
      {\n    // Item found\n    // Do something with the item\n}"
    language: cpp
  - title: Advanced usage example
    code: "Item* weapon = player->GetUseableItemByPos(1, 3);\nif (weapon != nullptr)\n\
      {\n    // Check if it's a weapon\n    if (weapon->GetProto()->Class == ITEM_CLASS_WEAPON)\n\
      \    {\n        // Process weapon\n    }\n}"
    language: cpp
  notes: This method is typically used in conjunction with other item-related methods
    to manage player inventory and equipment. It's important to note that the method
    does not validate whether the item is usable or not, but simply returns the item
    at the specified position. Performance considerations include checking for valid
    bag/slot combinations before calling this method.
  warnings: This method may return nullptr if no item exists at the specified position,
    so developers should always check for null before using the returned item. Also,
    be aware that the method does not distinguish between items that are equipped
    versus those in inventory, which can lead to confusion when handling equipment
    management.
  related:
  - GetItemByPos
  - GetInventoryItem
  - GetEquippedItemBySlot
  - GetUseableItemBySlot
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:12:50.576754'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
