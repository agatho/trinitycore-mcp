api:
  class: MotionMaster
  method: MovePoint
  signature: void MotionMaster::MovePoint(uint32 id, float x, float y, float z, bool
    generatePath, int finalOrient, int speed, MovementWalkRunSpeedSelectionMode speedSelectionMode,
    int closeEnoughDistance, int param9)
documentation:
  brief: Initiates a movement to a specified point with optional path generation and
    speed settings.
  description: The MovePoint method instructs an AI-controlled unit to move to a specific
    location in the world. It supports generating a path for the unit to follow, setting
    movement speed, and defining a final orientation upon arrival. This method is
    commonly used in creature AI scripts to make NPCs walk or run to designated waypoints
    or targets. The movement can be configured with various parameters such as whether
    to generate a path, what speed to use, and how close the unit must get to the
    target point before considering the movement complete.
  parameters:
  - name: id
    description: Unique identifier for this movement action. Used to distinguish between
      different movement commands issued to the same unit.
  - name: x
    description: X coordinate of the destination point in world space.
  - name: y
    description: Y coordinate of the destination point in world space.
  - name: z
    description: Z coordinate of the destination point in world space.
  - name: generatePath
    description: Boolean flag indicating whether to generate a path for the unit to
      follow. If true, the system will calculate and store the path before movement
      begins.
  - name: finalOrient
    description: Final orientation (in degrees) that the unit should face upon reaching
      the destination. A value of -1 means no specific orientation is enforced.
  - name: speed
    description: Movement speed to use for this action. The interpretation depends
      on the speedSelectionMode parameter.
  - name: speedSelectionMode
    description: Defines how the speed parameter is interpreted. Possible values include
      walk, run, or other movement types depending on implementation.
  - name: closeEnoughDistance
    description: Distance threshold in yards within which the unit is considered to
      have reached its destination. If the unit gets closer than this distance, the
      movement is marked as complete.
  - name: param9
    description: Reserved parameter for future use or specific internal behavior.
      Currently unused in standard implementations.
  returns: null
  examples:
  - title: Basic Movement to Point
    code: motionMaster->MovePoint(1, 100.0f, 200.0f, 300.0f, true, -1, 1, MOVEMENT_WALK_SPEED,
      1.0f, 0);
    language: cpp
  - title: Movement with Specific Speed and Orientation
    code: motionMaster->MovePoint(2, 500.0f, 600.0f, 700.0f, false, 90, 2, MOVEMENT_RUN_SPEED,
      0.5f, 0);
    language: cpp
  notes: This method does not immediately start movement; it queues the action for
    execution by the motion system. The actual pathfinding and movement will occur
    asynchronously during the next update cycle. Ensure that coordinates are valid
    and within world bounds to prevent unexpected behavior.
  warnings: Using invalid or out-of-bounds coordinates may cause the movement to fail
    silently or result in erratic behavior. Setting finalOrient to -1 disables orientation
    enforcement, which might be desired for some AI behaviors but can lead to units
    facing unintended directions.
  related:
  - MoveIdle
  - MoveTarget
  - MoveRandom
  - Clear
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T10:29:52.490005'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
