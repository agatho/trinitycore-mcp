api:
  class: AuraEffect
  method: HandleModPowerCost
  signature: void AuraEffect::HandleModPowerCost(const AuraApplication * aurApp, uint8
    mode, bool apply) const
documentation:
  brief: Modifies the power cost of spells for the affected unit.
  description: The HandleModPowerCost method is responsible for adjusting the amount
    of power (such as mana, rage, or energy) required to cast spells while an aura
    effect is active. This method is typically invoked during aura application or
    removal to update the spell cost calculations for the affected player or creature.
    It modifies the power cost based on the aura's properties and whether the effect
    is being applied or removed. The method interacts with the AuraApplication object
    to determine the context of the aura state change, ensuring that the correct power
    modification is applied to all relevant spells.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This parameter provides context about which aura is triggering
      the power cost modification.
  - name: mode
    description: The mode of operation, indicating how the power cost should be modified.
      This value typically determines whether the modification is additive or multiplicative
      and may control other aspects of the calculation.
  - name: apply
    description: Boolean flag indicating whether the aura effect is being applied
      (true) or removed (false). This determines if the power cost should be increased
      or decreased accordingly.
  returns: null
  examples:
  - title: Applying a Power Cost Reduction Aura
    code: "void ApplyPowerCostReduction(Player* player)\n{\n    AuraEffect* aura =\
      \ new AuraEffect();\n    AuraApplication* app = new AuraApplication(player,\
      \ player, nullptr);\n    aura->HandleModPowerCost(app, 0, true); // Apply the\
      \ effect\n}"
    language: cpp
  - title: Removing a Power Cost Modification
    code: "void RemovePowerCostModification(Unit* unit)\n{\n    AuraApplication* app\
      \ = unit->GetAuraApplication(12345);\n    if (app)\n    {\n        AuraEffect*\
      \ aura = app->GetBase()->GetEffect(0);\n        aura->HandleModPowerCost(app,\
      \ 1, false); // Remove the effect\n    }\n}"
    language: cpp
  notes: This method is part of the aura handling system in TrinityCore and is typically
    called internally by the core engine when auras are applied or removed. Developers
    should not directly call this method unless implementing custom aura effects.
    The 'mode' parameter may have different interpretations depending on the specific
    aura type, so it's important to understand how each aura defines its behavior.
  warnings: Incorrect usage of the mode parameter can lead to unexpected power cost
    modifications. This method modifies internal spell cost calculations and should
    only be used in conjunction with proper aura management. Improper handling may
    cause spells to consume incorrect amounts of power or fail to cast altogether.
  related:
  - AuraEffect::HandleEffect
  - AuraApplication::GetBase
  - Unit::GetAuraApplication
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T12:28:45.775701'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
