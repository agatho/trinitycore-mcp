api:
  class: ScriptMgr
  method: SetScriptContext
  signature: void ScriptMgr::SetScriptContext(const std::string & context)
documentation:
  brief: Sets the script context for the ScriptMgr instance to determine which scripts
    are active or loaded.
  description: The SetScriptContext method configures the script context within the
    ScriptMgr class, allowing developers to control which set of scripts should be
    active or loaded in the TrinityCore environment. This is particularly useful when
    managing different script configurations for various game modes, expansions, or
    custom content. The method updates an internal context identifier that other script-related
    methods may use to determine behavior or filtering logic. It's typically called
    during server initialization or when switching between different scripting environments.
  parameters:
  - name: context
    description: A string identifier representing the desired script context. This
      value determines which scripts will be considered active or loaded by the ScriptMgr.
  returns: null
  examples:
  - title: Setting Script Context to Default
    code: ScriptMgr::instance()->SetScriptContext("default");
    language: cpp
  - title: Switching Script Context for Expansion
    code: ScriptMgr::instance()->SetScriptContext("wrath_of_the_lich_king");
    language: cpp
  notes: This method is typically used in conjunction with other script management
    functions within the ScriptMgr class. The context string should match predefined
    values expected by the scripting system to ensure proper functionality.
  warnings: null
  related:
  - GetScriptContext
  - LoadScripts
  - UnloadScripts
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T06:46:43.127734'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
