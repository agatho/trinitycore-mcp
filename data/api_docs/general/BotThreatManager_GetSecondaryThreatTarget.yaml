api:
  class: BotThreatManager
  method: GetSecondaryThreatTarget
  signature: ThreatTarget * BotThreatManager::GetSecondaryThreatTarget()
documentation:
  brief: Returns the secondary threat target for a bot's current threat management
    state
  description: The GetSecondaryThreatTarget method retrieves the secondary target
    that the bot's threat manager is currently tracking. This target represents a
    creature or player that has been assigned a secondary threat level, typically
    used in scenarios where the bot needs to manage multiple aggro sources or when
    implementing complex threat rotation strategies. The returned ThreatTarget object
    contains information about the target's identity and current threat value. This
    method is part of the bot's AI behavior system and is essential for maintaining
    proper threat distribution among multiple targets.
  parameters: []
  returns: A pointer to a ThreatTarget object representing the secondary threat target,
    or nullptr if no secondary target is currently being tracked
  examples:
  - title: Basic usage to check secondary threat target
    code: "ThreatTarget* secondaryTarget = botThreatManager->GetSecondaryThreatTarget();\n\
      if (secondaryTarget != nullptr)\n{\n    // Process the secondary threat target\n\
      \    uint64 targetGuid = secondaryTarget->GetGUID();\n    float threatValue\
      \ = secondaryTarget->GetThreat();\n    // Use target information for bot decision\
      \ making\n}"
    language: cpp
  notes: This method should only be called during active combat situations where threat
    management is in effect. The returned ThreatTarget pointer is valid only until
    the next threat update cycle and should not be stored for extended periods. The
    method may return nullptr if no secondary target exists or if the bot's threat
    manager has not yet established a secondary target.
  warnings: Calling this method outside of combat or when the bot is not actively
    managing threats may result in undefined behavior. Always check for null return
    values before dereferencing the returned pointer to prevent crashes.
  related:
  - GetPrimaryThreatTarget
  - SetSecondaryThreatTarget
  - UpdateThreatTargets
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T16:45:00.354877'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
