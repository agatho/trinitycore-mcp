api:
  class: WarriorAI
  method: UpdateRotation
  signature: void WarriorAI::UpdateRotation(::Unit * target)
documentation:
  brief: Updates the warrior's combat rotation based on the current target and AI
    state.
  description: The UpdateRotation method is responsible for determining and executing
    the appropriate combat actions for a warrior AI unit. It evaluates the current
    target, available abilities, and combat conditions to select the most effective
    rotation sequence. This method typically handles ability prioritization, cooldown
    management, and targeting logic specific to warrior classes in World of Warcraft.
    The function is called regularly during combat to ensure optimal performance and
    adherence to the warrior's tactical role.
  parameters:
  - name: target
    description: Pointer to the Unit object representing the current combat target.
      This parameter defines the entity against which the warrior will execute its
      rotation. Must be a valid Unit pointer; null pointers may cause undefined behavior.
  returns: void
  examples:
  - title: Basic Usage in Combat
    code: "void SomeWarriorAI::Update()\n{\n    if (me->GetVictim())\n        UpdateRotation(me->GetVictim());\n\
      }"
    language: cpp
  - title: Integration with Custom Warrior AI
    code: "class MyWarriorAI : public WarriorAI\n{\npublic:\n    MyWarriorAI(Creature*\
      \ creature) : WarriorAI(creature) {}\n    \n    void UpdateAI(uint32 diff) override\n\
      \    {\n        if (!UpdateVictim())\n            return;\n        \n      \
      \  UpdateRotation(me->GetVictim());\n        \n        // Additional AI logic\
      \ here\n    }\n};"
    language: cpp
  notes: This method is typically invoked from within the main AI update loop. It
    assumes that the target unit is valid and in combat range. The warrior's rotation
    may be influenced by various factors including stance, rage management, and spell
    cooldowns. Developers should ensure that target validation occurs before calling
    this method to prevent potential crashes or undefined behavior.
  warnings: Calling UpdateRotation with a null target pointer can lead to segmentation
    faults or other runtime errors. Always validate that the target is not null and
    is within combat range before invoking this method. Additionally, this method
    modifies internal AI state and should only be called from within the appropriate
    AI update context.
  related:
  - UpdateVictim
  - DoMeleeAttackIfReady
  - CastSpell
  - GetAI
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T19:41:19.899844'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
