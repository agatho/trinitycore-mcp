api:
  class: SpawnedPoolData
  method: SpawnedPoolData
  signature: void SpawnedPoolData::SpawnedPoolData(SpawnedPoolData && right)
documentation:
  brief: Moves a SpawnedPoolData object's resources to another SpawnedPoolData object,
    leaving the source in a valid but unspecified state.
  description: The SpawnedPoolData move constructor transfers ownership of resources
    from the right-hand side object to the newly constructed object. This is a standard
    C++ move semantics implementation that efficiently transfers data without deep
    copying. The moved-from object becomes valid but its contents are unspecified,
    meaning it should not be used until reassigned or moved to again. In the context
    of TrinityCore's pool system, this constructor is typically used when transferring
    ownership of spawned pool data between objects during object lifecycle management
    or when reassigning pool data structures.
  parameters: []
  returns: null
  examples:
  - title: Move Constructing a SpawnedPoolData Object
    code: 'SpawnedPoolData originalData;

      // ... populate originalData ...

      SpawnedPoolData movedData = std::move(originalData);

      // originalData is now in a valid but unspecified state

      // movedData contains the resources previously owned by originalData'
    language: cpp
  notes: This constructor follows standard C++ move semantics. After calling this
    constructor, the source object should not be used unless it's subsequently assigned
    or moved to again. The implementation likely involves transferring pointers, smart
    pointers, or other resource handles rather than copying data.
  warnings: null
  related: []
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T14:24:34.956562'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
