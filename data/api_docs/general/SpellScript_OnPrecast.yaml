api:
  class: SpellScript
  method: OnPrecast
  signature: void SpellScript::OnPrecast()
documentation:
  brief: Executes precast logic for a spell during the casting process
  description: The OnPrecast method is a virtual callback function in the SpellScript
    class that is invoked before a spell begins its casting animation. This method
    allows developers to implement custom behavior or validation logic that should
    occur prior to spell execution. It is typically used to modify spell properties,
    cancel the cast, or perform checks that must happen before the spell is actually
    cast. The method is called during the precast phase of spell casting and provides
    an opportunity to interact with the spell's context before it proceeds to the
    actual casting sequence.
  parameters: []
  returns: null
  examples:
  - title: Basic Spell Pre-cast Check
    code: "class MySpellScript : public SpellScript\n{\npublic:\n    void OnPrecast()\
      \ override\n    {\n        if (GetCaster()->HasAura(12345))\n        {\n   \
      \         PreventCast(); // Prevents the spell from casting\n        }\n   \
      \ }\n};"
    language: cpp
  - title: Modifying Spell Target During Pre-cast
    code: "class CustomSpellScript : public SpellScript\n{\npublic:\n    void OnPrecast()\
      \ override\n    {\n        if (GetCaster()->GetTypeId() == TYPEID_PLAYER)\n\
      \        {\n            // Modify target or spell properties before casting\n\
      \            SetTarget(GetCaster()->GetVictim());\n        }\n    }\n};"
    language: cpp
  notes: This method is called during the precast phase, which occurs before the spell
    animation begins. It's important to note that modifying spell properties in this
    method may affect the spell's behavior during the actual cast. The method should
    not be used for heavy computations as it can impact performance during spell casting.
  warnings: Avoid performing operations that might block or delay the game loop in
    this method, as it is called synchronously during spell processing. Also, be careful
    when calling methods that might alter the spell's target or properties, as these
    changes will persist into the actual casting phase.
  related:
  - SpellScript::OnCast
  - SpellScript::OnHit
  - SpellScript::OnEffect
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:02:24.148303'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
