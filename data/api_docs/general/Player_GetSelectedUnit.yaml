api:
  class: Player
  method: GetSelectedUnit
  signature: int * Player::GetSelectedUnit() const
documentation:
  brief: Returns the unique identifier (GUID) of the currently selected unit
  description: This method retrieves the GUID of the unit currently selected by the
    player. The GUID represents a unique identifier for the selected target and is
    used throughout the TrinityCore system to identify objects in the game world.
    This method is commonly used in player scripts and game mechanics to determine
    which unit the player has selected, particularly when performing actions like
    attack, cast spells, or interact with NPCs. The returned GUID can be used to retrieve
    the actual unit object from the game world using other methods such as GetPlayer().
  parameters: []
  returns: Returns the GUID of the currently selected unit, or 0 if no unit is selected.
    A value of 0 indicates that no unit is currently selected by the player.
  examples:
  - title: Basic usage example
    code: "int guid = player->GetSelectedUnit();\nif (guid != 0)\n{\n    // A unit\
      \ is selected\n    // Do something with the GUID\n}\nelse\n{\n    // No unit\
      \ is selected\n}"
    language: cpp
  notes: This method is thread-safe and can be called from any thread. The GUID returned
    by this method may be invalid if the selected unit has been removed or despawned,
    so it should be used with caution when performing actions that require a valid
    unit object.
  warnings: Be careful when using this method in conjunction with other methods that
    rely on the selected unit's existence, as the selected unit might not exist anymore
    when the method is called. Also, ensure that the player has a valid selection
    before calling this method to avoid unexpected behavior.
  related:
  - GetPlayer
  - GetSelectedPlayer
  - GetSelectedUnit
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T16:26:35.003690'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
