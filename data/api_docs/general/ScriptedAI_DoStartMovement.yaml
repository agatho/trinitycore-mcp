api:
  class: ScriptedAI
  method: DoStartMovement
  signature: void ScriptedAI::DoStartMovement(int * target, float distance, float
    angle)
documentation:
  brief: Initiates movement toward a target with specified distance and angle.
  description: The DoStartMovement method begins the AI's movement behavior towards
    a designated target. It calculates the appropriate path based on the provided
    distance and angle parameters, and initiates the movement animation or action.
    This method is typically used in scripted AI behaviors to control NPC movement
    patterns, such as moving to a specific location relative to a target unit or object.
    The method does not block execution; it starts the movement process asynchronously.
    It's commonly used in conjunction with other AI methods for creating complex movement-based
    combat or quest behaviors.
  parameters:
  - name: target
    description: Pointer to an integer representing the target identifier or index.
      This typically refers to a unit or object ID that the AI should move toward.
  - name: distance
    description: Floating-point value specifying the distance in yards from the target
      to move. Positive values indicate movement away from the target, negative values
      indicate movement toward the target.
  - name: angle
    description: "Floating-point value representing the angle in radians relative\
      \ to the target's facing direction. Zero radians represents moving directly\
      \ toward the target, while 90-degree angles (\u03C0/2 radians) represent movement\
      \ perpendicular to the target's orientation."
  returns: null
  examples:
  - title: Basic Movement Toward Target
    code: "void ExampleAI::UpdateAI(uint32 diff)\n{\n    if (Unit* target = SelectTarget(SELECT_TARGET_NEAREST,\
      \ 0))\n    {\n        int targetId = target->GetGUID().GetRawValue();\n    \
      \    DoStartMovement(&targetId, 5.0f, 0.0f); // Move 5 yards toward the target\n\
      \    }\n}"
    language: cpp
  - title: Movement at Angle Relative to Target
    code: "void ExampleAI::DoFlankTarget()\n{\n    if (Unit* target = me->GetVictim())\n\
      \    {\n        int targetId = target->GetGUID().GetRawValue();\n        DoStartMovement(&targetId,\
      \ 10.0f, M_PI / 4); // Move 10 yards at 45-degree angle\n    }\n}"
    language: cpp
  notes: This method relies on the AI system's pathfinding capabilities and may not
    work correctly if the target is unreachable or if pathfinding is disabled. The
    movement behavior will depend on the creature's movement type (walk, run, fly)
    and the environment's navigability. Ensure that the target parameter points to
    a valid unit before calling this method.
  warnings: Calling DoStartMovement without a valid target can result in undefined
    behavior or movement errors. Avoid calling this method repeatedly in tight loops
    as it may cause performance issues due to pathfinding calculations. Be cautious
    when using negative distance values, as they might not behave as expected depending
    on the AI implementation.
  related:
  - DoStopMovement
  - DoMoveTo
  - SelectTarget
  - GetMotionMaster
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T21:51:15.633791'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
