api:
  class: WorldObject
  method: GetTransOffsetY
  signature: float WorldObject::GetTransOffsetY() const
documentation:
  brief: Returns the Y-axis offset of the object's transport transformation.
  description: The GetTransOffsetY method retrieves the Y-coordinate offset applied
    to this WorldObject due to its association with a transport entity. In World of
    Warcraft's TrinityCore, objects can be mounted on transports such as boats, zeppelins,
    or elevators, and this offset represents the object's position relative to the
    transport's origin point in the Y direction. This value is used internally for
    accurate positioning when the transport moves, rotates, or changes elevation.
    The method is typically called during movement updates and object positioning
    calculations.
  parameters: []
  returns: A float value representing the Y-axis offset of this object's transport
    transformation in world coordinates. Negative values indicate the object is positioned
    to the left of the transport's center point along the Y-axis, while positive values
    indicate it is positioned to the right.
  examples:
  - title: Get Y Offset for Transported Object
    code: "float yOffset = player->GetTransOffsetY();\nif (yOffset != 0.0f)\n{\n \
      \   sLog->outString(\"Player has Y offset of: %f\", yOffset);\n}"
    language: cpp
  - title: Use Offset in Position Calculation
    code: 'float baseY = transport->GetPositionY();

      float offset = transportObject->GetTransOffsetY();

      float actualY = baseY + offset;

      sLog->outString("Actual Y position: %f", actualY);'
    language: cpp
  notes: This method only returns meaningful values when the object is actually mounted
    on a transport. When not on a transport, the returned value may be zero or undefined.
    The offset is calculated and maintained by the transport system during movement
    updates, so calling this method during frame processing will provide consistent
    results.
  warnings: Do not assume that a non-zero return value means an object is currently
    on a transport - always verify the transport state using other methods like IsOnTransport()
    before relying on these offset values for gameplay logic.
  related:
  - GetTransOffsetX
  - GetTransOffsetZ
  - GetTransOffsetO
  - IsOnTransport
  - GetTransport
metadata:
  confidence: 0.95
  generated_at: '2025-10-29T21:35:34.580885'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
