api:
  class: Unit
  method: DealDamage
  signature: uint32 Unit::DealDamage(Unit * attacker, Unit * victim, uint32 damage,
    const CleanDamage * cleanDamage, DamageEffectType damagetype, int damageSchoolMask,
    const SpellInfo * spellProto, bool durabilityLoss)
documentation:
  brief: DealDamage performs damage calculations and applies damage to target unit.
  description: This method handles the core damage calculation and application process
    for units in World of Warcraft. It computes damage based on attacker and victim
    parameters, applies various damage types, and manages the resulting damage effects
    including critical hits, miss chances, and clean damage handling. The method also
    supports spell-based damage application with proper school mask handling and durability
    loss management.
  parameters:
  - name: attacker
    description: Pointer to the attacking unit that is performing the damage calculation
  - name: victim
    description: Pointer to the target unit receiving the damage
  - name: damage
    description: The amount of damage to be dealt, typically calculated from attack
      power or spell damage
  - name: cleanDamage
    description: Pointer to CleanDamage structure that defines whether damage is clean
      (no critical hit) or not
  - name: damagetype
    description: Type of damage being applied, such as direct damage, periodic damage,
      etc.
  - name: damageSchoolMask
    description: The school mask defining the damage type (physical, holy, fire, etc.)
  - name: spellProto
    description: Pointer to SpellInfo structure defining the spell being used for
      damage calculation
  - name: durabilityLoss
    description: Boolean flag indicating whether durability loss should occur on weapon
      damage
  returns: Returns uint32 representing the amount of damage dealt, including critical
    hits and any modifiers applied to the final damage value
  examples:
  - title: Basic Damage Application Example
    code: 'Unit* attacker = player;

      Unit* victim = target;

      uint32 damage = 100;

      CleanDamage cleanDamage;

      DamageEffectType damagetype = DIRECT_DAMAGE;

      int damageSchoolMask = SPELL_SCHOOL_MASK_NORMAL;

      const SpellInfo* spellProto = nullptr;

      bool durabilityLoss = true;

      uint32 result = attacker->DealDamage(victim, damage, &cleanDamage, damagetype,
      damageSchoolMask, spellProto, durabilityLoss);'
    language: cpp
  - title: Spell-Based Damage Example
    code: 'Unit* attacker = player;

      Unit* victim = target;

      uint32 damage = 100;

      CleanDamage cleanDamage;

      DamageEffectType damagetype = SPELL_DAMAGE;

      int damageSchoolMask = SPELL_SCHOOL_MASK_FIRE;

      const SpellInfo* spellProto = GetSpellInfo(12345);

      bool durabilityLoss = false;

      uint32 result = attacker->DealDamage(victim, damage, &cleanDamage, damagetype,
      damageSchoolMask, spellProto, durabilityLoss);'
    language: cpp
  notes: This method is fundamental to combat mechanics and handles all damage calculations
    including critical hit chance, miss chance, and damage reduction. It should be
    used carefully as it affects both the attacker and victim's health points. The
    method also handles damage absorption and resistance calculations.
  warnings: The method may cause unexpected behavior if damage values are not properly
    calculated or if incorrect damage types are used. Care must be taken when using
    spellProto parameter to ensure proper damage calculation.
  related:
  - DealDamage
  - CalculateDamage
  - SpellDamage
  - GetHealth
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T21:14:25.807769'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
