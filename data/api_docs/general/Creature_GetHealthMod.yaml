api:
  class: Creature
  method: GetHealthMod
  signature: float Creature::GetHealthMod(int classification)
documentation:
  brief: Returns the health modifier value based on creature classification.
  description: The GetHealthMod method retrieves the health modifier applied to a
    creature based on its classification level. This method is commonly used in World
    of Warcraft's TrinityCore framework to determine how much health a creature should
    have relative to its base health, considering factors such as difficulty and classification.
    The classification parameter typically represents the creature's type (normal,
    elite, rare, etc.), and the returned float value indicates the multiplier applied
    to the base health. This method is essential for proper creature AI behavior and
    health calculation in game mechanics.
  parameters:
  - name: classification
    description: The classification level of the creature, typically representing
      its type such as normal, elite, rare, or boss. Valid values include 0 (normal),
      1 (elite), 2 (rare), and 3 (boss).
  returns: Returns a float value representing the health modifier for the specified
    classification level. The value is typically between 0.5 and 5.0, where 1.0 represents
    normal health, values less than 1.0 indicate reduced health, and values greater
    than 1.0 indicate increased health.
  examples:
  - title: Basic usage example
    code: 'float healthMod = creature->GetHealthMod(1);

      // Returns 1.5 for elite creatures'
    language: cpp
  - title: Advanced usage example
    code: "float healthMod = creature->GetHealthMod(3);\nif (healthMod > 1.0f)\n{\n\
      \    // Creature is a boss with increased health\n}\nelse if (healthMod < 1.0f)\n\
      {\n    // Creature has reduced health\n}"
    language: cpp
  notes: This method is part of the creature's internal health calculation system
    and should be used carefully when implementing custom AI behavior. The actual
    implementation may vary based on server configuration and difficulty settings.
  warnings: Care must be taken when using this method as incorrect classification
    values can lead to improper health calculations. Ensure that classification values
    match the expected range for accurate results.
  related:
  - GetHealth
  - SetHealth
  - GetMaxHealth
  - GetMinHealth
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T05:20:59.085311'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
