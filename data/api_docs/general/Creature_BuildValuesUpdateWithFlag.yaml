api:
  class: Creature
  method: BuildValuesUpdateWithFlag
  signature: void Creature::BuildValuesUpdateWithFlag(int * data, int flags, const
    Player * target) const
documentation:
  brief: Updates creature data values with specified flags for a target player.
  description: The BuildValuesUpdateWithFlag method constructs and populates an update
    packet containing the creature's data values, applying the specified flags to
    determine which fields are included in the update. This method is typically used
    by the server to send incremental updates about a creature's state to a specific
    player. The method operates on internal data structures representing the creature's
    properties and ensures that only relevant fields are transmitted based on the
    provided flags. It is an essential part of the World of Warcraft packet update
    system, allowing for efficient network communication between the server and client.
  parameters:
  - name: data
    description: Pointer to an integer array where the update data will be written.
      The array must be pre-allocated with sufficient space to hold all the updated
      values.
  - name: flags
    description: Integer flags that determine which data fields should be included
      in the update packet. These flags control the granularity of the update and
      are typically defined by the game's update system.
  - name: target
    description: Pointer to the Player object for whom the update is being constructed.
      The method will tailor the update packet specifically for this player's view
      of the creature.
  returns: null
  examples:
  - title: Basic usage example
    code: 'int updateData[100];

      Creature* creature = ...; // Get a creature instance

      Player* targetPlayer = ...; // Get a player instance

      creature->BuildValuesUpdateWithFlag(updateData, UPDATEFLAG_ALL, targetPlayer);'
    language: cpp
  notes: This method is part of the internal update mechanism and should not be called
    directly by external code. It relies on the creature's internal data structures
    being properly initialized. The method may modify the contents of the 'data' array
    in-place, so callers should ensure that the buffer is large enough to accommodate
    all potential updates.
  warnings: Calling this method with invalid flags or an uninitialized target player
    can lead to undefined behavior. Ensure that the 'data' parameter points to a valid
    memory location with sufficient capacity. This function is not thread-safe and
    should only be called from within the game's main thread context.
  related:
  - BuildValuesUpdate
  - BuildOutOfRangeUpdate
  - GetUpdateData
metadata:
  confidence: 0.9
  generated_at: '2025-10-29T20:43:43.156009'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
