api:
  class: InterruptManager
  method: GetInterruptUptime
  signature: float InterruptManager::GetInterruptUptime() const
documentation:
  brief: Calculates and returns the average uptime percentage of interrupts for the
    managed unit.
  description: The GetInterruptUptime method computes the average time during which
    interrupts are active or available for use, expressed as a percentage. This value
    typically reflects how often an interrupt mechanism (such as a spell or ability)
    can be successfully triggered within a given time frame. The method is commonly
    used in combat analysis and performance metrics to evaluate the effectiveness
    of interrupt-based gameplay elements like abilities that break enemy casts or
    prevent actions.
  parameters: []
  returns: A float value representing the average uptime percentage of interrupts,
    ranging from 0.0 (no uptime) to 100.0 (full uptime).
  examples:
  - title: Basic Usage Example
    code: "float uptime = interruptManager.GetInterruptUptime();\nif (uptime > 75.0f)\n\
      {\n    // Log high interrupt uptime\n    sLog->outString(\"High interrupt uptime\
      \ detected: %.2f%%\", uptime);\n}"
    language: cpp
  notes: This method likely aggregates data from internal tracking mechanisms that
    monitor when interrupts are available or in use. It may involve calculations based
    on cooldowns, cast times, and other timing-related factors.
  warnings: null
  related:
  - GetInterruptCount
  - GetInterruptCooldown
  - IsInterruptActive
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T12:35:02.030290'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
