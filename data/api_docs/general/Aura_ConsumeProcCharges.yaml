api:
  class: Aura
  method: ConsumeProcCharges
  signature: void Aura::ConsumeProcCharges(const SpellProcEntry * procEntry)
documentation:
  brief: Consumes proc charges from an aura based on the provided spell proc entry.
  description: The ConsumeProcCharges method reduces the number of proc charges remaining
    on an aura by one, if the aura has proc charges available. This method is typically
    invoked when a spell or effect that triggers off an aura's proc mechanism occurs.
    It checks whether the aura supports proc charges and decrements them accordingly.
    If the aura has no proc charges left after decrementing, it may be removed from
    the target. The method relies on the provided SpellProcEntry to determine how
    the proc charge consumption should be handled.
  parameters:
  - name: procEntry
    description: A pointer to a SpellProcEntry structure that defines the proc conditions
      and behavior for this aura's proc charges.
  returns: null
  examples:
  - title: Consuming Proc Charges on Aura Trigger
    code: "Aura* aura = unit->GetAura(12345);\nif (aura)\n{\n    SpellProcEntry procEntry;\n\
      \    // Initialize procEntry with relevant data\n    aura->ConsumeProcCharges(&procEntry);\n\
      }"
    language: cpp
  notes: This method is typically called internally by the core when handling spell
    procs. It assumes that the aura has already been validated for proc eligibility
    before calling. The method does not directly remove the aura from the unit; it
    only decrements charges, and removal logic may be handled elsewhere.
  warnings: Ensure that the SpellProcEntry passed to this method is valid and correctly
    initialized to avoid unexpected behavior or crashes. Calling this method on an
    aura without proc charges can lead to undefined behavior if not properly guarded.
  related:
  - Aura::GetProcCharges
  - Aura::SetProcCharges
  - Aura::AddProcCharge
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:58:42.173660'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
