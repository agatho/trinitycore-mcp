api:
  class: ProfessionManager
  method: HasProfession
  signature: bool ProfessionManager::HasProfession(int * player, ProfessionType profession)
    const
documentation:
  brief: Checks whether a player has a specific profession skill.
  description: The HasProfession method determines if a given player character possesses
    a particular profession skill. This method is commonly used in TrinityCore's scripting
    and game logic to verify player capabilities, such as whether they can craft items
    or perform profession-specific actions. The method takes a pointer to a player
    object and a ProfessionType enum value to perform the check. It returns true if
    the player has the specified profession, false otherwise. This functionality is
    essential for implementing profession-based quest conditions, crafting systems,
    and other gameplay mechanics that depend on character skill levels.
  parameters:
  - name: player
    description: Pointer to the Player object representing the character whose profession
      status is being checked. Must not be null.
  - name: profession
    description: Enumeration value of type ProfessionType specifying which profession
      to check for. This typically corresponds to a specific skill category like Blacksmithing,
      Leatherworking, etc.
  returns: Boolean value indicating whether the player has the specified profession.
    Returns true if the player possesses the profession, false if they do not.
  examples:
  - title: Basic Usage
    code: "Player* player = ...; // Get player reference\nif (professionManager.HasProfession(player,\
      \ PROFESSION_BLACKSMITHING)) {\n    // Player can craft blacksmithing items\n\
      }"
    language: cpp
  - title: Checking Multiple Professions
    code: "Player* player = ...;\nbool hasAlchemy = professionManager.HasProfession(player,\
      \ PROFESSION_ALCHEMY);\nbool hasEnchanting = professionManager.HasProfession(player,\
      \ PROFESSION_ENCHANTING);\nif (hasAlchemy && hasEnchanting) {\n    // Player\
      \ can perform both alchemy and enchanting\n}"
    language: cpp
  notes: This method relies on the player's internal profession data structure which
    is populated during character loading and updated when professions are learned
    or unlearned. The method assumes that the player pointer is valid and points to
    an active character object with proper profession tracking enabled.
  warnings: Ensure that the player pointer passed to this method is not null, as dereferencing
    a null pointer will cause undefined behavior. Additionally, make sure that the
    ProfessionType value corresponds to a valid profession in the game's current configuration.
  related:
  - GetProfessionLevel
  - LearnProfession
  - UnlearnProfession
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:58:38.334237'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
