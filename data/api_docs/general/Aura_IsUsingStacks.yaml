api:
  class: Aura
  method: IsUsingStacks
  signature: bool Aura::IsUsingStacks() const
documentation:
  brief: Determines whether the aura is using stackable effects.
  description: The IsUsingStacks method checks if the aura instance is configured
    to allow stacking of multiple applications. In World of Warcraft mechanics, auras
    can either be non-stackable (where only one application exists at a time) or stackable
    (where multiple applications with different stacks are allowed). This method returns
    true if the aura supports stacking and false otherwise. The result of this check
    is typically used during aura application, update, and removal logic to determine
    how the aura's effects should be handled.
  parameters: []
  returns: Returns true if the aura allows stacking (i.e., multiple applications with
    different stack counts), and false if the aura is non-stackable (i.e., only one
    application exists at a time).
  examples:
  - title: Check if an aura supports stacking before applying it
    code: "Aura* aura = player->GetAura(12345);\nif (aura && aura->IsUsingStacks())\
      \ {\n    // Handle stackable aura logic\n    uint32 currentStacks = aura->GetStackAmount();\n\
      \    // Apply additional stacking logic here\n}"
    language: cpp
  notes: This method relies on the aura's internal flags and template data. It does
    not account for dynamic changes to stackability during runtime unless explicitly
    modified through other API calls. The implementation typically checks the aura's
    flag or template properties that define whether stacking is enabled.
  warnings: Do not assume that all auras with stacks are necessarily stackable; some
    auras may have fixed stack counts but still be non-stackable in nature. Also,
    this method should only be called on valid aura instances to avoid undefined behavior.
  related:
  - GetStackAmount
  - SetStackAmount
  - IsStackable
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T09:09:28.642687'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
