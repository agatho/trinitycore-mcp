api:
  class: Player
  method: ApplyTraitConfig
  signature: void Player::ApplyTraitConfig(int32 configId, bool apply)
documentation:
  brief: Applies or removes a trait configuration from the player's character.
  description: The ApplyTraitConfig method is used to either apply or remove a specific
    trait configuration from a player's character, typically related to class specializations
    or talent trees. This method modifies the player's trait system, which is part
    of the game mechanics that governs how players can allocate and manage their talent
    points and trait configurations. The method operates on the concept of trait configurations,
    which are used in conjunction with the player's specialization to determine the
    effective traits applied to the character. It is commonly used during character
    creation or when switching between different specialization configurations.
  parameters:
  - name: configId
    description: The unique identifier for the trait configuration to be applied or
      removed. This value typically corresponds to a specific trait tree or specialization
      configuration in the game's data structures.
  - name: apply
    description: A boolean flag indicating whether to apply (true) or remove (false)
      the specified trait configuration from the player's character.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Player* player = new Player();

      player->ApplyTraitConfig(12345, true);'
    language: cpp
  - title: Advanced Usage Example
    code: 'Player* player = new Player();

      player->ApplyTraitConfig(54321, false);

      // This removes the trait configuration from the player''s current specialization'
    language: cpp
  notes: This method likely interacts with internal trait system data structures and
    may affect the player's ability to access certain talents or abilities depending
    on the configuration applied. It is important to note that this method does not
    directly modify player's talent points but rather manages how those points are
    interpreted within a specific trait configuration.
  warnings: Improper use of this method can lead to incorrect trait configurations,
    which may result in players being unable to access certain talents or abilities.
    Care should be taken when applying or removing trait configurations to ensure
    that the correct configId is used.
  related:
  - GetTraitConfig
  - SetTraitConfig
  - Player::UpdateTalentTree
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T01:12:02.538087'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
