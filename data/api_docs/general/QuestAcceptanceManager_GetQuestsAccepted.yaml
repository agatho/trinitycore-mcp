api:
  class: QuestAcceptanceManager
  method: GetQuestsAccepted
  signature: int QuestAcceptanceManager::GetQuestsAccepted() const
documentation:
  brief: Retrieves the total count of quests currently accepted by the player
  description: The GetQuestsAccepted method returns an integer value representing
    the number of active quests that have been accepted by the player character. This
    count includes all quests in the player's quest log that are not yet completed,
    regardless of their status (in progress, failed, or completed but not turned in).
    The method is typically used to determine how many active quests a player has,
    which can be useful for UI display, quest tracking, or game logic decisions. This
    method does not distinguish between different quest types or categories; it simply
    provides the total number of accepted quests.
  parameters: []
  returns: An integer representing the count of quests currently accepted by the player.
    Returns 0 if no quests are accepted or if the player object is invalid.
  examples:
  - title: Basic Usage to Display Quest Count
    code: "int acceptedQuests = player->GetQuestsAccepted();\nif (acceptedQuests >\
      \ 0)\n{\n    ChatHandler(player->GetSession()).PSendSysMessage(\"You have %d\
      \ active quests.\", acceptedQuests);\n}"
    language: cpp
  - title: Using Quest Count for UI Logic
    code: "Player* player = ...;\nint questCount = player->GetQuestsAccepted();\n\
      if (questCount >= 5)\n{\n    // Show advanced quest notification\n    player->SendNotification(\"\
      You have many active quests!\");\n}"
    language: cpp
  notes: This method accesses the internal quest log of the player and may involve
    iterating through active quests. It's recommended to cache this value if it's
    accessed frequently in performance-critical code paths. The returned count reflects
    only quests that are accepted, not those that are offered but not yet accepted.
  warnings: The method assumes a valid Player object exists. Calling this on a null
    player pointer will result in undefined behavior. This method does not account
    for quest completion status directly; it counts all accepted quests regardless
    of whether they are still active or completed.
  related:
  - GetQuestStatus
  - HasQuestForPlayer
  - AddQuest
  - RemoveQuest
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T07:54:31.188663'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
