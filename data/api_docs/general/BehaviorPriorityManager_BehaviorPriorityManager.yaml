api:
  class: BehaviorPriorityManager
  method: BehaviorPriorityManager
  signature: void BehaviorPriorityManager::BehaviorPriorityManager(BehaviorPriorityManager
    && param0)
documentation:
  brief: Moves a BehaviorPriorityManager object to another, transferring ownership
    of its resources.
  description: The BehaviorPriorityManager move constructor transfers ownership of
    all managed resources from the source object to the target object. This operation
    is typically used when creating new instances or reassigning existing ones in
    a performance-critical context. The source object becomes invalid after the move
    and should not be used. In the context of TrinityCore's AI system, this constructor
    supports efficient management of behavior priority configurations during runtime.
  parameters: []
  returns: null
  examples:
  - title: Move BehaviorPriorityManager to new variable
    code: 'BehaviorPriorityManager manager1;

      // ... initialize manager1 ...

      BehaviorPriorityManager manager2 = std::move(manager1);

      // manager1 is now in a valid but unspecified state

      // manager2 contains the moved resources'
    language: cpp
  notes: This constructor is part of the C++ move semantics implementation. It should
    only be called with an rvalue reference to avoid unnecessary copying. The moved-from
    object must not be accessed after the operation.
  warnings: null
  related:
  - BehaviorPriorityManager::operator=
  - BehaviorPriorityManager::~BehaviorPriorityManager
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T04:35:54.026539'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
