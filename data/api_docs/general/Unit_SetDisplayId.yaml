api:
  class: Unit
  method: SetDisplayId
  signature: void Unit::SetDisplayId(uint32 displayId, bool setNative)
documentation:
  brief: Sets the display ID of the unit to specified model ID, optionally updating
    native display properties.
  description: The SetDisplayId method allows a Unit object to change its visual representation
    to a specified model ID. This method is commonly used in World of Warcraft to
    modify the appearance of NPCs or players, particularly when transitioning between
    different forms or models during quests, events, or combat scenarios. The method
    updates both the visual display and optionally the native display properties based
    on the setNative parameter. When setNative is true, it ensures that the unit's
    native display ID (as defined in its database) is properly updated to match the
    new display ID, which can be crucial for maintaining consistency in game mechanics
    and behavior.
  parameters:
  - name: displayId
    description: The model ID to set as the visual representation of this unit. This
      value corresponds to a valid entry in the CreatureDisplayInfo.dbc file or similar
      database, and must be within the range of valid display IDs for the game.
  - name: setNative
    description: A boolean flag indicating whether to update the native display ID.
      If true, the unit's native display ID will be updated to match the new displayId;
      if false, only the visual display is changed without affecting the native display
      properties.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Unit* unit = new Unit;

      unit->SetDisplayId(12345, true);

      // Sets the unit''s display ID to 12345 and updates native display properties'
    language: cpp
  - title: Advanced Usage Example
    code: 'Unit* unit = new Unit;

      unit->SetDisplayId(12345, false);

      // Sets the unit''s display ID to 12345 but does not update native display properties

      // Useful for temporary visual changes without affecting database values'
    language: cpp
  notes: This method is typically used in conjunction with other display-related methods
    like SetDisplayId() and may be called during events or transitions to ensure proper
    visual representation. It's important to note that the display ID must be valid
    and correspond to an existing model in the game database, otherwise it may result
    in undefined behavior or visual glitches.
  warnings: This method should not be used in situations where the unit is currently
    engaged in combat or active gameplay as it may cause visual inconsistencies. Additionally,
    setting a display ID that does not exist in the database can lead to errors or
    invalid visual representations.
  related:
  - GetDisplayId
  - SetNativeDisplayId
  - SetScale
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:19:40.950082'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
