api:
  class: Object
  method: GetGUID
  signature: const ObjectGuid & Object::GetGUID() const
documentation:
  brief: Returns the unique identifier (GUID) of the object
  description: The GetGUID method retrieves the ObjectGuid of the current object,
    which uniquely identifies it within the game world. This GUID is used for tracking
    and referencing objects across different systems and subsystems in TrinityCore.
    The method is commonly used in various game mechanics contexts where object identification
    is required, such as in player interactions, NPC behavior, or item management.
    It returns a const reference to ensure that the GUID cannot be modified externally
    while maintaining performance by avoiding unnecessary copying.
  parameters: []
  returns: Returns a const reference to the ObjectGuid of the object, which uniquely
    identifies it within the game world. The GUID consists of a 64-bit value that
    represents the object's identity and is used for tracking purposes in various
    subsystems.
  examples:
  - title: Basic usage example
    code: 'Object* obj = new Player();

      ObjectGuid guid = obj->GetGUID();

      // guid now contains the unique identifier of the player object'
    language: cpp
  - title: Using GUID in game mechanics
    code: "Player* player = GetPlayer();\nObjectGuid guid = player->GetGUID();\nif\
      \ (guid == ObjectGuid::MakeNewGuid(12345)) {\n    // Handle special case\n}\n\
      // This is commonly used for identifying players or NPCs in game systems"
    language: cpp
  notes: The method is implemented as a simple getter that returns the internal GUID
    stored in the object. It's thread-safe since it only reads from the object's memory,
    and no modifications are made to the GUID during this operation. Performance-wise,
    it's efficient because it returns a const reference rather than copying the entire
    GUID.
  warnings: Be careful when using the returned GUID in comparisons or operations that
    might modify it; although the method returns a const reference, modifying the
    GUID directly through other means could lead to unexpected behavior if not handled
    properly. Also, ensure that the object is valid before calling this method to
    avoid accessing invalid memory.
  related:
  - GetGUID
  - SetGUID
  - GetGUIDType
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:00:45.066594'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
