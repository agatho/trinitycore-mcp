api:
  class: Creature
  method: SetReactState
  signature: void Creature::SetReactState(int st)
documentation:
  brief: Sets the reaction state of a creature to a specified value.
  description: The SetReactState method controls how a creature reacts to player actions,
    determining whether it will remain passive, aggressive, or neutral. This method
    is commonly used in script implementations to modify creature behavior during
    combat or quest events. The parameter 'st' represents the reaction state which
    can be one of several predefined values including passive (0), aggressive (1),
    or neutral (2). When set to passive, the creature will not attack players unless
    provoked. When set to aggressive, it will engage in combat with players on sight.
    When set to neutral, it will maintain a balanced state between passive and aggressive
    behavior.
  parameters:
  - name: st
    description: The reaction state value that determines how the creature behaves.
      0 represents passive state where the creature does not attack players unless
      provoked. 1 represents aggressive state where the creature engages in combat
      with players on sight. 2 represents neutral state where the creature maintains
      a balanced behavior between passive and aggressive states.
  returns: null
  examples:
  - title: Basic Usage Example
    code: 'Creature* creature = GetCreature();

      creature->SetReactState(1); // Set to aggressive state'
    language: cpp
  - title: Advanced Usage Example
    code: "Creature* creature = GetCreature();\nif (player->GetDistance(creature)\
      \ < 10)\n{\n    creature->SetReactState(0); // Set to passive state\n}\nelse\n\
      {\n    creature->SetReactState(1); // Set to aggressive state\n}"
    language: cpp
  notes: This method directly affects the creature's AI behavior and should be used
    carefully during combat or quest scenarios. The reaction state can be changed
    multiple times during a creature's lifetime, but it is recommended to set it once
    at initialization or when needed for specific game events.
  warnings: Improper use of this method can cause creatures to behave unexpectedly
    during combat or quests. Setting the reaction state incorrectly may result in
    creatures not engaging properly with players or not responding to player actions
    as expected. Always ensure that the reaction state is set appropriately based
    on game mechanics requirements.
  related:
  - SetReactState
  - GetReactState
  - AIUpdate
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:39:14.434911'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
