api:
  class: MotionMaster
  method: Empty
  signature: bool MotionMaster::Empty() const
documentation:
  brief: Checks whether the MotionMaster has any active movement generators.
  description: The Empty() method determines if the MotionMaster currently holds no
    active movement generators. This is typically used to verify that an object (such
    as a creature or player) is not executing any movement behavior. When the MotionMaster
    is empty, it means that no movement operations are actively being processed for
    the associated unit. This can be useful in AI logic to determine when to initiate
    new movement behaviors or when cleanup operations can be safely performed.
  parameters: []
  returns: Returns true if the MotionMaster has no active movement generators; otherwise
    returns false.
  examples:
  - title: Check if MotionMaster is Empty Before Adding Movement
    code: "if (unit->GetMotionMaster()->Empty()) {\n    unit->GetMotionMaster()->MovePoint(0,\
      \ targetX, targetY, targetZ);\n}"
    language: cpp
  - title: Using Empty() in AI Decision Making
    code: "if (enemy->GetMotionMaster()->Empty()) {\n    // No movement in progress,\
      \ initiate new behavior\n    enemy->GetMotionMaster()->MoveChase(player);\n\
      } else {\n    // Movement is already active, wait or interrupt\n}"
    language: cpp
  notes: This method does not modify the state of the MotionMaster. It's a read-only
    check that can be safely called from any thread context where the unit and its
    motion master are accessible.
  warnings: null
  related:
  - MovePoint
  - MoveChase
  - Clear
  - UpdateMovement
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T10:43:10.400939'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
