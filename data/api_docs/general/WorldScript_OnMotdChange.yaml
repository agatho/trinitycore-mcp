api:
  class: WorldScript
  method: OnMotdChange
  signature: void WorldScript::OnMotdChange(std::string & newMotd)
documentation:
  brief: Called when the server's Message of the Day (MOTD) is changed
  description: This method is invoked whenever the server's Message of the Day (MOTD)
    is updated. It provides a hook for custom scripts to react to MOTD changes, allowing
    them to perform actions such as logging the change, notifying players, or updating
    in-game systems that depend on the MOTD. The MOTD is typically displayed when
    players log in or connect to the server. This method serves as an event handler
    that allows developers to extend functionality when the MOTD is modified.
  parameters:
  - name: newMotd
    description: Reference to a string containing the new Message of the Day value
      that has been set on the server
  returns: null
  examples:
  - title: Basic MOTD Change Handler
    code: "class MyWorldScript : public WorldScript\n{\npublic:\n    void OnMotdChange(std::string&\
      \ newMotd) override\n    {\n        sLog->outString(\"MOTD has been changed\
      \ to: %s\", newMotd.c_str());\n    }\n};"
    language: cpp
  - title: Advanced MOTD Change with Player Notification
    code: "class MyWorldScript : public WorldScript\n{\npublic:\n    void OnMotdChange(std::string&\
      \ newMotd) override\n    {\n        // Log the change\n        sLog->outString(\"\
      MOTD updated to: %s\", newMotd.c_str());\n        \n        // Broadcast to\
      \ all online players\n        std::ostringstream oss;\n        oss << \"[Server\
      \ Notice] MOTD has been updated to: \" << newMotd;\n        sWorld->SendGlobalMessage(oss.str().c_str());\n\
      \    }\n};"
    language: cpp
  notes: This method is part of the WorldScript class which is used for handling global
    world events in TrinityCore. The MOTD change event occurs on the server side,
    and this callback allows custom logic to be executed whenever a new MOTD is set.
    Be aware that this function may be called frequently during server initialization
    or configuration updates.
  warnings: Ensure that any operations performed within this method are lightweight
    and thread-safe as it may be invoked from different execution contexts. Avoid
    performing heavy I/O operations or blocking calls inside this handler to prevent
    impacting server performance.
  related:
  - OnWorldInitialized
  - OnBeforeWorldInitialized
  - OnConfigLoad
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T19:27:44.052718'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
