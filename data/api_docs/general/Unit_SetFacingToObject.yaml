api:
  class: Unit
  method: SetFacingToObject
  signature: void Unit::SetFacingToObject(const int * object, bool force)
documentation:
  brief: Sets the unit's facing direction towards a specified object.
  description: The SetFacingToObject method adjusts the orientation of a Unit to face
    towards a specific object, such as a player or NPC. This method is commonly used
    in game mechanics to ensure proper positioning and interaction between units and
    objects. It typically involves calculating the angle between the unit's current
    position and the target object's position, then setting the unit's facing direction
    accordingly. The force parameter determines whether the facing should be set regardless
    of existing orientation or only if necessary.
  parameters:
  - name: object
    description: Pointer to the target object that the unit should face towards. This
      could be a player, NPC, or other game object. Must not be nullptr.
  - name: force
    description: Boolean flag indicating whether to force the facing direction change.
      If true, the facing will be set even if already facing the target object. If
      false, the facing will only be changed if necessary.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* unit = new Unit();

      Player* targetPlayer = new Player();

      unit->SetFacingToObject(targetPlayer, true);'
    language: cpp
  - title: Advanced usage with conditional facing
    code: 'Unit* unit = new Unit();

      Player* targetPlayer = new Player();

      unit->SetFacingToObject(targetPlayer, false);

      // Only changes facing if not already facing the player'
    language: cpp
  notes: Implementation details include calculating the angle between the unit's position
    and the object's position. Performance considerations involve avoiding unnecessary
    calculations when the unit is already facing the target object. Thread safety
    is generally not an issue as long as the object pointer remains valid during execution.
  warnings: Caution should be taken when using this method with nullptr objects, as
    it may cause crashes or undefined behavior. Also, excessive use of force parameter
    can lead to unnatural movement behavior in game mechanics.
  related:
  - SetFacing
  - FaceToObject
  - GetOrientation
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T01:17:08.732412'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
