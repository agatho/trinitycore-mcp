api:
  class: BotPriorityManager
  method: RecordUpdateEnd
  signature: void BotPriorityManager::RecordUpdateEnd(int botGuid, uint32 durationMicros)
documentation:
  brief: Records the end of a bot update cycle and logs its duration
  description: The RecordUpdateEnd method is used to mark the completion of a bot
    update operation for a specific bot identified by its GUID. It records the time
    taken for the update process in microseconds, which helps in performance monitoring
    and optimization of AI behavior. This method is typically called after a bot's
    update logic has been executed to track how long each update cycle takes. The
    duration data can be used for debugging, profiling, or adjusting bot behavior
    based on performance metrics.
  parameters:
  - name: botGuid
    description: The unique identifier (GUID) of the bot whose update cycle is being
      recorded. This value identifies which specific bot's update timing is being
      logged.
  - name: durationMicros
    description: The duration of the bot update in microseconds. This represents how
      long the update process took to complete, used for performance analysis and
      optimization.
  returns: null
  examples:
  - title: Basic usage of RecordUpdateEnd
    code: 'BotPriorityManager* manager = BotPriorityManager::Instance();

      int botGuid = 12345;

      uint32 updateDuration = 5000; // 5 milliseconds

      manager->RecordUpdateEnd(botGuid, updateDuration);'
    language: cpp
  notes: This method is likely part of a performance monitoring system for AI bots
    in TrinityCore. It's important to ensure that the duration values passed are accurate
    and measured correctly to avoid skewed performance data. The method may be called
    from within bot update loops or other AI execution contexts.
  warnings: null
  related:
  - RecordUpdateStart
  - GetBotUpdateDuration
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T01:41:56.066288'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
