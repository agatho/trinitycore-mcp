api:
  class: Creature
  method: IsEngaged
  signature: bool Creature::IsEngaged() const
documentation:
  brief: Determines whether the creature is currently engaged in combat with a target.
  description: The IsEngaged method checks if the creature has an active combat state
    with a specific target, typically used to verify if the creature is fighting or
    has been engaged by an enemy. This method is essential for determining the current
    combat status of a creature and can be used in various AI behaviors and game mechanics.
    The method returns true when the creature is actively engaged in combat, false
    otherwise. It's commonly used in script-based AI systems to make decisions based
    on combat state.
  parameters: []
  returns: Returns true if the creature is currently engaged in combat with a target,
    false otherwise. This indicates that the creature has an active combat state and
    is fighting or has been engaged by an enemy.
  examples:
  - title: Basic usage example
    code: "if (creature->IsEngaged())\n{\n    // Creature is in combat\n    // Perform\
      \ combat-related actions\n}"
    language: cpp
  - title: Advanced usage with AI decision making
    code: "bool isEngaged = creature->IsEngaged();\nif (isEngaged)\n{\n    // Creature\
      \ is engaged, perform attack logic\n    // Use this for AI decision making in\
      \ combat\n}\nelse\n{\n    // Creature is not engaged, proceed with non-combat\
      \ behavior\n}"
    language: cpp
  notes: This method is typically used in conjunction with other combat-related methods
    like IsInCombat or GetVictim to determine the creature's current combat state.
    The implementation relies on internal combat tracking mechanisms within TrinityCore's
    core systems, making it a reliable indicator of active engagement.
  warnings: This method should not be used as the sole indicator for determining combat
    status, as it only returns true when the creature has an active target engaged
    in combat. It's recommended to use this method in combination with other combat-related
    methods for comprehensive combat state checking.
  related:
  - IsInCombat
  - GetVictim
  - HasReact
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:58:42.614465'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
