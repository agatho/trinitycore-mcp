api:
  class: DungeonScript
  method: IsDangerousGroundEffect
  signature: bool DungeonScript::IsDangerousGroundEffect(int * obj) const
documentation:
  brief: Determines whether a ground effect object is classified as dangerous within
    the dungeon context.
  description: The IsDangerousGroundEffect method evaluates whether a given ground
    effect object, represented by an integer identifier, is considered hazardous or
    threatening within the scope of a dungeon environment. This function is typically
    used in scripted dungeon events to identify and respond to potentially harmful
    environmental effects such as explosive traps, damaging auras, or other dangerous
    terrain modifications. The method checks internal dungeon script logic and game
    state to determine if the specified ground effect should be treated with caution
    or avoided by players.
  parameters:
  - name: obj
    description: Pointer to an integer identifier representing a ground effect object
      in the dungeon. This value typically corresponds to a GameObject or similar
      entity that has been flagged as a ground effect within the TrinityCore framework.
  returns: Returns true if the specified ground effect object is classified as dangerous,
    false otherwise. A return value of true indicates that the effect poses a threat
    to player characters and may require special handling in dungeon scripts.
  examples:
  - title: Basic Usage in Dungeon Script
    code: "class MyDungeonScript : public DungeonScript\n{\npublic:\n    bool OnPlayerEnter(Player*\
      \ player) override\n    {\n        // Assume we have a reference to a ground\
      \ effect object\n        int groundEffectId = 12345;\n        if (IsDangerousGroundEffect(&groundEffectId))\n\
      \        {\n            // Handle dangerous ground effect\n            player->SendNotification(\"\
      Beware of the dangerous ground effect!\");\n        }\n        return true;\n\
      \    }\n};"
    language: cpp
  notes: This method likely relies on internal dungeon script state tracking and may
    be part of a larger system for managing environmental hazards in dungeon encounters.
    It's important to note that the parameter 'obj' is passed by pointer, which implies
    that the method might modify or inspect the value pointed to by this parameter.
  warnings: Ensure that the integer identifier passed to the method corresponds to
    an actual ground effect object within the dungeon context; passing invalid identifiers
    may lead to undefined behavior. The method should only be called when dungeon
    scripting is active and the game state is properly initialized.
  related:
  - IsDangerousSpell
  - IsSafeGroundEffect
  - GetDungeonScriptState
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:10:12.084632'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
