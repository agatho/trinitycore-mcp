api:
  class: Unit
  method: GetDynObject
  signature: DynamicObject * Unit::GetDynObject(uint32 spellId) const
documentation:
  brief: Retrieves the dynamic object associated with a specific spell ID from the
    unit's dynamic object list.
  description: The GetDynObject method returns a pointer to a DynamicObject that is
    associated with a given spell ID. This method is used to access dynamic objects
    created by spells, such as area effect auras or visual effects, which are stored
    in the unit's dynamic object list. It allows developers to retrieve and manipulate
    these objects for various game mechanics purposes, including spell effects, visual
    displays, and interaction handling. The method operates on the principle that
    each spell ID can correspond to one dynamic object at a time, making it useful
    for tracking and managing spell-related dynamic objects within the unit's context.
  parameters: []
  returns: Returns a pointer to the DynamicObject associated with the specified spell
    ID. If no such dynamic object exists, the method returns nullptr, indicating that
    no dynamic object is currently active or registered for the given spell ID.
  examples:
  - title: Basic usage example
    code: "DynamicObject* dynObj = unit->GetDynObject(12345);\nif (dynObj != nullptr)\n\
      {\n    // Use the dynamic object\n}"
    language: cpp
  - title: Advanced usage example with spell ID
    code: "DynamicObject* dynObj = unit->GetDynObject(spellInfo->Id);\nif (dynObj\
      \ != nullptr)\n{\n    // Access the dynamic object's properties\n    Position\
      \ pos = dynObj->GetPosition();\n    // Perform actions based on position\n}"
    language: cpp
  notes: This method is typically used in conjunction with spell-related logic and
    requires knowledge of how dynamic objects are stored and managed within the unit's
    context. Performance considerations include checking for null returns before accessing
    dynamic object properties, as accessing a nullptr can lead to crashes.
  warnings: Be cautious when using this method as it may return nullptr if no dynamic
    object exists for the specified spell ID. Also, ensure that the spell ID is valid
    and corresponds to an actual spell in the game mechanics to avoid incorrect behavior.
  related:
  - GetSpellInfo
  - GetDynObjectByType
  - GetDynamicObjectList
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T13:13:01.003859'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
