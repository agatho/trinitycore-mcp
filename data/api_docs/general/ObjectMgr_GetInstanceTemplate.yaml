api:
  class: ObjectMgr
  method: GetInstanceTemplate
  signature: const InstanceTemplate * ObjectMgr::GetInstanceTemplate(uint32 mapId)
    const
documentation:
  brief: Retrieves the instance template data for a specified map ID.
  description: The GetInstanceTemplate method fetches the InstanceTemplate object
    associated with a given map ID. This template contains configuration data for
    instances, including spawn settings, difficulty levels, and other instance-specific
    properties. The method is commonly used during world initialization and when handling
    player entry into instances. It returns a pointer to the template data which can
    be null if no instance template exists for the specified map ID.
  parameters: []
  returns: A const pointer to an InstanceTemplate object if found, or nullptr if no
    instance template exists for the given map ID.
  examples:
  - title: Basic Usage
    code: "const InstanceTemplate* instanceTemplate = sObjectMgr->GetInstanceTemplate(109);\
      \ // For Sunwell Plateau\nif (instanceTemplate)\n{\n    // Access instance template\
      \ data\n    uint32 difficulty = instanceTemplate->difficulty;\n    // Process\
      \ instance data\n}"
    language: cpp
  - title: Checking Instance Validity
    code: "uint32 mapId = 534; // Auchindoun\nconst InstanceTemplate* template = sObjectMgr->GetInstanceTemplate(mapId);\n\
      if (template != nullptr)\n{\n    // Instance is valid and has template data\n\
      \    printf(\"Instance %u has template data\\n\", mapId);\n}\nelse\n{\n    //\
      \ No instance template found for this map\n    printf(\"No template found for\
      \ map %u\\n\", mapId);\n}"
    language: cpp
  notes: This method performs a lookup in the internal instance template cache. The
    returned pointer is valid only as long as the instance template remains loaded
    in memory. This method should be called from threads that have access to the ObjectMgr
    singleton, typically during server initialization or game world operations.
  warnings: Be sure to check for null return values before using the returned InstanceTemplate
    pointer. Accessing a null pointer will result in undefined behavior. Also note
    that this method does not validate if the map ID is actually a valid instance
    map; it only returns the template if one exists for that ID.
  related:
  - GetInstanceTemplate
  - GetMapTemplate
  - LoadInstanceTemplates
metadata:
  confidence: 0.95
  generated_at: '2025-11-01T09:34:43.367819'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
