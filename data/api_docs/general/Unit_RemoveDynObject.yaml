api:
  class: Unit
  method: RemoveDynObject
  signature: void Unit::RemoveDynObject(uint32 spellId)
documentation:
  brief: Removes a dynamic object associated with a specific spell from the unit.
  description: The RemoveDynObject method removes all dynamic objects (such as area
    aura effects, visual effects, or summoned creatures) that are linked to a specific
    spell ID from the unit's object list. This method is typically used when a spell
    effect expires or is cancelled, ensuring that related dynamic objects are properly
    cleaned up from the game world. The method operates on the unit's internal list
    of dynamic objects and removes them based on the provided spell ID, which helps
    maintain clean gameplay mechanics and prevents memory leaks or visual artifacts.
  parameters:
  - name: spellId
    description: The unique identifier of the spell whose dynamic object(s) should
      be removed. This parameter specifies which dynamic objects to remove from the
      unit's list.
  returns: null
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      uint32 spellId = 12345;

      target->RemoveDynObject(spellId);'
    language: cpp
  - title: Advanced usage example
    code: '// Remove all dynamic objects associated with a specific spell

      Unit* target = GetTarget();

      uint32 spellId = 12345;

      target->RemoveDynObject(spellId);

      // This ensures that no visual effects or summoned creatures remain

      // after the spell has been cancelled or expired'
    language: cpp
  notes: This method is typically called internally during spell processing or when
    a spell effect expires. It is important to note that this method does not directly
    remove the spell from the unit's spell list; it only removes dynamic objects associated
    with the spell ID. The method may be used in conjunction with other methods like
    RemoveSpell, but it does not affect the spell's state in the unit's spell book.
  warnings: This method should not be called directly unless you are certain about
    the spell ID and its associated dynamic objects. Incorrect usage can lead to removal
    of unintended objects or incorrect behavior during gameplay mechanics. Also, calling
    this method on a unit that does not have any dynamic objects associated with the
    spell ID may result in no effect.
  related:
  - RemoveSpell
  - AddDynObject
  - GetDynObject
  - HasDynObject
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T20:37:27.731739'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
