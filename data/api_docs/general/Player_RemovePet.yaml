api:
  class: Player
  method: RemovePet
  signature: void Player::RemovePet(Pet * pet, int mode, bool returnreagent)
documentation:
  brief: Removes a pet from the player's control and returns it to the original owner
    or reagents if specified.
  description: The RemovePet method removes a pet from the player's control, effectively
    ending the pet's ownership and returning it to its original owner. This method
    is commonly used when a player wishes to dismiss their pet or when the pet needs
    to be returned to its owner for various game mechanics reasons. The method handles
    both the removal of the pet from the player's control and the return of reagents
    if specified, making it an essential function in managing pet behavior within
    World of Warcraft.
  parameters:
  - name: pet
    description: Pointer to the Pet object that is being removed. This parameter must
      not be nullptr for the method to function properly.
  - name: mode
    description: Integer value representing the removal mode. This determines how
      the pet is removed, with values typically indicating whether to return reagents
      or not, and can affect the pet's behavior during removal.
  - name: returnreagent
    description: Boolean flag indicating whether reagents should be returned to the
      player upon pet removal. If true, reagents are returned; if false, they are
      not.
  returns: null
  examples:
  - title: Basic Pet Removal Example
    code: 'Player* player = GetPlayer();

      Pet* pet = player->GetPet();

      player->RemovePet(pet, 0, true);'
    language: cpp
  - title: Advanced Pet Removal with Mode Handling
    code: 'Player* player = GetPlayer();

      Pet* pet = player->GetPet();

      int mode = 1;

      bool returnReagent = false;

      player->RemovePet(pet, mode, returnReagent);'
    language: cpp
  notes: The method requires that the pet object be valid and not null. It is crucial
    to ensure that the pet's ownership status is properly handled before calling this
    method. The method may also affect the player's pet management system, including
    pet behavior and reagent return mechanics.
  warnings: Improper use of this method can lead to invalid memory access or incorrect
    pet removal. Care must be taken when specifying parameters, especially when dealing
    with mode values and returnreagent flags. The method should only be called when
    the player has active control over the pet.
  related:
  - GetPet
  - AddPet
  - SetPet
  - RemovePet
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T00:19:41.972937'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
