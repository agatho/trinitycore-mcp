api:
  class: ObjectMgr
  method: OnDeleteSpawnData
  signature: void ObjectMgr::OnDeleteSpawnData(const int * data)
documentation:
  brief: Handles cleanup of spawn data when an object is removed from the world
  description: The OnDeleteSpawnData method is responsible for performing necessary
    cleanup operations when a game object or creature is deleted from the world. This
    includes removing associated spawn records from memory and database, ensuring
    that no orphaned data remains in the spawn management system. The method typically
    gets invoked during object destruction or removal processes to maintain consistency
    between the live world state and the persistent spawn data stored in the database.
  parameters:
  - name: data
    description: Pointer to an integer array containing spawn data identifiers that
      need to be cleaned up. The exact structure of this data is implementation-specific
      but typically includes GUIDs or internal spawn IDs used by the ObjectMgr system.
  returns: null
  examples:
  - title: Basic usage in object deletion
    code: "void Creature::RemoveFromWorld()\n{\n    // ... other cleanup code ...\n\
      \    sObjectMgr->OnDeleteSpawnData(&m_spawnId);\n    // ... more cleanup code\
      \ ...\n}"
    language: cpp
  - title: Handling multiple spawn entries
    code: "void Map::RemoveCreature(Creature* creature)\n{\n    // Remove from grid\n\
      \    RemoveFromGrid(creature);\n    \n    // Clean up spawn data\n    int spawnData[3]\
      \ = { creature->GetSpawnId(), creature->GetSpawnGroupId(), creature->GetInstanceId()\
      \ };\n    sObjectMgr->OnDeleteSpawnData(spawnData);\n    \n    // ... rest of\
      \ removal logic ...\n}"
    language: cpp
  notes: This method is typically called internally by the ObjectMgr system and should
    not be invoked directly unless implementing custom spawn management logic. The
    method assumes that the data parameter points to valid spawn identifiers that
    have been previously registered with the spawn manager.
  warnings: Direct invocation of this method without proper validation of the input
    data can lead to memory corruption or database inconsistencies. Always ensure
    that the data pointer contains valid spawn identifiers before calling this method.
  related:
  - OnAddSpawnData
  - OnUpdateSpawnData
  - GetSpawnData
  - LoadSpawnData
metadata:
  confidence: 0.85
  generated_at: '2025-10-31T21:21:02.848085'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
