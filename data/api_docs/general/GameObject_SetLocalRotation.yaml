api:
  class: GameObject
  method: SetLocalRotation
  signature: void GameObject::SetLocalRotation(float qx, float qy, float qz, float
    qw)
documentation:
  brief: Sets the local rotation quaternion of the game object.
  description: This method sets the local rotation of a GameObject using a quaternion
    representation. The quaternion is defined by four float values (qx, qy, qz, qw)
    which represent the x, y, z, and w components respectively. This method allows
    for precise control over the orientation of game objects in 3D space, particularly
    useful for setting rotations that are relative to the object's local coordinate
    system rather than world coordinates. The rotation is applied directly to the
    GameObject's internal transformation matrix.
  parameters:
  - name: qx
    description: The x component of the quaternion representing the rotation around
      the X-axis
  - name: qy
    description: The y component of the quaternion representing the rotation around
      the Y-axis
  - name: qz
    description: The z component of the quaternion representing the rotation around
      the Z-axis
  - name: qw
    description: The w component of the quaternion representing the rotation around
      the W-axis (scalar component)
  returns: null
  examples:
  - title: Basic usage example
    code: 'GameObject* go = new GameObject();

      go->SetLocalRotation(0.0f, 0.0f, 1.0f, 0.0f);'
    language: cpp
  - title: Setting rotation with specific quaternion values
    code: 'GameObject* go = new GameObject();

      float x = 0.707f;

      float y = 0.0f;

      float z = 0.0f;

      float w = 0.707f;

      go->SetLocalRotation(x, y, z, w);'
    language: cpp
  notes: This method directly modifies the GameObject's transformation matrix without
    any validation checks. It should be used carefully as it may affect the object's
    visual representation and collision detection in the game world. The quaternion
    values must be normalized for proper rotation behavior.
  warnings: Improperly set quaternion values can cause visual artifacts or incorrect
    orientation of the GameObject. This method does not validate that the quaternion
    is normalized, so developers should ensure proper quaternion normalization before
    calling this method.
  related:
  - GetLocalRotation
  - SetOrientation
  - SetWorldRotation
metadata:
  confidence: 0.95
  generated_at: '2025-10-30T18:06:58.804022'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
