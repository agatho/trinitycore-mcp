api:
  class: AuraEffect
  method: HandleAuraModAdvFlyingSpeed
  signature: void AuraEffect::HandleAuraModAdvFlyingSpeed(const AuraApplication *
    aurApp, uint8 mode, bool apply) const
documentation:
  brief: Modifies the advanced flying speed of a unit affected by an aura.
  description: The HandleAuraModAdvFlyingSpeed method is responsible for adjusting
    the flying speed of a unit when an aura that modifies advanced flying speed is
    applied or removed. This method is part of the aura effect handling system in
    TrinityCore and is typically invoked during aura application or removal events.
    It adjusts the unit's movement speed specifically for flying mechanics, which
    may include both base flying speed and any additional modifiers from other auras
    or effects. The method operates based on the AuraApplication context and the mode
    parameter indicating whether the effect is being applied or removed.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura being
      applied or removed. This contains information about the aura's properties, target,
      and application state.
  - name: mode
    description: The mode of operation indicating whether the aura is being applied
      (true) or removed (false). This parameter determines how the speed modification
      should be handled during the aura lifecycle.
  - name: apply
    description: Boolean flag indicating if the effect should be applied (true) or
      removed (false). This parameter works in conjunction with the mode to control
      the direction of the speed adjustment.
  returns: null
  examples:
  - title: Basic Aura Speed Modification
    code: "void MyAuraHandler::HandleAuraModAdvFlyingSpeed(const AuraApplication*\
      \ aurApp, uint8 mode, bool apply) const {\n    Unit* target = aurApp->GetTarget();\n\
      \    if (!target)\n        return;\n\n    if (apply) {\n        // Apply flying\
      \ speed boost\n        target->AddUnitMovementFlag(MOVEFLAG_FLYING);\n     \
      \   target->SetSpeedRate(MOVE_RUN, 1.5f);\n    } else {\n        // Remove flying\
      \ speed boost\n        target->RemoveUnitMovementFlag(MOVEFLAG_FLYING);\n  \
      \      target->SetSpeedRate(MOVE_RUN, 1.0f);\n    }\n}"
    language: cpp
  notes: This method is typically called internally by the TrinityCore aura system
    when an aura with the MOD_ADV_FLYING_SPEED effect type is applied or removed from
    a unit. Developers should ensure that any custom implementations properly handle
    both application and removal cases to maintain consistent movement behavior.
  warnings: Incorrect handling of the apply flag may result in unexpected movement
    behavior for players or creatures. Ensure that all speed modifications are properly
    reversed when the aura is removed to prevent permanent movement changes.
  related:
  - HandleAuraModSpeed
  - HandleAuraModIncreaseFlightSpeed
  - AuraEffect::HandleAuraApply
  - AuraEffect::HandleAuraRemove
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:30:17.502279'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
