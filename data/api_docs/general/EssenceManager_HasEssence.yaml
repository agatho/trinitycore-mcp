api:
  class: EssenceManager
  method: HasEssence
  signature: bool EssenceManager::HasEssence(int required) const
documentation:
  brief: Checks if a player has a specific essence item in their inventory.
  description: The HasEssence method determines whether a player possesses a particular
    essence item, typically used for checking requirements in abilities, quests, or
    enchantments. This method is commonly employed within the TrinityCore framework
    to validate player inventory state before allowing certain actions. The method
    performs a lookup within the player's inventory and associated data structures
    to confirm presence of the specified essence. It does not modify any game state
    but serves as a predicate for conditional logic in various gameplay systems.
  parameters:
  - name: required
    description: The identifier or type of essence to check for. This typically corresponds
      to an item entry ID or internal essence type value used by the game's essence
      system.
  returns: Returns true if the player has the specified essence in their inventory;
    otherwise returns false.
  examples:
  - title: Basic Usage
    code: "if (player->GetEssenceManager()->HasEssence(12345)) {\n    // Player has\
      \ essence with ID 12345\n    player->CastSpell(target, SPELL_ENCHANT_ITEM, true);\n\
      }"
    language: cpp
  - title: Conditional Ability Activation
    code: "if (player->GetEssenceManager()->HasEssence(67890)) {\n    // Allow player\
      \ to use advanced enchantment\n    player->AddAura(SPELL_ADVANCED_ENCHANTMENT_AURA,\
      \ player);\n} else {\n    // Inform player they lack required essence\n    player->SendSystemMessage(\"\
      You need the correct essence to perform this action.\");\n}"
    language: cpp
  notes: This method relies on internal inventory tracking and may not account for
    temporary or transient essence states. It is recommended to call this method after
    any inventory modifications to ensure up-to-date results. The implementation likely
    uses fast lookup mechanisms such as hash tables or indexed arrays for performance.
  warnings: Do not assume that a positive return value guarantees the essence can
    be consumed or used immediately, as additional validation may be required by the
    game system. Also, this method should not be called in performance-critical sections
    without considering potential overhead from inventory lookups.
  related:
  - GetEssence
  - AddEssence
  - RemoveEssence
metadata:
  confidence: 0.9
  generated_at: '2025-11-01T13:52:36.125561'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
