api:
  class: Player
  method: AI
  signature: PlayerAI * Player::AI() const
documentation:
  brief: Returns the player's AI instance for handling AI-related operations
  description: The Player::AI method returns a pointer to the player's AI instance,
    which is used for managing AI behavior and interactions within the game. This
    method provides access to the player's AI system, allowing developers to interact
    with AI-related functionality such as combat behavior, movement patterns, and
    NPC interaction. The returned AI instance typically handles player-specific AI
    logic and can be used to control player actions in various game scenarios.
  parameters: []
  returns: Returns a pointer to the PlayerAI object, which represents the player's
    AI system. If no AI instance exists or has been initialized, this may return nullptr.
  examples:
  - title: Basic AI Access Example
    code: "Player* player = GetPlayer();\nPlayerAI* ai = player->AI();\nif (ai)\n\
      {\n    // Use AI for player-specific operations\n}"
    language: cpp
  notes: The AI instance is typically initialized during player creation or when the
    player enters combat. This method should be used carefully as it may return nullptr
    if no AI has been assigned to the player.
  warnings: Be cautious when using this method in scenarios where the player might
    not have an AI instance, as accessing a null pointer can cause crashes. Ensure
    proper checks are performed before using the returned AI object.
  related:
  - Player::GetAI
  - Player::SetAI
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T01:40:53.638471'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
