api:
  class: Guild
  method: GetBankMoney
  signature: uint64 Guild::GetBankMoney() const
documentation:
  brief: Returns the total amount of money stored in the guild's bank account
  description: The GetBankMoney method retrieves the current balance of gold coins
    stored within the guild's bank. This value represents the total funds available
    for use by guild members, including any deposits made through the guild bank interface.
    The returned value is expressed in copper coins (1 gold = 100 silver = 10000 copper).
    This method does not perform any modifications to the guild's financial state
    and is purely a read operation.
  parameters: []
  returns: A uint64 value representing the total amount of money (in copper) currently
    stored in the guild bank. Returns 0 if the guild has no funds or if the guild
    object is invalid.
  examples:
  - title: Basic Usage
    code: "Guild* guild = sObjectMgr->GetGuildById(guildId);\nif (guild)\n{\n    uint64\
      \ bankMoney = guild->GetBankMoney();\n    std::cout << \"Guild bank contains\
      \ \" << bankMoney << \" copper coins.\" << std::endl;\n}"
    language: cpp
  - title: Checking Guild Bank Balance Before Withdrawal
    code: "Guild* guild = player->GetGuild();\nif (guild && guild->GetBankMoney()\
      \ >= requiredAmount)\n{\n    // Proceed with withdrawal or purchase\n    //\
      \ Note: Actual withdrawal would require additional logic\n}\nelse\n{\n    player->SendNotification(\"\
      Not enough funds in guild bank.\");\n}"
    language: cpp
  notes: This method accesses the guild's internal financial state and should be used
    carefully in performance-critical sections. The value returned is cached internally
    by TrinityCore, so multiple calls to this method will return consistent values
    until changes are made to the guild bank.
  warnings: The returned value represents copper coins, not gold pieces. When displaying
    to players, ensure proper conversion to gold/silver format for readability. This
    method does not validate whether the guild object is still valid or has been deleted;
    calling it on a destroyed guild object may lead to undefined behavior.
  related:
  - SetBankMoney
  - ModifyBankMoney
  - GetGuildBankMoney
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T16:27:36.274007'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
