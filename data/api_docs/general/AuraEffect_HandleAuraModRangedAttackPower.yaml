api:
  class: AuraEffect
  method: HandleAuraModRangedAttackPower
  signature: void AuraEffect::HandleAuraModRangedAttackPower(const AuraApplication
    * aurApp, uint8 mode, bool apply) const
documentation:
  brief: Applies or removes a modifier to the ranged attack power attribute for affected
    units.
  description: The HandleAuraModRangedAttackPower method is responsible for modifying
    the ranged attack power of a unit when an aura effect is applied or removed. This
    method is typically invoked during aura application or removal events, adjusting
    the target's ranged attack power based on the aura's properties. It integrates
    with the core game mechanics to ensure that buffs and debuffs affecting ranged
    combat capabilities are properly calculated and applied to the affected player
    or creature. The method operates within the context of the TrinityCore framework's
    aura system, ensuring proper synchronization of stat modifications across the
    game world.
  parameters:
  - name: aurApp
    description: Pointer to the AuraApplication object representing the aura application
      context. This parameter provides information about which unit is affected and
      how the aura is applied.
  - name: mode
    description: Specifies the mode of operation for the aura effect. This value typically
      indicates whether the aura is being applied (1) or removed (0), though exact
      values may vary based on internal implementation details.
  - name: apply
    description: Boolean flag indicating whether to apply (true) or remove (false)
      the aura modifier. When true, the ranged attack power is increased; when false,
      it is decreased accordingly.
  returns: null
  examples:
  - title: Basic usage in aura application
    code: "void MyAuraHandler::HandleAuraModRangedAttackPower(const AuraApplication*\
      \ aurApp, uint8 mode, bool apply) const {\n    if (apply) {\n        // Apply\
      \ modifier to ranged attack power\n        aurApp->GetTarget()->ModifyRangedAttackPower(100);\n\
      \    } else {\n        // Remove modifier from ranged attack power\n       \
      \ aurApp->GetTarget()->ModifyRangedAttackPower(-100);\n    }\n}"
    language: cpp
  notes: This method is part of the aura effect handling system in TrinityCore and
    should be called only during appropriate aura application/removal events. The
    actual stat modification logic may involve additional calculations or checks depending
    on the specific aura type being handled.
  warnings: Improper use of this method can lead to incorrect combat stats, potentially
    affecting gameplay balance. Ensure that all stat modifications are properly validated
    and synchronized with the game's combat system.
  related:
  - AuraEffect::HandleAuraModAttackPower
  - AuraEffect::HandleAuraModRangedAttackPowerPercent
  - AuraApplication::GetTarget
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T13:11:51.640877'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
