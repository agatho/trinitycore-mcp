api:
  class: Unit
  method: HasUnitTypeMask
  signature: uint32 Unit::HasUnitTypeMask(uint32 mask) const
documentation:
  brief: Checks if the unit has a specific unit type mask.
  description: This method determines whether a Unit object possesses a particular
    unit type mask, which is used to categorize different types of units in World
    of Warcraft. The function returns the mask value if the unit has the specified
    type, otherwise it returns 0. This is commonly used for identifying player characters,
    creatures, or other unit types within the game mechanics framework.
  parameters: []
  returns: Returns the mask value if the unit has the specified type, otherwise returns
    0. The mask represents a bitmask that identifies specific unit types such as player,
    creature, vehicle, etc.
  examples:
  - title: Basic usage example
    code: "if (unit->HasUnitTypeMask(UNIT_TYPE_PLAYER)) {\n    // Do something\n}\n"
    language: cpp
  notes: This method is typically used in conjunction with other unit type checking
    functions to determine the nature of a unit. Performance considerations are minimal
    as this function simply performs bitwise operations.
  warnings: This method should not be used for checking specific unit types directly
    without understanding the bitmask structure. Incorrect usage may lead to unexpected
    behavior or logic errors.
  related:
  - HasUnitTypeMask
  - GetUInt32Value
  - GetUInt64Value
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T12:15:57.225615'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
