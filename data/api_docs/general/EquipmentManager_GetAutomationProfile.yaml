api:
  class: EquipmentManager
  method: GetAutomationProfile
  signature: EquipmentAutomationProfile EquipmentManager::GetAutomationProfile(uint32
    playerGuid)
documentation:
  brief: Retrieves the equipment automation profile associated with a specified player
    GUID.
  description: The GetAutomationProfile method fetches the EquipmentAutomationProfile
    object that defines how a specific player's equipment should be managed automatically.
    This profile typically includes rules for item equipping, unequipping, and replacement
    based on player level, class, and other game mechanics. The method uses the provided
    player GUID to locate and return the corresponding automation settings from internal
    storage or database records. It is commonly used in conjunction with equipment
    management systems to ensure players receive appropriate gear automatically during
    gameplay.
  parameters:
  - name: playerGuid
    description: The unique identifier (GUID) of the player whose automation profile
      is being retrieved. This value must correspond to an existing player in the
      database and typically represents a valid player account or character GUID.
  returns: Returns an EquipmentAutomationProfile object containing the automation
    rules for the specified player. If no automation profile exists for the given
    player GUID, the method may return a default or empty profile, or potentially
    throw an exception depending on implementation details.
  examples:
  - title: Retrieve Automation Profile for Player
    code: "uint32 playerId = 12345;\nEquipmentAutomationProfile profile = equipmentManager->GetAutomationProfile(playerId);\n\
      // Use the profile to determine automatic equipment behavior\nif (profile.IsValid())\
      \ {\n    // Process automation rules\n}"
    language: cpp
  notes: This method likely involves database lookups or cached data retrieval, so
    performance may vary depending on system load and caching strategies. The returned
    EquipmentAutomationProfile object should be treated as read-only to maintain consistency
    with the underlying data source.
  warnings: Ensure that the provided playerGuid is valid and corresponds to an existing
    player; otherwise, the behavior of this method is undefined. This method might
    not be thread-safe if accessed concurrently from multiple threads without proper
    synchronization mechanisms.
  related:
  - SetAutomationProfile
  - SaveAutomationProfile
  - GetPlayerEquipment
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T14:05:22.932477'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
