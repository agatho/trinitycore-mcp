api:
  class: Unit
  method: CountPctFromCurHealth
  signature: uint64 Unit::CountPctFromCurHealth(int32 pct) const
documentation:
  brief: Calculates and returns the health value based on a percentage of current
    health.
  description: The CountPctFromCurHealth method computes a specific health value by
    applying a percentage to the current health of the Unit. This method is commonly
    used in World of Warcraft's TrinityCore framework for calculating health values
    during various game mechanics such as damage calculations, healing effects, or
    status updates. It takes into account the current health of the unit and applies
    the specified percentage to determine the resulting value. The method ensures
    that the returned value reflects a precise percentage of the current health, making
    it useful for implementing dynamic health-based calculations.
  parameters:
  - name: pct
    description: The percentage value to apply to the current health. This parameter
      can be positive or negative, with positive values representing percentages above
      the current health and negative values representing percentages below the current
      health.
  returns: Returns a uint64 value that represents the calculated health based on the
    specified percentage applied to the current health of the unit.
  examples:
  - title: Basic usage example
    code: 'Unit* target = GetTarget();

      uint64 healthValue = target->CountPctFromCurHealth(50);

      // This calculates 50% of the target''s current health'
    language: cpp
  - title: Advanced usage example
    code: 'Unit* attacker = GetAttacker();

      uint64 healthValue = attacker->CountPctFromCurHealth(-25);

      // This calculates 25% below the attacker''s current health'
    language: cpp
  notes: This method is typically used in conjunction with other health-related methods
    to implement dynamic calculations. Performance considerations include ensuring
    that the percentage value is within valid bounds, as invalid values may lead to
    unexpected results or errors.
  warnings: Care should be taken when using negative percentages, as they may result
    in values below zero, which can cause issues if not handled properly in game logic.
    Additionally, this method does not validate input parameters, so it's important
    to ensure that the percentage value is appropriate for the intended use case.
  related:
  - Unit::GetHealth
  - Unit::SetHealth
  - Unit::CountPctFromMaxHealth
metadata:
  confidence: 0.9
  generated_at: '2025-10-30T21:15:44.756266'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
