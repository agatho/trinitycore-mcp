api:
  class: ObjectMgr
  method: LoadCreatures
  signature: void ObjectMgr::LoadCreatures()
documentation:
  brief: Loads all creature data from the database into memory for active game objects.
  description: The LoadCreatures method initializes and populates the internal creature
    registry with data retrieved from the database. This method is typically called
    during server startup or map loading to ensure that all creatures defined in the
    database are properly instantiated and available for gameplay. It iterates through
    the creature table, creates Creature objects, and stores them in appropriate containers
    for later retrieval and management by the game world system. The method handles
    loading of creature templates, positions, spawns, and associated AI behaviors.
  parameters: []
  returns: null
  examples:
  - title: Basic Usage During Server Initialization
    code: "void World::LoadAllData()\n{\n    ObjectMgr::Instance()->LoadCreatures();\n\
      \    // Other loading operations...\n}"
    language: cpp
  notes: This method is usually invoked during server startup sequence and should
    not be called repeatedly during normal gameplay. The method performs database
    queries and memory allocations, so it may cause temporary performance impact.
    It relies on the database connection being properly established before execution.
  warnings: Calling this method multiple times without proper cleanup can lead to
    duplicate creature entries and memory leaks. This method must be executed in a
    single-threaded context during initialization phase. Do not call this method while
    creatures are actively spawning or despawning in the world.
  related:
  - LoadCreatureTemplates
  - LoadCreatureSpawns
  - GetCreatureTemplate
  - CreateCreature
metadata:
  confidence: 0.95
  generated_at: '2025-10-31T23:23:51.002956'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
