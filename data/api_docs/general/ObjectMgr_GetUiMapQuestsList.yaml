api:
  class: ObjectMgr
  method: GetUiMapQuestsList
  signature: const int * ObjectMgr::GetUiMapQuestsList(uint32 uiMapId) const
documentation:
  brief: Retrieves the list of quests associated with a specified map ID for UI display
    purposes.
  description: The GetUiMapQuestsList method returns a constant pointer to an array
    of integers representing quest identifiers that are associated with the given
    map ID. This function is primarily used by the user interface system to determine
    which quests should be displayed on a specific map. The returned array is typically
    used in conjunction with UI elements such as quest log displays or minimap markers.
    The method does not perform any validation on the input map ID, so callers should
    ensure that the provided uiMapId corresponds to a valid map within the game world.
    The returned pointer points to an internal static data structure, and therefore,
    the contents should not be modified by the caller.
  parameters: []
  returns: A constant pointer to an array of integers (int*) representing quest IDs
    associated with the specified map ID. Returns nullptr if no quests are found for
    the given map ID or if the map ID is invalid.
  examples:
  - title: Retrieve and iterate through quests for a specific map
    code: "const int* questList = sObjectMgr->GetUiMapQuestsList(1234);\nif (questList\
      \ != nullptr)\n{\n    for (int i = 0; questList[i] != 0; ++i)\n    {\n     \
      \   uint32 questId = static_cast<uint32>(questList[i]);\n        // Process\
      \ each quest ID\n        printf(\"Quest ID: %u\\n\", questId);\n    }\n}"
    language: cpp
  notes: The returned array is null-terminated and contains quest IDs in ascending
    order. The method accesses internal data structures that are populated during
    server startup or map loading, so it's safe to call multiple times once the game
    state is initialized. The implementation uses a lookup table approach for performance
    optimization.
  warnings: Do not modify the contents of the returned array as it points to internal
    static memory. Always check for null return values before using the result. The
    method assumes that all map IDs passed are valid and exist in the database; invalid
    IDs may cause undefined behavior or return empty results.
  related:
  - GetQuestForMap
  - GetMapQuestsList
  - GetUiQuestsList
metadata:
  confidence: 0.85
  generated_at: '2025-11-01T09:04:03.337602'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
