api:
  class: Player
  method: RemovePetitionsAndSigns
  signature: void Player::RemovePetitionsAndSigns(int guid)
documentation:
  brief: Removes all petition signatures and petitions associated with a player's
    GUID
  description: This method removes all petition-related data from a player's character,
    including any signatures they have made on petitions and any petitions they have
    created. It is typically used during character deletion or when clearing a player's
    petition-related data to ensure clean state management. The method operates on
    the player's GUID to identify which petitions and signatures to remove, making
    it crucial for maintaining database consistency in TrinityCore.
  parameters:
  - name: guid
    description: The unique identifier (GUID) of the player whose petition data will
      be removed. This is typically a 32-bit integer representing the player's character
      ID.
  returns: null
  examples:
  - title: Basic usage example
    code: "Player* player = ObjectAccessor::GetObjectInWorld(playerGuid);\nif (player)\n\
      {\n    player->RemovePetitionsAndSigns(playerGuid);\n}\n"
    language: cpp
  notes: This method is typically invoked during character deletion process or when
    clearing a player's petition data to prevent database inconsistencies. It may
    also be used in conjunction with other methods that handle petition management,
    such as RemovePetitionsAndSigns() which removes all petitions associated with
    the player.
  warnings: Improper use of this method can lead to loss of petition data and potentially
    cause database inconsistencies if not properly handled during character deletion
    or when clearing petition-related data. Ensure that the GUID passed is valid before
    calling this method.
  related:
  - Player::RemovePetitionsAndSigns
  - Player::GetPetition
  - Player::GetPetitionSignature
metadata:
  confidence: 0.9
  generated_at: '2025-10-31T00:19:01.403931'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
