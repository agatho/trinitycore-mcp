api:
  class: Unit
  method: SpellCritChanceDone
  signature: float Unit::SpellCritChanceDone(Spell * spell, const AuraEffect * aurEff,
    int schoolMask, int attackType) const
documentation:
  brief: Calculates the total spell critical chance for a given spell, considering
    aura effects and school mask.
  description: This method computes the total critical chance for a spell by combining
    base spell critical chance with any applicable aura effects. It takes into account
    the spell's school mask and attack type to determine the final critical chance
    value. The method is used internally by TrinityCore to calculate critical hit
    probabilities for spells, including those affected by various buffs or debuffs.
    This function is essential for determining whether a spell will critically hit
    during combat, which affects damage output and healing effectiveness.
  parameters:
  - name: spell
    description: Pointer to the Spell object being evaluated. This parameter defines
      which spell's critical chance is calculated.
  - name: aurEff
    description: Pointer to the AuraEffect that may modify the spell's critical chance.
      This parameter allows for specific aura effects to influence the calculation.
  - name: schoolMask
    description: The school mask of the spell being evaluated. This determines which
      school type (fire, frost, nature, etc.) the critical chance applies to.
  - name: attackType
    description: The attack type (melee or ranged) for which the critical chance is
      calculated. This parameter helps determine whether the calculation applies to
      melee or ranged attacks.
  returns: Returns a float value representing the total spell critical chance percentage.
    The value can range from 0.0 to 100.0, where 0.0 indicates no critical chance
    and 100.0 represents maximum critical chance.
  examples:
  - title: Basic usage example
    code: "float critChance = unit->SpellCritChanceDone(spell, aurEff, schoolMask,\
      \ attackType);\nif (critChance > 0.0f) {\n    // Spell will have a chance to\
      \ critically hit\n}"
    language: cpp
  notes: This method is typically used in conjunction with other spell-related functions
    to determine critical hit probabilities. It's important to note that this function
    may be called multiple times during combat calculations, and the result can vary
    based on active aura effects.
  warnings: The method may return zero if no applicable aura effects are present or
    if the spell does not have a critical chance component. Be cautious when using
    this method in scenarios where multiple aura effects might influence the same
    spell.
  related:
  - SpellCritChance
  - SpellCritChanceFor
  - SpellCritChanceDone
  - SpellCritChanceFor
metadata:
  confidence: 0.85
  generated_at: '2025-10-30T20:16:02.773316'
  generator: lmstudio-qwen3-coder-30b
  version: 1.0.0
  source: core
